'std::__1::copy<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__pointer_type<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::capacity' [ 0 5 10 54]
'std::__1::move<gfx::internal::LineSegment &>' [ 0 5 10]
'std::__1::__vector_base<int, std::__1::allocator<int> >::capacity' [ 0 5 10 57]
'gfx::Range' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >::reset' [ 0 5 10 83]
'std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'gfx::kNoneIcon' [ 0 5]
'Cr_z_uLong' [ 0]
'gfx::RenderTextHarfBuzz::GetDecoratedTextForRange' [ 0 5 25]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::unique_ptr<true, void>' [ 0 5 10 113]
'drmDropMaster' [ 0]
'std::__1::remove_reference<SkPath *&>' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::Font>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__node_alloc' [ 0 5 10 506]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>::max' [ 0 6 16 68]
'(anonymous namespace)::HSLShift::LineProcDefault' [ 0 23 33]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__recommend' [ 0 5 10 56]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ClientNativePixmapOpaque *&, void>' [ 0 5 10 100]
'gfx::(anonymous namespace)::CompareIconDescription::operator()' [ 0 5 28 52]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__max_size' [ 0 5 10 100]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >::construct<std::__1::pair<unsigned long, unsigned int>, const std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10 67]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::AddRef' [ 0 6 108]
'std::__1::conditional<false, const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > &, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > &&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::~__vector_base' [ 0 5 10 220]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::Line> &, 1, false>::__get' [ 0 5 10 88]
'drmGetMap' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::clear' [ 0 5 10 84]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::lower_bound<gfx::ImageFamily::MapKey>' [ 0 5 10 332]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>' [ 0 5 10]
'gfx::Image::AsImageSkia' [ 0 5 12]
'std::__1::forward<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *&>' [ 0 5 10]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::__tuple_leaf<0, unsigned int &&, false>::__tuple_leaf<unsigned int, void>' [ 0 5 10 51]
'gfx::(anonymous namespace)::CachedFont::GetFontFilename' [ 0 5 28 40]
'std::__1::forward<gfx::(anonymous namespace)::DropShadowSource *&>' [ 0 5 10]
'std::__1::__const_pointer<unsigned char, unsigned char *, std::__1::allocator<unsigned char>, true>' [ 0 5 10]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >' [ 0 5 10]
'gfx::VectorIcon::is_empty' [ 0 5 17]
'std::__1::__tree_leaf<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'drm_context_tFlagsPtr' [ 0]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::__tree_node_destructor' [ 0 5 10 99]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'gfx::internal::LineSegment::~LineSegment' [ 0 5 15 28]
'std::__1::remove_reference<gfx::ImageSkiaRep &>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>, bool &, false>' [ 0 5 10 400]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::deallocate' [ 0 5 10 68]
'std::__1::forward<gfx::BaselineStyle &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<float *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 53]
'std::__1::__add_lvalue_reference_impl<XPoint, true>' [ 0 5 10]
'gfx::PlatformFontLinux::GetFontRenderParams' [ 0 5 24]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__construct_at_end<const gfx::ShadowValue *>' [ 0 5 10 76]
'gfx::GpuFenceHandle::GpuFenceHandle' [ 0 5 21]
'color_utils::AlphaBlend' [ 0 13]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__annotate_new' [ 0 5 10 141]
'UBiDiLevel' [ 0]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::second' [ 0 5 10 129]
'gfx::(anonymous namespace)::RotatedSource::GetImageForScale' [ 0 5 28 43]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__alloc' [ 0 5 10 149]
'std::__1::conditional<true, std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::Line> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::internal::Line> &, void>' [ 0 5 10 88]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >, void>' [ 0 5 10 189]
'std::__1::__pointer_type_imp::__pointer_type<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>, true>' [ 0 5 10 30]
'std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >::construct<gfx::Font, const gfx::Font &>' [ 0 5 10 64]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::__compressed_pair<nullptr_t, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10 312]
'AnnotateThreadName' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__construct_backward<gfx::ImagePNGRep *>' [ 0 5 10 68]
'lm_init' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >::release' [ 0 5 10 103]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, 0, false>' [ 0 5 10]
'gfx::NativePixmap' [ 0 5]
'gfx::(anonymous namespace)::PrimeSyncEnd' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__max_size' [ 0 5 10 100]
'gfx::ImageSkiaSource' [ 0 5]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__destroy<std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'std::__1::remove_reference<SkPoint *&>' [ 0 5 10]
'Cr_z_inflateReset' [ 0]
'std::__1::allocator<gfx::DecoratedText::RangedAttribute>::destroy' [ 0 5 10 58]
'gfx::ClientNativePixmapDmaBuf::ClientNativePixmapDmaBuf' [ 0 5 31]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::__split_buffer' [ 0 5 10 222]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformToLinear>, void>' [ 0 5 10 94]
'std::__1::forward<gfx::ImageSkiaRep &>' [ 0 5 10]
'gfx::(anonymous namespace)::ToLinear' [ 0 5 28]
'std::__1::__compressed_pair<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >' [ 0 5 10]
'SkRefCntBase::unref' [ 0 14]
'gfx::(anonymous namespace)::VectorIconCache::VectorIconCache' [ 0 5 28 45]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator+' [ 0 5 10 76]
'gfx::FontListImpl::GetExpectedTextWidth' [ 0 5 19]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator-' [ 0 5 10 76]
'gfx::ImageSkia::Init' [ 0 5 16]
'std::__1::add_lvalue_reference<gfx::ColorTransformFromLinear>' [ 0 5 10]
'drm_buf_map_t' [ 0]
'std::__1::__pointer_type<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::back' [ 0 5 10 54]
'std::__1::conditional<false, std::__1::pointer_traits<color_utils::(anonymous namespace)::ColorBox *>::__nat, color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'std::__1::move<color_utils::(anonymous namespace)::KMeanCluster *, color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'gfx::ImageSkia::SetSupportedScales' [ 0 5 16]
'std::__1::operator!=<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRep *, 0, false>::__compressed_pair_elem<gfx::internal::ImageRepPNG *, void>' [ 0 5 10 71]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::~unique_ptr' [ 0 5 10 164]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::second' [ 0 5 10 247]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap> >::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>, void, void>' [ 0 5 10 99]
'std::__1::conditional<true, std::__1::pair<std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >, bool>, std::__1::__nat>' [ 0 5 10]
'drm_mode_set_plane' [ 0]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::__alloc' [ 0 5 10 176]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::construct<gfx::ShadowValue, const gfx::ShadowValue &>' [ 0 5 10 68]
'gfx::FontListImpl::CacheCommonFontHeightAndBaseline' [ 0 5 19]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::capacity' [ 0 5 10 88]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >' [ 0 5 10]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >::operator*' [ 0 5 10 71]
'gfx::internal::ImageSkiaStorage::~ImageSkiaStorage' [ 0 5 15 33]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, true>' [ 0 5 10]
'base::internal::PassingTraits<base::TimeDelta, false>' [ 0 6 16]
'ui::InterpolatedTransformAboutPivot::InterpolatedTransformAboutPivot' [ 0 4 37]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>, void>' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct<std::__1::pair<unsigned long, unsigned int>, std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'sk_64_mul' [ 0]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 77]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::empty' [ 0 5 10 115]
'_Bool' [ 0]
'gfx::ColorTransformStep' [ 0 5]
'color_utils::CalculateKMeanColorOfPNG' [ 0 13]
'gfx::Canvas::GetClipBounds' [ 0 5 13]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const unsigned int &>::__tuple_impl<0, const unsigned int &, const unsigned int &>' [ 0 5 10 76]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::release' [ 0 6 63]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 293]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::destroy<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10 153]
'std::__1::__wrap_iter<unsigned int *>::base' [ 0 5 10 39]
'gfx::FloatToHalfFloat' [ 0 5]
'gfx::Image::ToSkBitmap' [ 0 5 12]
'std::__1::__to_raw_pointer<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'SkTypeface::isItalic' [ 0 12]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::clear' [ 0 5 10 113]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__root' [ 0 5 10 866]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__construct_backward<gfx::internal::LineSegment *>' [ 0 5 10 78]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__alloc' [ 0 5 10 220]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__end_as_link' [ 0 5 10 243]
'std::__1::operator!=<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::forward<gfx::ImageSkia &>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::~CachedFont' [ 0 5 28 40]
'drmCommandWrite' [ 0]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__construct_at_end<gfx::BreakList<bool> *>' [ 0 5 10 85]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::__split_buffer' [ 0 5 10 91]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> >' [ 0 5 10]
'std::__1::allocator<SkPath>::destroy' [ 0 5 10 29]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__swap_out_circular_buffer' [ 0 5 10 267]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >::release' [ 0 5 10 157]
'std::__1::default_delete<gfx::ImageSkiaSource>' [ 0 5 10]
'sktfitsin::Private::underlying_type<int, false>' [ 0 11 20]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::find<unsigned int>' [ 0 5 10 557]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'std::__1::less<std::__1::pair<int, int> >::operator()' [ 0 5 10 43]
'gfx::Image::Copy1xPNGBytes' [ 0 5 12]
'uint_least64_t' [ 0]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::clear' [ 0 5 10 176]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__insert_node_at' [ 0 5 10 114]
'std::__1::operator!=<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::operator bool' [ 0 5 10 99]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::base' [ 0 5 10 77]
'drmModeAtomicReqPtr' [ 0]
'drm_syncobj_array' [ 0]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::TiledImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::TiledImageSource *&, void>' [ 0 5 10 92]
'std::__1::__compressed_pair<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>' [ 0 5 10 281]
'SkImageInfo::colorType' [ 0 13]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::~unique_ptr' [ 0 5 10 284]
'std::__1::remove_reference<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'gfx::NativePixmapDmaBuf::AreDmaBufFdsValid' [ 0 5 25]
'gfx::RenderText::CreateInstanceOfSameStyle' [ 0 5 17]
'color_utils::CalculateKMeanColorOfBitmap' [ 0 13]
'std::__1::__const_pointer<color_utils::(anonymous namespace)::ColorBracket, color_utils::(anonymous namespace)::ColorBracket *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>, true>' [ 0 5 10]
'std::__1::__unique_if<gfx::(anonymous namespace)::DropShadowSource>' [ 0 5 10]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > >::New' [ 0 6 469]
'color_utils::SkColorToRgbaString' [ 0 13]
'std::__1::copy<gfx::NativePixmapPlane *, gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 376]
'gfx::Rect::IsEmpty' [ 0 5 11]
'std::__1::remove_reference<unsigned int &&>' [ 0 5 10]
'ui' [ 0]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >::__hash_map_iterator' [ 0 5 10 140]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::destroy<gfx::ShadowValue>' [ 0 5 10 68]
'std::__1::__distance<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::BreakList<unsigned int>::breaks' [ 0 5 30]
'gfx::BreakList<bool>::SetValue' [ 0 5 22]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr' [ 0 5 10 93]
'std::__1::__const_void_pointer<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::RotatedSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::RotatedSource *&, void>' [ 0 5 10 89]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::PathElement *>::__nat, gfx::PathElement>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >::__map_iterator' [ 0 5 10 405]
'gfx::(anonymous namespace)::ScriptIntersect' [ 0 5 28]
'drm_magic_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >, true>' [ 0 5 10 30]
'std::__1::default_delete<gfx::ImageSkia>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *&>' [ 0 5 10]
'drm_mode_fb_dirty_cmd' [ 0]
'std::__1::pointer_traits<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'gfx::RenderText::GetBaseline' [ 0 5 17]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedAndOp, base::internal::CheckedNumeric<unsigned long>, int>' [ 0 6 16 47]
'gfx::internal::ImageRepSkia::Width' [ 0 5 15 29]
'SkMatrix::setTypeMask' [ 0 10]
'drm_mode_obj_set_property' [ 0]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>' [ 0 5 10]
'std::__1::remove_reference<const gfx::ImageSkiaRep &>' [ 0 5 10]
'std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gfx::FontList::FontList' [ 0 5 15]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::capacity' [ 0 5 10 122]
'SkLayerDrawLooper::Builder::addLayer' [ 0 19 28]
'color_utils::GetDarkestColorForTesting' [ 0 13]
'std::__1::forward_as_tuple<unsigned int>' [ 0 5 10]
'gfx::(anonymous namespace)::HarfBuzzFace::~HarfBuzzFace' [ 0 5 28 42]
'std::__1::addressof<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::make_unique<gfx::ColorTransformToLinear, gfx::ColorSpace::TransferID &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >::reset' [ 0 5 10 111]
'cc::PaintFlags::setHinting' [ 0 4 16]
'std::__1::make_unique<gfx::ColorTransformFromLinear, const gfx::ColorSpace::TransferID &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::operator++' [ 0 5 10 61]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'gfx::ColorTransformSkTransferFn' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRepSkia>, 1, true>' [ 0 5 10]
'color_utils::(anonymous namespace)::LightnessInvertColor' [ 0 13 36]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::SuperimposedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 258]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__recommend' [ 0 5 10 101]
'insert_string' [ 0]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__make_iter' [ 0 5 10 101]
'std::__1::__pointer_type<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10]
'std::__1::__wrap_iter<gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'sk_double_to_float' [ 0]
'std::__1::forward<gfx::Image::RepresentationType &>' [ 0 5 10]
'drmModeFreeConnector' [ 0]
'std::__1::forward<std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'std::__1::forward<std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >::deallocate' [ 0 5 10 115]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::rend' [ 0 5 10 68]
'trace_event_internal::kGlobalScope' [ 0 22]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::operator=' [ 0 5 10 85]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::unique_ptr<true, void>' [ 0 5 10 324]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::construct<std::__1::pair<unsigned long, bool>, const std::__1::pair<unsigned long, bool> &>' [ 0 5 10 88]
'std::__1::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >::release' [ 0 5 10 99]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::max_size' [ 0 5 10 56]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &, 1, false>::__get' [ 0 5 10 118]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> &, void>' [ 0 5 10 178]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__zero' [ 0 5 10 126]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::destroy<unsigned int>' [ 0 5 10 64]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::base' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::KMeanCluster *, 0, false>' [ 0 5 10]
'gfx::ImageSkia::GetMaxSupportedScale' [ 0 5 16]
'std::__1::forward<gfx::(anonymous namespace)::TransparentImageSource *>' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::operator[]' [ 0 5 10 85]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::capacity' [ 0 5 10 147]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::__wrap_iter' [ 0 5 10 77]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformFromBT2020CL *, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10 108]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~__vector_base' [ 0 5 10 108]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::clear' [ 0 5 10 220]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::construct<gfx::BreakList<bool>>' [ 0 5 10 73]
'std::__1::__unique_if<gfx::ColorTransformFromBT2020CL>' [ 0 5 10]
'std::__1::hash<unsigned int>::operator()' [ 0 5 10 30]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >::deallocate' [ 0 5 10 123]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::length' [ 0 5 10 126]
'gfx::PointF' [ 0 5]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >::get' [ 0 5 10 83]
'std::__1::__atomic_base<int, false>::__atomic_base' [ 0 5 10 37]
'base::internal::CheckedSubFastOp<int, int>::Do<int>' [ 0 6 16 44]
'std::__1::default_delete<gfx::ColorTransformToBT2020CL>' [ 0 5 10]
'gfx::(anonymous namespace)::RectangleText::AddWord' [ 0 5 28 43]
'gfx::ImageSkiaOperations::CreateTransparentImage' [ 0 5 26]
'gfx::Canvas::IntersectsClipRect' [ 0 5 13]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::clear' [ 0 5 10 114]
'Cr_z_voidpc' [ 0]
'std::__1::remove_reference<std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10]
'std::__1::forward<gfx::ClientNativePixmapDmaBuf *>' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, const int &>' [ 0 5 10 114]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::allocate' [ 0 5 10 140]
'color_utils::(anonymous namespace)::KMeanCluster::Reset' [ 0 13 36 50]
'std::__1::forward<gfx::ColorTransformToLinear *>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__hash_table' [ 0 5 10 447]
'gfx::DecoratedText' [ 0 5]
'std::__1::__compressed_pair<gfx::ClientNativePixmap *, std::__1::default_delete<gfx::ClientNativePixmap> >::__compressed_pair<gfx::ClientNativePixmap *, true>' [ 0 5 10 108]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::assign<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10 143]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBracket *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 153]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFontSet *, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__annotate_new' [ 0 5 10 131]
'gfx::RenderText::GetContentWidthF' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::BreakList<bool> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::BreakList<bool> > &, void>' [ 0 5 10 87]
'std::__1::__add_lvalue_reference_impl<gfx::ClientNativePixmapDmaBuf, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource *, 0, false>::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource *&, void>' [ 0 5 10 100]
'std::__1::streamsize' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__insert_unique<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>, void>' [ 0 5 10 357]
'std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>::~pair' [ 0 5 10 60]
'std::__1::forward<gfx::ImageFamily::MapKey>' [ 0 5 10]
'color_utils::GridSampler::GridSampler' [ 0 13 26]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::empty' [ 0 5 10 237]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::allocate' [ 0 5 10 131]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::~__split_buffer' [ 0 5 10 129]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform>, false>' [ 0 5 10 30]
'gfx::RenderText::elide_behavior' [ 0 5 17]
'std::__1::remove_reference<const std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> &>' [ 0 5 10]
'std::__1::min<unsigned long>' [ 0 5 10]
'long long int' [ 0]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'SkPixmap::addr32::operator()' [ 0 10 18]
'AnnotateIgnoreReadsBegin' [ 0]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear::~ColorTransformSMPTEST2048NonHdrToLinear' [ 0 5 46]
'base::internal::ClampedSubOp<int, int, void>' [ 0 6 16]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__annotate_delete' [ 0 5 10 113]
'std::__1::__size_type<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >, long, true>' [ 0 5 10]
'gfx::internal::TextRunList::GetRunIndexAt' [ 0 5 15 28]
'(anonymous namespace)::ColumnHasVisiblePixels' [ 0 23]
'Cr_z_crc32_combine64' [ 0]
'std::__1::__rebind_pointer<void *, std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<unsigned short, true>' [ 0 5 10]
'cc::PaintFlags::setAutohinted' [ 0 4 16]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::operator->' [ 0 5 10 61]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10 259]
'base::i18n::BreakIterator::pos' [ 0 6 12 27]
'std::__1::remove_reference<color_utils::(anonymous namespace)::KMeanCluster *&>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'Cr_z_voidp' [ 0]
'std::__1::__wrap_iter<gfx::internal::LineSegment *>::base' [ 0 5 10 53]
'Cr_z_gzputs' [ 0]
'drmOpenByName' [ 0]
'gfx::FontList::Derive' [ 0 5 15]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, int> >, std::__1::pair<unsigned long, int> *, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::destroy<gfx::internal::Line>' [ 0 5 10 71]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::deallocate' [ 0 5 10 68]
'gfx::(anonymous namespace)::BinaryImageSource::~BinaryImageSource' [ 0 5 28 47]
'std::initializer_list<unsigned char>::end' [ 0 5 38]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::data' [ 0 5 10 62]
'std::__1::__const_pointer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >, true>' [ 0 5 10]
'std::__1::__compressed_pair<SkPath *, std::__1::allocator<SkPath> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 69]
'std::__1::forward<const gfx::internal::Line &>' [ 0 5 10]
'SkPixmap::addr32' [ 0 10]
'gfx::(anonymous namespace)::BinaryImageSource' [ 0 5 28]
'gfx::(anonymous namespace)::RectangleString::RectangleString' [ 0 5 28 45]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::forward<gfx::ImageSkiaSource *>' [ 0 5 10]
'drmPciBusInfoPtr' [ 0]
'std::__1::__wrap_iter<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>::__wrap_iter' [ 0 5 10 144]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::begin' [ 0 5 10 120]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'std::__1::move<std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'ui::InterpolatedAxisAngleRotation::~InterpolatedAxisAngleRotation' [ 0 4 35]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_short_pointer' [ 0 5 10 126]
'std::__1::__wrap_iter<const float *>::operator*' [ 0 5 10 38]
'v_load32_dup' [ 0]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::~__split_buffer' [ 0 5 10 65]
'_drmModeRes' [ 0]
'Cr_z_crc32_sse42_simd_' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>, void>' [ 0 5 10 91]
'wctype_t' [ 0]
'std::__1::forward<gfx::(anonymous namespace)::VectorIconSource *>' [ 0 5 10]
'AnnotatePCQCreate' [ 0]
'std::__1::pointer_traits<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::pointer_to' [ 0 5 10 182]
'drmModeFreePropertyBlob' [ 0]
'gfx::internal::ImageSkiaStorage::FindRepresentation::operator()' [ 0 5 15 33 53]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const unsigned int, unsigned int> *>::__nat, std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10]
'base::DCheckAsserter::DCheckAsserter' [ 0 6 22]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::construct<gfx::Font, const gfx::Font &>' [ 0 5 10 61]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__root_ptr' [ 0 5 10 725]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue> &, 1, false>::__get' [ 0 5 10 85]
'std::__1::vector<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >::operator[]' [ 0 5 10 94]
'std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>' [ 0 5 10]
'z_streamp' [ 0]
'Cr_z_deflateInit2_' [ 0]
'scoped_refptr<gfx::FontListImpl>::operator->' [ 0 34]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >' [ 0 5 10]
'gfx::ImageFamily::GetClosestAspect' [ 0 5 18]
'std::__1::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >::unique_ptr<true, void>' [ 0 5 10 107]
'std::__1::pair<unsigned long, bool>::pair<unsigned int, bool &, false>' [ 0 5 10 37]
'bi_windup' [ 0]
'gz_avail' [ 0]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformStep *, void>' [ 0 5 10 71]
'std::__1::conditional<true, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >' [ 0 5 10]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::capacity' [ 0 5 10 121]
'std::__1::__less<float, float>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'drmHashEntry' [ 0]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::data' [ 0 5 10 78]
'gfx::RenderText::SetWordWrapBehavior' [ 0 5 17]
'std::__1::random_access_iterator_tag' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::reset' [ 0 5 10 432]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'base::i18n::TextDirection' [ 0 6 12]
'gfx::(anonymous namespace)::UpdateRenderText' [ 0 5 28]
'std::__1::__add_lvalue_reference_impl<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::__destruct_at_end' [ 0 5 10 69]
'std::__1::__const_void_pointer<unsigned short *, std::__1::allocator<unsigned short>, false>' [ 0 5 10]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::size' [ 0 5 10 179]
'SkImageInfo::Make' [ 0 13]
'std::__1::move<gfx::internal::LineSegment *&>' [ 0 5 10]
'std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >::map' [ 0 5 10 150]
'std::__1::__const_void_pointer<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, false>' [ 0 5 10]
'SkBitmapOperations::CreateTiledBitmap' [ 0 20]
'std::__1::conditional<true, std::__1::pair<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::construct<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, const unsigned int &, gfx::(anonymous namespace)::QueryResult>' [ 0 5 10 124]
'std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>::deallocate' [ 0 5 10 71]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *>::__nat, std::__1::__tree_node<gfx::ImageSkiaRep, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char>' [ 0 5 10 65]
'gfx::CanvasImageSource' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::allocate' [ 0 5 10 119]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::__tree_node_destructor' [ 0 5 10 336]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__make_iter' [ 0 5 10 76]
'skia' [ 0]
'std::__1::allocator<cc::PaintTypeface>::destroy' [ 0 5 10 40]
'drmHost1xBusInfoPtr' [ 0]
'std::__1::__compressed_pair<gfx::PathElement *, std::__1::allocator<gfx::PathElement> &>::second' [ 0 5 10 90]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__end_cap' [ 0 5 10 110]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >, void>' [ 0 5 10 249]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::remove_reference<std::__1::tuple<unsigned int &&> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL>, void, void>' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__max_size' [ 0 5 10 68]
'std::__1::pointer_traits<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *>' [ 0 5 10]
'gfx::FontList::SetDefaultFontDescription' [ 0 5 15]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::select_on_container_copy_construction' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformToBT2020CL *, void>' [ 0 5 10 71]
'bool' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::capacity' [ 0 5 10 132]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &, 1, false>' [ 0 5 10]
'std::__1::tuple<const std::__1::basic_string<char> &>::tuple<true, false>' [ 0 5 10 55]
'std::__1::__add_lvalue_reference_impl<unsigned int, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::deallocate' [ 0 5 10 137]
'base::MakeRefCounted<gfx::internal::ImageSkiaStorage, std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >, const gfx::Size &>' [ 0 6]
'_drmVBlankReply' [ 0]
'std::__1::__compressed_pair<unsigned char *, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__vector_base' [ 0 5 10 220]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::__split_buffer' [ 0 5 10 128]
'std::__1::__size_type<std::__1::allocator<gfx::DecoratedText::RangedAttribute>, long, true>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::~vector' [ 0 5 10 70]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'gfx::operator<<' [ 0 5]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10]
'sk_sp<SkColorSpace>' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__move_range' [ 0 5 10 113]
'gfx::BreakList<gfx::Font::Weight>::~BreakList' [ 0 5 35]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >::construct<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 209]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'gfx::internal::StyleIterator::GetRange' [ 0 5 15 30]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>::operator bool' [ 0 5 10 52]
'std::__1::enable_if<true, color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 89]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__recommend' [ 0 5 10 133]
'base::trace_event' [ 0 6]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::RotatedSource *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> >' [ 0 5 10]
'gfx::(anonymous namespace)::ApplyForcedDirection::has_switch' [ 0 5 28 50]
'std::__1::operator==<const gfx::internal::LineSegment *, const gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::__compressed_pair<_FcPattern *, FcPatternDeleter>::__compressed_pair<_FcPattern *&, true>' [ 0 5 10 61]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>::operator++' [ 0 5 10 44]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__ptr' [ 0 5 10 118]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> > >' [ 0 5 10]
'gz_load' [ 0]
'std::__1::remove_const<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'std::__1::__wrap_iter<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::operator++' [ 0 5 10 94]
'std::__1::__pointer_type<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'__kernel_size_t' [ 0]
'std::__1::__list_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::operator++' [ 0 5 10 134]
'base_length' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::value_comp' [ 0 5 10 332]
'std::__1::__rebind_pointer<void *, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'std::__1::distance<base::FileDescriptor *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'drm_map_type' [ 0]
'gfx::RenderTextHarfBuzz::SetGlyphWidthForTest' [ 0 5 25]
'std::__1::__pointer_type<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>' [ 0 5 10]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::size' [ 0 5 10 85]
'SkColorSetARGB' [ 0]
'std::__1::__compressed_pair_elem<gfx::DecoratedText::RangedAttribute *, 0, false>' [ 0 5 10]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::~__split_buffer' [ 0 5 10 85]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__destruct_at_end' [ 0 5 10 149]
'std::__1::__compressed_pair_elem<SkPoint *, 0, false>::__compressed_pair_elem<SkPoint *&, void>' [ 0 5 10 55]
'gfx::(anonymous namespace)::DropShadowSource::~DropShadowSource' [ 0 5 28 46]
'gfx::RectF::y' [ 0 5 12]
'drmModeCreateLease' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep &>' [ 0 5 10 69]
'std::__1::addressof<const wchar_t>' [ 0 5 10]
'std::__1::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >::~unique_ptr' [ 0 5 10 119]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::destroy<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 101]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::deallocate' [ 0 5 10 90]
'std::__1::forward<std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'gfx::RenderText::SetHorizontalAlignment' [ 0 5 17]
'gfx::RenderText::set_truncate_length' [ 0 5 17]
'std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>::~pair' [ 0 5 10 71]
'gfx::RenderTextHarfBuzz::GetStringSizeF' [ 0 5 25]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__swap_out_circular_buffer' [ 0 5 10 131]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, unsigned int> *>::pointer_to' [ 0 5 10 85]
'__v2di' [ 0]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::operator++' [ 0 5 10 108]
'std::__1::forward<const gfx::ImagePNGRep &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>::__get' [ 0 5 10 74]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::npos' [ 0 5 10 126]
'std::__1::vector<int, std::__1::allocator<int> >::operator[]' [ 0 5 10 50]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::size' [ 0 5 10 140]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'__v2du' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::operator[]' [ 0 5 10 140]
'std::__1::__pointer_type<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::IconWithBadgeSource, const gfx::ImageSkia &, const gfx::ImageSkia &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >, true>' [ 0 5 10 30]
'FcBool' [ 0]
'gfx::(anonymous namespace)::RectangleText::Finalize' [ 0 5 28 43]
'std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>' [ 0 5 10]
'std::__1::vector<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >::empty' [ 0 5 10 94]
'std::__1::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >::release' [ 0 5 10 143]
'std::__1::__pointer_type<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'std::__1::__to_raw_pointer<const unsigned short>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::RenderText *, 0, false>::__compressed_pair_elem<gfx::RenderTextHarfBuzz *, void>' [ 0 5 10 63]
'std::__1::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >::~unique_ptr' [ 0 5 10 135]
'std::__1::__get_pair<1>::get<const gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10 25]
'__builtin_va_list' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::vector' [ 0 5 10 143]
'std::__1::__compressed_pair_elem<std::__1::allocator<float>, 1, true>::__compressed_pair_elem<const std::__1::allocator<float> &, void>' [ 0 5 10 71]
'std::__1::remove_reference<const gfx::ColorSpace::TransferID &>' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>::base' [ 0 5 10 75]
'base::internal::DstRangeRelationToSrcRangeImpl<int, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 225]
'std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>' [ 0 5 10]
'gfx::internal::LineSegment::LineSegment' [ 0 5 15 28]
'std::__1::swap<unsigned long>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__find_equal<unsigned int>' [ 0 5 10 866]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::~unique_ptr' [ 0 5 10 135]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, double>' [ 0 6 16]
'std::__1::forward<gfx::Vector2d>' [ 0 5 10]
'base::internal::ClampMathOp<ClampedAddOp, int, int>' [ 0 6 16]
'gfx::Canvas::TileImageInt' [ 0 5 13]
'gfx::BreakList<unsigned long>::CheckBreaks' [ 0 5 31]
'color_utils::(anonymous namespace)::kDefaultLowerHSLBound' [ 0 13 36]
'gfx::Size::height' [ 0 5 11]
'std::__1::addressof<const std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'std::__1::operator<<gfx::ImageSkiaRep *, const gfx::ImageSkiaRep *>' [ 0 5 10 25 52]
'scoped_refptr<gfx::PlatformFontLinux>::operator bool' [ 0 39]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::__alloc' [ 0 5 10 85]
'std::__1::addressof<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::upper_bound<std::__1::__wrap_iter<const unsigned int *>, unsigned long>' [ 0 5 10]
'gfx::RangeF' [ 0 5]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::push_back' [ 0 5 10 101]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> >' [ 0 5 10]
'std::__1::max_element<int *, std::__1::__less<int, int> >' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> > &>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__alloc' [ 0 5 10 152]
'Cr_z_gz_header_s' [ 0]
'gfx::PlatformFontLinux' [ 0 5]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::push_back' [ 0 5 10 56]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>' [ 0 5 10]
'base::LazyInstance<gfx::(anonymous namespace)::SynchronizedCache, base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::SynchronizedCache> >' [ 0 6]
'std::__1::forward<std::__1::__tree_node<gfx::Font, void *> *&>' [ 0 5 10]
'(anonymous namespace)::HSLShift::LineProcHnopSnopLdec' [ 0 23 33]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >' [ 0 5 10]
'gfx::ImageFamily::MapKey::operator=' [ 0 5 18 26]
'drmFreeDevice' [ 0]
'std::__1::forward<gfx::Image::RepresentationType>' [ 0 5 10]
'std::__1::__list_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::operator--' [ 0 5 10 134]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >' [ 0 5 10]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>::operator->' [ 0 5 10 44]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::get' [ 0 5 10 256]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >, true>' [ 0 5 10 30]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__emplace_back_slow_path<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 132]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__construct<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 96]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'gfx::(anonymous namespace)::ScriptSetIntersect' [ 0 5 28]
'gfx::ElideRectangleString' [ 0 5]
'base::internal::saturated_cast<int, SaturationDefaultLimits, float>' [ 0 6 16]
'base::internal::CheckedMulOp<unsigned long, int, void>::Do<unsigned long>' [ 0 6 16 56]
'std::__1::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10]
'gfx::(anonymous namespace)::ExtractSubsetImageSource::GetImageForScale' [ 0 5 28 54]
'gfx::BreakList<bool>::ApplyValue' [ 0 5 22]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >' [ 0 5 10]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::capacity' [ 0 5 10 120]
'base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob>' [ 0 6]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::resize' [ 0 5 10 126]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::VectorIconSource *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>, void, void>' [ 0 5 10 93]
'std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__list_iterator' [ 0 5 10 106]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::construct<gfx::ImagePNGRep, gfx::ImagePNGRep &>' [ 0 5 10 68]
'gfx::BreakList<unsigned long>::~BreakList' [ 0 5 31]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformFromBT2020CL>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::max_size' [ 0 5 10 96]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::BreakList<unsigned long>::breaks' [ 0 5 31]
'std::__1::pair<unsigned long, unsigned long>' [ 0 5 10]
'drm_mode_get_property' [ 0]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >::deallocate' [ 0 5 10 107]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::operator->' [ 0 5 10 99]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::capacity' [ 0 5 10 115]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::PaddedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10 102]
'gfx::ImageSkia::MakeThreadSafe' [ 0 5 16]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__root' [ 0 5 10 332]
'__v16qi' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >, true>' [ 0 5 10 30]
'std::__1::remove_reference<double &>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10]
'gfx::(anonymous namespace)::g_default_font' [ 0 5 28]
'scoped_refptr<gfx::PlatformFontLinux>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>' [ 0 5 10 191]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >::~pair' [ 0 5 10 115]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >::allocate' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::operator->' [ 0 5 10 108]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::begin' [ 0 5 10 142]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPath> &, 1, false>::__compressed_pair_elem<std::__1::allocator<SkPath> &, void>' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InterpolatedTransform *, std::__1::default_delete<ui::InterpolatedTransform> >::__compressed_pair<ui::InterpolatedTransform *, true>' [ 0 5 10 112]
'std::__1::conditional<false, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::__nat>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::ItemizeTextToRuns' [ 0 5 25]
'std::__1::forward<gfx::(anonymous namespace)::QueryResult>' [ 0 5 10]
'base::internal::CheckedMulOp<long, int, void>::Do<long>' [ 0 6 16 47]
'base::MRUCache<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int> >::~MRUCache' [ 0 6 102]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap>, false>' [ 0 5 10 30]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::construct<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &, 1, false>::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &, void>' [ 0 5 10 113]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::~unique_ptr' [ 0 5 10 266]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > >::New' [ 0 6 323]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *&, void>' [ 0 5 10 125]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'base::subtle::RefCountedBase::RefCountedBase' [ 0 6 14 30]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__destruct_at_end' [ 0 5 10 72]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__push_back_slow_path<const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10 114]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::data' [ 0 5 10 76]
'base::Optional<SkBitmap>' [ 0 6]
'std::__1::make_pair<gfx::Image::RepresentationType &, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::construct<color_utils::(anonymous namespace)::WeightedColor, color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 101]
'switches::kEnableFeatures' [ 0 10]
'std::__1::add_lvalue_reference<gfx::ColorTransformToLinear>' [ 0 5 10]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::~unordered_map' [ 0 5 10 191]
'std::__1::operator!=<const std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache> >::instance' [ 0 6 163]
'std::__1::__wrap_iter<const gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::__tree_node_destructor' [ 0 5 10 158]
'drm_buf_map' [ 0]
'std::__1::__pointer_type<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10]
'std::__1::move_if_noexcept<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>' [ 0 5 10]
'std::__1::default_delete<char []>::operator()<char>' [ 0 5 10 35]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__construct_at_end' [ 0 5 10 149]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::max_size' [ 0 5 10 62]
'std::__1::allocator<int>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned int, std::__1::default_delete<unsigned int []>, false>' [ 0 5 10 30]
'std::__1::remove_reference<std::__1::tuple<const unsigned int &> >' [ 0 5 10]
'gfx::GpuFence' [ 0 5]
'std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::operator+=' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::__construct_backward<cc::PaintFlags *>' [ 0 5 10 66]
'(anonymous namespace)::g_default_impl' [ 0 23]
'std::__1::__pointer_type_imp::__pointer_type<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute>, true>' [ 0 5 10 30]
'gfx::RenderText::Elide::trace_event_unique_atomic1506' [ 0 5 17 24]
'drmCloseOnce' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::destroy<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 119]
'std::__1::move_if_noexcept<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__emplace_unique_key_args<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 141]
'std::__1::sort<color_utils::(anonymous namespace)::KMeanCluster *, bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &)>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::operator*' [ 0 5 10 362]
'gfx::(anonymous namespace)::PathParser::Advance' [ 0 5 28 40]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::get' [ 0 5 10 522]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__push_back_slow_path<const gfx::ImagePNGRep &>' [ 0 5 10 76]
'std::__1::forward<gfx::(anonymous namespace)::DropShadowSource *>' [ 0 5 10]
'gfx::internal::ImageSkiaStorage' [ 0 5 15]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__make_iter' [ 0 5 10 78]
'scoped_refptr<base::RefCountedBytes>::~scoped_refptr' [ 0 38]
'std::__1::iterator_traits<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::allocator<gfx::ShadowValue>::construct<gfx::ShadowValue, const gfx::ShadowValue &>' [ 0 5 10 39]
'std::__1::pair<gfx::Font, gfx::Range>' [ 0 5 10]
'std::__1::move<sk_sp<SkTypeface> &>' [ 0 5 10]
'base::TimeTicks' [ 0 6]
'std::__1::__compressed_pair_elem<SkPath *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__construct<color_utils::(anonymous namespace)::ColorBox, const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10 96]
'drm_map_flags' [ 0]
'std::__1::move_iterator<std::__1::pair<unsigned long, bool> *>::operator++' [ 0 5 10 64]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::reset' [ 0 5 10 638]
'gfx::RenderText::OnTextAttributeChanged::kNewlineSymbol' [ 0 5 17 41]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::ImageSkiaSource *, true>' [ 0 5 10 102]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::erase' [ 0 5 10 133]
'std::__1::__sort<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, 1, true>::__compressed_pair_elem<const std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> &, void>' [ 0 5 10 175]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::size' [ 0 5 10 322]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__push_back_slow_path<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 143]
'std::__1::forward<const std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::FontListImpl> >' [ 0 6 16]
'std::__1::ostream' [ 0 5 10]
'gfx::Canvas::DrawSolidFocusRect' [ 0 5 13]
'Cr_z_inflateBackInit_' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *&, void>' [ 0 5 10 148]
'gfx::internal::(anonymous namespace)::PNGImageSource::size' [ 0 5 15 38 54]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 69]
'gfx::(anonymous namespace)::ButtonImageSource' [ 0 5 28]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::second' [ 0 5 10 127]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::SegmentFromHandle' [ 0 5 28 49]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__destruct_at_end' [ 0 5 10 68]
'std::__1::advance<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'base::nullopt_t' [ 0 6]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::~__split_buffer' [ 0 5 10 85]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>::get' [ 0 5 10 52]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::capacity' [ 0 5 10 148]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::second' [ 0 5 10 157]
'gfx::(anonymous namespace)::RectangleText::~RectangleText' [ 0 5 28 43]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::~vector' [ 0 5 10 96]
'gfx::BreakList<bool>::CheckBreaks' [ 0 5 22]
'std::__1::pointer_traits<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>' [ 0 5 10]
'gfx::CanvasImageSource::MakeImageSkia<gfx::(anonymous namespace)::PaddedImageSource, const gfx::ImageSkia &, const gfx::Insets &>' [ 0 5 24]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 114]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::__alloc' [ 0 5 10 65]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::destroy<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::operator->' [ 0 5 10 143]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::GetCutoffPos' [ 0 5 28 49]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::DropShadowSource>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::PaddedImageSource>' [ 0 5 10]
'color_utils::SkColorToHSL' [ 0 13]
'gfx::(anonymous namespace)::QueryFontconfig::FcPatternDeleter::operator()' [ 0 5 28 45 63]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::select_on_container_copy_construction' [ 0 5 10 96]
'gfx::RenderText::baselines' [ 0 5 17]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::data' [ 0 5 10 167]
'gfx::SizeF' [ 0 5]
'std::__1::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >::~unique_ptr' [ 0 5 10 115]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::__wrap_iter' [ 0 5 10 68]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::~map' [ 0 5 10 178]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::get' [ 0 5 10 73]
'scoped_refptr<base::RefCountedMemory>::operator=' [ 0 39]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *>::operator++' [ 0 5 10 73]
'base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::PlatformFontLinux> >::New' [ 0 6 16 81]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::operator[]' [ 0 5 10 82]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, true>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::IconWithBadgeSource *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'gfx::internal::TextRunList::logical_to_visual' [ 0 5 15 28]
'std::__1::swap<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *&>' [ 0 5 10]
'SkColorSetARGB::operator()' [ 0 16]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__recommend' [ 0 5 10 76]
'std::__1::__const_void_pointer<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, false>' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::~unique_ptr' [ 0 5 10 67]
'base::internal::SaturationDefaultLimits<int>::NaN' [ 0 6 16 46]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::~vector' [ 0 5 10 68]
'std::__1::__const_void_pointer<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, false>' [ 0 5 10]
'std::__1::operator+<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::value_comp' [ 0 5 10 725]
'std::__1::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >::reset' [ 0 5 10 115]
'hb_tag_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::__construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::piecewise_construct_t &, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::tuple<> >' [ 0 5 10 144]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::operator()' [ 0 5 10 150]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::reset' [ 0 5 10 180]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>::operator*' [ 0 5 10 206]
'gfx::ShadowValue::MakeRefreshShadowValues' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::WeightedColor *, 0, false>' [ 0 5 10]
'std::__1::forward<const gfx::internal::(anonymous namespace)::PNGImageSource::Compare &>' [ 0 5 10]
'std::__1::__list_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__list_iterator' [ 0 5 10 134]
'std::__1::remove_reference<gfx::Font>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_pointer' [ 0 5 10 126]
'std::__1::__wrap_iter<gfx::(anonymous namespace)::CachedFont *>::operator++' [ 0 5 10 65]
'std::__1::remove_reference<const std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'std::__1::remove_reference<SkBitmapOperations::RotationAmount &>' [ 0 5 10]
'gfx::ToCeiledInt' [ 0 5]
'std::__1::unique_ptr<SkBitmap, std::__1::default_delete<SkBitmap> >' [ 0 5 10]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<int>' [ 0 6 16 85]
'gfx::BreakList<int>::GetBreak' [ 0 5 21]
'std::__1::__compressed_pair_elem<cc::PaintFlags *, 0, false>' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >' [ 0 5 10]
'std::__1::__compressed_pair<SkPoint *, std::__1::default_delete<SkPoint []> >::__compressed_pair<SkPoint *, true>' [ 0 5 10 79]
'color_utils::(anonymous namespace)::KMeanCluster::GetWeight' [ 0 13 36 50]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >' [ 0 5 10]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__get_short_pointer' [ 0 5 10 96]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'gfx::Matrix3F' [ 0 5]
'attrs' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::allocate' [ 0 5 10 139]
'std::__1::__compressed_pair_elem<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 109]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>' [ 0 5 10]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'std::__1::max<long, std::__1::__less<long, long> >' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__make_iter' [ 0 5 10 62]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::get' [ 0 5 10 266]
'std::__1::allocator_traits<std::__1::allocator<float> >::__max_size' [ 0 5 10 57]
'gfx::(anonymous namespace)::PrimeSyncStart' [ 0 5 28]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 128]
'uint_fast32_t' [ 0]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::data' [ 0 5 10 76]
'base::internal::RangeCheck' [ 0 6 16]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::capacity' [ 0 5 10 186]
'gfx::(anonymous namespace)::GetGlyphHorizontalOrigin' [ 0 5 28]
'std::__1::remove_reference<sk_sp<SkDrawLooper> &>' [ 0 5 10]
'deflate_rle' [ 0]
'std::__1::__const_void_pointer<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep>, false>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__destruct_at_end' [ 0 5 10 124]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique_extract_key<std::__1::pair<unsigned int, int> >' [ 0 5 10 447]
'gfx::RenderTextHarfBuzz::GetFontSpansForTesting' [ 0 5 25]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'gfx::IconDescription::~IconDescription' [ 0 5 22]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::size' [ 0 5 10 82]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *&>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::size' [ 0 5 10 70]
'std::__1::remove_reference<gfx::(anonymous namespace)::SuperimposedImageSource *>' [ 0 5 10]
'std::__1::remove_reference<const gfx::internal::LineSegment &>' [ 0 5 10]
'std::__1::remove_reference<_FcPattern *>' [ 0 5 10]
'std::__1::default_delete<ui::InterpolatedTransform>::operator()' [ 0 5 10 53]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::operator=' [ 0 5 10 135]
'gfx::RenderText::colors' [ 0 5 17]
'base::subtle::AdoptRefIfNeeded<cc::PaintTextBlob>' [ 0 6 14]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::select_on_container_copy_construction' [ 0 5 10 101]
'std::__1::default_delete<gfx::ColorTransformToLinear>' [ 0 5 10]
'gfx::ImageSkiaRep::ImageSkiaRep' [ 0 5 19]
'std::__1::add_lvalue_reference<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::__extract_key_first_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Font> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::Font> &, void>' [ 0 5 10 78]
'sk_sp<SkColorFilter>' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::remove_reference<const gfx::IconDescription &>' [ 0 5 10]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBracket *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >' [ 0 5 10]
'std::__1::__const_pointer<float, float *, std::__1::allocator<float>, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >::~unique_ptr' [ 0 5 10 103]
'base::WStringPiece' [ 0 6]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, unsigned short> >::__get_ptr' [ 0 5 10 89]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >::allocate' [ 0 5 10 85]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >, true>' [ 0 5 10 30]
'gfx::PathProvider' [ 0 5]
'std::__1::__compressed_pair_elem<gfx::ColorTransformFromBT2020CL *, 0, false>::__compressed_pair_elem<gfx::ColorTransformFromBT2020CL *&, void>' [ 0 5 10 79]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::deallocate' [ 0 5 10 100]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10]
'Cr_z_inflate_fast' [ 0]
'gfx::FontList::GetFontStyle' [ 0 5 15]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::allocate' [ 0 5 10 102]
'std::__1::vector<int, std::__1::allocator<int> >::operator=' [ 0 5 10 50]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::capacity' [ 0 5 10 149]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>::__tree_iterator' [ 0 5 10 562]
'gfx::ColorTransform' [ 0 5]
'std::__1::__wrap_iter<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'drmModeGetFB' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::__nat, const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::__const_pointer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >, true>' [ 0 5 10]
'std::__1::get<2, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'std::__1::allocator<unsigned short>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__tree' [ 0 5 10 357]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__alloc' [ 0 5 10 149]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>' [ 0 5 10]
'std::__1::remove_const<base::FileDescriptor>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, long, true>' [ 0 5 10]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::data' [ 0 5 10 96]
'ulg' [ 0]
'gfx::Image::GetRepresentation' [ 0 5 12]
'gfx::RenderText::clip_to_display_rect' [ 0 5 17]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::empty' [ 0 5 10 101]
'SkIPoint' [ 0]
'std::__1::allocator<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::max_size' [ 0 5 10 68]
'std::__1::allocator<unsigned int>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>::allocate' [ 0 5 10 132]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::~vector' [ 0 5 10 120]
'_FcFontSet' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::max_size' [ 0 5 10 71]
'_drmVBlank' [ 0]
'std::__1::sort<gfx::internal::LineSegment, (lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17)>' [ 0 5 10]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'base::internal::ClampedNumeric<int>::ClampedNumeric<int>' [ 0 6 16 37]
'std::__1::vector<int, std::__1::allocator<int> >::__move_assign' [ 0 5 10 50]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'std::__1::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >::allocate' [ 0 5 10 115]
'std::__1::remove_reference<ui::InterpolatedTransform *>' [ 0 5 10]
'drmParseUsbDeviceInfo' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *>::__nat, std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'gfx::Font::~Font' [ 0 5 11]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__construct_node<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 357]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >, 1, true>' [ 0 5 10]
'gfx::kForwardSlash' [ 0 5]
'gfx::internal::ImageRepPNG::Size' [ 0 5 15 28]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::operator*' [ 0 5 10 356]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__construct_range_forward<base::FileDescriptor>' [ 0 5 10 72]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::reset' [ 0 5 10 340]
'std::__1::__sort5<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'sk_sp<SkString::Rec>' [ 0]
'gfx::ImageSkiaOperations::CreateIconWithBadge' [ 0 5 26]
'base::internal::CommonMin<int, int>' [ 0 6 16]
'std::__1::operator!=<const gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::operator()' [ 0 5 10 233]
'std::__1::__less<long, long>::operator()' [ 0 5 10 30]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >::find' [ 0 5 10 188]
'cc::PaintFlags::setLooper' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear>, false>' [ 0 5 10 30]
'std::__1::vector<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >::size' [ 0 5 10 94]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__construct_at_end<gfx::NativePixmapPlane *>' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::operator->' [ 0 5 10 141]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >::~map' [ 0 5 10 188]
'std::__1::remove_const<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'gz_look' [ 0]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::~vector' [ 0 5 10 76]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 144]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true> >::__compressed_pair<float, true>' [ 0 5 10 181]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::begin' [ 0 5 10 96]
'(anonymous namespace)::HSLShift::kLineProcessors' [ 0 23 33]
'gfx::(anonymous namespace)::RectangleText' [ 0 5 28]
'std::__1::__size_type<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::construct<gfx::internal::LineSegment, gfx::internal::LineSegment &>' [ 0 5 10 78]
'__uint64_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<float> >::construct<float, float>' [ 0 5 10 57]
'SkAtomic<unsigned char, sk_memory_order_relaxed>' [ 0]
'std::__1::__apply_cv<unsigned int, unsigned int, false, false>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::insert' [ 0 5 10 126]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::allocate' [ 0 5 10 100]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> > &>' [ 0 5 10]
'gfx::AcceleratedWidget' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::default_delete<char []>, 1, true>' [ 0 5 10]
'Cr_z_uLongf' [ 0]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__construct_at_end' [ 0 5 10 85]
'std::__1::__rebind_pointer<void *, const std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::remove_reference<sk_sp<SkColorSpace> &>' [ 0 5 10]
'std::__1::__hash_node_types<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >' [ 0 5 10]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>::~unique_ptr' [ 0 5 10 52]
'std::__1::pair<gfx::IconDescription, gfx::ImageSkia>' [ 0 5 10]
'drmAuthMagic' [ 0]
'gfx::(anonymous namespace)::ExtractSubsetImageSource::~ExtractSubsetImageSource' [ 0 5 28 54]
'gfx::Font::GetExpectedTextWidth' [ 0 5 11]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > > >::Get' [ 0 6 647]
'base::WrapUnique<gfx::(anonymous namespace)::ShadowNineboxSource>' [ 0 6]
'std::__1::__wrap_iter<const gfx::Font *>::operator->' [ 0 5 10 42]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 65]
'std::__1::remove_cv<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >::Get' [ 0 6 464]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::__destruct_at_end' [ 0 5 10 176]
'gfx::Vector2d' [ 0 5]
'std::__1::forward<std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::clear' [ 0 5 10 126]
'std::__1::__compressed_pair<unsigned long, gfx::(anonymous namespace)::CaseInsensitiveCompare>::__compressed_pair<int, const gfx::(anonymous namespace)::CaseInsensitiveCompare &>' [ 0 5 10 96]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &, void>' [ 0 5 10 116]
'std::__1::default_delete<gfx::internal::TextRunHarfBuzz>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<cc::FrameMetadata *>::__nat, cc::FrameMetadata>' [ 0 5 10]
'gfx::Range::start' [ 0 5 12]
'std::__1::make_unique<gfx::(anonymous namespace)::SuperimposedImageSource, const gfx::ImageSkia &, const gfx::ImageSkia &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::construct<int>' [ 0 5 10 55]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<cc::PaintTypeface>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::ShadowValue> &, void>' [ 0 5 10 82]
'std::__1::copy<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'build_bl_tree' [ 0]
'std::__1::__to_raw_pointer<unsigned int>' [ 0 5 10]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::clear' [ 0 5 10 121]
'base::internal::IsCompileTimeConstant<double>' [ 0 6 16]
'gfx::Canvas::SaveLayerWithFlags' [ 0 5 13]
'switches::kEnableLowEndDeviceMode' [ 0 10]
'gfx::(anonymous namespace)::kMaxArcSize' [ 0 5 28]
'std::__1::__to_raw_pointer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >' [ 0 5 10]
'base::FileDescriptor' [ 0 6]
'gfx::(anonymous namespace)::FromLinear' [ 0 5 28]
'std::__1::sort<float>' [ 0 5 10]
'std::__1::move<color_utils::(anonymous namespace)::WeightedColor *&>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__vector_base' [ 0 5 10 147]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'gfx::ImageSkia::AddRepresentation' [ 0 5 16]
'std::__1::forward<float &>' [ 0 5 10]
'color_utils::(anonymous namespace)::KMeanCluster::GetDistanceSqr' [ 0 13 36 50]
'base::internal::ArithmeticOrUnderlyingEnum<double, false>' [ 0 6 16]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>, 1, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::__nat>' [ 0 5 10]
'scoped_refptr<base::RefCountedMemory>::scoped_refptr<base::RefCountedBytes, void>' [ 0 39]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::empty' [ 0 5 10 76]
'std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>::pair<gfx::ImageFamily::MapKey &&, 0>' [ 0 5 10 60]
'base::internal::CheckedNumeric<unsigned long>::operator+=<base::internal::StrictNumeric<unsigned long> >' [ 0 6 16 47]
'time_t' [ 0]
'std::__1::__pointer_type<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10]
'gfx::FontListImpl::GetFontStyle' [ 0 5 19]
'std::__1::pointer_traits<gfx::ImagePNGRep *>' [ 0 5 10]
'std::__1::allocator<gfx::DecoratedText::RangedAttribute>::construct<gfx::DecoratedText::RangedAttribute, const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10 58]
'trace_event_internal::ScopedTracer::ScopedTracer' [ 0 22 36]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::destroy<std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'base::internal::ClampSub<int, int>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::~vector' [ 0 5 10 141]
'std::__1::__compressed_pair_elem<gfx::ColorTransformSkTransferFn *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::deallocate' [ 0 5 10 199]
'gfx::BreakList<gfx::BaselineStyle>::operator=' [ 0 5 36]
'base::TimeDelta::is_zero' [ 0 6 17]
'__loadu_si128' [ 0]
'std::__1::remove_reference<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<icu_61::BreakIterator *, 0, false>::__compressed_pair_elem<icu_61::BreakIterator *&, void>' [ 0 5 10 69]
'std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>::deallocate' [ 0 5 10 72]
'std::__1::__add_lvalue_reference_impl<SkColorSpaceXform, true>' [ 0 5 10]
'clock_t' [ 0]
'std::__1::operator==<const float *, float *>' [ 0 5 10]
'std::__1::min<float>' [ 0 5 10]
'gfx::Range::InvalidRange' [ 0 5 12]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformFromBT2020CL, true>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__alloc' [ 0 5 10 63]
'std::__1::forward<const gfx::IconDescription &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 265]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 272]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, true>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::RenderTextHarfBuzz' [ 0 5 25]
'std::__1::default_delete<gfx::RenderText>::operator()' [ 0 5 10 43]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::empty' [ 0 5 10 167]
'gfx::(anonymous namespace)::g_shadow_cache' [ 0 5 28]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *&>' [ 0 5 10]
'gfx::(anonymous namespace)::TransparentImageSource::GetImageForScale' [ 0 5 28 52]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformToBT2020CL, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::internal::ImageRepPNG, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::reset' [ 0 5 10 324]
'SkBitmap::getAddr32' [ 0 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::max_size' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::deallocate' [ 0 5 10 69]
'base::LazyInstance<scoped_refptr<gfx::PlatformFontLinux>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::PlatformFontLinux> > >' [ 0 6]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'gfx::ColorTransformInternal::GetSrcColorSpace' [ 0 5 29]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::c_str' [ 0 5 10 126]
'hb_glyph_position_t' [ 0]
'std::__1::remove_reference<gfx::ColorTransformMatrix *>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<gfx::ImageSkiaRep, void *, std::__1::__tree_key_value_types<gfx::ImageSkiaRep>, false>' [ 0 5 10]
'hb_face_t' [ 0]
'base::MRUCacheStandardMap<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int> >' [ 0 6]
'std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<gfx::Font>, long, true>' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::__make_iter' [ 0 5 10 54]
'std::__1::remove_reference<const std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__self' [ 0 5 10 135]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__annotate_new' [ 0 5 10 132]
'gfx::SkiaColorTransform::GetSkia' [ 0 5 25]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::capacity' [ 0 5 10 267]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::allocate' [ 0 5 10 87]
'deflate_stored' [ 0]
'std::__1::__copy<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'(anonymous namespace)::g_linux_font_delegate' [ 0 23]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::IconWithBadgeSource *, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10]
'logging::CheckGTImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >::deallocate' [ 0 5 10 152]
'std::__1::swap<gfx::FontListImpl *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::allocate' [ 0 5 10 61]
'gfx::BreakList<unsigned int>::max' [ 0 5 30]
'std::__1::forward<std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::internal::ImageRep, true>' [ 0 5 10]
'drm_device_validate_flags' [ 0]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__tuple_leaf<2, const unsigned int &, false>::__tuple_leaf<const unsigned int &, void>' [ 0 5 10 56]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'gfx::SelectionModel::operator!=' [ 0 5 21]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::AdvanceLine::operator()' [ 0 5 28 49 62]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10 156]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *>::operator*' [ 0 5 10 73]
'drm_mode_card_res' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::destroy<gfx::DecoratedText::RangedAttribute>' [ 0 5 10 87]
'std::__1::move<std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10]
'gfx::BreakList<unsigned int>::CheckBreaks' [ 0 5 30]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__max_size' [ 0 5 10 102]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::data' [ 0 5 10 133]
'base::SharedMemoryHandle' [ 0 6]
'std::__1::advance<unsigned char *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >' [ 0 5 10]
'std::__1::__pointer_type<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'std::__1::pair<const unsigned int, int>::pair<const unsigned int &, 0>' [ 0 5 10 41]
'std::__1::__wrap_iter<const gfx::ShadowValue *>::operator*' [ 0 5 10 49]
'gfx::ColorTransformToBT2020CL::Join' [ 0 5 31]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >, long, true>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::SuperimposedImageSource *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::Rect *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 57]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 85]
'std::__1::__size_type<std::__1::allocator<unsigned int>, long, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >::~unique_ptr' [ 0 5 10 115]
'drm_set_client_cap' [ 0]
'gfx::Canvas::DrawImageInt' [ 0 5 13]
'gfx::Range::IsValid' [ 0 5 12]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::operator=' [ 0 5 10 70]
'gfx::internal::ImageSkiaStorage::DeleteSource' [ 0 5 15 33]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::max_size' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::deallocate' [ 0 5 10 100]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::construct<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'gfx::FontRenderParams::~FontRenderParams' [ 0 5 23]
'gfx::RenderText::set_subpixel_rendering_suppressed' [ 0 5 17]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::DeleteInternal<cc::PaintTextBlob>' [ 0 6 108]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::__destruct_at_end' [ 0 5 10 222]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__end_node' [ 0 5 10 506]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::release' [ 0 5 10 638]
'base::IntToString' [ 0 6]
'std::__1::__compressed_pair_elem<gfx::ImagePNGRep *, 0, false>' [ 0 5 10]
'gfx::Insets::height' [ 0 5 13]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__make_iter' [ 0 5 10 113]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::__max_size' [ 0 5 10 69]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>::__nat, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformMatrix>::operator()' [ 0 5 10 53]
'gfx::RenderTextHarfBuzz::EnsureLayoutRunList' [ 0 5 25]
'base::i18n::UTF16CharIterator::end' [ 0 6 12 31]
'short' [ 0]
'std::__1::__unique_if<gfx::ColorTransformToBT2020CL>' [ 0 5 10]
'base::internal::ConditionalNegate<unsigned int>' [ 0 6 16]
'base::internal::OptionalStorage<cc::SkiaPaintCanvas, false, false>::~OptionalStorage' [ 0 6 16 68]
'sync_merge' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::end' [ 0 5 10 338]
'gfx::NativePixmapDmaBuf::GetBufferSize' [ 0 5 25]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::max_size' [ 0 5 10 100]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::construct<gfx::ImagePNGRep, gfx::ImagePNGRep>' [ 0 5 10 68]
'std::__1::pair<const unsigned int, unsigned int>::pair<const unsigned int &>' [ 0 5 10 50]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::construct<std::__1::pair<unsigned long, int>, const std::__1::pair<unsigned long, int> &>' [ 0 5 10 87]
'drm_dma_t' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::operator[]' [ 0 5 10 267]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::empty' [ 0 5 10 143]
'std::__1::operator==<const base::FileDescriptor *, const base::FileDescriptor *>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::BreakList<bool> *>::__wrap_iter' [ 0 5 10 53]
'std::__1::forward<std::__1::allocator<gfx::PathElement> &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::capacity' [ 0 5 10 105]
'std::__1::allocator<gfx::internal::LineSegment>::allocate' [ 0 5 10 49]
'std::__1::__compressed_pair<gfx::ColorTransformSkTransferFn *, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10]
'Cr_z_gzclearerr' [ 0]
'std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >::count' [ 0 5 10 150]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__emplace_unique_key_args<unsigned int, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 284]
'Cr_z_zcfree' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__destroy<gfx::Rect>' [ 0 5 10 61]
'gfx::Image::RepresentationCount' [ 0 5 12]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ShadowNineboxSource *, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10]
'std::__1::__tree_node_base<void *>::__parent_unsafe' [ 0 5 10 36]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::hash_function' [ 0 5 10 410]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, gfx::BaselineStyle> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 97]
'dext' [ 0]
'gfx::NativePixmapDmaBuf::~NativePixmapDmaBuf' [ 0 5 25]
'gfx::(anonymous namespace)::MaybeCombineUnusualBlock' [ 0 5 28]
'__u32' [ 0]
'std::__1::unique_ptr<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >::unique_ptr<true, void>' [ 0 5 10 141]
'std::__1::conditional<true, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::construct<base::FileDescriptor, int, bool>' [ 0 5 10 72]
'SkSafeUnref<SkTextBlob>' [ 0]
'gfx::ImageSkiaOperations::ExtractSubset' [ 0 5 26]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>::fits' [ 0 11 20 57]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>::operator*' [ 0 5 10 110]
'std::__1::remove_reference<gfx::internal::ImageStorage *&>' [ 0 5 10]
'drmGetMinorType' [ 0]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::__destruct_at_end' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::conditional<false, std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::ButtonImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10 102]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >, 1, true>' [ 0 5 10]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::~HarfBuzzLineBreaker' [ 0 5 28 49]
'gfx::NineImagePainter::~NineImagePainter' [ 0 5 23]
'std::__1::__compressed_pair_elem<gfx::SkiaColorTransform *, 0, false>::__compressed_pair_elem<gfx::SkiaColorTransform *&, void>' [ 0 5 10 71]
'sync_pt_info' [ 0]
'std::__1::remove_reference<std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'ui::SequentialIDGenerator::~SequentialIDGenerator' [ 0 4 27]
'std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, int> *>::__nat, std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::__apply_cv<int, int, false, false>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::~unique_ptr' [ 0 5 10 522]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>, true>' [ 0 5 10 30]
'std::__1::pair<const unsigned int, unsigned int>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::ShadowValue *>::__wrap_iter' [ 0 5 10 49]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> >, 1, true>' [ 0 5 10]
'std::__1::remove_reference<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<color_utils::ColorProfile *>::__nat, color_utils::ColorProfile>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__swap_out_circular_buffer' [ 0 5 10 142]
'drmAgpSize' [ 0]
'__suseconds_t' [ 0]
'drmModeAtomicFree' [ 0]
'gfx::(anonymous namespace)::UnrefSkTypeface' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::destroy<cc::PaintTypeface>' [ 0 5 10 69]
'gfx::(anonymous namespace)::GetClusterAtImpl<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 28]
'std::__1::__compressed_pair_elem<gfx::ColorTransformMatrix *, 0, false>::__compressed_pair_elem<gfx::ColorTransformMatrix *&, void>' [ 0 5 10 73]
'std::__1::__pointer_type<unsigned short, std::__1::allocator<unsigned short> >' [ 0 5 10]
'base::LazyInstanceTraitsBase<std::__1::basic_string<char> >::New' [ 0 6 61]
'icu_61::ConstChar16Ptr::operator const char16_t *' [ 0 8 24]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::clear' [ 0 5 10 128]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_value_type<unsigned int, int>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> >, true>' [ 0 5 10 30]
'std::__1::__const_pointer<gfx::Rect, gfx::Rect *, std::__1::allocator<gfx::Rect>, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, const int &>' [ 0 5 10 114]
'Cr_z_intf' [ 0]
'gfx::NativePixmapHandle::~NativePixmapHandle' [ 0 5 25]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> &>' [ 0 5 10 180]
'Cr_z_adler32_simd_' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >, long, true>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >' [ 0 5 10]
'SkRect::MakeEmpty' [ 0 8]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::operator=' [ 0 5 10 332]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::ImageSkiaRep *>::__nat, gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::ColorBox *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 92]
'gfx::ClientNativePixmapDmaBuf::ClientNativePixmapDmaBuf::trace_event_unique_atomic73' [ 0 5 31 57]
'std::__1::pointer_traits<const wchar_t *>::pointer_to' [ 0 5 10 43]
'gfx::FontRenderParamsQuery::is_empty' [ 0 5 28]
'std::__1::pair<std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool, false>' [ 0 5 10 132]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::~__split_buffer' [ 0 5 10 151]
'UBiDi' [ 0]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >::construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 73]
'std::__1::remove_reference<cc::PaintFlags &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &, 1, false>::__get' [ 0 5 10 118]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__alloc' [ 0 5 10 274]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::capacity' [ 0 5 10 128]
'std::__1::move_iterator<std::__1::pair<unsigned long, bool> *>::operator*' [ 0 5 10 64]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker' [ 0 5 28]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::clear' [ 0 5 10 151]
'std::__1::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >::reset' [ 0 5 10 155]
'gfx::CreateVectorIconFromSource' [ 0 5]
'std::__1::default_delete<gfx::Size>::operator()' [ 0 5 10 37]
'gfx::RenderTextHarfBuzz::ShapeRunWithFont' [ 0 5 25]
'std::__1::vector<int, std::__1::allocator<int> >::__swap_out_circular_buffer' [ 0 5 10 50]
'std::__1::forward<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>' [ 0 5 10]
'gfx::RenderText::SetObscuredRevealIndex' [ 0 5 17]
'std::__1::__pointer_type<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap> >' [ 0 5 10]
'gfx::BreakList<gfx::Font::Weight>::BreakList' [ 0 5 35]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::operator+=' [ 0 5 10 62]
'std::__1::remove_reference<std::__1::__tree_node<gfx::Font, void *> *&>' [ 0 5 10]
'gfx::internal::ImageSkiaFromPNG' [ 0 5 15]
'std::__1::allocator<gfx::internal::Line>::allocate' [ 0 5 10 42]
'std::__1::__compressed_pair<XPoint *, std::__1::default_delete<XPoint []> >' [ 0 5 10]
'std::__1::swap<gfx::PlatformFont *>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::forward<const unsigned int &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::PathElement>, 1, true>' [ 0 5 10]
'int_fast32_t' [ 0]
'base::LazyInstance<gfx::(anonymous namespace)::FontFuncs, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<gfx::(anonymous namespace)::FontFuncs> >' [ 0 6]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, int> *>' [ 0 5 10]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >::end' [ 0 5 10 195]
'AnnotatePCQPut' [ 0]
'std::__1::operator!=<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::clear' [ 0 5 10 71]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::__wrap_iter<const unsigned int *>::operator-=' [ 0 5 10 45]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::__alloc' [ 0 5 10 128]
'drmGetMinorBase' [ 0]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >::pair<const std::__1::basic_string<char> &, 0>' [ 0 5 10 115]
'gfx::FontListImpl::~FontListImpl' [ 0 5 19]
'gfx::Canvas::GetStringWidth' [ 0 5 13]
'std::__1::allocator<std::__1::pair<unsigned long, int> >::deallocate' [ 0 5 10 58]
'std::__1::locale' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__annotate_delete' [ 0 5 10 131]
'gfx::StringSlicer::StringSlicer' [ 0 5 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::allocate' [ 0 5 10 93]
'scoped_refptr<gfx::internal::ImageStorage>' [ 0]
'std::__1::allocator<base::FileDescriptor>::deallocate' [ 0 5 10 43]
'gfx::(anonymous namespace)::VectorIconSource::VectorIconSource' [ 0 5 28 46]
'std::__1::remove_reference<gfx::DecoratedText::RangedAttribute &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'gfx::internal::ImageSkiaStorage::DetachFromSequence' [ 0 5 15 33]
'gfx::GpuFence::~GpuFence' [ 0 5 15]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__end_cap' [ 0 5 10 121]
'gfx::NativePixmapHandle::NativePixmapHandle' [ 0 5 25]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>::allocate' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::RenderText>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::RenderTextHarfBuzz>, void>' [ 0 5 10 86]
'base::subtle::RefCountedThreadSafeBase::ReleaseImpl' [ 0 6 14 40]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<unsigned long, false>' [ 0 6 16]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::PaddedImageSource *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::operator->' [ 0 5 10 638]
'std::__1::__compressed_pair_elem<gfx::ColorTransformMatrix *, 0, false>' [ 0 5 10]
'base::internal::saturated_cast<int, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::operator()' [ 0 5 10 336]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::~scoped_refptr' [ 0 48]
'std::__1::remove_reference<const std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10]
'std::__1::remove_reference<unsigned int *&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::second' [ 0 5 10 349]
'AnnotateBarrierWaitBefore' [ 0]
'base::internal::CheckedNumeric<unsigned long>::ValueOrDie<unsigned long, base::internal::CheckOnFailure>' [ 0 6 16 47]
'base::WrapUnique<gfx::(anonymous namespace)::HorizontalShadowSource>' [ 0 6]
'gfx::CanvasImageSource::~CanvasImageSource' [ 0 5 24]
'std::__1::iterator_traits<const gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__insert_node_at' [ 0 5 10 725]
'std::__1::addressof<const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'base::char16' [ 0 6]
'Cr_z_voidpf' [ 0]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::destroy<cc::PaintFlags>' [ 0 5 10 66]
'std::__1::__pointer_type<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet>, 1, true>' [ 0 5 10]
'base::AtomicRefCount::IsZero' [ 0 6 22]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> >' [ 0 5 10]
'std::__1::__wrap_iter<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'gfx::internal::ImageStorage::HasRepresentation' [ 0 5 15 29]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >::__get_ptr' [ 0 5 10 97]
'std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>::operator=' [ 0 5 10 62]
'std::__1::__size_type<std::__1::allocator<std::__1::basic_string<char> >, long, true>' [ 0 5 10]
'gfx::(anonymous namespace)::ShadowNineboxSource::~ShadowNineboxSource' [ 0 5 28 49]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>' [ 0 5 10]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'SkBitmap::pixmap' [ 0 10]
'gfx::RenderText::GetStringSizeF' [ 0 5 17]
'drmUpdateDrawableInfo' [ 0]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::operator+' [ 0 5 10 61]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> >, false>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >::unique_ptr<true, void>' [ 0 5 10 103]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >' [ 0 5 10]
'std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >::pair<unsigned int &&, 0>' [ 0 5 10 246]
'std::__1::__const_void_pointer<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, false>' [ 0 5 10]
'_FcValue' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::TextRunHarfBuzz>, 1, true>' [ 0 5 10]
'std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>::operator()' [ 0 5 10 57]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, true>' [ 0 5 10 30]
'std::__1::move<std::__1::pair<unsigned long, bool> *&>' [ 0 5 10]
'std::__1::pointer_traits<unsigned short *>::pointer_to' [ 0 5 10 44]
'icu_61::ConstChar16Ptr::cast<unsigned short>' [ 0 8 24]
'gfx::BreakList<gfx::Font::Weight>::GetRange' [ 0 5 35]
'drm_ctx_flags' [ 0]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__recommend' [ 0 5 10 76]
'std::__1::pointer_traits<std::__1::pair<gfx::Font, gfx::Range> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__move_assign_alloc' [ 0 5 10 332]
'SkTFitsIn<unsigned char, SkPath::FillType>' [ 0]
'gfx::ColorTransformStep::GetMatrix' [ 0 5 25]
'gfx::internal::(anonymous namespace)::PNGImageSource::PNGImageSource' [ 0 5 15 38 54]
'drmHashNext' [ 0]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__emplace_unique_key_args<std::__1::basic_string<char>, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 506]
'std::__1::__tuple_types<>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, true>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::capacity' [ 0 5 10 222]
'std::__1::stringstream' [ 0 5 10]
'gfx::ShadowDetails::ShadowDetails' [ 0 5 20]
'SkTransferFunctionBehavior' [ 0]
'std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'gfx::Rect::x' [ 0 5 11]
'gfx::Rect::y' [ 0 5 11]
'gfx::Font::GetHeight' [ 0 5 11]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 108]
'SkMatrix44::operator=' [ 0 12]
'drmUsbBusInfoPtr' [ 0]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> &>' [ 0 5 10 271]
'std::__1::remove_reference<std::__1::basic_string<char> *&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat>, true>' [ 0 5 10 30]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::clear' [ 0 5 10 139]
'std::__1::forward<unsigned int &>' [ 0 5 10]
'std::__1::pointer_traits<unsigned int *>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::ImageSkiaSource, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, gfx::BaselineStyle> *, 0, false>' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__annotate_delete' [ 0 5 10 114]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::operator+' [ 0 5 10 71]
'std::__1::allocator<wchar_t>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<unsigned char>' [ 0 5 10 65]
'drmModeFreeFB' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__construct_node_hash<const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 447]
'std::__1::__get_pair<0>' [ 0 5 10]
'sk_sp<SkImage>::~sk_sp' [ 0 16]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::DropShadowSource, true>' [ 0 5 10]
'gfx::(anonymous namespace)::HarfBuzzFace::HarfBuzzFace' [ 0 5 28 42]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > &>' [ 0 5 10]
'std::__1::allocator<gfx::BreakList<bool> >::construct<gfx::BreakList<bool>, gfx::BreakList<bool> &>' [ 0 5 10 44]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::internal::LineSegment *>::__nat, gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep> &, void>' [ 0 5 10 86]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >::__get_value' [ 0 5 10 97]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 126]
'Cr_z_deflatePending' [ 0]
'std::__1::__advance<base::FileDescriptor *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ResizeSource *, void>' [ 0 5 10 68]
'std::__1::__compressed_pair<gfx::RenderText *, std::__1::default_delete<gfx::RenderText> >' [ 0 5 10]
'gfx::PlatformFontLinux::InitDefaultFont' [ 0 5 24]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__destruct_at_end' [ 0 5 10 108]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::pop_heap<std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>' [ 0 5 10]
'base::subtle::GetOrCreateLazyPointer<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > >' [ 0 6 14]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::allocate' [ 0 5 10 84]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::operator()' [ 0 5 10 205]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::remove_reference<gfx::internal::ImageRepSkia *>' [ 0 5 10]
'base::subtle::AdoptRefTag' [ 0 6 14]
'std::__1::add_lvalue_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>' [ 0 5 10]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>' [ 0 5 10]
'sk_sp<cc::PaintImageGenerator>' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::allocate' [ 0 5 10 141]
'std::__1::__compressed_pair<unsigned short *, std::__1::default_delete<unsigned short []> >::__compressed_pair<unsigned short *, true>' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 156]
'std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__tree' [ 0 5 10 725]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::empty' [ 0 5 10 96]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__destruct_at_end' [ 0 5 10 132]
'Cr_z_crc_reset' [ 0]
'static_l_desc' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::construct<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 227]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, false>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::empty' [ 0 5 10 126]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::~unique_ptr' [ 0 5 10 141]
'std::__1::allocator<float>::construct<float, const float &>' [ 0 5 10 28]
'Cr_z_gzseek64' [ 0]
'switches::kEnableCrashReporterForTesting' [ 0 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >::__compressed_pair<gfx::(anonymous namespace)::ClientNativePixmapOpaque *&, true>' [ 0 5 10 166]
'scoped_refptr<gfx::PlatformFontLinux>::Release' [ 0 39]
'color_utils::ComputeColorCovariance' [ 0 13]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::~__split_buffer' [ 0 5 10 105]
'std::__1::operator==<const std::__1::basic_string<char> *, const std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__get_pair<1>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> &, void>' [ 0 5 10 316]
'std::__1::remove_reference<gfx::ClientNativePixmap *>' [ 0 5 10]
'std::__1::__pointer_type<gfx::PathElement, std::__1::allocator<gfx::PathElement> >' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__construct<gfx::(anonymous namespace)::CachedFont, gfx::(anonymous namespace)::CachedFont>' [ 0 5 10 90]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'gfx::ColorTransformToBT2020CL::IsNull' [ 0 5 31]
'cc::PaintFlags' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<unsigned short> >' [ 0 5 10]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, int> *>::move_iterator' [ 0 5 10 63]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, long, true>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::ClientNativePixmapOpaque *&>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>::__tree_iterator' [ 0 5 10 190]
'gfx::Point::operator+=' [ 0 5 12]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__move_range' [ 0 5 10 131]
'gfx::FontListImpl::GetHeight' [ 0 5 19]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long> >' [ 0 5 10]
'ui::SequentialIDGenerator' [ 0 4]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >' [ 0 5 10]
'drmBufMapPtr' [ 0]
'gfx::FixedVSyncProvider::~FixedVSyncProvider' [ 0 5 25]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__list_imp' [ 0 5 10 187]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::set<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::set' [ 0 5 10 111]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *>::__nat, const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, bool>' [ 0 5 10]
'std::__1::forward<const gfx::Insets &>' [ 0 5 10]
'std::__1::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >::unique_ptr<true, void>' [ 0 5 10 119]
'cc::PaintFlags::SetInternalFlag' [ 0 4 16]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::destroy' [ 0 5 10 114]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::vector' [ 0 5 10 78]
'Cr_z_gzfread' [ 0]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::begin' [ 0 5 10 178]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::size' [ 0 5 10 119]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::size' [ 0 5 10 142]
'std::__1::__pointer_type<SkPath, std::__1::allocator<SkPath> >' [ 0 5 10]
'std::__1::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformToLinear *, std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10]
'std::__1::__advance<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::forward<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::allocate' [ 0 5 10 124]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *>' [ 0 5 10]
'std::__1::iterator_traits<const gfx::Rect *>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::default_delete<gfx::RenderTextHarfBuzz>' [ 0 5 10]
'std::__1::default_delete<gfx::internal::TextRunList>' [ 0 5 10]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear::ClipToWhite' [ 0 5 46]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >' [ 0 5 10 332]
'gfx::RenderText::CreateInstanceDeprecated' [ 0 5 17]
'HashBucket' [ 0]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >' [ 0 5 10]
'base::LazyInstance<std::__1::basic_string<char>, base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> > >' [ 0 6]
'SK_ColorWHITE' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >' [ 0 5 10]
'Cr_z_deflateReset' [ 0]
'std::__1::move<gfx::ShadowValue *&>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ClientNativePixmap *, std::__1::default_delete<gfx::ClientNativePixmap> >::__compressed_pair<gfx::ClientNativePixmapDmaBuf *, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10 108]
'SkBitmap::drawsNothing' [ 0 10]
'std::__1::forward<gfx::ClientNativePixmapDmaBuf *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::construct<cc::PaintFlags, cc::PaintFlags>' [ 0 5 10 66]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::SkiaColorTransform>, 1, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >, long, true>' [ 0 5 10]
'gfx::RenderText::display_text' [ 0 5 17]
'std::__1::forward<gfx::ImageSkia *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'gz_statep' [ 0]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::__destruct_at_end' [ 0 5 10 105]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz>, false>' [ 0 5 10 30]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::max_size' [ 0 5 10 78]
'std::__1::operator-<const std::__1::pair<unsigned long, gfx::BaselineStyle> *, const std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'drmParsePciDeviceInfo' [ 0]
'sktfitsin::Private::underlying_type<unsigned int, false>' [ 0 11 20]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct_at_end' [ 0 5 10 133]
'logging::LOG_ERROR' [ 0 9]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__root' [ 0 5 10 557]
'std::__1::__tree_min<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'Cr_z_crc_fold_init' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &, void>' [ 0 5 10 136]
'std::__1::iterator_traits<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::RectangleString::Append' [ 0 5 28 45]
'std::__1::remove_reference<std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__max_size' [ 0 5 10 81]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__push_back_slow_path<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 141]
'std::__1::swap<float *>' [ 0 5 10]
'gfx::PointF::Scale' [ 0 5 13]
'gfx::Font::operator=' [ 0 5 11]
'base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> >::New' [ 0 6 16 72]
'std::__1::__compressed_pair_elem<gfx::ImageSkia *, 0, false>' [ 0 5 10]
'sk_sp<SkDrawLooper>::~sk_sp' [ 0 21]
'off_t' [ 0]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::ExtractSubsetImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10 102]
'std::__1::__wrap_iter<const base::FileDescriptor *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::ImageRepPNG *, std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10]
'std::__1::pointer_traits<base::FileDescriptor *>' [ 0 5 10]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::FinalizeLines' [ 0 5 28 49]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__node_alloc' [ 0 5 10 114]
'gfx::HalfFloat' [ 0 5]
'std::__1::operator==<gfx::ImageSkiaRep *, gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>' [ 0 5 10 133]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::operator->' [ 0 5 10 114]
'std::__1::add_lvalue_reference<gfx::internal::ImageRep>' [ 0 5 10]
'gfx::Font::GetActualFontNameForTesting' [ 0 5 11]
'std::__1::make_unsigned<unsigned long>' [ 0 5 10]
'gfx::internal::TextRunHarfBuzz::GetGraphemeSpanForCharRange' [ 0 5 15 32]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::~unique_ptr' [ 0 5 10 376]
'gfx::Point::operator-=' [ 0 5 12]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::back' [ 0 5 10 72]
'std::__1::less<std::__1::basic_string<char> >::operator()' [ 0 5 10 47]
'std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>' [ 0 5 10]
'std::__1::distance<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::remove_reference<gfx::ShadowValue *&>' [ 0 5 10]
'gfx::internal::ImageRep::~ImageRep' [ 0 5 15 25]
'base::internal::NumericRepresentation' [ 0 6 16]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::operator*' [ 0 5 10 55]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >' [ 0 5 10]
'std::__1::operator!=<color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'gfx::SelectionBound::~SelectionBound' [ 0 5 21]
'drmBufDescFlags' [ 0]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::capacity' [ 0 5 10 83]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformFromBT2020CL *, void>' [ 0 5 10 71]
'std::__1::operator!=<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'sync_file_info' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::end' [ 0 5 10 131]
'gfx::Canvas::DrawDashedRect' [ 0 5 13]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::release' [ 0 5 10 432]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::__alloc' [ 0 5 10 63]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned char *>::__nat, unsigned char>' [ 0 5 10]
'color_utils::(anonymous namespace)::WeightedColor' [ 0 13 36]
'drm_agp_mode_t' [ 0]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >' [ 0 5 10]
'(anonymous namespace)::HSLShift::LineProcHnopSdecLdec' [ 0 23 33]
'logging::CheckNEImpl' [ 0 9]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >::construct<std::__1::pair<const unsigned int, unsigned int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 110]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__detach' [ 0 5 10 332]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::PathElement, std::__1::allocator<gfx::PathElement>, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__construct_node<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 332]
'cc::PaintFlags::setAntiAlias' [ 0 4 16]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >, bool>' [ 0 5 10]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__alloc' [ 0 5 10 61]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::second' [ 0 5 10 146]
'std::__1::unique_ptr<SkBitmap, std::__1::default_delete<SkBitmap> >::operator*' [ 0 5 10 69]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> &>::second' [ 0 5 10 90]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::~__vector_base' [ 0 5 10 148]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *>::move_iterator' [ 0 5 10 73]
'IPos' [ 0]
'gfx::RenderText::max_lines' [ 0 5 17]
'std::__1::allocator<char>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__end_cap' [ 0 5 10 138]
'drm_mode_get_plane_res' [ 0]
'std::__1::pair<gfx::Font, gfx::Range>::pair<gfx::Font &, gfx::Range, false>' [ 0 5 10 39]
'gfx::ScrollCanvas' [ 0 5]
'drmModeGetPlaneResources' [ 0]
'scoped_refptr<base::RefCountedMemory>::get' [ 0 39]
'std::__1::forward<const std::__1::allocator<gfx::BreakList<bool> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::max_size' [ 0 5 10 96]
'color_utils' [ 0]
'std::__1::addressof<const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::~unique_ptr' [ 0 5 10 638]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::construct<gfx::(anonymous namespace)::CachedFont, gfx::(anonymous namespace)::CachedFont>' [ 0 5 10 90]
'base::internal::IsCompileTimeConstant<float>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::__construct_range_forward<const gfx::BufferFormat *, gfx::BufferFormat *>' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPath> &, 1, false>::__get' [ 0 5 10 75]
'gfx::SizeF::clamp' [ 0 5 12]
'std::__1::iterator_traits<const gfx::ImagePNGRep *>' [ 0 5 10]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::begin' [ 0 5 10 243]
'std::__1::pointer_traits<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >::__compressed_pair<gfx::ColorTransformSMPTEST2048NonHdrToLinear *&, true>' [ 0 5 10 150]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::~__split_buffer' [ 0 5 10 87]
'std::__1::get<0, const unsigned int &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >::reset' [ 0 5 10 141]
'std::__1::__pointer_type<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'std::__1::__unique_if<gfx::(anonymous namespace)::RotatedSource>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::end' [ 0 5 10 132]
'gfx::(anonymous namespace)::g_supported_scales' [ 0 5 28]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, int>' [ 0 6 16]
'std::__1::__sort4<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::numeric_limits<unsigned long>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::value_comp' [ 0 5 10 284]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG>, false>' [ 0 5 10 30]
'std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>::~pair' [ 0 5 10 60]
'gfx::ElideText' [ 0 5]
'std::__1::iterator_traits<unsigned int *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10]
'std::__1::allocator<gfx::DecoratedText::RangedAttribute>::deallocate' [ 0 5 10 58]
'drmGetClient' [ 0]
'gfx::NineImagePainter::GetMinimumSize' [ 0 5 23]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 70]
'gfx::ColorTransformFromBT2020CL::IsNull' [ 0 5 33]
'std::__1::forward<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::deallocate' [ 0 5 10 330]
'std::__1::pair<std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >, bool>::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, bool, false>' [ 0 5 10 171]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >, 1, true>' [ 0 5 10]
'icu_61::UnicodeString::UnicodeString' [ 0 8 23]
'ui::InterpolatedTranslation' [ 0 4]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 75]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::__destruct_at_end' [ 0 5 10 186]
'drmDebugPrint' [ 0]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__vector_base' [ 0 5 10 126]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> >::__compressed_pair<int, const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10 349]
'std::__1::remove_reference<const std::__1::pair<unsigned long, int> &>' [ 0 5 10]
'std::__1::copy<unsigned char *, unsigned char *>' [ 0 5 10]
'nr_fds' [ 0]
'cc::PaintTextBlob' [ 0 4]
'SkTo<unsigned char, unsigned int>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::Size, std::__1::default_delete<gfx::Size>, false>' [ 0 5 10 30]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>::operator->' [ 0 5 10 300]
'std::__1::__compressed_pair<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>' [ 0 5 10]
'drmParseHost1xDeviceInfo' [ 0]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::construct<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 96]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::erase' [ 0 5 10 191]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::clear' [ 0 5 10 138]
'std::__1::__pointer_type_imp' [ 0 5 10]
'drmMapFlags' [ 0]
'_drmModePlane' [ 0]
'std::__1::allocator<SkPath>::construct<SkPath, SkPath>' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<ui::InterpolatedConstantTransform *, 0, false>::__compressed_pair_elem<ui::InterpolatedConstantTransform *&, void>' [ 0 5 10 81]
'std::__1::remove_reference<std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct<std::__1::pair<unsigned long, gfx::Font::Weight>, const std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10 101]
'base::internal::ClampedNumeric<int>::MathOp<ClampedAddOp, int, int>' [ 0 6 16 37]
'base::internal::OptionalStorageBase<cc::SkiaPaintCanvas, false>::~OptionalStorageBase' [ 0 6 16 65]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::__wrap_iter' [ 0 5 10 70]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >::operator->' [ 0 5 10 149]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::max_size' [ 0 5 10 58]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'gfx::Vector3dF::Vector3dF' [ 0 5 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>::__nat, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::SuperimposedImageSource *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<char, true>' [ 0 5 10]
'gfx::ClientNativePixmapFactory::ClientNativePixmapFactory' [ 0 5 32]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>::__tree_end_node' [ 0 5 10 65]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>::allocate' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::second' [ 0 5 10 265]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__swap_out_circular_buffer' [ 0 5 10 76]
'gfx::RenderText::cursor_enabled' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::__max_size' [ 0 5 10 71]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__end_cap' [ 0 5 10 77]
'base::Optional<cc::SkiaPaintCanvas>::Optional' [ 0 6 37]
'gfx::(anonymous namespace)::HarfBuzzFace' [ 0 5 28]
'gfx::ColorTransformToBT2020CL::~ColorTransformToBT2020CL' [ 0 5 31]
'std::__1::__vector_base<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::capacity' [ 0 5 10 85]
'std::__1::remove_reference<std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10]
'Cr_z_gzerror' [ 0]
'base::internal::CheckedNumeric<unsigned long>::operator*=<unsigned long>' [ 0 6 16 47]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__construct_range_forward<gfx::ImagePNGRep *, gfx::ImagePNGRep *>' [ 0 5 10 68]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::operator-' [ 0 5 10 71]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 145]
'base::LazyInstance<gfx::(anonymous namespace)::FontFuncs, base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::FontFuncs> >::Get' [ 0 6 140]
'logging::MakeCheckOpValueString<gfx::CommandType>' [ 0 9]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::empty' [ 0 5 10 131]
'gfx::ScaleVector2d' [ 0 5]
'std::__1::remove_reference<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> &>' [ 0 5 10]
'std::__1::operator==<const std::__1::pair<unsigned long, gfx::Font::Weight> *, const std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::min<double, std::__1::__less<double, double> >' [ 0 5 10]
'std::__1::__wrap_iter<gfx::internal::LineSegment *>::__wrap_iter' [ 0 5 10 53]
'std::__1::allocator<float>::construct<float, float>' [ 0 5 10 28]
'std::__1::pointer_traits<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *>::pointer_to' [ 0 5 10 94]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::get_deleter' [ 0 5 10 306]
'std::__1::__compressed_pair_elem<gfx::NativePixmapPlane *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 70]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::~unique_ptr' [ 0 5 10 113]
'std::__1::__wrap_iter<const gfx::BreakList<bool> *>::base' [ 0 5 10 53]
'gfx::Canvas::GetStringWidthF' [ 0 5 13]
'std::__1::move<gfx::internal::Line *&>' [ 0 5 10]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::__destruct_at_end' [ 0 5 10 81]
'base::TimeDelta::operator>' [ 0 6 17]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> > &>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::__wrap_iter' [ 0 5 10 82]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> >' [ 0 5 10]
'gfx::ColorTransformMatrix::Join' [ 0 5 27]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__push_back_slow_path<gfx::Rect>' [ 0 5 10 62]
'std::__1::remove_reference<gfx::(anonymous namespace)::QueryResult>' [ 0 5 10]
'gfx::FixedVSyncProvider::IsHWClock' [ 0 5 25]
'std::__1::remove_reference<std::__1::pair<unsigned long, bool> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::destroy<SkPath>' [ 0 5 10 58]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, long, true>' [ 0 5 10]
'std::__1::__move_backward<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >' [ 0 5 10]
'sk_sp<SkTextBlob>::~sk_sp' [ 0 19]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__destruct_at_end' [ 0 5 10 213]
'logging::MakeCheckOpString<gfx::Font::Weight, gfx::Font::Weight>' [ 0 9]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::data' [ 0 5 10 88]
'std::__1::map<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::map' [ 0 5 10 537]
'std::__1::addressof<const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__end_cap' [ 0 5 10 152]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, true>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::construct<gfx::(anonymous namespace)::CachedFont, _FcPattern *&, _FcCharSet *&>' [ 0 5 10 90]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::__end_cap' [ 0 5 10 151]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::~unique_ptr' [ 0 5 10 99]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>, bool &, false>' [ 0 5 10 196]
'std::__1::iterator_traits<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::__compressed_pair<ui::InterpolatedTransform *, std::__1::default_delete<ui::InterpolatedTransform> >::__compressed_pair<ui::InterpolatedTransform *, std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10 112]
'std::__1::forward<gfx::internal::TextRunHarfBuzz *>' [ 0 5 10]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >::~RefCounted' [ 0 6 88]
'std::__1::addressof<std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::__const_pointer<color_utils::(anonymous namespace)::KMeanCluster, color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, true>' [ 0 5 10]
'std::__1::forward<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'base::internal::SaturateFastOp<int, int, void>' [ 0 6 16]
'gfx::GpuMemoryBuffer' [ 0 5]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::size' [ 0 5 10 557]
'gz_decomp' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::__construct<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 152]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<gfx::(anonymous namespace)::VectorIconCache> >' [ 0 6]
'std::__1::remove_reference<gfx::FontListImpl *&>' [ 0 5 10]
'drm_mode_get_encoder' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>, false>' [ 0 5 10 30]
'gfx::RenderText::UndoCompositionAndSelectionStyles' [ 0 5 17]
'gfx::SkiaColorTransform::SkiaColorTransform' [ 0 5 25]
'std::__1::remove_reference<const std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, 0, false>' [ 0 5 10]
'std::__1::__tree_node_base_types<void *>' [ 0 5 10]
'std::__1::remove_reference<unsigned int &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__get_long_pointer' [ 0 5 10 96]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>::operator()' [ 0 5 10 304]
'std::__1::__get_pair<0>::get<const gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10 25]
'drmProcessUsbDevice' [ 0]
'std::__1::get<0, unsigned int &&>' [ 0 5 10]
'drmAvailable' [ 0]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::second' [ 0 5 10 330]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::operator->' [ 0 5 10 340]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>::__tree_iterator' [ 0 5 10 300]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::begin' [ 0 5 10 76]
'std::__1::__pointer_type<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__annotate_shrink' [ 0 5 10 96]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::~__vector_base' [ 0 5 10 85]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__node_alloc' [ 0 5 10 725]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>::operator*' [ 0 5 10 50]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *>' [ 0 5 10]
'base::UnguessableToken' [ 0 6]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10]
'std::__1::pointer_traits<gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::__vector_base<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, int> *&>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >' [ 0 5 10]
'std::__1::forward<std::__1::tuple<const unsigned int &> >' [ 0 5 10]
'switches' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont>, true>' [ 0 5 10 30]
'std::__1::forward<gfx::(anonymous namespace)::CachedFontSet *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__root_ptr' [ 0 5 10 332]
'std::__1::__wrap_iter<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::operator*' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::construct<color_utils::(anonymous namespace)::KMeanCluster, const color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10 100]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >' [ 0 5 10]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::set' [ 0 5 10 138]
'std::__1::operator==<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::(anonymous namespace)::RotatedSource::RotatedSource' [ 0 5 28 43]
'gfx::(anonymous namespace)::NullImageRep' [ 0 5 28]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>::unique_ptr<true, void>' [ 0 5 10 52]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__max_size' [ 0 5 10 72]
'drmModePageFlipTarget' [ 0]
'gfx::ImageSkia::RemoveRepresentation' [ 0 5 16]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::BreakList<bool> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'gfx::FixedVSyncProvider::GetVSyncParameters' [ 0 5 25]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > &>' [ 0 5 10]
'std::__1::pair<const unsigned int, unsigned short>::pair<const unsigned int &, 0>' [ 0 5 10 52]
'std::__1::forward<const std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'int_least8_t' [ 0]
'std::__1::remove_const<unsigned char>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >, false>' [ 0 5 10]
'gfx::ColorTransformStep::IsNull' [ 0 5 25]
'gfx::SelectionBound::GetHeight' [ 0 5 21]
'base::subtle::GetOrCreateLazyPointer<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > >' [ 0 6 14]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >::__hash_map_iterator' [ 0 5 10 149]
'std::__1::__const_pointer<gfx::PathElement, gfx::PathElement *, std::__1::allocator<gfx::PathElement>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *&, void>' [ 0 5 10 222]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::WeightedColor *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 97]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::ConstructMultiLines' [ 0 5 28 49]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long> >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::max_size' [ 0 5 10 142]
'gfx::(anonymous namespace)::MaskedImageSource' [ 0 5 28]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::~unique_ptr' [ 0 5 10 266]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::construct<std::__1::pair<unsigned long, unsigned int>, const std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10 96]
'std::__1::allocator<SkPath>' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::g_font_sets_by_locale' [ 0 5 28]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment>, true>' [ 0 5 10 30]
'std::__1::__tree_key_value_types<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__deallocate_node' [ 0 5 10 410]
'z_vec128i_t' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::insert' [ 0 5 10 141]
'operator==<SkPixelRef>' [ 0]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaRep *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 65]
'inflateStateCheck' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct<std::__1::pair<unsigned long, unsigned int>, const std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10 96]
'gfx::(anonymous namespace)::QueryResult::QueryResult' [ 0 5 28 41]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::__construct<gfx::BreakList<bool>>' [ 0 5 10 73]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::vector' [ 0 5 10 142]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator++' [ 0 5 10 77]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>::__compressed_pair<nullptr_t, std::__1::allocator<unsigned int> &>' [ 0 5 10 82]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> >' [ 0 5 10]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >' [ 0 6]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >::__get_ptr' [ 0 5 10 152]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'cc::PaintFlags::setStrokeCap' [ 0 4 16]
'std::__1::__sort5<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__destroy<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'gfx::VectorIcon' [ 0 5]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, true>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__emplace_unique_key_args<std::__1::basic_string<char>, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 725]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *>::operator*' [ 0 5 10 72]
'std::__1::forward<gfx::(anonymous namespace)::ButtonImageSource *&>' [ 0 5 10]
'base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage>::Destruct' [ 0 6 74]
'std::__1::remove_reference<std::__1::tuple<gfx::ImageFamily::MapKey &&> >' [ 0 5 10]
'gfx::(anonymous namespace)::RotatedSource::~RotatedSource' [ 0 5 28 43]
'gfx::internal::TextRunHarfBuzz::CharRangeToGlyphRange' [ 0 5 15 32]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::insert<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void>' [ 0 5 10 371]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__hash_node_base' [ 0 5 10 109]
'logging::CheckLTImpl' [ 0 9]
'std::__1::__less<float, float>::operator()' [ 0 5 10 32]
'sk_sp<SkImageFilter>::sk_sp' [ 0 22]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__destruct_at_end' [ 0 5 10 56]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::cbegin' [ 0 5 10 78]
'std::__1::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10]
'std::__1::__compressed_pair<color_utils::ColorProfile *, std::__1::allocator<color_utils::ColorProfile> >' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageStorage>::get' [ 0 44]
'gfx::internal::ImageRepPNG::ImageRepPNG' [ 0 5 15 28]
'std::__1::tuple<const unsigned int &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::deallocate' [ 0 5 10 57]
'SkColorSpaceTransferFn' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >, 1, false>::__compressed_pair_elem' [ 0 5 10 223]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__move_assign' [ 0 5 10 126]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::data' [ 0 5 10 115]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__copy_assign_alloc' [ 0 5 10 92]
'std::__1::iterator_traits<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'sktfitsin' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__count_unique<unsigned int>' [ 0 5 10 447]
'std::__1::forward<std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10]
'gfx::ScopedRTLFlipCanvas::~ScopedRTLFlipCanvas' [ 0 5 26]
'std::__1::remove_reference<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>::__nat, std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >::get' [ 0 5 10 103]
'gfx::CreateShadowDrawLooper' [ 0 5]
'std::__1::pair<const unsigned int, unsigned short>' [ 0 5 10]
'gfx::BreakList<bool>::SetMax' [ 0 5 22]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::end' [ 0 5 10 76]
'std::__1::__pointer_type<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10]
'std::__1::distance<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> > >' [ 0 5 10]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__recommend' [ 0 5 10 76]
'gfx::SelectionBound::visible' [ 0 5 21]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::unique_ptr<true, void>' [ 0 5 10 135]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__destruct_at_end' [ 0 5 10 103]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::operator=' [ 0 5 10 76]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct_range_forward<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'_drmModeGetConnector' [ 0]
'gfx::Matrix3F::get_column' [ 0 5 15]
'drmFreeReservedContextList' [ 0]
'Cr_z_inflateMark' [ 0]
'std::__1::add_lvalue_reference<ui::InterpolatedConstantTransform>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__find_leaf_high' [ 0 5 10 332]
'std::__1::forward<const gfx::(anonymous namespace)::CaseInsensitiveCompare &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::operator bool' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 69]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::remove_reference<gfx::Font &>' [ 0 5 10]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::capacity' [ 0 5 10 93]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::data' [ 0 5 10 62]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::operator->' [ 0 5 10 70]
'std::__1::__libcpp_numeric_limits<unsigned char, true>' [ 0 5 10]
'base::LazyInstanceTraitsBase<scoped_refptr<gfx::FontListImpl> >' [ 0 6]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 282]
'v_load64_dup' [ 0]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::~__vector_base' [ 0 5 10 103]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'base::SequenceChecker' [ 0 6]
'std::__1::pointer_traits<color_utils::ColorProfile *>' [ 0 5 10]
'AnnotateIgnoreSyncBegin' [ 0]
'std::__1::__add_lvalue_reference_impl<gfx::ClientNativePixmap, true>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageSkia>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, int> *>::pointer_to' [ 0 5 10 76]
'SkPixmap::colorType' [ 0 10]
'color_utils::IsDark' [ 0 13]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::reset' [ 0 5 10 99]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::capacity' [ 0 5 10 78]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >::RefCounted' [ 0 6 88]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >::deallocate' [ 0 5 10 64]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__construct_at_end<std::__1::basic_string<char> *>' [ 0 5 10 101]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::operator[]' [ 0 5 10 72]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__destruct_at_end' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::ColorBracket *, 0, false>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::ScopedGeneric' [ 0 6 63]
'std::__1::__distance<const gfx::BufferFormat *>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::operator+' [ 0 5 10 67]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, SkFunctionWrapper<void, void, &sk_free>, false>' [ 0 5 10 30]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::__compressed_pair<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10 349]
'Cr_z__tr_tally' [ 0]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'std::__1::addressof<std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFontSet *, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::__compressed_pair<gfx::(anonymous namespace)::CachedFontSet *&, true>' [ 0 5 10 144]
'std::__1::__add_lvalue_reference_impl<base::i18n::BreakIterator, true>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::__alloc' [ 0 5 10 151]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>::construct<gfx::(anonymous namespace)::CachedFont, _FcPattern *&, _FcCharSet *&>' [ 0 5 10 61]
'gfx::CreateImageRepShader' [ 0 5]
'gfx::MaybeFlipForRTL' [ 0 5]
'sk_sp<SkColorSpace>::get' [ 0 21]
'std::__1::push_heap<std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::data' [ 0 5 10 143]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::max_size' [ 0 5 10 137]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::__max_size' [ 0 5 10 73]
'std::__1::__compressed_pair<unsigned long, gfx::(anonymous namespace)::CaseInsensitiveCompare>' [ 0 5 10]
'std::__1::unique_ptr<unsigned int [], std::__1::default_delete<unsigned int []> >::get' [ 0 5 10 83]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::clear' [ 0 5 10 191]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::ResizeSource>' [ 0 5 10]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::operator()' [ 0 5 10 170]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 77]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__alloc' [ 0 5 10 120]
'gfx::ShadowValue::GetMargin' [ 0 5 18]
'std::__1::add_lvalue_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >' [ 0 5 10]
'std::__1::remove_reference<const gfx::BufferFormat &>' [ 0 5 10]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >' [ 0 6]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__annotate_new' [ 0 5 10 82]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintFlags> &, 1, false>::__get' [ 0 5 10 83]
'gfx::(anonymous namespace)::DeleteArrayByType<char>' [ 0 5 28]
'sk_sp<cc::PaintShader>::release' [ 0 24]
'UScriptCode' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__annotate_shrink' [ 0 5 10 267]
'sk_sp<SkPathEffect>::operator=' [ 0 21]
'Cr_z_deflatePrime' [ 0]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::size' [ 0 5 10 120]
'std::__1::__add_lvalue_reference_impl<SkBitmap, true>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >::allocate' [ 0 5 10 72]
'std::__1::__wrap_iter<const gfx::Font *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<wchar_t>, long, true>' [ 0 5 10]
'logging::CheckGTImpl' [ 0 9]
'drmModeCrtcGetGamma' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__annotate_shrink' [ 0 5 10 131]
'std::__1::__less<unsigned int, unsigned int>::operator()' [ 0 5 10 46]
'std::__1::max<char *>' [ 0 5 10]
'gfx::ImageSkia::GetRepresentation' [ 0 5 16]
'base::internal::OptionalStorage<SkBitmap, false, false>' [ 0 6 16]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, true>' [ 0 5 10]
'gfx::RenderText::SetReplaceNewlineCharsWithSymbols' [ 0 5 17]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::ButtonImageSource, true>' [ 0 5 10]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >::unique_ptr<true, void>' [ 0 5 10 103]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::lower_bound' [ 0 5 10 178]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>, 1, true>' [ 0 5 10]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__hash_iterator' [ 0 5 10 108]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >' [ 0 5 10]
'std::__1::__compressed_pair<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags> &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::PaintFlags> &>' [ 0 5 10 86]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__destroy<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 96]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::size' [ 0 5 10 113]
'std::__1::__const_void_pointer<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue>, false>' [ 0 5 10]
'gfx::ImageSkiaOperations::CreateImageWithDropShadow' [ 0 5 26]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::BlendingImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >::__compressed_pair<gfx::(anonymous namespace)::BlendingImageSource *&, true>' [ 0 5 10 156]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::clear' [ 0 5 10 85]
'gfx::ClientNativePixmap' [ 0 5]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::get' [ 0 5 10 638]
'color_utils::KMeanImageSampler' [ 0 13]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>, void, void>' [ 0 5 10 93]
'gfx::ImageFamily::ImageFamily' [ 0 5 18]
'std::__1::forward<gfx::(anonymous namespace)::PaddedImageSource *&>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>::construct<color_utils::(anonymous namespace)::WeightedColor, color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 72]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> &, void>' [ 0 5 10 372]
'std::__1::allocator<cc::FrameMetadata>' [ 0 5 10]
'gfx::RegisterPathProvider' [ 0 5]
'std::__1::vector<float, std::__1::allocator<float> >::end' [ 0 5 10 54]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::destroy<std::__1::pair<const unsigned int, unsigned short> >' [ 0 5 10 136]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const std::__1::basic_string<char> &>::__tuple_impl<0, const std::__1::basic_string<char> &, const std::__1::basic_string<char> &>' [ 0 5 10 92]
'scoped_refptr<gfx::PlatformFont>' [ 0]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::capacity' [ 0 5 10 62]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::less<gfx::ImageFamily::MapKey>::operator()' [ 0 5 10 42]
'std::__1::move<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > &>' [ 0 5 10]
'gfx::ColorTransformFromBT2020CL::ColorTransformFromBT2020CL' [ 0 5 33]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::select_on_container_copy_construction' [ 0 5 10 73]
'base::internal::OptionalBase<SkBitmap>::OptionalBase' [ 0 6 16 40]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__count_unique<unsigned int>' [ 0 5 10 284]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::emplace_back<gfx::Vector2d, int, unsigned int>' [ 0 5 10 76]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__destruct_at_end' [ 0 5 10 88]
'gfx::RenderText::OnTextColorChanged' [ 0 5 17]
'gfx::BreakList<gfx::BaselineStyle>::BreakList' [ 0 5 36]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>, false>' [ 0 5 10 30]
'gfx::ColorTransformStep::~ColorTransformStep' [ 0 5 25]
'base::internal::ScopedFDCloseTraits::InvalidValue' [ 0 6 16 37]
'cc::PaintFlags::setBlendMode' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__max_size' [ 0 5 10 119]
'std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, gfx::Font>' [ 0 5 10]
'SkPixmap::computeByteSize' [ 0 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__destruct_at_end' [ 0 5 10 122]
'std::__1::__compressed_pair<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line> >' [ 0 5 10]
'gfx::InsetsF' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep> &, void>' [ 0 5 10 85]
'std::__1::unique_ptr<unsigned int [], std::__1::default_delete<unsigned int []> >::~unique_ptr' [ 0 5 10 83]
'gfx::PointF::SetPoint' [ 0 5 13]
'std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>' [ 0 5 10]
'gfx::(anonymous namespace)::RepresentationMap' [ 0 5 28]
'std::__1::__compressed_pair_elem<FcPatternDeleter, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>' [ 0 5 10]
'base::SplitResult' [ 0 6]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::remove_const<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'gfx::RangeF::set_end' [ 0 5 13]
'SkBlurStyle' [ 0]
'hb_mask_t' [ 0]
'std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>::__get_np' [ 0 5 10 110]
'std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >::~pair' [ 0 5 10 246]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >::~unique_ptr' [ 0 5 10 141]
'std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >::destroy' [ 0 5 10 135]
'gfx::Canvas::ClipPath' [ 0 5 13]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::get_deleter' [ 0 5 10 376]
'std::__1::conditional<false, std::__1::pointer_traits<wchar_t *>::__nat, wchar_t>' [ 0 5 10]
'drmModeFreePlane' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::~unique_ptr' [ 0 5 10 143]
'std::__1::conditional<true, std::__1::pair<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::DropShadowSource *, void>' [ 0 5 10 68]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct_at_end' [ 0 5 10 131]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__construct<gfx::internal::LineSegment, gfx::internal::LineSegment>' [ 0 5 10 78]
'std::__1::remove_reference<gfx::ShadowDetails>' [ 0 5 10]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::operator[]' [ 0 5 10 73]
'_drmModePropertyBlob' [ 0]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__split_buffer' [ 0 5 10 77]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__max_size' [ 0 5 10 78]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >, true>' [ 0 5 10 30]
'gfx::FontListImpl::CacheFontStyleAndSize' [ 0 5 19]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *>' [ 0 5 10]
'drmClose' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >::~unique_ptr' [ 0 5 10 143]
'gfx::(anonymous namespace)::QueryResult::~QueryResult' [ 0 5 28 41]
'std::__1::operator!=<float *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::capacity' [ 0 5 10 126]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::allocate' [ 0 5 10 87]
'sk_sp<SkTypeface>::~sk_sp' [ 0 19]
'std::__1::__insertion_sort_3<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::allocate' [ 0 5 10 161]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::end' [ 0 5 10 243]
'__s32' [ 0]
'drmModeModeInfo' [ 0]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::HorizontalShadowSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::HorizontalShadowSource *&, void>' [ 0 5 10 98]
'std::__1::__wrap_iter<gfx::Font *>::operator*' [ 0 5 10 36]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::empty' [ 0 5 10 120]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__alloc' [ 0 5 10 126]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>::deallocate' [ 0 5 10 71]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::second' [ 0 5 10 385]
'gfx::(anonymous namespace)::RectangleString::AddWord' [ 0 5 28 45]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >' [ 0 5 10]
'gfx::ColorTransformInternal::Transform' [ 0 5 29]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::deallocate' [ 0 5 10 136]
'std::__1::pointer_traits<unsigned short *>' [ 0 5 10]
'gfx::ImageSkiaOperations::CreateButtonBackground' [ 0 5 26]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::__wrap_iter' [ 0 5 10 67]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::operator[]' [ 0 5 10 133]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_new' [ 0 5 10 101]
'std::__1::forward<gfx::(anonymous namespace)::HSLImageSource *&>' [ 0 5 10]
'std::__1::__const_void_pointer<unsigned char *, std::__1::allocator<unsigned char>, false>' [ 0 5 10]
'std::__1::default_delete<gfx::internal::ImageRepSkia>::operator()' [ 0 5 10 55]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::second' [ 0 5 10 189]
'std::__1::__tuple_less<5>::operator()<std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&> >' [ 0 5 10 27]
'drmFreeBusid' [ 0]
'base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::FontListImpl> >::New' [ 0 6 16 76]
'gfx::internal::Get1xPNGBytesFromImageSkia' [ 0 5 15]
'gfx::NineImagePainter::Paint' [ 0 5 23]
'std::__1::pointer_traits<color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'ui::SequentialIDGenerator::HasGeneratedIDFor' [ 0 4 27]
'std::__1::__compressed_pair<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::second' [ 0 5 10 133]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::construct<color_utils::(anonymous namespace)::ColorBox, const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10 96]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> &>::second' [ 0 5 10 76]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::__alloc' [ 0 5 10 129]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::emplace_back<const int &>' [ 0 5 10 167]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__vector_base' [ 0 5 10 77]
'std::__1::operator==<const gfx::Font *, const gfx::Font *>' [ 0 5 10]
'putShortMSB' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageStorage>::swap' [ 0 44]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformMatrix>, void>' [ 0 5 10 94]
'std::__1::allocator<color_utils::ColorProfile>' [ 0 5 10]
'sk_sp<SkPathEffect>' [ 0]
'std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>::allocate' [ 0 5 10 71]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__insert_node_at' [ 0 5 10 557]
'deflate_fast' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >, void>' [ 0 5 10 194]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'gfx::Canvas::DefaultCanvasTextAlignment' [ 0 5 13]
'std::__1::forward<const gfx::Font &>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::__destroy<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10 144]
'std::__1::__compressed_pair<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 190]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__swap_out_circular_buffer' [ 0 5 10 143]
'double' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::begin' [ 0 5 10 267]
'std::__1::__unique_if<gfx::(anonymous namespace)::ResizeSource>' [ 0 5 10]
'std::__1::remove_reference<sk_sp<SkImage> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>::operator()' [ 0 5 10 73]
'gfx::BreakList<int>::breaks' [ 0 5 21]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::find<unsigned int>' [ 0 5 10 447]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'SkBitmapOperations::CreateMaskedBitmap' [ 0 20]
'std::__1::__pointer_type<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 114]
'std::__1::remove_reference<gfx::ShadowValue &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::clear' [ 0 5 10 274]
'std::__1::vector<float, std::__1::allocator<float> >::vector' [ 0 5 10 54]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia>, false>' [ 0 5 10 30]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__alloc' [ 0 5 10 147]
'base::TimeDelta::operator*<int>' [ 0 6 17]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__destroy<unsigned int>' [ 0 5 10 64]
'gfx::BufferSizeForBufferFormatChecked' [ 0 5]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >::__get_ptr' [ 0 5 10 191]
'std::__1::add_lvalue_reference<gfx::internal::TextRunHarfBuzz>' [ 0 5 10]
'drmGetDeviceNameFromFd2' [ 0]
'drmUnmap' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::reset' [ 0 5 10 250]
'gfx::Rect::height' [ 0 5 11]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 70]
'color_utils::IsWithinHSLRange' [ 0 13]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::~__hash_table' [ 0 5 10 447]
'std::__1::__wrap_iter<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::base' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::construct<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 119]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, 0, false>' [ 0 5 10]
'gfx::Canvas::DrawColor' [ 0 5 13]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *&>' [ 0 5 10]
'gfx::JPEG1xEncodedDataFromSkiaRepresentation' [ 0 5]
'gfx::(anonymous namespace)::PaddedImageSource::Draw' [ 0 5 28 47]
'gfx::DecoratedText::RangedAttribute::RangedAttribute' [ 0 5 20 37]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__emplace_back_slow_path<gfx::Vector2d, int, unsigned int>' [ 0 5 10 76]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > > >' [ 0 6]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::~vector' [ 0 5 10 88]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10 90]
'std::__1::addressof<const std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::iterator_traits<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Size *, std::__1::default_delete<gfx::Size> >' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__push_back_slow_path<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 177]
'std::__1::add_lvalue_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>' [ 0 5 10]
'std::__1::forward<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::unique_ptr<true, void>' [ 0 5 10 143]
'gfx::BreakList<int>::~BreakList' [ 0 5 21]
'base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage>' [ 0 6]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::capacity' [ 0 5 10 127]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__node_alloc' [ 0 5 10 187]
'std::__1::forward<const std::__1::allocator<unsigned short> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::VectorIconSource *, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10 102]
'std::__1::__compressed_pair_elem<SkBitmap *, 0, false>' [ 0 5 10]
'gfx::internal::ImageRepPNG::image_reps' [ 0 5 15 28]
'std::__1::remove_reference<const std::__1::allocator<gfx::BreakList<bool> > &>' [ 0 5 10]
'std::__1::forward<unsigned int>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::clear' [ 0 5 10 213]
'std::__1::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >::reset' [ 0 5 10 111]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::unique_ptr<char *, true, void, void>' [ 0 5 10 67]
'base::internal::DstRangeRelationToSrcRangeImpl<int, double, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 225]
'ui::InterpolatedTranslation::InterpolateButDoNotCompose' [ 0 4 29]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::~__split_buffer' [ 0 5 10 141]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::deallocate' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > &>' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::get' [ 0 5 10 67]
'std::__1::__hash_map_pointer_types<std::__1::__hash_value_type<unsigned int, unsigned int>, void *, std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, unsigned int> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<float, 0, false>::__compressed_pair_elem<float, void>' [ 0 5 10 51]
'std::__1::operator-<const std::__1::pair<unsigned long, bool> *, const std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__tree_next_iter<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::GlyphCache' [ 0 5 28]
'std::__1::pair<unsigned long, unsigned long>::pair<int, unsigned long &, false>' [ 0 5 10 46]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::capacity' [ 0 5 10 91]
'std::__1::addressof<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::InterpolatedTransform *, 0, false>::__compressed_pair_elem<ui::InterpolatedTransform *, void>' [ 0 5 10 73]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator+' [ 0 5 10 75]
'std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__as_link' [ 0 5 10 102]
'SkMatrix44::get::operator()' [ 0 12 17]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> &, void>' [ 0 5 10 210]
'gfx::BreakList<gfx::Font::Weight>::SetMax' [ 0 5 35]
'__s64' [ 0]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__destruct_at_end' [ 0 5 10 95]
'std::__1::remove_reference<gfx::BaselineStyle &>' [ 0 5 10]
'std::__1::swap<gfx::DecoratedText::RangedAttribute *>' [ 0 5 10]
'base::internal::IsValueNegative<unsigned char, nullptr>' [ 0 6 16]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::capacity' [ 0 5 10 56]
'std::__1::__compressed_pair_elem<gfx::PathElement *, 0, false>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::empty' [ 0 5 10 141]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::~vector' [ 0 5 10 140]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::PaddedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10]
'unsigned short' [ 0]
'base::internal::ArithmeticOrUnderlyingEnum<long, false>' [ 0 6 16]
'std::__1::pointer_traits<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::ImageSkiaSource *, void>' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >, true>' [ 0 5 10 30]
'std::__1::get<0, const gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10]
'drm_agp_info' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__end_cap' [ 0 5 10 124]
'gfx::RenderText::font_list' [ 0 5 17]
'drm_syncobj_handle' [ 0]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__annotate_new' [ 0 5 10 213]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >::allocate' [ 0 5 10 108]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::capacity' [ 0 5 10 124]
'init' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >, 1, true>' [ 0 5 10]
'drmGetContextPrivateMapping' [ 0]
'std::__1::__to_raw_pointer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::MaskedImageSource, const gfx::ImageSkia &, const gfx::ImageSkia &>' [ 0 5 10]
'gfx::Canvas::DrawImageIntHelper' [ 0 5 13]
'std::__1::__const_void_pointer<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >, false>' [ 0 5 10]
'__uintmax_t' [ 0]
'drmProcessPciDevice' [ 0]
'gfx::RenderTextHarfBuzz::OnLayoutTextAttributeChanged' [ 0 5 25]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::end' [ 0 5 10 187]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >::allocate' [ 0 5 10 110]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::VectorIconSource *, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10]
'std::__1::unique_ptr<SkBitmap, std::__1::default_delete<SkBitmap> >::reset' [ 0 5 10 69]
'gfx::(anonymous namespace)::RectangleString::AddString' [ 0 5 28 45]
'std::__1::__add_lvalue_reference_impl<gfx::RenderText, true>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::~RenderTextHarfBuzz' [ 0 5 25]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__construct_node<const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 557]
'gfx::(anonymous namespace)::SuperimposedImageSource::SuperimposedImageSource' [ 0 5 28 53]
'ui::InterpolatedTransformAboutPivot::Init' [ 0 4 37]
'gfx::Canvas::SizeStringFloat' [ 0 5 13]
'std::__1::remove_reference<SkBitmap &>' [ 0 5 10]
'std::__1::move<color_utils::(anonymous namespace)::KMeanCluster *&>' [ 0 5 10]
'gfx::NativePixmapDmaBuf::GetBufferFormat' [ 0 5 25]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::begin' [ 0 5 10 132]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >::AddRef' [ 0 6 88]
'std::__1::__pointer_type<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >::unique_ptr<true, void>' [ 0 5 10 153]
'std::__1::__tuple_leaf<0, const unsigned int &, false>::__tuple_leaf<const unsigned int &, void>' [ 0 5 10 56]
'std::__1::__unique_if<gfx::(anonymous namespace)::TiledImageSource>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::ClientNativePixmapOpaque *>' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::data' [ 0 5 10 114]
'std::__1::pointer_traits<gfx::BufferFormat *>' [ 0 5 10]
'color_utils::LumaRange' [ 0 13]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__end_node' [ 0 5 10 626]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__construct_at_end<gfx::Font *>' [ 0 5 10 62]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::__tree_key_value_types<gfx::ImageSkiaRep>::__get_key' [ 0 5 10 53]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<base::internal::CheckedNumeric<unsigned long> >::is_valid' [ 0 6 16 47 104]
'gfx::BufferFormat' [ 0 5]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::operator[]' [ 0 5 10 306]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::reset' [ 0 5 10 141]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__swap_out_circular_buffer' [ 0 5 10 76]
'gfx::FontListImpl::GetBaseline' [ 0 5 19]
'std::__1::swap<gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::~vector' [ 0 5 10 54]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >::Release' [ 0 6 88]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::pop_back' [ 0 5 10 56]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'gfx::RenderTextHarfBuzz::ShapeRunList' [ 0 5 25]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::end' [ 0 5 10 96]
'gfx::(anonymous namespace)::FontData::FontData' [ 0 5 28 38]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::max_size' [ 0 5 10 66]
'sk_float_saturate2int' [ 0]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::clear' [ 0 5 10 95]
'std::__1::__sort3<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<const unsigned int &>' [ 0 5 10 68]
'logging::CheckEQImpl<gfx::Image::RepresentationType, gfx::Image::RepresentationType>' [ 0 9]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'std::__1::operator!=<const float *, float *>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::clear' [ 0 5 10 79]
'std::__1::once_flag' [ 0 5 10]
'gfx::(anonymous namespace)::RectangleText::AddToCurrentLine' [ 0 5 28 43]
'gfx::internal::ImageStorage' [ 0 5 15]
'SkMatrix44' [ 0]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::unique_ptr<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >::~unique_ptr' [ 0 5 10 87]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >::end' [ 0 5 10 188]
'SkBitmap::allocPixels::operator()' [ 0 10 23]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::assign<base::FileDescriptor *>' [ 0 5 10 84]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__destruct_at_end' [ 0 5 10 91]
'base::internal::CommonMaxOrMin<int, int>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::allocate' [ 0 5 10 115]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::select_on_container_copy_construction' [ 0 5 10 72]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformSMPTEST2048NonHdrToLinear, true>' [ 0 5 10]
'std::__1::__unique_if<gfx::(anonymous namespace)::ButtonImageSource>' [ 0 5 10]
'drmModePlaneResPtr' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::end' [ 0 5 10 267]
'drmServerInfoPtr' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *&, void>' [ 0 5 10 233]
'SK_AlphaTRANSPARENT' [ 0]
'gfx::ColorTransformInternal::GetShaderSource' [ 0 5 29]
'std::__1::forward<gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__max_size' [ 0 5 10 114]
'std::__1::pointer_traits<const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::pointer_to' [ 0 5 10 188]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >::~unique_ptr' [ 0 5 10 71]
'std::__1::add_lvalue_reference<gfx::RenderText>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::capacity' [ 0 5 10 167]
'gfx::RenderTextHarfBuzz::AdjacentCharSelectionModel' [ 0 5 25]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'gfx::Size::set_width' [ 0 5 11]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__recommend' [ 0 5 10 72]
'std::__1::sort<gfx::internal::LineSegment *, (lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &>' [ 0 5 10]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::pop' [ 0 5 10 322]
'drm_agp_buffer' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::get_deleter' [ 0 5 10 454]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__swap_out_circular_buffer' [ 0 5 10 62]
'std::__1::less<gfx::ImageFamily::MapKey>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__construct_range_forward<gfx::NativePixmapPlane *, gfx::NativePixmapPlane *>' [ 0 5 10 74]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::__alloc' [ 0 5 10 123]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >' [ 0 5 10]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__copy_assign_alloc' [ 0 5 10 91]
'Region' [ 0]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::AddRef' [ 0 48]
'std::__1::forward<gfx::(anonymous namespace)::CachedFontSet *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::deallocate' [ 0 5 10 144]
'drmDestroyDrawable' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<color_utils::(anonymous namespace)::ColorBracket *>::__nat, color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10]
'gfx::(anonymous namespace)::ConvertFontconfigRgba' [ 0 5 28]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::reserve' [ 0 5 10 68]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::second' [ 0 5 10 275]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, double>' [ 0 6 16]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::capacity' [ 0 5 10 177]
'std::__1::__to_raw_pointer<gfx::BufferFormat>' [ 0 5 10]
'bi_flush' [ 0]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::find' [ 0 5 10 331]
'Cr_z_out_func' [ 0]
'logging::CheckEQImpl<float, float>' [ 0 9]
'SkYUVColorSpace' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *&, void>' [ 0 5 10 139]
'std::__1::remove_reference<gfx::(anonymous namespace)::DropShadowSource *&>' [ 0 5 10]
'std::__1::enable_if<true, gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformFromBT2020CL *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char>, 1, true>' [ 0 5 10]
'gfx::ImagePNGRep::~ImagePNGRep' [ 0 5 18]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'gfx::(anonymous namespace)::ConvertFontconfigHintStyle' [ 0 5 28]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::TransparentImageSource>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::operator->' [ 0 5 10 67]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__construct_node<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 626]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::DecoratedText::RangedAttribute *>::__nat, gfx::DecoratedText::RangedAttribute>' [ 0 5 10]
'std::__1::remove_reference<const gfx::Insets &>' [ 0 5 10]
'gfx::ImageSkia::image_reps' [ 0 5 16]
'gfx::Canvas::DrawCircle' [ 0 5 13]
'std::__1::forward<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gfx::Font, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<gfx::Font, void *> *&, void>' [ 0 5 10 88]
'gfx::ColorTransformFromLinear::~ColorTransformFromLinear' [ 0 5 31]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::max_size' [ 0 5 10 76]
'__clock_t' [ 0]
'drm_mode_revoke_lease' [ 0]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::clear' [ 0 5 10 129]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct_backward<float>' [ 0 5 10 57]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'drmModeDirtyFB' [ 0]
'cc::PaintCanvas::clipRect' [ 0 4 17]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 154]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >::deallocate' [ 0 5 10 61]
'crc_mask' [ 0]
'gfx::ClientNativePixmapDmaBuf::Map' [ 0 5 31]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__annotate_shrink' [ 0 5 10 76]
'std::__1::vector<float, std::__1::allocator<float> >::operator[]' [ 0 5 10 54]
'gfx::Font' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep>, 1, true>' [ 0 5 10]
'base::internal::CopyConstructible<false>' [ 0 6 16]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__destruct_at_end' [ 0 5 10 127]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep>, true>' [ 0 5 10 30]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'SkNVRefCnt<SkPathRef>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>, 1, true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const gfx::VectorIcon *&, false>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, false>::operator unsigned int' [ 0 5 10 46]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::rehash' [ 0 5 10 410]
'Cr_z_gzsetparams' [ 0]
'std::__1::forward<const color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<float, false>' [ 0 6 16]
'drmAddress' [ 0]
'gfx::ShadowValue' [ 0 5]
'gfx::PlatformFont::~PlatformFont' [ 0 5 19]
'gfx::FontList::GetDefaultImpl' [ 0 5 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Font> &, 1, false>' [ 0 5 10]
'std::__1::swap<gfx::Font *>' [ 0 5 10]
'std::__1::remove_reference<gfx::PlatformFont *&>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::__allocator_destructor' [ 0 5 10 187]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__construct_backward<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10 114]
'std::__1::__wrap_iter<gfx::(anonymous namespace)::CachedFont *>::operator*' [ 0 5 10 65]
'std::__1::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >::~unique_ptr' [ 0 5 10 141]
'std::__1::__advance<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct_forward<std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'SkColor4f' [ 0]
'gfx::ColorTransformInternal::~ColorTransformInternal' [ 0 5 29]
'gfx::BreakList<gfx::BaselineStyle>::GetRange' [ 0 5 36]
'std::__1::iterator_traits<gfx::Rect *>' [ 0 5 10]
'std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<void>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::allocator<gfx::ImagePNGRep>::construct<gfx::ImagePNGRep, const gfx::ImagePNGRep &>' [ 0 5 10 39]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'Cr_z_inflateCopy' [ 0]
'std::__1::remove_reference<gfx::(anonymous namespace)::ButtonImageSource *&>' [ 0 5 10]
'base::internal::IsValueInRangeForNumericType<int, int>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::construct<gfx::DecoratedText::RangedAttribute, const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10 87]
'gfx::RenderTextHarfBuzz::GetGraphemeIterator' [ 0 5 25]
'std::__1::remove_reference<gfx::(anonymous namespace)::CachedFontSet *>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::GetFontTtcIndex' [ 0 5 28 40]
'base::internal::PassingTraitsType<base::TimeDelta>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct_backward<std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'timeval' [ 0]
'std::__1::forward<std::__1::pair<unsigned int, int> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned short *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::release' [ 0 5 10 282]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::__bucket_list_deallocator' [ 0 5 10 170]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *>::move_iterator' [ 0 5 10 72]
'std::__1::remove_reference<std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10]
'base::internal::OptionalBase<cc::SkiaPaintCanvas>::~OptionalBase' [ 0 6 16 51]
'std::__1::__compressed_pair<unsigned int *, std::__1::default_delete<unsigned int []> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::max_size' [ 0 5 10 114]
'ui::InterpolatedConstantTransform' [ 0 4]
'std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >::allocate' [ 0 5 10 72]
'ui::InterpolatedRotation::InterpolatedRotation' [ 0 4 26]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__push_back_slow_path<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 133]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__tree' [ 0 5 10 626]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >::construct<std::__1::pair<unsigned long, gfx::Font::Weight>, const std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10 72]
'Cr_z_compress' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *> >' [ 0 5 10 140]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::__split_buffer' [ 0 5 10 176]
'drmModeAtomicReqItem' [ 0]
'gfx::Matrix3F::MatrixToArrayCoords' [ 0 5 15]
'std::__1::__wrap_iter<unsigned int *>::operator+=' [ 0 5 10 39]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> >, long, true>' [ 0 5 10]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'Cr_z_crc_fold_512to32' [ 0]
'std::__1::pointer_traits<gfx::Font *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line> &>' [ 0 5 10]
'std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::deallocate' [ 0 5 10 124]
'std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, false>' [ 0 5 10 154]
'gfx::FontListImpl::GetFontSize' [ 0 5 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &, 1, false>::__get' [ 0 5 10 117]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__recommend' [ 0 5 10 96]
'SkPixmap::writable_addr32' [ 0 10]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, bool>::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, bool &, false>' [ 0 5 10 139]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>::operator++' [ 0 5 10 50]
'uid_t' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::operator bool' [ 0 5 10 135]
'std::__1::get<4, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::SuperimposedImageSource, true>' [ 0 5 10]
'U8CPU' [ 0]
'std::__1::conditional<false, std::__1::pair<const unsigned int, unsigned int>, std::__1::__nat>' [ 0 5 10]
'gfx' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::erase' [ 0 5 10 447]
'std::__1::output_iterator_tag' [ 0 5 10]
'gfx::internal::StyleIterator::style' [ 0 5 15 30]
'gfx::ImageSkiaOperations::CreateRotatedImage' [ 0 5 26]
'std::__1::__compressed_pair<gfx::BreakList<bool> *, std::__1::allocator<gfx::BreakList<bool> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 98]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__alloc' [ 0 5 10 124]
'floor' [ 0]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, 1, true>' [ 0 5 10]
'tm' [ 0]
'std::__1::conditional<true, std::__1::pair<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::__alloc' [ 0 5 10 222]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__alloc' [ 0 5 10 59]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__nat>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::IconWithBadgeSource::Draw' [ 0 5 28 49]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >, void>' [ 0 5 10 380]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::__get_np' [ 0 5 10 196]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::max_size' [ 0 5 10 88]
'FcType' [ 0]
'SkMatrix::setTypeMask::operator()' [ 0 10 23]
'std::__1::tuple_element<0, std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__destruct_at_end' [ 0 5 10 57]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__destruct_at_end' [ 0 5 10 150]
'gfx::(anonymous namespace)::RectangleText::Init' [ 0 5 28 43]
'gfx::BreakList<unsigned int>::SetMax' [ 0 5 30]
'std::__1::allocator<gfx::internal::LineSegment>::destroy' [ 0 5 10 49]
'std::__1::__const_void_pointer<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line>, false>' [ 0 5 10]
'drmAddContextPrivateMapping' [ 0]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__swap_out_circular_buffer' [ 0 5 10 115]
'std::__1' [ 0 5]
'std::__1::vector<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__destroy<gfx::Font>' [ 0 5 10 61]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::capacity' [ 0 5 10 147]
'gfx::BreakList<bool>::~BreakList' [ 0 5 22]
'gfx::(anonymous namespace)::QueryResult' [ 0 5 28]
'gfx::(anonymous namespace)::CachedFont' [ 0 5 28]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::find' [ 0 5 10 371]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::clear' [ 0 5 10 174]
'std::__1::__compressed_pair<gfx::ClientNativePixmap *, std::__1::default_delete<gfx::ClientNativePixmap> >::__compressed_pair<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10 108]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct<gfx::Rect>' [ 0 5 10 61]
'std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'gfx::ImageSkiaSource::HasRepresentationAtAllScales' [ 0 5 22]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &, void>' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>, 1, true>' [ 0 5 10]
'gfx::NineImagePainter' [ 0 5]
'drmModeGetEncoder' [ 0]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<long>' [ 0 6 16 76]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10]
'gfx::FontRenderParamsQuery::~FontRenderParamsQuery' [ 0 5 28]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::operator[]' [ 0 5 10 141]
'gfx::Size::Size' [ 0 5 11]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::operator()' [ 0 5 10 142]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &, void>' [ 0 5 10 154]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::__alloc' [ 0 5 10 105]
'gfx::ImageSkia::CanRead' [ 0 5 16]
'std::__1::forward<std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, int> *, 0, false>' [ 0 5 10]
'gfx::PlatformFontLinux::GetCapHeight' [ 0 5 24]
'std::__1::__tuple_leaf<0, gfx::ImageFamily::MapKey &&, false>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'gfx::BreakList<unsigned int>::operator=' [ 0 5 30]
'base::internal::OptionalStorageBase<SkBitmap, false>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 81]
'SkTo<unsigned char, int>::operator()' [ 0 26]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> > &>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ExtractSubsetImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ExtractSubsetImageSource *&, void>' [ 0 5 10 100]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::capacity' [ 0 5 10 184]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::second' [ 0 5 10 312]
'ui::InterpolatedMatrixTransform::InterpolateButDoNotCompose' [ 0 4 33]
'std::__1::__pointer_type<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFontSet *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFontSet *, void>' [ 0 5 10 89]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__destruct_at_end' [ 0 5 10 133]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::vector' [ 0 5 10 114]
'std::__1::remove_reference<const std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 77]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__emplace_unique<std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 338]
'drmModeAtomicDuplicate' [ 0]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > > >::Get' [ 0 6 939]
'logging::SystemErrorCode' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<int> >::__max_size' [ 0 5 10 55]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 60]
'std::__1::forward<const std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'std::__1::forward<std::__1::tuple<const std::__1::basic_string<char> &> >' [ 0 5 10]
'base::LazyInstance<gfx::(anonymous namespace)::FontFuncs, base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::FontFuncs> >::Pointer' [ 0 6 140]
'gfx::internal::(anonymous namespace)::GetErrorImageSkia' [ 0 5 15 38]
'gfx::BreakList<unsigned long>' [ 0 5]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::operator[]' [ 0 5 10 115]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::allocate' [ 0 5 10 100]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::~__vector_base' [ 0 5 10 122]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::operator()' [ 0 5 10 179]
'std::__1::addressof<const std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'drm_unique' [ 0]
'std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10 441]
'std::__1::max<double>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::BufferFormat *, std::__1::allocator<gfx::BufferFormat> >' [ 0 5 10]
'std::__1::add_lvalue_reference<_FcPattern>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >::operator->' [ 0 5 10 233]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::size' [ 0 5 10 267]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__recommend' [ 0 5 10 177]
'sk_sp<SkTypeface>' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>::__nat, const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >, long, true>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::__construct<gfx::internal::Line, const gfx::internal::Line &>' [ 0 5 10 71]
'Cr_z_x86_cpu_enable_ssse3' [ 0]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::~unique_ptr' [ 0 5 10 73]
'std::__1::add_lvalue_reference<unsigned int>' [ 0 5 10]
'base::MakeRefCounted<gfx::internal::ImageSkiaStorage, std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >, float &>' [ 0 6]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator*' [ 0 5 10 78]
'std::__1::distance<unsigned char *>' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::empty' [ 0 5 10 62]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::size' [ 0 5 10 115]
'std::__1::addressof<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'std::__1::addressof<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>, void>' [ 0 5 10 91]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>::operator()' [ 0 5 10 329]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>::pointer_to' [ 0 5 10 173]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::capacity' [ 0 5 10 213]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__destroy<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 101]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::base' [ 0 5 10 78]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::data' [ 0 5 10 213]
'std::__1::move<unsigned int &>' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformSkTransferFn *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >' [ 0 5 10]
'gfx::Range::is_empty' [ 0 5 12]
'gfx::ShadowDetails::~ShadowDetails' [ 0 5 20]
'std::__1::swap<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::~__vector_base' [ 0 5 10 83]
'gfx::RenderTextHarfBuzz::TextIndexToDisplayIndex' [ 0 5 25]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__annotate_shrink' [ 0 5 10 84]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::__vector_base' [ 0 5 10 63]
'sk_sp<cc::PaintFilter>' [ 0]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::ResizeSource *, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10 102]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::max_size' [ 0 5 10 119]
'std::__1::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >::unique_ptr<true, void>' [ 0 5 10 111]
'SkMatrix44::SkMatrix44' [ 0 12]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::destroy' [ 0 5 10 357]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__destruct_at_end' [ 0 5 10 82]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::__pointer_type<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >' [ 0 5 10]
'gfx::DecoratedText::DecoratedText' [ 0 5 20]
'gfx::internal::ImageSkiaStorage::SetReadOnly' [ 0 5 15 33]
'gfx::SelectionBound::type' [ 0 5 21]
'std::__1::__to_raw_pointer<cc::PaintFlags>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >::release' [ 0 5 10 147]
'U_FAILURE' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, void>' [ 0 5 10 78]
'gfx::(anonymous namespace)::BlendingImageSource' [ 0 5 28]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::erase' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &, 1, false>::__get' [ 0 5 10 154]
'__mode_t' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::BufferFormat *>::__nat, gfx::BufferFormat>' [ 0 5 10]
'gfx::RenderText::UpdateCachedBoundsAndOffset' [ 0 5 17]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__end_cap' [ 0 5 10 127]
'std::__1::default_delete<gfx::ColorTransformStep>' [ 0 5 10]
'gz_write' [ 0]
'gfx::ImageSkia::EnsureRepsForSupportedScales' [ 0 5 16]
'std::__1::__compressed_pair<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 85]
'gfx::GetStringWidthF' [ 0 5]
'std::__1::__size_type<std::__1::allocator<base::FileDescriptor>, long, true>' [ 0 5 10]
'color_utils::(anonymous namespace)::CalculateProminentColors' [ 0 13 36]
'std::__1::__wrap_iter<const gfx::ShadowValue *>::operator++' [ 0 5 10 49]
'gfx::BreakList<gfx::BaselineStyle>::SetValue' [ 0 5 36]
'gfx::Image::Width' [ 0 5 12]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, unsigned int> *>' [ 0 5 10]
'drmSwitchToContext' [ 0]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::__annotate_new' [ 0 5 10 78]
'std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'sysfs_uevent_get' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__destroy<gfx::DecoratedText::RangedAttribute>' [ 0 5 10 87]
'base::Lock' [ 0 6]
'gfx::(anonymous namespace)::RectangleText::AddWordOverflow' [ 0 5 28 43]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::construct<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'std::__1::forward<gfx::ColorTransformFromLinear *&>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::HorizontalShadowSource *>' [ 0 5 10]
'gfx::Image::~Image' [ 0 5 12]
'std::__1::vector<float, std::__1::allocator<float> >::empty' [ 0 5 10 54]
'std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *&>' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::begin' [ 0 5 10 141]
'std::__1::move<gfx::Font *&>' [ 0 5 10]
'gfx::Canvas::sk_canvas' [ 0 5 13]
'base::UintToString' [ 0 6]
'std::__1::remove_reference<sk_sp<SkPathEffect> &>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::g_synchronized_cache' [ 0 5 28]
'std::__1::operator==<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'gfx::(anonymous namespace)::GetGlyphExtents' [ 0 5 28]
'std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>::operator()' [ 0 5 10 72]
'scoped_refptr<cc::PaintTextBlob>' [ 0]
'gfx::(anonymous namespace)::GetGlyph' [ 0 5 28]
'gfx::(anonymous namespace)::kDefaultSelectionBackgroundColor' [ 0 5 28]
'gfx::(anonymous namespace)::VectorIconSource::Draw' [ 0 5 28 46]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > > >::Pointer' [ 0 6 647]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 240]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >::insert<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>, void>' [ 0 5 10 195]
'pshufb_shf_table' [ 0]
'switches::kTestDoNotInitializeIcu' [ 0 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >, true>' [ 0 5 10 30]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *> >' [ 0 5 10 152]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::max_size' [ 0 5 10 140]
'std::__1::pair<const unsigned int, unsigned int>::pair<const unsigned int &, 0>' [ 0 5 10 50]
'color_utils::CalculateKMeanColorOfBuffer' [ 0 13]
'std::__1::conditional<false, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::__nat>' [ 0 5 10]
'gfx::(anonymous namespace)::GetFontTable' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::__construct<gfx::internal::Line, gfx::internal::Line>' [ 0 5 10 71]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *>::__nat, std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__is_long' [ 0 5 10 126]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform>, void, void>' [ 0 5 10 103]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'gfx::(anonymous namespace)::ButtonImageSource::GetImageForScale' [ 0 5 28 47]
'gfx::NativePixmapDmaBuf::GetDmaBufFdCount' [ 0 5 25]
'std::__1::pair<unsigned long, gfx::BaselineStyle>::operator=' [ 0 5 10 51]
'std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >' [ 0 5 10]
'std::__1::max<long>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'drm_crtc_get_sequence' [ 0]
'gfx::BreakList<int>::BreakList' [ 0 5 21]
'drm_set_version_t' [ 0]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::HorizontalShadowSource *, 0, false>' [ 0 5 10]
'SkTMin<int>' [ 0]
'std::__1::allocator<gfx::ShadowValue>::construct<gfx::ShadowValue, gfx::ShadowValue>' [ 0 5 10 39]
'std::__1::__add_lvalue_reference_impl<gfx::RenderTextHarfBuzz, true>' [ 0 5 10]
'gfx::RenderText::SetFontList' [ 0 5 17]
'std::__1::forward<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__destruct_at_end' [ 0 5 10 122]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::~__split_buffer' [ 0 5 10 122]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >' [ 0 5 10]
'gfx::(anonymous namespace)::IsUnusualBlockCode' [ 0 5 28]
'std::__1::unique_ptr<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >' [ 0 5 10]
'std::__1::remove_reference<gfx::RenderTextHarfBuzz *>' [ 0 5 10]
'gfx::FontRenderParams::FontRenderParams' [ 0 5 23]
'gfx::BreakList<gfx::BaselineStyle>' [ 0 5]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::capacity' [ 0 5 10 83]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::clear' [ 0 5 10 77]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::size' [ 0 5 10 172]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::reset' [ 0 5 10 143]
'std::__1::pointer_traits<const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__end_node' [ 0 5 10 284]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const unsigned int, unsigned short>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> >, true>' [ 0 5 10 30]
'gen_codes' [ 0]
'gfx::FallbackFontData' [ 0 5]
'std::__1::allocator<unsigned int>::construct<unsigned int>' [ 0 5 10 35]
'std::__1::__compressed_pair<gfx::internal::ImageRepSkia *, std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10]
'color_utils::(anonymous namespace)::KMeanCluster::IsAtCentroid' [ 0 13 36 50]
'SkIRect::x' [ 0 9]
'std::__1::__compressed_pair<unsigned long, gfx::internal::(anonymous namespace)::PNGImageSource::Compare>' [ 0 5 10]
'std::__1::forward<bool>' [ 0 5 10]
'std::__1::pair<unsigned long, int>::pair<int, int &, false>' [ 0 5 10 36]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<ui::InterpolatedTransform, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__destroy<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10 100]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::back' [ 0 5 10 143]
'Cr_z_gzopen' [ 0]
'std::__1::allocator<gfx::ImageSkiaRep>::construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep>' [ 0 5 10 40]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::begin' [ 0 5 10 133]
'gfx::FontList::operator=' [ 0 5 15]
'std::__1::allocator<gfx::Rect>::allocate' [ 0 5 10 32]
'base::internal::CopyAssignable<false>' [ 0 6 16]
'std::__1::remove_reference<const std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> > &>' [ 0 5 10]
'gfx::(anonymous namespace)::kInvalidBaseline' [ 0 5 28]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRep>, void>' [ 0 5 10 94]
'std::__1::__size_type<std::__1::allocator<gfx::ImagePNGRep>, long, true>' [ 0 5 10]
'scoped_refptr<gfx::PlatformFont>::~scoped_refptr' [ 0 34]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::Line, std::__1::allocator<gfx::internal::Line>, true>' [ 0 5 10 30]
'std::__1::__distance<base::FileDescriptor *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::TextRunList *, std::__1::default_delete<gfx::internal::TextRunList> >::__compressed_pair<gfx::internal::TextRunList *, true>' [ 0 5 10 114]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>, 1, true>' [ 0 5 10]
'gfx::ImageSkiaRep::GetHeight' [ 0 5 19]
'std::__1::remove_reference<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> *>::pointer_to' [ 0 5 10 98]
'std::__1::max<unsigned int>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::clear' [ 0 5 10 447]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned int &&>::__tuple_impl<0, unsigned int &&, unsigned int>' [ 0 5 10 71]
'std::__1::allocator<unsigned char>::construct<unsigned char, const unsigned char &>' [ 0 5 10 36]
'AnnotateBenignRaceSized' [ 0]
'std::__1::reverse_iterator<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::reverse_iterator' [ 0 5 10 135]
'std::__1::pointer_traits<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > *>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::__tree_node_destructor' [ 0 5 10 142]
'cc::PaintFlags::setFilterQuality' [ 0 4 16]
'drm_buf_desc' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::ColorProfile>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::size' [ 0 5 10 101]
'std::__1::__compressed_pair<gfx::ColorTransform *, std::__1::default_delete<gfx::ColorTransform> >::__compressed_pair<gfx::ColorTransform *&, true>' [ 0 5 10 100]
'std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>::operator()' [ 0 5 10 231]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::release' [ 0 5 10 454]
'std::__1::operator==<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__pointer_type<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >' [ 0 5 10]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>::second' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::select_on_container_copy_construction' [ 0 5 10 61]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'std::__1::remove_reference<gfx::Transform>' [ 0 5 10]
'std::__1::move<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *&>' [ 0 5 10]
'std::__1::pointer_traits<float *>' [ 0 5 10]
'gfx::(anonymous namespace)::HorizontalShadowSource::GetHeightForShadows' [ 0 5 28 52]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::__split_buffer' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> > &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >, 1, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>::__get_np' [ 0 5 10 562]
'gfx::Range::end' [ 0 5 12]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::end' [ 0 5 10 178]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::TiledImageSource>' [ 0 5 10]
'base::Optional<SkBitmap>::operator->' [ 0 6 26]
'gfx::ColorTransformToLinear::~ColorTransformToLinear' [ 0 5 29]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'logging::CheckLTImpl<float, float>' [ 0 9]
'SkBitmap::allocPixels' [ 0 10]
'gfx::SelectionBound::edge_top' [ 0 5 21]
'long int' [ 0]
'gfx::(anonymous namespace)::kRotationTimeMs' [ 0 5 28]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::GetMemoryAddress' [ 0 5 28 54]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::back' [ 0 5 10 131]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'drmEventContextPtr' [ 0]
'std::__1::sort<float *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::release' [ 0 5 10 143]
'drm_mode_crtc_lut' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &, 1, false>' [ 0 5 10]
'Cr_z_zcalloc' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >, true>' [ 0 5 10 30]
'trace_event_internal::ScopedTracer::~ScopedTracer' [ 0 22 36]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >::~RefCountedThreadSafe' [ 0 6 108]
'std::__1::remove_reference<const std::__1::allocator<unsigned short> &>' [ 0 5 10]
'gfx::(anonymous namespace)::SuperimposedImageSource::~SuperimposedImageSource' [ 0 5 28 53]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::operator()' [ 0 5 10 136]
'gfx::RenderText::subpixel_rendering_suppressed' [ 0 5 17]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >' [ 0 5 10]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool>' [ 0 5 10]
'va_list' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::operator=' [ 0 5 10 84]
'std::__1::__to_raw_pointer<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, bool> &&, std::__1::pair<unsigned long, bool> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::__construct<SkPath, const SkPath &>' [ 0 5 10 58]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >' [ 0 5 10]
'gfx::internal::TextRunHarfBuzz::GetGlyphWidthForCharRange' [ 0 5 15 32]
'base::internal::OptionalStorage<cc::SkiaPaintCanvas, false, false>::OptionalStorage' [ 0 6 16 68]
'gfx::internal::TextRunHarfBuzz::GetGraphemeBounds' [ 0 5 15 32]
'std::__1::__distance<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorTransform *&>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::__tree_iterator' [ 0 5 10 378]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >::operator*' [ 0 5 10 140]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >' [ 0 5 10]
'gfx::GetGenericSharedGpuMemoryGUIDForTracing' [ 0 5]
'sk_sp<cc::PaintShader>::~sk_sp' [ 0 24]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::clear' [ 0 5 10 63]
'base::internal::StrictNumeric<unsigned long>' [ 0 6 16]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFontSet *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFontSet *&, void>' [ 0 5 10 89]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> > &>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_const_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'sk_sp<SkImage>::reset' [ 0 16]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, false>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::Rect> &>' [ 0 5 10 76]
'std::__1::operator!=<gfx::ImageSkiaRep *, const gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__alloc' [ 0 5 10 75]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::release' [ 0 5 10 256]
'std::__1::remove_reference<gfx::ColorTransformFromLinear *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::assign<std::__1::pair<unsigned long, int> *>' [ 0 5 10 113]
'gfx::RenderText::SetElideBehavior' [ 0 5 17]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::~__vector_base' [ 0 5 10 147]
'std::__1::move<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<true, void>' [ 0 5 10 93]
'std::__1::tuple<unsigned int &&>::tuple<unsigned int, false, false>' [ 0 5 10 34]
'drmSyncobjWait' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::erase' [ 0 5 10 113]
'Cr_z_deflate_copyright' [ 0]
'FcMatrix' [ 0]
'gfx::(anonymous namespace)::MaskedImageSource::~MaskedImageSource' [ 0 5 28 47]
'std::__1::forward<char *&>' [ 0 5 10]
'gfx::(anonymous namespace)::TransparentImageSource::TransparentImageSource' [ 0 5 28 52]
'gfx::RenderText::GetLineBreaks' [ 0 5 17]
'ui::InterpolatedTransform::Interpolate' [ 0 4 27]
'std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__as_node' [ 0 5 10 135]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::end' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 81]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'sw_sync_fence_create' [ 0]
'std::__1::allocator<cc::PaintFlags>::destroy' [ 0 5 10 37]
'drmVBlankSeqType' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::__nat, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::conditional<true, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>' [ 0 5 10]
'color_utils::CalculateBoringScore' [ 0 13]
'gfx::UTF16IndexToOffset' [ 0 5]
'logging::CheckEQImpl<unsigned int, unsigned long>' [ 0 9]
'SkPixmap::info' [ 0 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'gfx::TextStyle' [ 0 5]
'gfx::RenderTextHarfBuzz::OnDisplayTextAttributeChanged' [ 0 5 25]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::clear' [ 0 5 10 59]
'std::__1::__tuple_types<const unsigned int &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformToBT2020CL *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >, 1, false>' [ 0 5 10]
'gfx::internal::StyleIterator::StyleIterator' [ 0 5 15 30]
'gfx::(anonymous namespace)::FaceCache' [ 0 5 28]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'std::__1::forward<base::TimeTicks>' [ 0 5 10]
'gfx::BreakList<unsigned long>::SetMax' [ 0 5 31]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >' [ 0 5 10]
'__va_list_tag' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedTransform>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct_at_end<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10 141]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_shrink' [ 0 5 10 50]
'gfx::GpuFence::Wait::kInfiniteSyncWaitTimeout' [ 0 5 15 21]
'gfx::Size' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>, void>' [ 0 5 10 91]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, void>' [ 0 5 10 89]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::find<gfx::IconDescription>' [ 0 5 10 338]
'drm_draw_t' [ 0]
'std::__1::__iterator_traits_impl<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, true>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>, bool>' [ 0 5 10]
'scoped_refptr<gfx::FontListImpl>::operator=' [ 0 34]
'std::__1::swap<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'gfx::RectF::RectF' [ 0 5 12]
'std::__1::iterator_traits<int *>' [ 0 5 10]
'gfx::RangeF::GetMin' [ 0 5 13]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::operator bool' [ 0 5 10 67]
'std::__1::forward<gfx::(anonymous namespace)::ShadowNineboxSource *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::deallocate' [ 0 5 10 144]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__copy_assign_alloc' [ 0 5 10 138]
'std::__1::__rebind_pointer<void *, std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, int> &&, std::__1::pair<unsigned long, int> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, void>' [ 0 5 10 71]
'std::__1::forward<const std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::remove_reference<skia::ImageOperations::ResizeMethod &>' [ 0 5 10]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 155]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__end_cap' [ 0 5 10 103]
'scoped_refptr<cc::PaintTextBlob>::Release' [ 0 34]
'std::__1::remove_reference<gfx::ImageSkia &>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const int &, false>::__tuple_leaf<const int &, void>' [ 0 5 10 47]
'drmGetRenderDeviceNameFromFd' [ 0]
'gfx::ColorSpace' [ 0 5]
'std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>::operator()' [ 0 5 10 73]
'gfx::RenderText::GetNearestWordStartBoundary' [ 0 5 17]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__annotate_delete' [ 0 5 10 56]
'std::__1::__wrap_iter<unsigned int *>' [ 0 5 10]
'gfx::FixedVSyncProvider::GetVSyncParametersIfAvailable' [ 0 5 25]
'std::__1::__unwrap_iter<base::FileDescriptor *>' [ 0 5 10]
'std::__1::operator-<const unsigned int *, const unsigned int *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::construct<std::__1::pair<const unsigned int, unsigned int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 139]
'std::__1::forward<gfx::(anonymous namespace)::ButtonImageSource *>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::EnsureLayout::trace_event_unique_atomic1244' [ 0 5 25 39]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 153]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::allocate' [ 0 5 10 144]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__construct<gfx::DecoratedText::RangedAttribute, const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10 87]
'scoped_refptr<base::RefCountedMemory>::operator->' [ 0 39]
'std::__1::forward<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'std::__1::pair<gfx::IconDescription, gfx::ImageSkia>::~pair' [ 0 5 10 54]
'std::__1::forward<gfx::(anonymous namespace)::ExtractSubsetImageSource *>' [ 0 5 10]
'std::__1::default_delete<gfx::internal::ImageRep>::operator()' [ 0 5 10 51]
'std::__1::pointer_traits<gfx::ImageSkia *>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>' [ 0 5 10]
'base::internal::checked_cast<int, base::internal::CheckOnFailure, unsigned long>' [ 0 6 16]
'drmSyncobjDestroy' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::construct<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 152]
'base::internal::UnderlyingType<long>' [ 0 6 16]
'std::__1::__const_pointer<cc::PaintTypeface, cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface>, true>' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::PathElement *, std::__1::allocator<gfx::PathElement>, false>' [ 0 5 10]
'gfx::Font::GetWeight' [ 0 5 11]
'gfx::internal::ImageStorage::default_representation_type' [ 0 5 15 29]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >::construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10 108]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransform>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::allocate' [ 0 5 10 78]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10]
'gfx::RenderTextHarfBuzz::IsSelectionSupported' [ 0 5 25]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::vector' [ 0 5 10 141]
'gfx::NativePixmapDmaBuf::GetDmaBufPitch' [ 0 5 25]
'std::__1::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >::~unique_ptr' [ 0 5 10 99]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__annotate_shrink' [ 0 5 10 115]
'gfx::ColorTransformMatrix::~ColorTransformMatrix' [ 0 5 27]
'extra_dbits' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::destroy<gfx::PathElement>' [ 0 5 10 68]
'std::__1::vector<float, std::__1::allocator<float> >::__construct_at_end<float *>' [ 0 5 10 54]
'std::__1::__move<gfx::ImageSkiaRep *, gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::SkiaColorTransform>, void>' [ 0 5 10 94]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::second' [ 0 5 10 259]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::end' [ 0 6 126]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::capacity' [ 0 5 10 141]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'trace_event_internal::ScopedTracer' [ 0 22]
'gfx::BreakList<gfx::Font::Weight>::GetBreak' [ 0 5 35]
'std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >::operator[]' [ 0 5 10 150]
'gfx::Canvas::ClipRect' [ 0 5 13]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::begin' [ 0 5 10 410]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned short>, 1, true>::__compressed_pair_elem<const std::__1::allocator<unsigned short> &, void>' [ 0 5 10 80]
'base::PlatformFile' [ 0 6]
'base::LazyInstance<std::__1::basic_string<char>, base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> > >::Pointer' [ 0 6 123]
'gfx::FontList::DeriveWithWeight' [ 0 5 15]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::__tree_node_destructor' [ 0 5 10 205]
'std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<const float &>' [ 0 5 10 54]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::Line>, 1, true>' [ 0 5 10]
'gfx::ClientNativePixmapFactoryDmabuf::IsConfigurationSupported' [ 0 5 38]
'std::__1::__tuple_leaf<4, const gfx::VectorIcon *&, false>::get' [ 0 5 10 60]
'std::__1::__pointer_type<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10]
'std::__1::__list_const_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::operator++' [ 0 5 10 140]
'gfx::internal::TextRunHarfBuzz::CountMissingGlyphs' [ 0 5 15 32]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::size' [ 0 5 10 114]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >::reset' [ 0 5 10 133]
'gfx::(anonymous namespace)::SynchronizedCache::SynchronizedCache' [ 0 5 28 47]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>::__get_np' [ 0 5 10 190]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>::operator()' [ 0 5 10 80]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'drmGetCap' [ 0]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'gfx::(anonymous namespace)::CommandFromString' [ 0 5 28]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::list' [ 0 5 10 181]
'std::__1::addressof<const std::__1::pair<unsigned long, int> >' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__swap_out_circular_buffer' [ 0 5 10 167]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >' [ 0 5 10]
'gfx::(anonymous namespace)::Str' [ 0 5 28]
'std::__1::__tuple_leaf<0, const std::__1::basic_string<char> &, false>' [ 0 5 10]
'drmSyncobjHandleToFD' [ 0]
'std::__1::__unwrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >' [ 0 5 10]
'drm_buf_free_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::select_on_container_copy_construction' [ 0 5 10 68]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::__end_cap' [ 0 5 10 63]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, true>' [ 0 5 10 30]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >, long, true>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, true>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageSkiaRep *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::RenderText *, std::__1::default_delete<gfx::RenderText> >::__compressed_pair<gfx::RenderTextHarfBuzz *, std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10 92]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::WeightedColor *>::base' [ 0 5 10 76]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::resize' [ 0 5 10 68]
'std::__1::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >::~unique_ptr' [ 0 5 10 107]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::push_back' [ 0 5 10 115]
'std::__1::conditional<true, std::__1::pair<unsigned long, unsigned long> &&, std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10]
'base::internal::OptionalStorageBase<cc::SkiaPaintCanvas, false>' [ 0 6 16]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__vector_base' [ 0 5 10 139]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::begin' [ 0 5 10 138]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<gfx::internal::Line &>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >' [ 0 5 10]
'gfx::internal::ImageRepSkia::Height' [ 0 5 15 29]
'base_hash::hash<unsigned int>' [ 0 11]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, true>' [ 0 5 10]
'gfx::internal::(anonymous namespace)::ScaleImageSkiaRep' [ 0 5 15 38]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::base' [ 0 5 10 70]
'std::__1::__is_hash_power2' [ 0 5 10]
'std::__1::__wrap_iter<const float *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ExtractSubsetImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10]
'base' [ 0]
'drm_dma' [ 0]
'color_utils::GetResultingPaintColor' [ 0 13]
'std::__1::__pointer_type<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::get_deleter' [ 0 5 10 282]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::deallocate' [ 0 5 10 119]
'cc::PaintTypeface' [ 0 4]
'pollfd' [ 0]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *>::base' [ 0 5 10 73]
'std::__1::__compressed_pair_elem<gfx::internal::Line *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 67]
'Cr_z_compress2' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::~__split_buffer' [ 0 5 10 110]
'std::__1::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >::unique_ptr<true, void>' [ 0 5 10 141]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *>' [ 0 5 10]
'gfx::SizeF::set_width' [ 0 5 12]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::pointer_to' [ 0 5 10 93]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >::Release' [ 0 6 88]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::HSLImageSource *, void>' [ 0 5 10 68]
'Cr_z_gzprintf' [ 0]
'std::__1::remove_reference<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'std::__1::move<gfx::DecoratedText::RangedAttribute &>' [ 0 5 10]
'gfx::internal::ApplyRenderParams' [ 0 5 15]
'gfx::(anonymous namespace)::DIPToPixelSize' [ 0 5 28]
'Cr_z_charf' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>::__get' [ 0 5 10 72]
'gfx::(anonymous namespace)::VectorIconCache::~VectorIconCache' [ 0 5 28 45]
'gfx::(anonymous namespace)::GetGlyphVerticalKerning' [ 0 5 28]
'gfx::(anonymous namespace)::CachedFontSet::GetFallbackFontForChar' [ 0 5 28 43]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__push_back_slow_path<const gfx::internal::LineSegment &>' [ 0 5 10 96]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::reset' [ 0 5 10 522]
'gfx::CreateVectorIcon' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<cc::PaintFlags *>::__nat, cc::PaintFlags>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >::reset' [ 0 5 10 137]
'std::__1::addressof<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::~unique_ptr' [ 0 5 10 432]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::pointer_traits<const unsigned short *>' [ 0 5 10]
'skstd' [ 0]
'std::__1::pointer_traits<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::deallocate' [ 0 5 10 78]
'gfx::Image::CreateFrom1xBitmap' [ 0 5 12]
'std::__1::max<int, std::__1::__less<int, int> >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::operator++' [ 0 5 10 135]
'std::__1::pointer_traits<gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::unique_ptr<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >::reset' [ 0 5 10 87]
'std::__1::operator!=<const std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::RenderText, std::__1::default_delete<gfx::RenderText>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::construct<gfx::ImagePNGRep, const gfx::ImagePNGRep &>' [ 0 5 10 68]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *&>' [ 0 5 10]
'gfx::internal::TextRunHarfBuzz::GetClusterAt' [ 0 5 15 32]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<unsigned int, unsigned short>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >' [ 0 5 10]
'std::__1::remove_reference<gfx::ClientNativePixmapDmaBuf *&>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::~unique_ptr' [ 0 5 10 238]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::release' [ 0 5 10 99]
'std::__1::move<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>' [ 0 6]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::release' [ 0 5 10 99]
'SkBitmap::info' [ 0 10]
'HashTable' [ 0]
'base::RefCountedBytes::data' [ 0 6 23]
'std::__1::pair<unsigned int, int>' [ 0 5 10]
'drm_mode_create_blob' [ 0]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__end_cap' [ 0 5 10 95]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::__construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 144]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageSkia *>' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::remove_reference<gfx::ImageFamily::MapKey>' [ 0 5 10]
'base::ScopedFD' [ 0 6]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >' [ 0 5 10]
'gfx::ColorTransformMatrix' [ 0 5]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__alloc' [ 0 5 10 121]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__find_equal<gfx::Font>' [ 0 5 10 114]
'std::__1::__compressed_pair<gfx::PathElement *, std::__1::allocator<gfx::PathElement> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 89]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::DecoratedText::RangedAttribute>, 1, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >' [ 0 5 10]
'drmFinish' [ 0]
'gfx::Tween' [ 0 5]
'gfx::SelectionBound' [ 0 5]
'drmStatsT' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<gfx::BreakList<bool> *, std::__1::allocator<gfx::BreakList<bool> > >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::BreakList<bool> > &>' [ 0 5 10 98]
'gfx::ImageFamily::Add' [ 0 5 18]
'std::__1::get<0, const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<unsigned int []>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::VectorIconSource *, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::__compressed_pair<gfx::(anonymous namespace)::VectorIconSource *&, true>' [ 0 5 10 150]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::~__split_buffer' [ 0 5 10 81]
'std::__1::remove_reference<std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::empty' [ 0 5 10 178]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::unique_ptr<true, void>' [ 0 5 10 103]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::~__list_imp' [ 0 5 10 187]
'std::__1::move_iterator<std::__1::pair<unsigned long, int> *>::operator*' [ 0 5 10 63]
'sk_sp<SkMaskFilter>::~sk_sp' [ 0 21]
'gfx::(anonymous namespace)::CachedFontSet::CachedFontSet' [ 0 5 28 43]
'std::__1::forward<SkBitmapOperations::RotationAmount &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::IconWithBadgeSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::IconWithBadgeSource *&, void>' [ 0 5 10 95]
'std::__1::advance<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>, void>' [ 0 5 10 91]
'gfx::ColorTransformSkTransferFn::~ColorTransformSkTransferFn' [ 0 5 33]
'std::initializer_list<gfx::ShadowValue>' [ 0 5]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__root_ptr' [ 0 5 10 114]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >, void>' [ 0 5 10 180]
'logging::GetVlogLevel<41>' [ 0 9]
'std::__1::__size_type<std::__1::allocator<gfx::(anonymous namespace)::CachedFont>, long, true>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >::allocate' [ 0 5 10 107]
'std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >::~pair' [ 0 5 10 148]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, int>' [ 0 6 16]
'gfx::RenderText::strike_thickness_factor' [ 0 5 17]
'std::__1::__wrap_iter<gfx::Rect *>::__wrap_iter' [ 0 5 10 36]
'std::__1::__compressed_pair<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 226]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct<float, float>' [ 0 5 10 57]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, long, true>' [ 0 5 10]
'std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >' [ 0 5 10]
'drmAgpVendorId' [ 0]
'base::subtle::RefCountedThreadSafeBase::AddRef' [ 0 6 14 40]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::size' [ 0 5 10 114]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > > >' [ 0 6]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 210]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::deallocate' [ 0 5 10 85]
'SkSafeUnref<SkDrawLooper>' [ 0]
'gfx::ImageSkia::size' [ 0 5 16]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >::reset' [ 0 5 10 71]
'std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::operator[]' [ 0 5 10 438]
'Cr_z_zError' [ 0]
'sk_sp<SkPixelRef>' [ 0]
'std::__1::move<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::__unique_if<gfx::ColorTransformMatrix>' [ 0 5 10]
'std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >::construct<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 90]
'std::__1::operator!=<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::IsValid<long>' [ 0 6 16 38]
'std::__1::__to_raw_pointer<int>' [ 0 5 10]
'_drmUsbBusInfo' [ 0]
'std::__1::__const_void_pointer<gfx::Rect *, std::__1::allocator<gfx::Rect>, false>' [ 0 5 10]
'std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>::__tree_iterator' [ 0 5 10 104]
'std::__1::forward<std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'gfx::RenderTextHarfBuzz::ShapeRun' [ 0 5 25]
'std::__1::allocator<gfx::internal::Line>::destroy' [ 0 5 10 42]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL>, false>' [ 0 5 10 30]
'std::__1::advance<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'switches::kFullMemoryCrashReport' [ 0 10]
'SkSafeUnref<SkColorFilter>' [ 0]
'std::__1::forward<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, const std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'gfx::ClientNativePixmapDmaBuf::~ClientNativePixmapDmaBuf' [ 0 5 31]
'gfx::RenderText::GetStyle' [ 0 5 17]
'base::internal::CheckedMulOp<long, int, void>' [ 0 6 16]
'std::__1::__atomic_base<unsigned int, false>::__atomic_base' [ 0 5 10 46]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10 145]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::RotatedSource *, void>' [ 0 5 10 68]
'gfx::RenderText::ApplyCompositionAndSelectionStyles' [ 0 5 17]
'Cr_z_inflatePrime' [ 0]
'std::__1::forward<const std::__1::pair<unsigned long, bool> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, true>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__vector_base' [ 0 5 10 140]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::assign<gfx::BreakList<bool> *>' [ 0 5 10 85]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'std::__1::forward<gfx::ShadowDetails>' [ 0 5 10]
'drmSetVersion' [ 0]
'color_utils::BuildLumaHistogram' [ 0 13]
'base::internal::IsValueInRangeForNumericType<int, unsigned long>' [ 0 6 16]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::vector' [ 0 5 10 140]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::allocate' [ 0 5 10 238]
'std::__1::__pointer_type<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::__construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<unsigned int, int> >' [ 0 5 10 139]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >' [ 0 5 10]
'__m128' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::capacity' [ 0 5 10 152]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__max_size' [ 0 5 10 64]
'std::__1::move<gfx::ImagePNGRep *&>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::GetRunList' [ 0 5 25]
'base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::SynchronizedCache>' [ 0 6 16]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 101]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::__destroy<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10 181]
'std::__1::remove_reference<const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10]
'gfx::(anonymous namespace)::ImageRepHeightInPixels' [ 0 5 28]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >' [ 0 6]
'SkFontStyle::SkFontStyle' [ 0 13]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__list_imp' [ 0 5 10 243]
'hb_glyph_extents_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::allocate' [ 0 5 10 64]
'base::subtle::Acquire_Load' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::Size>, 1, true>' [ 0 5 10]
'gfx::RenderText::ClearSelection' [ 0 5 17]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'gfx::FontList::GetFontSize' [ 0 5 15]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::deallocate' [ 0 5 10 272]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::HorizontalShadowSource *, void>' [ 0 5 10 68]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::__alloc' [ 0 5 10 85]
'std::__1::__compressed_pair<gfx::BreakList<bool> *, std::__1::allocator<gfx::BreakList<bool> > >' [ 0 5 10]
'drmRmMap' [ 0]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>' [ 0 5 10 134]
'std::__1::allocator<gfx::ImageSkiaRep>::allocate' [ 0 5 10 40]
'gfx::GetStringWidth' [ 0 5]
'std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>::operator()' [ 0 5 10 75]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10]
'gfx::(anonymous namespace)::CalculateFadeGradientWidth' [ 0 5 28]
'gfx::SkiaColorTransform::Transform' [ 0 5 25]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, 0, false>' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::TiledImageSource, const gfx::ImageSkia &, int &, int &, int &, int &>' [ 0 5 10]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__construct_at_end' [ 0 5 10 59]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformMatrix *&>' [ 0 5 10]
'color_utils::HSL' [ 0 13]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::size' [ 0 5 10 284]
'base::StringPiece' [ 0 6]
'std::__1::move<std::__1::pair<unsigned long, int> &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__max_size' [ 0 5 10 97]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::max_size' [ 0 5 10 54]
'std::__1::remove_reference<int &>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::empty' [ 0 5 10 243]
'ui::InterpolatedTranslation::~InterpolatedTranslation' [ 0 4 29]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRepPNG *, 0, false>::__compressed_pair_elem<gfx::internal::ImageRepPNG *&, void>' [ 0 5 10 74]
'std::__1::unique_ptr<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap> >::unique_ptr<true, void>' [ 0 5 10 99]
'std::__1::__wrap_iter<const unsigned int *>::base' [ 0 5 10 45]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__end_cap' [ 0 5 10 122]
'SkTypefaceCatalogerProc' [ 0]
'SkPath::setFillType' [ 0 8]
'gfx::RenderText::LineSelectionModel' [ 0 5 17]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__annotate_new' [ 0 5 10 62]
'std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>::allocate' [ 0 5 10 72]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >::New' [ 0 6 226]
'std::__1::__wrap_iter<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>::operator*' [ 0 5 10 144]
'std::__1::__size_type<std::__1::allocator<SkPath>, long, true>' [ 0 5 10]
'SkTMax<int>' [ 0]
'std::__1::conditional<false, const gfx::internal::LineSegment &, gfx::internal::LineSegment &&>' [ 0 5 10]
'Cr_z_gzoffset' [ 0]
'base::subtle::RefCountedThreadSafeBase::AddRefImpl' [ 0 6 14 40]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__emplace_unique_extract_key<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 626]
'std::__1::move<gfx::(anonymous namespace)::CachedFont &>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__destruct_at_end' [ 0 5 10 150]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >' [ 0 5 10]
'std::__1::__pointer_type<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformFromLinear *>' [ 0 5 10]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >' [ 0 6]
'gfx::SelectionModel::caret_pos' [ 0 5 21]
'std::__1::__to_raw_pointer<gfx::internal::Line>' [ 0 5 10]
'gfx::GetVisibleMargins' [ 0 5]
'gfx::RenderText::CreateFor' [ 0 5 17]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, void>' [ 0 5 10 114]
'gfx::CommandType' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<int *>::__nat, int>' [ 0 5 10]
'gfx::internal::ImageRepSkia' [ 0 5 15]
'std::__1::operator==<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__pointer_type<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'Cr_z_crc_fold_copy' [ 0]
'gfx::ColorTransformFromLinear::GetFromLinear' [ 0 5 31]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::unique_ptr<true, void>' [ 0 5 10 81]
'std::__1::vector<float, std::__1::allocator<float> >::push_back' [ 0 5 10 54]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>' [ 0 5 10]
'gfx::PathElement::PathElement' [ 0 5 18]
'std::__1::forward<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *&>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<SkPath *>::__nat, SkPath>' [ 0 5 10]
'std::__1::__pointer_type<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> *>::pointer_to' [ 0 5 10 88]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, bool> >, std::__1::pair<unsigned long, bool> *, true>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Rect *>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, gfx::BaselineStyle> *&>' [ 0 5 10]
'std::__1::swap<gfx::internal::Line *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >::~unique_ptr' [ 0 5 10 157]
'base::internal::StrictNumeric<long>::StrictNumeric<long>' [ 0 6 16 37]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>' [ 0 6]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::capacity' [ 0 5 10 174]
'std::__1::copy<const unsigned char *, unsigned char *>' [ 0 5 10]
'gfx::RectF::x' [ 0 5 12]
'std::__1::remove_reference<const gfx::ImagePNGRep &>' [ 0 5 10]
'drmModeAtomicAlloc' [ 0]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >' [ 0 5 10]
'SkFilterQuality' [ 0]
'std::__1::__wrap_iter<float *>::__wrap_iter' [ 0 5 10 32]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::push_back' [ 0 5 10 131]
'gfx::RenderText::UpdateDisplayText' [ 0 5 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__lower_bound<gfx::IconDescription>' [ 0 5 10 338]
'std::__1::remove_reference<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'gfx::ColorTransformToBT2020CL::Transform' [ 0 5 31]
'std::__1::__const_void_pointer<gfx::BufferFormat *, std::__1::allocator<gfx::BufferFormat>, false>' [ 0 5 10]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>' [ 0 6 16]
'std::__1::allocator<std::__1::pair<unsigned long, int> >::construct<std::__1::pair<unsigned long, int>, const std::__1::pair<unsigned long, int> &>' [ 0 5 10 58]
'std::__1::__move_backward<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'base::subtle::RefCountedBase::AddRefImpl' [ 0 6 14 30]
'gfx::RenderText::kDragToEndIfOutsideVerticalBounds' [ 0 5 17]
'std::__1::forward<const std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> &>' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransform>' [ 0 5 10]
'logging::MakeCheckOpString<long, int>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> >' [ 0 5 10]
'std::__1::pair<gfx::Font, gfx::Range>::~pair' [ 0 5 10 39]
'std::__1::vector<float, std::__1::allocator<float> >::__annotate_delete' [ 0 5 10 54]
'gfx::BreakList<gfx::BaselineStyle>::GetBreak' [ 0 5 36]
'UBool' [ 0]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, true>' [ 0 5 10]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::clear' [ 0 5 10 120]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10]
'k1k2' [ 0]
'std::__1::remove_reference<gfx::internal::ImageSkiaStorage *&>' [ 0 5 10]
'gfx::PlatformFontLinux::GetHeight' [ 0 5 24]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::BlendingImageSource *, void>' [ 0 5 10 68]
'gz_read' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::find<gfx::Image::RepresentationType>' [ 0 5 10 626]
'std::__1::__size_type<std::__1::allocator<gfx::BufferFormat>, long, true>' [ 0 5 10]
'gfx::BreakList<unsigned long>::BreakList' [ 0 5 31]
'std::__1::move<base::RefCountedMemory *&>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::max_size' [ 0 5 10 62]
'std::__1::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::ColorTransformStep>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned int, unsigned int>, std::__1::__nat>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__insert_unique<std::__1::pair<int, unsigned int>, void>' [ 0 5 10 447]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >' [ 0 5 10]
'gfx::RenderText::Elide' [ 0 5 17]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >, long, true>' [ 0 5 10]
'AnnotateHappensBefore' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::__destroy<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10 153]
'std::__1::remove_reference<bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::construct<cc::PaintFlags, const cc::PaintFlags &>' [ 0 5 10 66]
'gfx::(anonymous namespace)::kFallbackFontFamilyName' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintFlags> &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::PaintFlags> &, void>' [ 0 5 10 83]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 224]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>::__get' [ 0 5 10 89]
'std::__1::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10]
'gfx::ColorTransformToBT2020CL::ColorTransformToBT2020CL' [ 0 5 31]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'std::__1::remove_reference<gfx::Rect &>' [ 0 5 10]
'gfx::RenderText::ApplyFontSizeOverride' [ 0 5 17]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::destroy<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'scoped_refptr<gfx::internal::ImageStorage>::operator=' [ 0 44]
'std::__1::__tuple_leaf<4, const gfx::VectorIcon *&, false>' [ 0 5 10]
'std::__1::add_lvalue_reference<SkPoint>' [ 0 5 10]
'gfx::ClientNativePixmap::~ClientNativePixmap' [ 0 5 25]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::capacity' [ 0 5 10 276]
'std::__1::__constrain_hash' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::TiledImageSource *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >::reset' [ 0 5 10 157]
'std::__1::__distance<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>, void, void>' [ 0 5 10 93]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const unsigned int &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__destroy<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 137]
'base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob>::Destruct' [ 0 6 60]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'drm_mode_get_connector' [ 0]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >, true>' [ 0 5 10 30]
'uint_fast16_t' [ 0]
'std::__1::__compressed_pair<gfx::RenderTextHarfBuzz *, std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >::reset' [ 0 5 10 157]
'ui::InterpolatedTransform::~InterpolatedTransform' [ 0 4 27]
'gfx::(anonymous namespace)::GetGlyphKerning' [ 0 5 28]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::value' [ 0 6 16 47 71]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >::operator->' [ 0 5 10 83]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__root' [ 0 5 10 357]
'gfx::Image::As1xPNGBytes' [ 0 5 12]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::begin' [ 0 5 10 62]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::top' [ 0 5 10 322]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::begin' [ 0 5 10 143]
'std::__1::__list_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::operator*' [ 0 5 10 134]
'trace_event_internal::kZeroNumArgs' [ 0 22]
'Cr_z_crc32' [ 0]
'gfx::SelectionBound::SetEdgeBottom' [ 0 5 21]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::allocate' [ 0 5 10 114]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::size' [ 0 5 10 96]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::construct<std::__1::pair<unsigned long, unsigned long>, const std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10 97]
'std::__1::pair<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool &, false>' [ 0 5 10 110]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmap *, 0, false>::__compressed_pair_elem<gfx::ClientNativePixmap *, void>' [ 0 5 10 71]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::__split_buffer' [ 0 5 10 85]
'std::__1::pair<unsigned long, bool>::pair<int, bool &, false>' [ 0 5 10 37]
'SkPoint::x' [ 0 9]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__alloc' [ 0 5 10 184]
'SK_ColorLTGRAY' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >::unique_ptr<true, void>' [ 0 5 10 157]
'base::i18n::UTF16CharIterator::array_pos' [ 0 6 12 31]
'std::__1::__compressed_pair<gfx::internal::TextRunList *, std::__1::default_delete<gfx::internal::TextRunList> >' [ 0 5 10]
'gfx::Point::Point' [ 0 5 12]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10 126]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::__list_node_pointer_traits<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::~vector' [ 0 5 10 142]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::operator->' [ 0 5 10 522]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>::__tree_iterator' [ 0 5 10 174]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::data' [ 0 5 10 85]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::capacity' [ 0 5 10 143]
'__int8_t' [ 0]
'std::__1::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >::~unique_ptr' [ 0 5 10 105]
'gfx::(anonymous namespace)::PathParser::CurrentCommand' [ 0 5 28 40]
'gfx::ColorTransformInternal::AppendColorSpaceToColorSpaceTransform' [ 0 5 29]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::operator=' [ 0 5 10 113]
'std::__1::forward<SkColorSpaceTransferFn &>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10 76]
'std::__1::__pointer_type<int, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::__distance<const unsigned char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10 137]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const unsigned int *>, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__max_size' [ 0 5 10 101]
'std::__1::allocator<gfx::ImageSkia>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFontSet::CreateForLocale' [ 0 5 28 43]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >' [ 0 5 10]
'std::__1::remove_reference<int>' [ 0 5 10]
'base::subtle::NoBarrier_Load' [ 0 6 14]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, gfx::Font::Weight> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 96]
'std::__1::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >::unique_ptr<true, void>' [ 0 5 10 147]
'std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::assign' [ 0 5 10 126]
'std::__1::__tree_next<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'base::internal::CheckedAddFastOp<unsigned long, int>' [ 0 6 16]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<unsigned long>' [ 0 6 16 85]
'std::__1::add_lvalue_reference<gfx::ColorTransform>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__append' [ 0 5 10 50]
'drmModeResPtr' [ 0]
'gfx::Font::GetFontSize' [ 0 5 11]
'base::TimeDelta' [ 0 6]
'std::__1::forward<std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::__get_np' [ 0 5 10 190]
'hb_font_funcs_t' [ 0]
'gfx::BreakList<bool>::max' [ 0 5 22]
'drmGetStats' [ 0]
'gfx::internal::LineSegment' [ 0 5 15]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::resize' [ 0 5 10 140]
'logging::ErrnoLogMessage::stream' [ 0 9 26]
'gfx::PlatformFont' [ 0 5]
'std::__1::pair<std::__1::__tree_const_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned int &&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__max_size' [ 0 5 10 164]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::clear' [ 0 5 10 276]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::get' [ 0 5 10 164]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__set_long_cap' [ 0 5 10 126]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >' [ 0 5 10]
'base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >::Delete' [ 0 6 16 248]
'std::__1::conditional<true, std::__1::pair<unsigned int, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::empty' [ 0 5 10 84]
'std::__1::scientific' [ 0 5 10]
'std::__1::default_delete<gfx::internal::TextRunList>::operator()' [ 0 5 10 54]
'gfx::DecoratedText::~DecoratedText' [ 0 5 20]
'std::__1::allocator<gfx::ImagePNGRep>::allocate' [ 0 5 10 39]
'gfx::Image::Size' [ 0 5 12]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::size' [ 0 6 126]
'std::__1::__const_void_pointer<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute>, false>' [ 0 5 10]
'SkString::Rec::data' [ 0 10 15]
'_x86_check_features' [ 0]
'std::__1::allocator<gfx::ImageSkiaRep>::deallocate' [ 0 5 10 40]
'std::__1::__wrap_iter<const base::FileDescriptor *>::operator*' [ 0 5 10 53]
'gfx::RenderText::RenderText' [ 0 5 17]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_shrink' [ 0 5 10 70]
'gfx::ColorTransformFromLinear::ColorTransformFromLinear' [ 0 5 31]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::deallocate' [ 0 5 10 102]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::get' [ 0 5 10 81]
'gfx::SkiaColorTransform::Join' [ 0 5 25]
'SkBitmap::bytesPerPixel' [ 0 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::SuperimposedImageSource>' [ 0 5 10]
'gfx::JPEG1xEncodedDataFromImage' [ 0 5]
'std::__1::vector<int, std::__1::allocator<int> >::clear' [ 0 5 10 50]
'std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>' [ 0 5 10]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::Release' [ 0 6 108]
'sk_sp<cc::PaintShader>::operator=' [ 0 24]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::clear' [ 0 5 10 150]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> > &>' [ 0 5 10]
'std::__1::forward<gfx::Font::Weight &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >' [ 0 5 10]
'std::__1::atomic<long>' [ 0 5 10]
'gfx::RenderText::AppendText' [ 0 5 17]
'std::__1::forward<const float &>' [ 0 5 10]
'base::subtle::GetOrCreateLazyPointer<gfx::(anonymous namespace)::FontFuncs>' [ 0 6 14]
'Cr_z_internal_state' [ 0]
'Cr_z_inflateSetDictionary' [ 0]
'std::__1::addressof<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'color_utils::ColorProfile' [ 0 13]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ButtonImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ButtonImageSource *&, void>' [ 0 5 10 93]
'float_t' [ 0]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::operator[]' [ 0 5 10 126]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__recommend' [ 0 5 10 88]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::MaskedImageSource, true>' [ 0 5 10]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::value_comp' [ 0 5 10 114]
'SkUnichar' [ 0]
'std::__1::sort<unsigned int, (lambda at ../../ui/gfx/color_analysis.cc:196:26)>' [ 0 5 10]
'base::internal::ClampedAddOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::back' [ 0 5 10 133]
'std::__1::remove_reference<const std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::__max_size' [ 0 5 10 66]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::capacity' [ 0 5 10 140]
'gfx::BreakList<unsigned int>::BreakList' [ 0 5 30]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::~priority_queue' [ 0 5 10 322]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10]
'std::__1::__unwrap_iter<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::__destroy<SkPath>' [ 0 5 10 58]
'SkAtomic<SkPath::Convexity, sk_memory_order_relaxed>' [ 0]
'std::__1::swap<SkPath *>' [ 0 5 10]
'drmGetNodeType' [ 0]
'base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache>::New' [ 0 6 16 97]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'gfx::RenderText' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >, true>' [ 0 5 10 30]
'gfx::ElideRectangleText' [ 0 5]
'std::__1::__pointer_type<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct_at_end<std::__1::pair<unsigned long, int> *>' [ 0 5 10 113]
'color_utils::(anonymous namespace)::ColorBox::RecomputeBounds' [ 0 13 36 46]
'std::__1::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 238]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::pair<gfx::ImageFamily::MapKey, gfx::Image>::operator=<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &, false>' [ 0 5 10 54]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::clear' [ 0 5 10 140]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::max_size' [ 0 5 10 76]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, std::__1::pair<unsigned long, unsigned int> *, true>' [ 0 5 10]
'base::LazyInstance<gfx::(anonymous namespace)::FontFuncs, base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::FontFuncs> >' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::__construct<gfx::PathElement, gfx::PathElement>' [ 0 5 10 68]
'gfx::ImageSkiaOperations::CreateSuperimposedImage' [ 0 5 26]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformMatrix *, std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10 108]
'drm_client' [ 0]
'std::__1::__const_void_pointer<color_utils::ColorProfile *, std::__1::allocator<color_utils::ColorProfile>, false>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__move_assign_alloc' [ 0 5 10 126]
'gfx::(anonymous namespace)::GetClusterAtImpl<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> > >' [ 0 5 28]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::capacity' [ 0 5 10 138]
'logging' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__destroy<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'gid_t' [ 0]
'std::__1::__sort4<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'gfx::Vector2d::x' [ 0 5 15]
'gfx::Vector2d::y' [ 0 5 15]
'std::__1::__tuple_types<unsigned int &&>' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, int> *, const std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'drmAgpAcquire' [ 0]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>::pair' [ 0 5 10 60]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::end' [ 0 5 10 84]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::~__vector_base' [ 0 5 10 139]
'drmOpenDevice' [ 0]
'std::__1::swap<cc::PaintFlags *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__emplace_unique_extract_key<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 357]
'std::__1::forward<gfx::NativePixmapPlane &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *>::__nat, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::vector' [ 0 5 10 76]
'std::__1::upper_bound<std::__1::__wrap_iter<const unsigned int *>, unsigned long, std::__1::__less<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformFromLinear>' [ 0 5 10]
'gfx::PlatformFont::CreateDefault' [ 0 5 19]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::push_back' [ 0 5 10 62]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >' [ 0 5 10]
'gfx::internal::(anonymous namespace)' [ 0 5 15]
'std::__1::pair<unsigned long, unsigned int>::pair<int, unsigned int &, false>' [ 0 5 10 45]
'drmModeRmFB' [ 0]
'base::internal::SaturateFastOp<int, double, void>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::operator=' [ 0 5 10 131]
'gfx::(anonymous namespace)::MapToSupportedScale' [ 0 5 28]
'AnnotateHappensAfter' [ 0]
'std::__1::pointer_traits<const wchar_t *>' [ 0 5 10]
'std::__1::advance<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__end_cap' [ 0 5 10 126]
'std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::scoped_refptr' [ 0 48]
'std::__1::forward<std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> > &>' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::empty' [ 0 5 10 56]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 91]
'std::__1::pair<unsigned long, unsigned int>::pair<int, unsigned int, false>' [ 0 5 10 45]
'std::__1::__pointer_type<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags> &>::second' [ 0 5 10 86]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::operator->' [ 0 5 10 266]
'drm_server_info' [ 0]
'std::__1::__hash_map_pointer_types<std::__1::__hash_value_type<unsigned int, int>, void *, std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, int> >, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__vector_base' [ 0 5 10 85]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::__wrap_iter<float *>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<float> &>' [ 0 5 10]
'SkMatrix::setScaleX' [ 0 10]
'SkMatrix::setScaleY' [ 0 10]
'std::__1::forward<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'drmSize' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, bool> *>::__nat, std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::__distance<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> > >' [ 0 5 10]
'drmParsePciBusInfo' [ 0]
'std::__1::__rebind_pointer<void *, std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep>, false>' [ 0 5 10 30]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::size' [ 0 5 10 167]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<gfx::internal::LineSegment>, long, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 233]
'base::internal::CheckedAddOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::allocate' [ 0 5 10 152]
'scoped_refptr<base::RefCountedMemory>::swap' [ 0 39]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__insert_node_at' [ 0 5 10 626]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, unsigned short> *>' [ 0 5 10]
'std::__1::__wrap_iter<gfx::Font *>::__wrap_iter' [ 0 5 10 36]
'std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >::allocate' [ 0 5 10 135]
'std::__1::allocator_traits<std::__1::allocator<int> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__end_node' [ 0 5 10 357]
'gfx::(anonymous namespace)::SuperimposedImageSource' [ 0 5 28]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::max_size' [ 0 5 10 82]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::begin' [ 0 5 10 76]
'switches::kTraceToFile' [ 0 10]
'gfx::RangeF::end' [ 0 5 13]
'color_utils::(anonymous namespace)::KMeanCluster::KMeanCluster' [ 0 13 36 50]
'drmParseSubsystemType' [ 0]
'std::__1::addressof<std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > &>' [ 0 5 10]
'drmModeClipPtr' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::unique_ptr<true, void>' [ 0 5 10 180]
'std::__1::forward<sk_sp<SkColorSpace> >' [ 0 5 10]
'std::__1::remove_reference<const cc::PaintFlags &>' [ 0 5 10]
'std::__1::__list_const_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::operator->' [ 0 5 10 112]
'std::__1::swap<gfx::PlatformFontLinux *>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >::operator->' [ 0 5 10 383]
'sw_sync_timeline_create' [ 0]
'std::__1::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >::release' [ 0 5 10 119]
'std::__1::remove_reference<std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > > &>' [ 0 5 10]
'std::__1::__wrap_iter<unsigned int *>::__wrap_iter' [ 0 5 10 39]
'std::__1::remove_reference<gfx::Font::Weight>' [ 0 5 10]
'sk_sp<SkTypeface>::operator=' [ 0 19]
'std::__1::copy<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'gfx::Transform::operator=' [ 0 5 16]
'std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>::pair<std::__1::pair<int, int>, gfx::ShadowDetails, false>' [ 0 5 10 68]
'std::__1::__compressed_pair<SkPoint *, std::__1::default_delete<SkPoint []> >' [ 0 5 10]
'drm_agp_mode' [ 0]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::IconWithBadgeSource, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::deallocate' [ 0 5 10 141]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 338]
'std::__1::__unique_if<gfx::ColorTransformToLinear>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> &>' [ 0 5 10 212]
'base::Optional<SkBitmap>::Optional' [ 0 6 26]
'std::__1::unique_ptr<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >::reset' [ 0 5 10 119]
'SkTo<unsigned char, SkPath::FillType>' [ 0]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >' [ 0 5 10]
'std::initializer_list<unsigned char>::begin' [ 0 5 38]
'std::__1::pair<std::__1::__tree_const_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool, false>' [ 0 5 10 116]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::__nat, const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'gfx::Insets::bottom' [ 0 5 13]
'gfx::ImageFamily::const_iterator::const_iterator' [ 0 5 18 34]
'drmModeAtomicCommit' [ 0]
'std::__1::__pointer_type<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10 385]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::find<std::__1::pair<int, int> >' [ 0 5 10 357]
'std::__1::add_lvalue_reference<ui::InterpolatedTransform>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource::Compare, 1, true>' [ 0 5 10]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<char *, 0, false>' [ 0 5 10]
'std::__1::__advance<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__annotate_new' [ 0 5 10 142]
'color_utils::(anonymous namespace)::ColorBracket' [ 0 13 36]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *&>' [ 0 5 10]
'logging::CheckEQImpl<unsigned int, unsigned char>' [ 0 9]
'gfx::RenderTextHarfBuzz::GetRunContainingCaret' [ 0 5 25]
'deflate_huff' [ 0]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__annotate_new' [ 0 5 10 85]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > &>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >' [ 0 5 10]
'_drmPciDeviceInfo' [ 0]
'std::__1::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'dev_t' [ 0]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >::~unique_ptr' [ 0 5 10 133]
'gfx::internal::TextRunList::Add' [ 0 5 15 28]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::MaskedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >::__compressed_pair<gfx::(anonymous namespace)::MaskedImageSource *&, true>' [ 0 5 10 152]
'std::__1::addressof<gfx::Font>' [ 0 5 10]
'gfx::FontList::GetFontWeight' [ 0 5 15]
'gfx::ColorTransformSkTransferFn::IsNull' [ 0 5 33]
'std::__1::__const_void_pointer<cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata>, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::end' [ 0 5 10 68]
'std::__1::__add_lvalue_reference_impl<_FcPattern, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__destruct_at_end' [ 0 5 10 121]
'drm_mode_connector_set_property' [ 0]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::move_if_noexcept<gfx::internal::Line>' [ 0 5 10]
'_drmModeEncoder' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::end' [ 0 5 10 113]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >' [ 0 5 10]
'SkTo<unsigned char, unsigned int>::operator()' [ 0 35]
'std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::clear' [ 0 5 10 85]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear>, void, void>' [ 0 5 10 99]
'gfx::(anonymous namespace)::kCacheSize' [ 0 5 28]
'gfx::RenderTextHarfBuzz::EnsureLayoutRunList::trace_event_unique_atomic1697' [ 0 5 25 46]
'std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'gfx::(anonymous namespace)::HorizontalShadowSource::~HorizontalShadowSource' [ 0 5 28 52]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::capacity' [ 0 5 10 142]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::clear' [ 0 5 10 87]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >' [ 0 6]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'gfx::CreateHarfBuzzFont' [ 0 5]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'std::__1::__insertion_sort_3<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__to_raw_pointer<cc::PaintTypeface>' [ 0 5 10]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear::ColorTransformSMPTEST2048NonHdrToLinear' [ 0 5 46]
'gfx::Canvas::DrawRoundRect' [ 0 5 13]
'SkRefCntBase::ref' [ 0 14]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'std::__1::__tree_node<gfx::Font, void *>' [ 0 5 10]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >::DeleteInternal<gfx::internal::ImageSkiaStorage>' [ 0 6 136]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::allocate' [ 0 5 10 67]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::operator[]' [ 0 5 10 113]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Font>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::operator->' [ 0 5 10 180]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::~__split_buffer' [ 0 5 10 93]
'drmCreateContext' [ 0]
'gfx::(anonymous namespace)::kReferenceSizeDip' [ 0 5 28]
'SkNVRefCnt<SkTextBlob>::unref' [ 0 24]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__find_equal<gfx::ImageSkiaRep>' [ 0 5 10 141]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::get_deleter' [ 0 5 10 324]
'std::__1::conditional<false, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::TransparentImageSource, const gfx::ImageSkia &, double &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >, true>' [ 0 5 10 30]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::TransparentImageSource, true>' [ 0 5 10]
'std::__1::literals' [ 0 5 10]
'std::__1::__tuple_leaf<1, const int &, false>::get' [ 0 5 10 47]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >, true>' [ 0 5 10 30]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, true>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::__wrap_iter' [ 0 5 10 61]
'std::__1::__wrap_iter<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, std::__1::pair<unsigned long, gfx::Font::Weight> *, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::__construct_backward<SkPath *>' [ 0 5 10 58]
'std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >::construct<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10 152]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::destroy' [ 0 5 10 338]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::count' [ 0 5 10 371]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> >, long, true>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::is_valid' [ 0 6 16 47 71]
'std::__1::pointer_traits<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *>' [ 0 5 10]
'std::__1::upper_bound<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >, unsigned long, std::__1::__less<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__insert_unique<std::__1::pair<gfx::IconDescription, gfx::ImageSkia>, void>' [ 0 5 10 338]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::(anonymous namespace)::CachedFont *>::__nat, gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'SkPath::addPath' [ 0 8]
'std::__1::operator==<const std::__1::pair<unsigned long, gfx::BaselineStyle> *, const std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::set<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::__hash_node_destructor' [ 0 5 10 136]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__annotate_new' [ 0 5 10 76]
'std::__1::__const_pointer<std::__1::pair<unsigned long, unsigned int>, std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, true>' [ 0 5 10]
'std::__1::allocator<float>::allocate' [ 0 5 10 28]
'gfx::internal::TextRunList::Reset' [ 0 5 15 28]
'std::__1::operator!=<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'drmGetLibVersion' [ 0]
'std::__1::forward<double &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ShadowNineboxSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ShadowNineboxSource *&, void>' [ 0 5 10 95]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::clear' [ 0 5 10 103]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::back' [ 0 5 10 101]
'_G_fpos64_t' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >, long, true>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned short *>::__nat, unsigned short>' [ 0 5 10]
'base::i18n::kRightToLeftMark' [ 0 6 12]
'base::internal::SaturateFastOp<int, int, void>::Do' [ 0 6 16 48]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::deallocate' [ 0 5 10 238]
'base::subtle::RefCountedBase' [ 0 6 14]
'gfx::ShadowValue::blur' [ 0 5 18]
'std::__1::remove_volatile<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'gfx::ImageSkiaRep::pixel_size' [ 0 5 19]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::__distance<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'switches::kDisableBackgroundTasks' [ 0 10]
'std::__1::iterator_traits<const gfx::ShadowValue *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *>' [ 0 5 10]
'std::__1::make_unique<gfx::ColorTransformMatrix, gfx::Transform>' [ 0 5 10]
'std::__1::__tree_key_value_types<gfx::Font>::__get_ptr' [ 0 5 10 45]
'Pos' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'gfx::ColorTransformSkTransferFn::AppendTransferShaderSource' [ 0 5 33]
'std::__1::__compressed_pair<SkColorSpaceXform *, std::__1::default_delete<SkColorSpaceXform> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::TextRunList *, 0, false>::__compressed_pair_elem<gfx::internal::TextRunList *, void>' [ 0 5 10 74]
'drm_event_crtc_sequence' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct_at_end' [ 0 5 10 113]
'std::__1::remove_reference<gfx::BaselineStyle>' [ 0 5 10]
'gfx::(anonymous namespace)::CreateSkTypeface' [ 0 5 28]
'std::__1::forward<bool &>' [ 0 5 10]
'_drmModeCrtc' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__max_size' [ 0 5 10 65]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10 531]
'std::__1::__pointer_type<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::__hash_value_type<unsigned int, int> *>::__nat, const std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'cc::PaintFlags::isVerticalText' [ 0 4 16]
'scoped_refptr<gfx::PlatformFont>::AddRef' [ 0 34]
'std::__1::__pointer_type<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::~__tree' [ 0 5 10 141]
'std::__1::forward<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::forward<gfx::ClientNativePixmap *>' [ 0 5 10]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::lowest' [ 0 6 16 70]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>' [ 0 5 10]
'base::internal::IsValueInRangeForNumericType<unsigned char, int>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct_backward<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::__wrap_iter<std::__1::pair<unsigned long, bool> *>' [ 0 5 10 68]
'std::__1::__compressed_pair<ui::InterpolatedTransform *, std::__1::default_delete<ui::InterpolatedTransform> >::__compressed_pair<ui::InterpolatedConstantTransform *, std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10 112]
'std::__1::operator!=<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >' [ 0 5 10]
'gfx::RenderTextHarfBuzz::GetSubstringBounds' [ 0 5 25]
'gfx::RenderText::SetMaxLines' [ 0 5 17]
'std::__1::__rebind_pointer<void *, const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'gfx::Range::set_end' [ 0 5 12]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >' [ 0 5 10]
'std::__1::pointer_traits<const std::__1::pair<const unsigned int, int> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'drmHashTable' [ 0]
'std::__1::allocator<SkPath>::deallocate' [ 0 5 10 29]
'gfx::internal::ImageSkiaStorage::image_reps' [ 0 5 15 33]
'SkPathRef' [ 0]
'drmFreeDevices' [ 0]
'drmModeObjectListPtr' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__construct<std::__1::pair<gfx::Font, gfx::Range>, std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 90]
'gfx::ColorTransformInternal::NumberOfStepsForTesting' [ 0 5 29]
'SkRRect' [ 0]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmap *, 0, false>::__compressed_pair_elem<gfx::ClientNativePixmapDmaBuf *, void>' [ 0 5 10 71]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__emplace_unique_key_args<unsigned int, const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 557]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::swap' [ 0 5 10 62]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__vector_base' [ 0 5 10 148]
'base::internal::SaturationDefaultLimits<unsigned char>::Underflow' [ 0 6 16 56]
'(anonymous namespace)::g_default_font_description' [ 0 23]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, unsigned int> *, const std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::make_pair<int &, int &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 146]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::capacity' [ 0 5 10 83]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>, 1, true>' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::PlatformFontLinux::GetFontName' [ 0 5 24]
'std::__1::allocator<gfx::Font>::construct<gfx::Font, const gfx::Font &>' [ 0 5 10 32]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__recommend' [ 0 5 10 140]
'std::__1::remove_volatile<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >::deallocate' [ 0 5 10 301]
'std::__1::pointer_traits<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 70]
'std::__1::__compressed_pair<gfx::ColorTransformToBT2020CL *, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10]
'gfx::ColorTransformToLinear::ColorTransformToLinear' [ 0 5 29]
'std::__1::enable_if<true, const gfx::BufferFormat *>' [ 0 5 10]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >::map' [ 0 5 10 188]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::__destruct_at_end' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::max_size' [ 0 5 10 61]
'drm_control_t' [ 0]
'drmSyncobjReset' [ 0]
'std::__1::basic_istream<char, std::__1::char_traits<char> >::basic_istream' [ 0 5 10 61]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::max_size' [ 0 5 10 132]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::push_back' [ 0 5 10 122]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::IconWithBadgeSource *, void>' [ 0 5 10 68]
'gfx::(anonymous namespace)::PaintArc' [ 0 5 28]
'std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::pair<const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, false>' [ 0 5 10 143]
'std::__1::__pointer_type<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >' [ 0 5 10]
'gfx::IconDescription::IconDescription' [ 0 5 22]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__annotate_new' [ 0 5 10 267]
'SkFontLCDConfig' [ 0]
'logging::CheckEQImpl<gfx::CommandType, gfx::CommandType>' [ 0 9]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_shrink' [ 0 5 10 133]
'round' [ 0]
'gfx::NativePixmapDmaBuf::ExportHandle' [ 0 5 25]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>, 1, true>' [ 0 5 10]
'gfx::BreakList<gfx::Font::Weight>::operator=' [ 0 5 35]
'Cr_z_gzclose' [ 0]
'SK_ColorTRANSPARENT' [ 0]
'std::__1::__sort<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::iterator<std::__1::bidirectional_iterator_tag, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, long, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::__construct<gfx::BufferFormat, const gfx::BufferFormat &>' [ 0 5 10 69]
'std::__1::remove_reference<const unsigned char &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::BufferFormat *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'base::internal::BindStateBase' [ 0 6 16]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 725]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::push_back' [ 0 5 10 213]
'gfx::(anonymous namespace)::BlendingImageSource::CreateImageSkiaRep' [ 0 5 28 49]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>, void>' [ 0 5 10 91]
'std::__1::__compressed_pair_elem<gfx::RenderText *, 0, false>' [ 0 5 10]
'base::LazyInstance<scoped_refptr<gfx::FontListImpl>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::FontListImpl> > >::Pointer' [ 0 6 131]
'gfx::(anonymous namespace)::TransparentImageSource' [ 0 5 28]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__construct_node<const gfx::Font &>' [ 0 5 10 114]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>::__wrap_iter<gfx::ImageSkiaRep *>' [ 0 5 10 50]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct_at_end<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10 131]
'std::__1::__move<color_utils::(anonymous namespace)::KMeanCluster, color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::HSLImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10]
'std::__1::__copy<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>::__compressed_pair_elem<std::__1::allocator<float> &, void>' [ 0 5 10 74]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::max_size' [ 0 5 10 101]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>::__wrap_iter' [ 0 5 10 75]
'gfx::ShadowValue::Scale' [ 0 5 18]
'std::__1::__pointer_type<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__max_size' [ 0 5 10 61]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__lower_bound<unsigned int>' [ 0 5 10 557]
'std::__1::__pointer_type<gfx::Font, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::__end_cap' [ 0 5 10 129]
'std::__1::forward<_FcCharSet *&>' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::allocate' [ 0 5 10 78]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::operator[]' [ 0 5 10 172]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >, bool>' [ 0 5 10]
'gfx::ColorTransformFromLinear' [ 0 5]
'std::__1::__compressed_pair<unsigned long, gfx::internal::(anonymous namespace)::PNGImageSource::Compare>::__compressed_pair<int, const gfx::internal::(anonymous namespace)::PNGImageSource::Compare &>' [ 0 5 10 107]
'std::__1::forward<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **>' [ 0 5 10]
'gfx::internal::TextRunList::width' [ 0 5 15 28]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::construct<color_utils::(anonymous namespace)::ColorBox, color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 96]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__construct_at_end' [ 0 5 10 68]
'drm_mode_property_enum' [ 0]
'std::__1::conditional<true, std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>' [ 0 5 10]
'drmVBlankPtr' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::empty' [ 0 5 10 132]
'ClientGpuFence' [ 0]
'gfx::ShadowValue::MakeMdShadowValues' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::construct<std::__1::pair<gfx::Font, gfx::Range>, std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 90]
'std::__1::conditional<true, std::__1::tuple<unsigned int &&>, std::__1::__nat>' [ 0 5 10]
'gfx::Image::CopySkBitmap' [ 0 5 12]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >' [ 0 5 10]
'std::__1::advance<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'static_d_desc' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__end_node' [ 0 5 10 557]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &, 1, false>::__get' [ 0 5 10 131]
'gfx::Point3F::set_x' [ 0 5 14]
'gfx::Point3F::set_y' [ 0 5 14]
'gfx::Point3F::set_z' [ 0 5 14]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::~vector' [ 0 5 10 72]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::reset' [ 0 5 10 266]
'gfx::ImageSkia::bitmap' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::allocate' [ 0 5 10 136]
'std::__1::remove_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *&>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::__construct<std::__1::pair<const unsigned int, unsigned int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 139]
'gfx::CloneHandleForIPC' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformFromBT2020CL>, void>' [ 0 5 10 94]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::capacity' [ 0 5 10 123]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__construct<gfx::Font, gfx::Font>' [ 0 5 10 61]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::construct<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10 100]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::__destroy<gfx::Font>' [ 0 5 10 93]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__recommend' [ 0 5 10 120]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__emplace_unique_key_args<gfx::Font, const gfx::Font &>' [ 0 5 10 114]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct_at_end' [ 0 5 10 115]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::size' [ 0 5 10 96]
'gfx::internal::(anonymous namespace)::PNGImageSource::~PNGImageSource' [ 0 5 15 38 54]
'SkAlphaType' [ 0]
'v_load16_dup' [ 0]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'base::internal::CheckedSubOp<int, int, void>' [ 0 6 16]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::size' [ 0 5 10 65]
'poly' [ 0]
'std::__1::__pointer_type<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::base' [ 0 5 10 82]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>' [ 0 5 10]
'std::__1::hash<unsigned int>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::data' [ 0 5 10 50]
'std::__1::default_delete<unsigned int []>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::BreakList<bool> *, 0, false>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, int> *> >' [ 0 5 10 122]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::MaskedImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::MaskedImageSource *&, void>' [ 0 5 10 93]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, true>' [ 0 5 10]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >' [ 0 6]
'std::__1::addressof<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'gfx::Point::y' [ 0 5 12]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::operator->' [ 0 5 10 454]
'std::__1::remove_reference<const std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::__construct<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 238]
'std::__1::move_iterator<std::__1::pair<unsigned long, bool> *>::move_iterator' [ 0 5 10 64]
'gfx::SelectionModel::selection' [ 0 5 21]
'std::__1::forward<gfx::(anonymous namespace)::TiledImageSource *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::Size, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_new' [ 0 5 10 133]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct_range_forward<std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'std::__1::allocator<SkPath>::allocate' [ 0 5 10 29]
'gfx::ColorTransformStep::CanAppendShaderSource' [ 0 5 25]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>, 1, true>' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 52]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10]
'std::__1::iterator_traits<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >::unique_ptr<true, void>' [ 0 5 10 147]
'std::__1::__size_type<std::__1::allocator<gfx::NativePixmapPlane>, long, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >::reset' [ 0 5 10 99]
'std::__1::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >::~unique_ptr' [ 0 5 10 111]
'gfx::FixedVSyncProvider::SupportGetVSyncParametersIfAvailable' [ 0 5 25]
'sk_sp<SkColorSpace>::sk_sp' [ 0 21]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__vector_base' [ 0 5 10 83]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'gfx::Canvas::RecreateBackingCanvas' [ 0 5 13]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >, long, true>' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::operator*' [ 0 5 10 71]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::operator+' [ 0 5 10 71]
'std::__1::__pointer_type_imp::__pointer_type<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform>, false>' [ 0 5 10 30]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *&>' [ 0 5 10]
'Cr_z_adler32_combine64' [ 0]
'color_utils::FindClosestColor' [ 0 13]
'std::__1::remove_reference<const gfx::internal::Line &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::get' [ 0 5 10 340]
'std::__1::forward<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *&>' [ 0 5 10]
'gfx::(anonymous namespace)::kLineThicknessFactor' [ 0 5 28]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<const unsigned char *>' [ 0 5 10 70]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>::__get_np' [ 0 5 10 174]
'std::__1::__compressed_pair_elem<cc::FrameMetadata *, 0, false>' [ 0 5 10]
'std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'color_utils::(anonymous namespace)::ColorBox::~ColorBox' [ 0 13 36 46]
'std::__1::forward<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkBitmap>, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::operator+' [ 0 5 10 70]
'color_utils::(anonymous namespace)::KMeanCluster::RecomputeCentroid' [ 0 13 36 50]
'base::internal' [ 0 6]
'switches::kDisableBreakpad' [ 0 10]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned char, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 234]
'std::__1::pair<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::allocate' [ 0 5 10 76]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::PaddedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >::__compressed_pair<gfx::(anonymous namespace)::PaddedImageSource *&, true>' [ 0 5 10 152]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::capacity' [ 0 5 10 120]
'scatter' [ 0]
'crc_mask2' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__make_iter' [ 0 5 10 132]
'drmModeEncoderPtr' [ 0]
'std::__1::forward<const gfx::VectorIcon *&>' [ 0 5 10]
'SkTDArray<float>' [ 0]
'std::__1::pair<unsigned long, gfx::BaselineStyle>' [ 0 5 10]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::ColorBox *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned int, int> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > &>' [ 0 5 10]
'drm_irq_busid_t' [ 0]
'logging::MakeCheckOpValueString<gfx::Font::Weight>' [ 0 9]
'base::TrimPositions' [ 0 6]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned int *>::__nat, unsigned int>' [ 0 5 10]
'gfx::ClientNativePixmapDmaBuf::GetMemoryAddress' [ 0 5 31]
'std::__1::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >::unique_ptr<true, void>' [ 0 5 10 105]
'std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >::__hash_map_const_iterator' [ 0 5 10 152]
'drmDeviceAlloc' [ 0]
'std::__1::__sort3<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'AnnotateCondVarSignalAll' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>, void>' [ 0 5 10 91]
'drmGetDeviceNameFromFd' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::release' [ 0 5 10 250]
'std::__1::forward<std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >::unique_ptr<true, void>' [ 0 5 10 115]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, 1, true>' [ 0 5 10]
'gfx::ImageFamily::const_iterator::~const_iterator' [ 0 5 18 34]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char>' [ 0 5 10 65]
'std::__1::remove_reference<gfx::internal::ImageRep *>' [ 0 5 10]
'std::__1::operator==<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__end_cap' [ 0 5 10 174]
'gfx::BufferOffsetForBufferFormat::offset_in_2x2_sub_sampling_sizes' [ 0 5 34]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::__destroy<gfx::PathElement>' [ 0 5 10 68]
'std::__1::__atomic_base<unsigned int, false>::store' [ 0 5 10 46]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::destroy<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'std::__1::__compressed_pair<SkBitmap *, std::__1::default_delete<SkBitmap> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::destroy<gfx::BreakList<bool> >' [ 0 5 10 73]
'std::__1::remove_reference<const std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> &>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::HorizontalShadowSource *>' [ 0 5 10]
'compress_func' [ 0]
'std::__1::forward<gfx::(anonymous namespace)::RotatedSource *>' [ 0 5 10]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__alloc' [ 0 5 10 89]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 89]
'gfx::Quaternion' [ 0 5]
'std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>' [ 0 5 10]
'SkMinScalar' [ 0]
'base::internal::DstRangeRelationToSrcRange<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::__compressed_pair_elem<gfx::ColorTransformToLinear *, 0, false>::__compressed_pair_elem<gfx::ColorTransformToLinear *&, void>' [ 0 5 10 75]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>::deallocate' [ 0 5 10 132]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__end_cap' [ 0 5 10 274]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::begin' [ 0 5 10 78]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__insert_node_at' [ 0 5 10 357]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, 1, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, bool>, std::__1::__nat>' [ 0 5 10]
'color_utils::KMeanImageSampler::KMeanImageSampler' [ 0 13 32]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::insert' [ 0 5 10 113]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>::base' [ 0 5 10 44]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::remove_reference<const gfx::(anonymous namespace)::CaseInsensitiveCompare &>' [ 0 5 10]
'color_utils::(anonymous namespace)::Linearize' [ 0 13 36]
'gfx::internal::ImageSkiaStorage::HasRepresentationAtAllScales' [ 0 5 15 33]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::~vector' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, const std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10 102]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::vector' [ 0 5 10 84]
'std::__1::remove_reference<const color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> >' [ 0 5 10]
'gfx::RenderText::cursor_position' [ 0 5 17]
'gfx::(anonymous namespace)::CompareIconDescription' [ 0 5 28]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned char, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'Cr_z_deflateEnd' [ 0]
'std::__1::min<float, std::__1::__less<float, float> >' [ 0 5 10]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__annotate_shrink' [ 0 5 10 72]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__destroy<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 164]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>' [ 0 5 10]
'gfx::internal::ImageRepSkia::ImageRepSkia' [ 0 5 15 29]
'std::__1::operator-<const std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'gfx::LogicalCursorDirection' [ 0 5]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::remove_reference<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10]
'std::__1::allocator<unsigned char>' [ 0 5 10]
'std::__1::allocator<cc::PaintFlags>::construct<cc::PaintFlags, cc::PaintFlags>' [ 0 5 10 37]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__destruct_at_end' [ 0 5 10 131]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::end' [ 0 5 10 142]
'std::__1::forward<gfx::(anonymous namespace)::MaskedImageSource *&>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >' [ 0 5 10]
'std::__1::underlying_type<gfx::BufferFormat>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::~vector' [ 0 5 10 167]
'std::__1::__wrap_iter<const unsigned int *>::operator--' [ 0 5 10 45]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &, 1, false>::__get' [ 0 5 10 107]
'std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>::operator()' [ 0 5 10 78]
'drmGetHashTable' [ 0]
'gfx::RenderText::GetWordLookupDataAtPoint' [ 0 5 17]
'uint32_t' [ 0]
'std::__1::ios_base::flags' [ 0 5 10 20]
'drm_draw' [ 0]
'std::__1::allocator<unsigned int>::allocate' [ 0 5 10 35]
'scoped_refptr<gfx::internal::ImageStorage>::Release' [ 0 44]
'std::__1::__const_void_pointer<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor>, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::second' [ 0 5 10 275]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::UpdateRTLSegmentRanges' [ 0 5 28 49]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'std::__1::min_element<std::__1::__wrap_iter<const gfx::Rect *>, (lambda at ../../ui/gfx/render_text.cc:1024:7)>' [ 0 5 10]
'gfx::(anonymous namespace)::ResizeSource::GetImageForScale' [ 0 5 28 42]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >::operator[]' [ 0 5 10 87]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::size' [ 0 5 10 54]
'std::__1::allocator<cc::PaintFlags>::allocate' [ 0 5 10 37]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn>, void, void>' [ 0 5 10 99]
'gfx::internal::ImageStorage::AddRepresentation' [ 0 5 15 29]
'_drmPlatformBusInfo' [ 0]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::vector' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__construct<gfx::Font, const gfx::Font &>' [ 0 5 10 61]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>::__nat, std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::__const_void_pointer<SkPath *, std::__1::allocator<SkPath>, false>' [ 0 5 10]
'drmScatterGatherFree' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >, true>' [ 0 5 10 30]
'std::__1::__to_raw_pointer<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::insert' [ 0 5 10 133]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >::unique_ptr<true, void>' [ 0 5 10 153]
'std::__1::move_if_noexcept<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'gfx::ImageSkiaOperations::CreateHSLShiftedImage' [ 0 5 26]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::destroy<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10 100]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::capacity' [ 0 5 10 71]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformMatrix *, void>' [ 0 5 10 71]
'ui::InterpolatedTransformAboutPivot' [ 0 4]
'gfx::SelectionModel::set_selection_start' [ 0 5 21]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::select_on_container_copy_construction' [ 0 5 10 102]
'base::LazyInstance<std::__1::basic_string<char>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<std::__1::basic_string<char> > >' [ 0 6]
'Cr_z_Bytef' [ 0]
'std::__1::__pointer_type<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >' [ 0 5 10]
'gfx::ImageSkia::width' [ 0 5 16]
'std::__1::remove_reference<cc::PaintFlags *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::allocate' [ 0 5 10 272]
'std::__1::make_unique<gfx::ColorTransformFromBT2020CL>' [ 0 5 10]
'ui::SequentialIDGenerator::SequentialIDGenerator' [ 0 4 27]
'base::WrapUnique<gfx::RenderTextHarfBuzz>' [ 0 6]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::HorizontalShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10]
'gfx::FontList::GetCapHeight' [ 0 5 15]
'std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::__get_np' [ 0 5 10 362]
'std::__1::__vector_base<float, std::__1::allocator<float> >::clear' [ 0 5 10 61]
'gfx::ColorTransformInternal::ColorTransformInternal' [ 0 5 29]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__node_alloc' [ 0 5 10 338]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::~vector' [ 0 5 10 213]
'base::internal::OptionalBase<SkBitmap>::~OptionalBase' [ 0 6 16 40]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::pop_back' [ 0 5 10 96]
'gfx::ImageSkiaRep::pixel_width' [ 0 5 19]
'std::__1::__pointer_type_imp::__pointer_type<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<gfx::ImageSkia *, std::__1::allocator<gfx::ImageSkia> >' [ 0 5 10]
'gfx::Matrix3F::set' [ 0 5 15]
'drmFreeVersion' [ 0]
'Cr_z_gzbuffer' [ 0]
'std::__1::__hash_value_type<unsigned int, int>' [ 0 5 10]
'std::__1::forward<const gfx::ImageSkiaRep &>' [ 0 5 10]
'SkTMax<float>' [ 0]
'gfx::RenderText::GetStringRect' [ 0 5 17]
'SkBitmap::isNull' [ 0 10]
'std::__1::iterator_traits<const float *>' [ 0 5 10]
'AnnotateMutexIsNotPHB' [ 0]
'std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >::pair<true, false>' [ 0 5 10 209]
'std::__1::__const_void_pointer<std::__1::pair<const unsigned int, unsigned short> *, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> >, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFontSet *, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'SkFontStyle' [ 0]
'std::__1::__compressed_pair_elem<gfx::internal::TextRunHarfBuzz *, 0, false>::__compressed_pair_elem<gfx::internal::TextRunHarfBuzz *, void>' [ 0 5 10 78]
'std::__1::__unwrap_iter<gfx::BreakList<bool> *>' [ 0 5 10]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'drm_event_vblank' [ 0]
'std::__1::__size_type<std::__1::allocator<gfx::BreakList<bool> >, long, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::__tree_iterator' [ 0 5 10 190]
'gfx::ShadowValue::y' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<float> >::select_on_container_copy_construction' [ 0 5 10 57]
'std::__1::move_backward<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::ShadowValue>' [ 0 5 10]
'std::__1::__compressed_pair<_FcPattern *, FcPatternDeleter>::__compressed_pair<_FcPattern *, true>' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::allocate' [ 0 5 10 96]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::unique_ptr<true, void>' [ 0 5 10 141]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__end_cap' [ 0 5 10 85]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_delete' [ 0 5 10 68]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >' [ 0 5 10]
'gfx::ColorTransformInternal' [ 0 5]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::push_back' [ 0 5 10 177]
'gfx::Size::SetSize' [ 0 5 11]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__compressed_pair<nullptr_t, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>' [ 0 5 10 154]
'std::__1::move<std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__emplace_unique_extract_key<std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 338]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::push_back' [ 0 5 10 140]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10 81]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::clear' [ 0 5 10 88]
'color_utils::GridSampler' [ 0 13]
'drmAgpDeviceId' [ 0]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::release' [ 0 5 10 340]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator+' [ 0 5 10 82]
'std::__1::forward<base::TimeDelta>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, 1, true>' [ 0 5 10]
'drmAgpRelease' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::~__vector_base' [ 0 5 10 140]
'std::__1::__libcpp_numeric_limits<unsigned long, true>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >' [ 0 5 10]
'std::__1::__const_pointer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, true>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10 275]
'color_utils::GetLuma' [ 0 13]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *>::move_iterator' [ 0 5 10 77]
'std::__1::operator!=<const gfx::ShadowValue *>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::operator[]' [ 0 5 10 62]
'__int16_t' [ 0]
'base::AsserterBase::AsserterBase' [ 0 6 20]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::deallocate' [ 0 5 10 64]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::ClientNativePixmapOpaque>' [ 0 5 10]
'_drmPciBusInfo' [ 0]
'std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::__tree_const_iterator' [ 0 5 10 362]
'std::__1::operator!=<const gfx::Rect *>' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__root' [ 0 5 10 141]
'std::__1::__tuple_less<1>' [ 0 5 10]
'std::__1::conditional<true, const gfx::Font &, gfx::Font &&>' [ 0 5 10]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::~__vector_base' [ 0 5 10 121]
'std::__1::conditional<true, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__construct<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 164]
'gf2_matrix_times' [ 0]
'std::__1::forward_as_tuple<const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::construct<gfx::internal::LineSegment, gfx::internal::LineSegment>' [ 0 5 10 78]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >' [ 0 5 10]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::__unique_if<ui::InterpolatedConstantTransform>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor>, 1, true>::__compressed_pair_elem<const std::__1::allocator<base::FileDescriptor> &, void>' [ 0 5 10 86]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::__compressed_pair<nullptr_t, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>' [ 0 5 10 146]
'std::__1::max<double, std::__1::__less<double, double> >' [ 0 5 10]
'std::__1::remove_reference<gfx::Vector2d>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_delete' [ 0 5 10 50]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 109]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &, void>' [ 0 5 10 107]
'cc::PaintFlags::setTextSize' [ 0 4 16]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >' [ 0 5 10]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::clear' [ 0 5 10 85]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::end' [ 0 5 10 76]
'sync_wait' [ 0]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::size' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__construct_backward<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10 90]
'AnnotateBarrierDestroy' [ 0]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::capacity' [ 0 5 10 76]
'std::__1::__const_pointer<std::__1::pair<unsigned long, int>, std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> >, true>' [ 0 5 10]
'gfx::ColorTransformInternal::Simplify' [ 0 5 29]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >, true>' [ 0 5 10 30]
'base::subtle::GetOrCreateLazyPointer<scoped_refptr<gfx::FontListImpl> >' [ 0 6 14]
'drmModeFreeEncoder' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__split_buffer' [ 0 5 10 110]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::clear' [ 0 5 10 92]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator->' [ 0 5 10 81]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector' [ 0 5 10 70]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::back' [ 0 5 10 115]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::deallocate' [ 0 5 10 97]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::select_on_container_copy_construction' [ 0 5 10 81]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__destruct_at_end' [ 0 5 10 71]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::destroy' [ 0 5 10 866]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__unlink_nodes' [ 0 5 10 243]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::__destroy<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 144]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::rbegin' [ 0 5 10 68]
'gfx::VectorIconRep' [ 0 5]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::__alloc' [ 0 5 10 276]
'drmPrimeHandleToFD' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> *>::__nat, std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::allocator<cc::PaintTypeface>' [ 0 5 10]
'std::__1::allocator<cc::PaintFlags>' [ 0 5 10]
'drm_mode_crtc_page_flip_target' [ 0]
'std::__1::forward<ui::InterpolatedTransform *>' [ 0 5 10]
'std::__1::allocator<void>' [ 0 5 10]
'drm_ctx_t' [ 0]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> &>' [ 0 5 10]
'copysign' [ 0]
'gfx::BreakList<int>::ApplyValue' [ 0 5 21]
'std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>' [ 0 5 10]
'scoped_refptr<base::RefCountedBytes>::Release' [ 0 38]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >, false>' [ 0 5 10]
'logging::CheckGTImpl<float, float>' [ 0 9]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::operator[]' [ 0 5 10 76]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<gfx::Font> >, std::__1::__tree_node<gfx::Font, void *> >' [ 0 5 10]
'_drmVersion' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__root_ptr' [ 0 5 10 866]
'std::__1::allocator<cc::PaintTypeface>::deallocate' [ 0 5 10 40]
'std::__1::allocator<std::__1::basic_string<char> >::destroy' [ 0 5 10 52]
'std::__1::pointer_traits<const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::back' [ 0 5 10 62]
'std::__1::__size_type<std::__1::allocator<gfx::ShadowValue>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::__destroy<gfx::BreakList<bool> >' [ 0 5 10 73]
'std::__1::conditional<true, std::__1::pair<int, unsigned int>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, 0, false>' [ 0 5 10]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::rbegin' [ 0 5 10 181]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::vector' [ 0 5 10 140]
'__m128i' [ 0]
'std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>, void>' [ 0 5 10 91]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::swap' [ 0 48]
'gfx::Image' [ 0 5]
'base::internal::OptionalBase<cc::SkiaPaintCanvas>' [ 0 6 16]
'Cr_z_deflateResetKeep' [ 0]
'std::__1::__tuple_leaf<0, unsigned int &&, false>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::append' [ 0 5 10 126]
'gfx::Rect::Inset' [ 0 5 11]
'std::__1::remove_reference<gfx::(anonymous namespace)::ResizeSource *>' [ 0 5 10]
'drmGetEntry' [ 0]
'ui::InterpolatedTransform' [ 0 4]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, long, true>' [ 0 5 10]
'std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>' [ 0 5 10]
'std::__1::forward<unsigned long>' [ 0 5 10]
'std::__1::move_if_noexcept<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<float, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::construct<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 238]
'std::__1::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >::release' [ 0 5 10 115]
'std::__1::iterator_traits<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'base::internal::saturated_cast_impl<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::__advance<const unsigned char *>' [ 0 5 10]
'SkBitmapOperations::Rotate' [ 0 20]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 85]
'gfx::(anonymous namespace)::FontWeightToFCWeight' [ 0 5 28]
'std::__1::remove_reference<std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >' [ 0 5 10]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >::~pair' [ 0 5 10 188]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>::deallocate' [ 0 5 10 61]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::end' [ 0 5 10 115]
'std::__1::__less<long, long>' [ 0 5 10]
'gfx::Point3F' [ 0 5]
'gfx::CALayerParams' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__construct_backward<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10 100]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::Font *>::__nat, gfx::Font>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::size' [ 0 5 10 62]
'base::Lock::Release' [ 0 6 12]
'std::__1::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >::unique_ptr<true, void>' [ 0 5 10 115]
'gfx::Point3F::y' [ 0 5 14]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::~__vector_base' [ 0 5 10 69]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::operator+=' [ 0 5 10 77]
'gfx::RenderText::SetDisplayOffset' [ 0 5 17]
'scoped_refptr<gfx::PlatformFont>::operator=' [ 0 34]
'std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::operator+' [ 0 5 10 62]
'std::__1::forward<gfx::internal::ImageRepPNG *&>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *>::__nat, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'SkMatrix::getScaleX' [ 0 10]
'gfx::ImageSkia::isNull' [ 0 5 16]
'std::nullptr_t' [ 0 5]
'logging::CheckGEImpl<float, int>' [ 0 9]
'drmModeDetachMode' [ 0]
'gfx::BreakList<int>::SetMax' [ 0 5 21]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::operator-' [ 0 5 10 70]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> > &, 1, false>::__get' [ 0 5 10 104]
'color_utils::GetContrastRatio' [ 0 13]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'ui::InterpolatedMatrixTransform' [ 0 4]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'std::__1::operator==<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::forward<skia::ImageOperations::ResizeMethod &>' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> > &>' [ 0 5 10]
'base::internal::CheckedMulFastOp<long, int>::Do<long>' [ 0 6 16 45]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_shrink' [ 0 5 10 101]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<gfx::Font::Weight &>' [ 0 5 10]
'std::__1::operator==<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >' [ 0 5 10]
'gfx::Insets::width' [ 0 5 13]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__copy_assign_alloc' [ 0 5 10 57]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__make_iter' [ 0 5 10 141]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::base' [ 0 5 10 68]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>::operator()' [ 0 5 10 72]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__end_cap' [ 0 5 10 140]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >, 1, false>' [ 0 5 10]
'drmModePlanePtr' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<float>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::construct<gfx::Font, gfx::Font &>' [ 0 5 10 61]
'gfx::FontListImpl::GetCapHeight' [ 0 5 19]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::empty' [ 0 5 10 133]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >' [ 0 5 10]
'std::__1::forward<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *&>' [ 0 5 10]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>::allocate' [ 0 5 10 61]
'std::__1::pair<gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::ClientNativePixmapOpaque' [ 0 5 28 54]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >::allocate' [ 0 5 10 61]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::__end_cap' [ 0 5 10 91]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'Cr_z_copy_with_crc' [ 0]
'std::__1::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >::unique_ptr<true, void>' [ 0 5 10 111]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 108]
'div_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<cc::PaintFlags, std::__1::allocator<cc::PaintFlags>, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>::deallocate' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::destroy<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 152]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::at' [ 0 5 10 213]
'std::__1::vector<int, std::__1::allocator<int> >::max_size' [ 0 5 10 50]
'base::internal::saturated_cast<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'drm_set_version' [ 0]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::get_deleter' [ 0 5 10 164]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkPoint *, 0, false>::__compressed_pair_elem<SkPoint *, void>' [ 0 5 10 55]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__construct_backward<gfx::DecoratedText::RangedAttribute *>' [ 0 5 10 87]
'gfx::RenderText::SetDirectionalityMode' [ 0 5 17]
'base::internal::DstRangeRelationToSrcRangeImpl<int, double, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'gfx::Rect::bottom' [ 0 5 11]
'__kernel_ulong_t' [ 0]
'std::__1::add_lvalue_reference<char>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::ClientNativePixmap>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 340]
'gfx::FontList::~FontList' [ 0 5 15]
'Cr_z_inflateInit_' [ 0]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>' [ 0 5 10]
'base::Optional<cc::SkiaPaintCanvas>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> &>' [ 0 5 10 81]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::find' [ 0 5 10 191]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__end_cap' [ 0 5 10 147]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::release' [ 0 5 10 103]
'std::__1::allocator_traits<std::__1::allocator<float> >::destroy<float>' [ 0 5 10 57]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::size' [ 0 5 10 338]
'gfx::ColorTransformSkTransferFn::ColorTransformSkTransferFn' [ 0 5 33]
'std::__1::remove_reference<int *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>, 1, true>' [ 0 5 10]
'__pthread_internal_list' [ 0]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__vector_base' [ 0 5 10 274]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::deallocate' [ 0 5 10 101]
'gfx::SizeF::height' [ 0 5 12]
'gfx::(anonymous namespace)::ButtonImageSource::ButtonImageSource' [ 0 5 28 47]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >, true>' [ 0 5 10 30]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__destruct_at_end' [ 0 5 10 96]
'uint_least32_t' [ 0]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, true>' [ 0 5 10]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__annotate_delete' [ 0 5 10 267]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::deallocate' [ 0 5 10 87]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__annotate_new' [ 0 5 10 120]
'std::__1::vector<int, std::__1::allocator<int> >::resize' [ 0 5 10 50]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::allocate' [ 0 5 10 71]
'gfx::internal::SkiaTextRenderer::SetShader' [ 0 5 15 33]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__destruct_at_end' [ 0 5 10 143]
'std::__1::conditional<true, const std::__1::pair<gfx::Font, gfx::Range> &, std::__1::pair<gfx::Font, gfx::Range> &&>' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__annotate_shrink' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::max_size' [ 0 5 10 68]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::~unique_ptr' [ 0 5 10 157]
'std::__1::__rebind_pointer<void *, std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'long unsigned int' [ 0]
'std::__1::piecewise_construct_t' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<ui::InterpolatedConstantTransform, true>' [ 0 5 10]
'gfx::internal::TextRunHarfBuzz::CountMissingGlyphs::kMissingGlyphId' [ 0 5 15 32 52]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::destroy<gfx::ImageSkiaRep>' [ 0 5 10 101]
'gfx::internal::SkiaTextRenderer::SetDrawLooper' [ 0 5 15 33]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::(anonymous namespace)::CachedFont>, 1, true>' [ 0 5 10]
'std::__1::allocator<gfx::Font>' [ 0 5 10]
'logging::CheckGEImpl' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >, 1, true>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::capacity' [ 0 5 10 76]
'std::__1::__tuple_leaf<3, const base::TimeDelta &, false>' [ 0 5 10]
'gfx::Image::HasRepresentation' [ 0 5 12]
'std::__1::__compressed_pair_elem<gfx::internal::TextRunHarfBuzz *, 0, false>::__compressed_pair_elem<gfx::internal::TextRunHarfBuzz *&, void>' [ 0 5 10 78]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__make_iter' [ 0 5 10 85]
'std::__1::forward<gfx::ColorTransformToLinear *&>' [ 0 5 10]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::second' [ 0 5 10 156]
'gfx::operator!=' [ 0 5]
'std::__1::move<gfx::internal::Line &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::~unique_ptr' [ 0 5 10 454]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 67]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::get' [ 0 5 10 454]
'std::__1::__hash_value_type<unsigned int, unsigned int>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__insert_multi<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 332]
'std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformStep *>' [ 0 5 10]
'gfx::Vector2d::operator Vector2dF' [ 0 5 15]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ShadowNineboxSource *, void>' [ 0 5 10 68]
'gfx::GenericSharedMemoryId::GenericSharedMemoryId' [ 0 5 28]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::clear' [ 0 5 10 152]
'drmMap' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, long, true>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::imbue' [ 0 5 10 57]
'base::internal::SafeUnsignedAbs<int>' [ 0 6 16]
'logging::MakeCheckOpString<float, float>' [ 0 9]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::empty' [ 0 5 10 76]
'std::__1::allocator<gfx::ImagePNGRep>::destroy' [ 0 5 10 39]
'drmUnlock' [ 0]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__annotate_delete' [ 0 5 10 78]
'std::__1::unique_ptr<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >::reset' [ 0 5 10 95]
'gfx::SelectionBound::edge_top_rounded' [ 0 5 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__recommend' [ 0 5 10 115]
'drmFreeHost1xDevice' [ 0]
'std::__1::__compressed_pair<gfx::ClientNativePixmapDmaBuf *, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > &>' [ 0 5 10]
'std::__1::make_pair<const gfx::IconDescription &, gfx::ImageSkia &>' [ 0 5 10]
'SkImageInfo' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::remove' [ 0 5 10 447]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__end_cap' [ 0 5 10 220]
'sk_sp<SkDrawLooper>' [ 0]
'std::__1::remove_reference<gfx::(anonymous namespace)::HSLImageSource *>' [ 0 5 10]
'std::__1::__const_void_pointer<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>, false>' [ 0 5 10]
'gfx::SubsamplingFactorForBufferFormat' [ 0 5]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::RotatedSource, true>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'_FcType' [ 0]
'std::__1::addressof<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'gfx::ImageSkia::GetSupportedScales' [ 0 5 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::__nat, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::data' [ 0 5 10 76]
'drmSetClientCap' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >, long, true>' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformToLinear>::operator()' [ 0 5 10 55]
'std::__1::remove_reference<gfx::internal::ImageRepSkia *&>' [ 0 5 10]
'gfx::SelectionBound::SetEdge' [ 0 5 21]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, true>' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont>, false>' [ 0 5 10]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, unsigned int>' [ 0 11 20]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> >::__compressed_pair<nullptr_t, const std::__1::allocator<float> &>' [ 0 5 10 67]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__vector_base' [ 0 5 10 147]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__node_alloc' [ 0 5 10 866]
'std::__1::move<gfx::ShadowValue &>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::~__split_buffer' [ 0 5 10 63]
'gfx::PathElement' [ 0 5]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__erase_unique<unsigned int>' [ 0 5 10 557]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::HSLImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::HSLImageSource *&, void>' [ 0 5 10 90]
'std::__1::conditional<false, std::__1::pointer_traits<float *>::__nat, float>' [ 0 5 10]
'std::__1::__unique_if<gfx::(anonymous namespace)::IconWithBadgeSource>' [ 0 5 10]
'base::TimeDelta::operator>=' [ 0 6 17]
'drmSetContextFlags' [ 0]
'std::__1::pair<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool &, false>' [ 0 5 10 126]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__annotate_new' [ 0 5 10 56]
'std::__1::remove_reference<std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10]
'tree_desc' [ 0]
'gfx::FontListImpl::Derive' [ 0 5 19]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >::unique_ptr<true, void>' [ 0 5 10 111]
'gfx::(anonymous namespace)::VectorIconSource::HasRepresentationAtAllScales' [ 0 5 28 46]
'std::__1::forward<ui::InterpolatedConstantTransform *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedTransform>, 1, true>::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedTransform>, void>' [ 0 5 10 96]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::ClientNativePixmapOpaque, true>' [ 0 5 10]
'drmHandleEvent' [ 0]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__hash_iterator' [ 0 5 10 117]
'scoped_refptr<gfx::FontListImpl>::swap' [ 0 34]
'gfx::FontList::FirstAvailableOrFirst' [ 0 5 15]
'drm_drawable_info_type_t' [ 0]
'drm_lock_t' [ 0]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'gfx::IconDescription' [ 0 5]
'std::__1::pointer_traits<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::GpuFenceHandle::~GpuFenceHandle' [ 0 5 21]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 114]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, false>' [ 0 5 10]
'DIR' [ 0]
'std::__1::unique_ptr<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >::reset' [ 0 5 10 105]
'base::internal::MoveConstructible<false>' [ 0 6 16]
'SkRefCntBase::ref::operator()' [ 0 14 19]
'logging::MakeCheckOpString<unsigned int, unsigned short>' [ 0 9]
'gfx::internal::SkiaTextRenderer::SetFontRenderParams' [ 0 5 15 33]
'AnnotateBarrierWaitAfter' [ 0]
'std::__1::operator==<const gfx::BreakList<bool> *, const gfx::BreakList<bool> *>' [ 0 5 10]
'base::internal::CheckOnFailure::HandleFailure<long>' [ 0 6 16 32]
'float' [ 0]
'std::__1::forward<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10]
'std::__1::remove_reference<float &>' [ 0 5 10]
'__off64_t' [ 0]
'drm_lock' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRepPNG>, 1, true>' [ 0 5 10]
'SkPixmap::writable_addr8' [ 0 10]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::__compressed_pair<int, true>' [ 0 5 10 186]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::clear' [ 0 5 10 141]
'gfx::ElideFilename' [ 0 5]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::WeightedColor *>::__wrap_iter' [ 0 5 10 76]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource>, false>' [ 0 5 10 30]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::clear' [ 0 5 10 85]
'gfx::(anonymous namespace)::kDefaultColor' [ 0 5 28]
'gfx::(anonymous namespace)::AsciiBreak' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__construct<gfx::ImagePNGRep, const gfx::ImagePNGRep &>' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>, false>' [ 0 5 10 30]
'std::__1::__pointer_type<unsigned char, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::deallocate' [ 0 5 10 74]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >::operator->' [ 0 5 10 417]
'gfx::ImageSkia::SetReadOnly' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::max_size' [ 0 5 10 61]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool, false>' [ 0 5 10 405]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *&, void>' [ 0 5 10 267]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>, false>' [ 0 5 10 30]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__end_node' [ 0 5 10 725]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::__destruct_at_end' [ 0 5 10 276]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10 109]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10]
'AnnotateNewMemory' [ 0]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::reset' [ 0 5 10 157]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__rehash' [ 0 5 10 410]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::~__vector_base' [ 0 5 10 120]
'std::__1::vector<int, std::__1::allocator<int> >' [ 0 5 10]
'Cr_z_inflateReset2' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile>, true>' [ 0 5 10 30]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::destroy<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'SkNVRefCnt<SkData>' [ 0]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>' [ 0 5 10]
'hb_blob_t' [ 0]
'logging::MakeCheckOpValueString<gfx::ElideBehavior>' [ 0 9]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::capacity' [ 0 5 10 129]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__destruct_at_end' [ 0 5 10 61]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, unsigned int> *>::pointer_to' [ 0 5 10 78]
'std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::size' [ 0 5 10 332]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::HasGlyphForCharacter' [ 0 5 28 40]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::clear' [ 0 5 10 81]
'gfx::Insets::top' [ 0 5 13]
'drmGetPrimaryDeviceNameFromFd' [ 0]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::unique_ptr<true, void>' [ 0 5 10 306]
'base::internal::MaxExponentPromotion<unsigned long, int, base::internal::LEFT_PROMOTION>' [ 0 6 16]
'scoped_refptr<gfx::FontListImpl>::~scoped_refptr' [ 0 34]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >::instance' [ 0 6 464]
'Cr_z_deflateGetDictionary' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::construct<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned int &&>, std::__1::tuple<> >' [ 0 5 10 330]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::internal::(anonymous namespace)::PNGImageSource *, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10 102]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__recommend' [ 0 5 10 84]
'std::__1::pointer_traits<const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::pointer_to' [ 0 5 10 190]
'logging::MakeCheckOpValueString<gfx::BaselineStyle>' [ 0 9]
'std::__1::vector<int, std::__1::allocator<int> >::~vector' [ 0 5 10 50]
'std::__1::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10]
'std::__1::iterator_traits<const gfx::Font *>' [ 0 5 10]
'std::__1::__move_backward<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::forward<SkPoint *>' [ 0 5 10]
'std::__1::input_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &, 1, false>::__get' [ 0 5 10 104]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::vector' [ 0 5 10 72]
'gfx::RenderText::~RenderText' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform>, false>' [ 0 5 10 30]
'std::__1::__wrap_iter<const gfx::ImagePNGRep *>::operator++' [ 0 5 10 49]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__push_back_slow_path<gfx::ImagePNGRep>' [ 0 5 10 76]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::unique_ptr' [ 0 5 10 103]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >' [ 0 5 10]
'gfx::BreakList<unsigned long>::SetValue' [ 0 5 31]
'std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>' [ 0 5 10]
'timespec' [ 0]
'_IO_FILE' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique_key_args<unsigned int, std::__1::pair<unsigned int, int> >' [ 0 5 10 447]
'gfx::NineImagePainter::NineImagePainter' [ 0 5 23]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__annotate_new' [ 0 5 10 177]
'std::__1::remove_reference<gfx::(anonymous namespace)::MaskedImageSource *&>' [ 0 5 10]
'gfx::(anonymous namespace)::ApplyForcedDirection' [ 0 5 28]
'drmGetMaxNodeName' [ 0]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::empty' [ 0 5 10 138]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__construct_range_forward<gfx::ImageSkiaRep *, gfx::ImageSkiaRep *>' [ 0 5 10 69]
'std::__1::remove_reference<std::__1::allocator<gfx::PathElement> &>' [ 0 5 10]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::value_comp' [ 0 5 10 866]
'std::__1::allocator<gfx::internal::Line>::construct<gfx::internal::Line, const gfx::internal::Line &>' [ 0 5 10 42]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::erase' [ 0 5 10 181]
'_drmBufInfo' [ 0]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::begin' [ 0 5 10 62]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 76]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ClientNativePixmapDmaBuf *, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >::__compressed_pair<gfx::ClientNativePixmapDmaBuf *&, true>' [ 0 5 10 120]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::pair<int, int>' [ 0 5 10]
'hb_var_int_t' [ 0]
'AnnotateUnpublishMemoryRange' [ 0]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::back' [ 0 5 10 56]
'std::__1::remove_reference<gfx::(anonymous namespace)::IconWithBadgeSource *&>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::max_size' [ 0 5 10 76]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::size' [ 0 5 10 56]
'std::__1::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >::reset' [ 0 5 10 99]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::RotatedSource *>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<base::internal::StrictNumeric<unsigned long> >::value' [ 0 6 16 47 103]
'std::__1::pointer_traits<std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>' [ 0 5 10]
'std::__1::forward<gfx::SkiaColorTransform *>' [ 0 5 10]
'std::__1::__tuple_types<const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__construct_backward<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 101]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>::destroy' [ 0 5 10 61]
'std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::i18n::BreakIterator>, 1, true>' [ 0 5 10]
'SkBitmapOperations::UnPreMultiply' [ 0 20]
'base::WhitespaceHandling' [ 0 6]
'std::__1::remove_reference<gfx::internal::ImageRepPNG *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__destroy<gfx::ImageSkiaRep>' [ 0 5 10 69]
'std::__1::__sift_down<bool (*&)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &), std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *> >' [ 0 5 10]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::FontFuncs>' [ 0 6]
'gfx::(anonymous namespace)::RectangleText::RectangleText' [ 0 5 28 43]
'std::__1::remove_reference<const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'std::initializer_list<gfx::ShadowValue>::end' [ 0 5 41]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ButtonImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >::__compressed_pair<gfx::(anonymous namespace)::ButtonImageSource *&, true>' [ 0 5 10 152]
'base::WrapUnique<gfx::(anonymous namespace)::ClientNativePixmapOpaque>' [ 0 6]
'_drmModePlaneRes' [ 0]
'std::__1::__const_pointer<cc::FrameMetadata, cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata>, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 266]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::TransparentImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::TransparentImageSource *&, void>' [ 0 5 10 98]
'std::__1::conditional<true, std::__1::pair<unsigned long, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment> &, void>' [ 0 5 10 95]
'gfx::RenderText::obscured' [ 0 5 17]
'std::__1::__pointer_type<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::operator[]' [ 0 5 10 70]
'drmSyncobjExportSyncFile' [ 0]
'SkPixmap::addr8::operator()' [ 0 10 17]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >, void>' [ 0 5 10 186]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformFromLinear>, 1, true>' [ 0 5 10]
'drmModeFreeObjectProperties' [ 0]
'gfx::(anonymous namespace)::kArcTimeMs' [ 0 5 28]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::operator()' [ 0 5 10 99]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__annotate_shrink' [ 0 5 10 140]
'Cr_z_zlibCompileFlags' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::data' [ 0 5 10 132]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::~__split_buffer' [ 0 5 10 176]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >::get' [ 0 5 10 71]
'std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>::~pair' [ 0 5 10 68]
'drmFreeBufs' [ 0]
'base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >' [ 0 6 16]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::deallocate' [ 0 5 10 84]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__destruct_at_end' [ 0 5 10 142]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__push_back_slow_path<SkPath>' [ 0 5 10 56]
'std::__1::remove_reference<const std::__1::allocator<float> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<unsigned char, true>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::destroy' [ 0 5 10 284]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::FileDescriptor *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'std::__1::__compressed_pair<gfx::ColorTransformMatrix *, std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__annotate_new' [ 0 5 10 167]
'std::__1::operator-<const color_utils::(anonymous namespace)::KMeanCluster *, const color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__wrap_iter<const float *>::base' [ 0 5 10 38]
'sk_sp<SkString::Rec>::operator->' [ 0 22]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__end_cap' [ 0 5 10 75]
'std::__1::forward<gfx::Font>' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > &>' [ 0 5 10]
'drm_mode_create_lease' [ 0]
'gfx::ColorTransformInternal::IsIdentity' [ 0 5 29]
'build_tree' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::__construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<int, unsigned int> >' [ 0 5 10 139]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::base' [ 0 5 10 71]
'std::__1::__wrap_iter<const gfx::ImagePNGRep *>::operator->' [ 0 5 10 49]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::move<gfx::internal::ImageSkiaStorage *&>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >::unique_ptr<true, void>' [ 0 5 10 135]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >, false>' [ 0 5 10]
'std::__1::__pointer_type<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__destruct_at_end' [ 0 5 10 85]
'std::__1::__add_lvalue_reference_impl<gfx::internal::ImageRepSkia, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::operator->' [ 0 5 10 378]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::operator=' [ 0 5 10 178]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >::unique_ptr<true, void>' [ 0 5 10 87]
'drmModeConnectorSetProperty' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__node_alloc' [ 0 5 10 557]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct_forward<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'base::Optional<cc::SkiaPaintCanvas>::~Optional' [ 0 6 37]
'std::__1::__wrap_iter<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::__wrap_iter' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<ui::InterpolatedTransform *, 0, false>' [ 0 5 10]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'base::DefaultRefCountedTraits<gfx::FontListImpl>' [ 0 6]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>::__wrap_iter' [ 0 5 10 50]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >' [ 0 5 10]
'gfx::internal::ImageSkiaStorage::read_only' [ 0 5 15 33]
'gfx::(anonymous namespace)::RectangleString::Init' [ 0 5 28 45]
'Cr_z_gzoffset64' [ 0]
'switches::kV' [ 0 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 209]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::end' [ 0 5 10 237]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >, 1, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *&>' [ 0 5 10]
'config_s' [ 0]
'SkBitmapOperations::CreateButtonBackground' [ 0 20]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::push_back' [ 0 5 10 133]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<gfx::internal::Line> &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__annotate_delete' [ 0 5 10 119]
'std::__1::remove_reference<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *&>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_new' [ 0 5 10 70]
'std::__1::forward<SkBitmap &>' [ 0 5 10]
'std::__1::forward<gfx::ColorTransform *&>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::IconWithBadgeSource *, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >::__compressed_pair<gfx::(anonymous namespace)::IconWithBadgeSource *&, true>' [ 0 5 10 156]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::vector' [ 0 5 10 96]
'std::__1::swap<std::__1::basic_string<char> *>' [ 0 5 10]
'SkBitmapOperations::CreateInvertedBitmap' [ 0 20]
'std::__1::remove_const<gfx::ShadowValue>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Rect *>::operator*' [ 0 5 10 42]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>, 1, true>' [ 0 5 10]
'base::trace_event::TraceEventHandle' [ 0 6 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__construct<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 119]
'std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gfx::Font, void *> *, 0, false>' [ 0 5 10]
'gfx::ThrobberWaitingState' [ 0 5]
'base::i18n::UTF16CharIterator::char_pos' [ 0 6 12 31]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::operator+=<int>' [ 0 6 16 47]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::ButtonImageSource>' [ 0 5 10]
'gfx::SubsamplingFactorForBufferFormat::factor' [ 0 5 39]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, int> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 82]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >, true>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >, 1, false>' [ 0 5 10]
'__mbstate_t' [ 0]
'std::__1::remove_reference<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::NativePixmapPlane> &, void>' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::destroy<std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10 139]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >' [ 0 5 10]
'std::__1::swap<gfx::internal::ImageSkiaStorage *>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, unsigned long>' [ 0 6 16]
'std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>::operator()' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<gfx::Font *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> >::__compressed_pair<int, const std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> &>' [ 0 5 10 177]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__annotate_shrink' [ 0 5 10 85]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, true>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__emplace_unique_key_args<unsigned int, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 410]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>::__tree_iterator' [ 0 5 10 446]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::vector' [ 0 5 10 113]
'sk_sp<SkDrawLooper>::operator=' [ 0 21]
'static_tree_desc_s' [ 0]
'std::__1::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >::~unique_ptr' [ 0 5 10 111]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<int>' [ 0 6 16 85]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >, true>' [ 0 5 10 30]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::operator+' [ 0 5 10 68]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__copy_assign_alloc' [ 0 5 10 120]
'gfx::FontRenderParamsQuery::FontRenderParamsQuery' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__max_size' [ 0 5 10 74]
'gfx::Canvas::SaveLayerAlpha' [ 0 5 13]
'scoped_refptr<gfx::internal::ImageStorage>::scoped_refptr' [ 0 44]
'Cr_z_gzgetc' [ 0]
'std::__1::__compressed_pair_elem<_FcPattern *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__emplace_multi<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 332]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__annotate_delete' [ 0 5 10 132]
'(anonymous namespace)::HSLShift::LineProcCopy' [ 0 23 33]
'std::__1::__pointer_type<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::pair<unsigned int, int>::pair<unsigned int &, int &, false>' [ 0 5 10 35]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *>::pointer_to' [ 0 5 10 145]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10 92]
'cc::PaintFlags::setColor' [ 0 4 16]
'std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float>' [ 0 5 10 54]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, long, true>' [ 0 5 10]
'Cr_z_gzgets' [ 0]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::__destruct_at_end' [ 0 5 10 91]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, true>' [ 0 5 10]
'std::__1::max_element<int *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'base::string16' [ 0 6]
'std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >::pair<gfx::Image::RepresentationType &, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, false>' [ 0 5 10 148]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>, void>' [ 0 5 10 91]
'sync_legacy_merge_data' [ 0]
'__FILE' [ 0]
'drm_unique_t' [ 0]
'drm_map' [ 0]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__end_cap' [ 0 5 10 71]
'gfx::(anonymous namespace)::IsNewlineSegment' [ 0 5 28]
'std::__1::__pointer_type<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >' [ 0 5 10]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<gfx::Font, void *> *>::__nat, std::__1::__tree_node<gfx::Font, void *> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment>, 1, true>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__alloc' [ 0 5 10 138]
'std::__1::remove_reference<color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ShadowValue *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 64]
'std::__1::max<unsigned char, std::__1::__less<unsigned char, unsigned char> >' [ 0 5 10]
'std::__1::addressof<char>' [ 0 5 10]
'SkPixmap::addr8' [ 0 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign_alloc' [ 0 5 10 108]
'std::__1::default_delete<gfx::SkiaColorTransform>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'gfx::(anonymous namespace)::FindRunBreakingCharacter' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >' [ 0 5 10]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__end_cap' [ 0 5 10 59]
'scoped_refptr<gfx::PlatformFont>::scoped_refptr' [ 0 34]
'std::__1::forward<std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<long>' [ 0 6 16 76]
'std::__1::__pointer_type<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >' [ 0 5 10]
'gfx::Transform::Transform' [ 0 5 16]
'switches::kTestChildProcess' [ 0 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::DropShadowSource *, 0, false>' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'_FcResult' [ 0]
'std::__1::remove_reference<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::i18n::BreakIterator *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<const gfx::Size &>' [ 0 5 10]
'gfx::(anonymous namespace)::RectangleText::AddLine' [ 0 5 28 43]
'Cr_z_gztell' [ 0]
'std::__1::bidirectional_iterator_tag' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<SkPath> &>' [ 0 5 10]
'base::internal::ClampedAddOp<int, int, void>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__destroy<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 90]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__lower_bound<gfx::Image::RepresentationType>' [ 0 5 10 626]
'gfx::Canvas::GetBitmap' [ 0 5 13]
'gfx::ColorTransformPerChannelTransferFn::Transform' [ 0 5 41]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::SuperimposedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10 102]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::deallocate' [ 0 5 10 61]
'base::AtomicRefCount::Decrement' [ 0 6 22]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__push_back_slow_path<cc::PaintFlags>' [ 0 5 10 72]
'logging::MakeCheckOpValueString<double>' [ 0 9]
'gfx::internal::StyleIterator::baseline' [ 0 5 15 30]
'std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>::operator()' [ 0 5 10 70]
'std::__1::remove_reference<gfx::internal::TextRunList *>' [ 0 5 10]
'insert_string_c' [ 0]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorTransformFromBT2020CL *&>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'base::internal::StrictNumeric<unsigned long>::operator unsigned long<unsigned long, nullptr>' [ 0 6 16 46]
'color_utils::(anonymous namespace)::kDefaultBgColor' [ 0 13 36]
'std::__1::forward<gfx::BaselineStyle>' [ 0 5 10]
'std::__1::binary_function<std::__1::basic_string<char>, std::__1::basic_string<char>, bool>' [ 0 5 10]
'gfx::ImageFrom1xJPEGEncodedData' [ 0 5]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>, void>' [ 0 5 10 91]
'drmMalloc' [ 0]
'ui::InterpolatedAxisAngleRotation::InterpolateButDoNotCompose' [ 0 4 35]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__recommend' [ 0 5 10 62]
'std::__1::__list_const_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>' [ 0 5 10]
'std::__1::__const_pointer<color_utils::(anonymous namespace)::WeightedColor, color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>, true>' [ 0 5 10]
'ui::InterpolatedAxisAngleRotation::InterpolatedAxisAngleRotation' [ 0 4 35]
'Cr_z_z_errmsg' [ 0]
'std::__1::__wrap_iter<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::operator++' [ 0 5 10 88]
'std::__1::conditional<false, std::__1::pointer_traits<const unsigned short *>::__nat, const unsigned short>' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__annotate_delete' [ 0 5 10 62]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::AdvanceLine' [ 0 5 28 49]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::capacity' [ 0 5 10 122]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::end' [ 0 5 10 557]
'std::__1::forward<std::__1::tuple<gfx::ImageFamily::MapKey &&> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>, void>' [ 0 5 10 91]
'std::__1::operator!=<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'static_ltree' [ 0]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10 102]
'std::__1::__size_type<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >, long, true>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::deallocate' [ 0 5 10 143]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >::~unique_ptr' [ 0 5 10 153]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::capacity' [ 0 5 10 140]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::~unique_ptr' [ 0 5 10 256]
'base::internal::IsValueInRangeForNumericType<unsigned long, unsigned long>' [ 0 6 16]
'std::__1::remove_reference<std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> > &>' [ 0 5 10]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__destruct_at_end' [ 0 5 10 85]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::BlendingImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10 102]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >' [ 0 5 10]
'std::__1::move<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::~unique_ptr' [ 0 5 10 99]
'std::__1::tuple<const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__pointer_type<wchar_t, std::__1::allocator<wchar_t> >' [ 0 5 10]
'logging::CheckEQImpl<unsigned long, unsigned long>' [ 0 9]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<base::internal::CheckedNumeric<unsigned long> >::value' [ 0 6 16 47 104]
'std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >::operator->' [ 0 5 10 152]
'SkSize' [ 0]
'std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>::pair<gfx::IconDescription, gfx::ImageSkia, false>' [ 0 5 10 60]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool &, false>' [ 0 5 10 378]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'std::__1::remove_reference<gfx::internal::(anonymous namespace)::PNGImageSource *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::min<unsigned int>' [ 0 5 10]
'drmGetReservedContextList' [ 0]
'Cr_z_inflateBackEnd' [ 0]
'std::__1::__tuple_leaf<2, const unsigned int &, false>::get' [ 0 5 10 56]
'std::__1::min<unsigned int, std::__1::__less<unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >::reset' [ 0 5 10 103]
'gfx::(anonymous namespace)::RestoreBreakList<gfx::BaselineStyle>' [ 0 5 28]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::~set' [ 0 5 10 138]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct_backward<int>' [ 0 5 10 55]
'std::__1::__wrap_iter<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::operator*' [ 0 5 10 94]
'std::__1::__tree_max<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<XPoint []>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'std::__1::__pointer_type<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >' [ 0 5 10]
'AnnotateRWLockCreate' [ 0]
'Cr_z_x86_check_features' [ 0]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache> >' [ 0 6]
'Cr_z_gzdirect' [ 0]
'std::__1::remove_reference<gfx::internal::LineSegment *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__move_range' [ 0 5 10 141]
'std::__1::__copy<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::forward<gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >' [ 0 5 10]
'drmSyncobjFDToHandle' [ 0]
'gfx::(anonymous namespace)::VectorIconCache::GetOrCreateIcon' [ 0 5 28 45]
'std::__1::move<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > &>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::back' [ 0 5 10 213]
'std::__1::__less<unsigned long, unsigned int>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'drm_auth' [ 0]
'std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >' [ 0 5 10]
'SkRect::MakeXYWH' [ 0 8]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::~__split_buffer' [ 0 5 10 222]
'std::__1::forward<std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10]
'gfx::(anonymous namespace)::VectorIconCache' [ 0 5 28]
'std::__1::__to_raw_pointer<gfx::NativePixmapPlane>' [ 0 5 10]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__destruct_at_end' [ 0 5 10 59]
'Cr_z_in_func' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'Cr_z_inflate_table' [ 0]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'drmAgpAlloc' [ 0]
'std::__1::forward<const std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::base' [ 0 5 10 71]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__construct_at_end' [ 0 5 10 77]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__find_equal<unsigned int>' [ 0 5 10 284]
'gfx::GetDurationOfAnimation' [ 0 5]
'std::__1::make_unsigned<unsigned char>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformToBT2020CL>, void>' [ 0 5 10 94]
'base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache>::Delete' [ 0 6 16 97]
'std::__1::pointer_traits<const unsigned short *>::pointer_to' [ 0 5 10 50]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique_key_args<unsigned int, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 447]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::deallocate' [ 0 5 10 227]
'std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>' [ 0 5 10]
'std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::map' [ 0 5 10 292]
'std::__1::__compressed_pair_elem<gfx::ColorTransformFromLinear *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__tree' [ 0 5 10 284]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue>, true>' [ 0 5 10 30]
'gfx::NativePixmapDmaBuf::GetDmaBufFd' [ 0 5 25]
'gfx::ImageFamily::~ImageFamily' [ 0 5 18]
'std::__1::max<float>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'std::__1::allocator<gfx::BreakList<bool> >::deallocate' [ 0 5 10 44]
'std::__1::conditional<true, std::__1::pair<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__nat>' [ 0 5 10]
'drmOpenOnceWithType' [ 0]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__set_long_size' [ 0 5 10 126]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >::construct<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 198]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__alloc' [ 0 5 10 92]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__max_size' [ 0 5 10 69]
'gfx::internal::StyleIterator::font_size_override' [ 0 5 15 30]
'std::__1::conditional<true, const gfx::ImagePNGRep &, gfx::ImagePNGRep &&>' [ 0 5 10]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::construct<std::__1::pair<const unsigned int, int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 130]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__swap_out_circular_buffer' [ 0 5 10 120]
'std::__1::upper_bound<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >, unsigned long>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__destruct_at_end' [ 0 5 10 140]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::HorizontalShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10 102]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::Font, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::second' [ 0 5 10 173]
'std::__1::allocator<gfx::DecoratedText::RangedAttribute>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::allocate' [ 0 5 10 143]
'gfx::CreateClientNativePixmapFactoryDmabuf' [ 0 5]
'drmCtlUninstHandler' [ 0]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformFromLinear, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor>, 1, true>' [ 0 5 10]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >::map' [ 0 5 10 195]
'drmModeCreatePropertyBlob' [ 0]
'scoped_refptr<gfx::PlatformFont>::swap' [ 0 34]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::__split_buffer' [ 0 5 10 129]
'std::__1::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &, 1, false>::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &, void>' [ 0 5 10 118]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::__compressed_pair<nullptr_t, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>' [ 0 5 10 156]
'SK_AlphaOPAQUE' [ 0]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > &>' [ 0 5 10]
'std::__1::pointer_traits<const std::__1::pair<const unsigned int, int> *>::pointer_to' [ 0 5 10 75]
'base::DefaultRefCountedTraits<gfx::PlatformFont>::Destruct' [ 0 6 50]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >::Release' [ 0 6 136]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >' [ 0 6]
'std::__1::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >::reset' [ 0 5 10 141]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::get' [ 0 5 10 238]
'gfx::internal::ImageRepSkia::Size' [ 0 5 15 29]
'base::subtle::GetOrCreateLazyPointer<gfx::(anonymous namespace)::SynchronizedCache>' [ 0 6 14]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__recommend' [ 0 5 10 167]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__annotate_new' [ 0 5 10 96]
'gfx::Canvas::DrawStringRectWithFlags' [ 0 5 13]
'std::__1::pointer_traits<std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>::pointer_to' [ 0 5 10 163]
'base::internal::CheckedNumeric<unsigned long>::IsValid<unsigned long>' [ 0 6 16 47]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>::operator++' [ 0 5 10 75]
'gfx::SizeF::width' [ 0 5 12]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::capacity' [ 0 5 10 59]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>::reset' [ 0 5 10 52]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 638]
'gfx::SelectionModel::operator==' [ 0 5 21]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'compress_block' [ 0]
'drmModeCrtcPtr' [ 0]
'std::__1::forward<gfx::internal::(anonymous namespace)::PNGImageSource *&>' [ 0 5 10]
'std::__1::__upper_bound<std::__1::__less<unsigned long, unsigned int> &, std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >, unsigned long>' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> &>' [ 0 5 10 52]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::reset<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **>' [ 0 5 10 306]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 101]
'std::__1::swap<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::release' [ 0 5 10 113]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::__tree_node_destructor' [ 0 5 10 278]
'std::__1::allocator<float>::deallocate' [ 0 5 10 28]
'std::__1::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >::reset' [ 0 5 10 135]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__destruct_at_end' [ 0 5 10 220]
'std::__1::conditional<true, std::__1::pair<int, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::cbegin' [ 0 5 10 140]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::max_size' [ 0 5 10 68]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__vector_base' [ 0 5 10 127]
'(anonymous namespace)::HSLShift::OperationOnL' [ 0 23 33]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>' [ 0 5 10]
'adler32_combine_' [ 0]
'AnnotateRWLockReleased' [ 0]
'std::__1::__to_raw_pointer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'std::__1::pointer_traits<gfx::DecoratedText::RangedAttribute *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>::__nat, std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >, false>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__push_back_slow_path<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 132]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> *, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >, false>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>' [ 0 5 10]
'std::__1::iterator_traits<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'std::__1::forward<int>' [ 0 5 10]
'static_tree_desc' [ 0]
'std::__1::forward<gfx::ColorTransformFromBT2020CL *>' [ 0 5 10]
'sk_sp<SkTextBlob>::release' [ 0 19]
'std::__1::__compressed_pair_elem<gfx::ColorTransformSkTransferFn *, 0, false>::__compressed_pair_elem<gfx::ColorTransformSkTransferFn *&, void>' [ 0 5 10 79]
'logging::ErrnoLogMessage' [ 0 9]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::~unique_ptr' [ 0 5 10 250]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__hash_node_base' [ 0 5 10 118]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'gfx::internal::ImageStorage::~ImageStorage' [ 0 5 15 29]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::max_size' [ 0 5 10 78]
'drmBufPtr' [ 0]
'drmFreeKernelVersion' [ 0]
'std::__1::forward<gfx::internal::ImageRepSkia *>' [ 0 5 10]
'partial_fold' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'lldiv_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::max_size' [ 0 5 10 55]
'gfx::Vector2d::Vector2d' [ 0 5 15]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct_range_forward<int>' [ 0 5 10 55]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >::construct<std::__1::pair<const unsigned int, int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 101]
'std::__1::__wrap_iter<gfx::Rect *>::operator*' [ 0 5 10 36]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::operator()' [ 0 5 10 158]
'gfx::FontListImpl::GetFontWeight' [ 0 5 19]
'gfx::ClientNativePixmapDmaBuf::ImportFromDmabuf' [ 0 5 31]
'Cr_z_crc32_z' [ 0]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::clear' [ 0 5 10 105]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >' [ 0 5 10]
'codetype' [ 0]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::~__split_buffer' [ 0 5 10 276]
'drmGetMagic' [ 0]
'scoped_refptr<base::RefCountedMemory>::Release' [ 0 39]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::MaskedImageSource *, 0, false>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__emplace_back_slow_path<const int &>' [ 0 5 10 167]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator->' [ 0 5 10 76]
'std::__1::pointer_traits<const std::__1::__hash_value_type<unsigned int, int> *>::pointer_to' [ 0 5 10 82]
'std::__1::operator<<int, int>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep>' [ 0 5 10 69]
'std::__1::move_if_noexcept<cc::PaintFlags>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::pop_back' [ 0 5 10 101]
'std::__1::vector<float, std::__1::allocator<float> >::__recommend' [ 0 5 10 54]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'drmCheckModesettingSupported' [ 0]
'SkTMin<float>' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__end_node' [ 0 5 10 332]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 162]
'std::__1::__tree_key_value_types<gfx::Font>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::max_size' [ 0 5 10 57]
'std::__1::__size_type<std::__1::allocator<unsigned short>, long, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::capacity' [ 0 5 10 103]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, true>' [ 0 5 10 30]
'__uint32_t' [ 0]
'gfx::ImagePNGRep::ImagePNGRep' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct<gfx::ShadowValue, gfx::Vector2d, int, unsigned int>' [ 0 5 10 68]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::reset' [ 0 5 10 266]
'SkTo<unsigned char, int>' [ 0]
'std::__1::allocator<gfx::Rect>::construct<gfx::Rect, gfx::Rect>' [ 0 5 10 32]
'drm_syncobj_destroy' [ 0]
'base::subtle::GetOrCreateLazyPointer<scoped_refptr<gfx::PlatformFontLinux> >' [ 0 6 14]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformToLinear *, std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10 108]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &, 1, false>::__get' [ 0 5 10 107]
'_drmVBlankReq' [ 0]
'std::__1::pointer_traits<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>::operator->' [ 0 5 10 75]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::SynchronizedCache>::New' [ 0 6 77]
'std::__1::forward<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformSkTransferFn *, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10 108]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::capacity' [ 0 5 10 141]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::~__vector_base' [ 0 5 10 95]
'std::__1::forward<const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &, void>' [ 0 5 10 181]
'std::__1::forward<gfx::ColorTransformFromBT2020CL *&>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >::release' [ 0 5 10 137]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::__destroy<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10 272]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__construct_at_end' [ 0 5 10 140]
'gfx::ClientNativePixmapFactoryDmabuf::ClientNativePixmapFactoryDmabuf' [ 0 5 38]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__upcast' [ 0 5 10 109]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >::deallocate' [ 0 5 10 115]
'gfx::CreateHarfBuzzFont::face_caches' [ 0 5 25]
'std::__1::__const_void_pointer<std::__1::__value_type<unsigned int, unsigned short> *, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> >, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::second' [ 0 5 10 463]
'base::LazyInstance<scoped_refptr<gfx::PlatformFontLinux>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::PlatformFontLinux> > >::Pointer' [ 0 6 141]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__construct_range_forward<gfx::internal::LineSegment *, gfx::internal::LineSegment *>' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > &>' [ 0 5 10]
'std::__1::remove_reference<gfx::Image::RepresentationType &>' [ 0 5 10]
'SkRect::intersects' [ 0 8]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>' [ 0 5 10]
'gfx::ColorTransformToLinear' [ 0 5]
'std::__1::iterator<std::__1::random_access_iterator_tag, unsigned int, long, const unsigned int *, const unsigned int &>' [ 0 5 10]
'Cr_z_gzFile' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> >, long, true>' [ 0 5 10]
'std::__1::iterator<std::__1::bidirectional_iterator_tag, const gfx::Image, long, const gfx::Image *, const gfx::Image &>' [ 0 5 10]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__alloc' [ 0 5 10 95]
'gfx::(anonymous namespace)' [ 0 5]
'running_on_valgrind' [ 0]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>' [ 0 5 10]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::__end_cap' [ 0 5 10 69]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>' [ 0 5 10]
'std::__1::swap<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache>' [ 0 6 16]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<int>::is_valid' [ 0 6 16 47 61]
'std::__1::forward<gfx::internal::LineSegment &>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::capacity' [ 0 5 10 62]
'std::__1::addressof<std::__1::pair<const unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>' [ 0 5 10]
'std::__1::pair<gfx::Font, gfx::Range>::pair' [ 0 5 10 39]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::max_size' [ 0 5 10 113]
'std::__1::copy<base::FileDescriptor *, base::FileDescriptor *>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::GetDisplayText' [ 0 5 25]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__make_iter' [ 0 5 10 133]
'std::__1::set<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::count' [ 0 5 10 111]
'gfx::ClientNativePixmapDmaBuf::Unmap::trace_event_unique_atomic111' [ 0 5 31 38]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10]
'gfx::Canvas::Translate' [ 0 5 13]
'std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>::__tree_iterator' [ 0 5 10 88]
'std::__1::__pointer_type_imp::__pointer_type<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator>, false>' [ 0 5 10 30]
'std::__1::__wrap_iter<const gfx::Rect *>::__wrap_iter' [ 0 5 10 42]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10]
'gfx::OverlayTransform' [ 0 5]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedMulOp, unsigned long>' [ 0 6 16 47]
'std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >::pair<unsigned int &&>' [ 0 5 10 246]
'SkTFitsIn<unsigned char, unsigned int>' [ 0]
'std::__1::add_lvalue_reference<icu_61::BreakIterator>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::destroy<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10 272]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::capacity' [ 0 5 10 85]
'int_fast8_t' [ 0]
'std::__1::remove_reference<gfx::(anonymous namespace)::ButtonImageSource *>' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::erase' [ 0 5 10 140]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >::release' [ 0 5 10 133]
'base::BasicStringPiece<std::__1::basic_string<wchar_t> >' [ 0 6]
'std::__1::make_unique<gfx::(anonymous namespace)::VectorIconSource, const gfx::IconDescription &>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::operator--' [ 0 5 10 71]
'std::__1::__pointer_type<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__vector_base' [ 0 5 10 61]
'gfx::internal::TextRunList::visual_to_logical' [ 0 5 15 28]
'gfx::FixedVSyncProvider' [ 0 5]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'gfx::RectF' [ 0 5]
'z_crc_t' [ 0]
'std::__1::__compressed_pair_elem<gfx::PathElement *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 64]
'scoped_refptr<gfx::PlatformFontLinux>::swap' [ 0 39]
'std::__1::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >::unique_ptr<true, void>' [ 0 5 10 143]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10]
'gfx::RenderText::SelectWord' [ 0 5 17]
'char' [ 0]
'std::__1::__unique_if<gfx::(anonymous namespace)::ExtractSubsetImageSource>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::HorizontalShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >::__compressed_pair<gfx::(anonymous namespace)::HorizontalShadowSource *&, true>' [ 0 5 10 162]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 93]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__set_short_size' [ 0 5 10 126]
'gfx::Transform::Rotate' [ 0 5 16]
'(anonymous namespace)::HSLShift::OperationOnS' [ 0 23 33]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__hash' [ 0 5 10 109]
'std::__1::basic_istream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::data' [ 0 5 10 177]
'gfx::NineImagePainter::IsEmpty' [ 0 5 23]
'std::__1::__const_pointer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >, true>' [ 0 5 10]
'std::__1::forward<base::i18n::BreakIterator *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, bool> >::deallocate' [ 0 5 10 59]
'drm_syncobj_wait' [ 0]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long> >' [ 0 5 10]
'std::__1::allocator<cc::PaintFlags>::construct<cc::PaintFlags, const cc::PaintFlags &>' [ 0 5 10 37]
'std::__1::__distance<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__ptr' [ 0 5 10 109]
'drmModeSetPlane' [ 0]
'std::__1::remove_reference<std::__1::allocator<cc::PaintFlags> &>' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > &>' [ 0 5 10]
'stat' [ 0]
'std::__1::__compressed_pair_elem<gfx::internal::TextRunList *, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::__wrap_iter' [ 0 5 10 71]
'gfx::Vector2dF::x' [ 0 5 16]
'gfx::Vector2dF::y' [ 0 5 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<const color_utils::(anonymous namespace)::KMeanCluster *>::__wrap_iter' [ 0 5 10 81]
'gfx::BufferOffsetForBufferFormat' [ 0 5]
'std::__1::__insertion_sort_incomplete<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::data' [ 0 5 10 140]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__destruct_at_end' [ 0 5 10 84]
'gfx::RectF::IsEmpty' [ 0 5 12]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp' [ 0 22]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmapDmaBuf *, 0, false>' [ 0 5 10]
'SkAlpha' [ 0]
'gfx::(anonymous namespace)::device_scale_factor_' [ 0 5 28]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>::pointer_to' [ 0 5 10 146]
'std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>::operator()' [ 0 5 10 80]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::__end_cap' [ 0 5 10 85]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *>' [ 0 5 10]
'std::__1::distance<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::(anonymous namespace)::TransparentImageSource::~TransparentImageSource' [ 0 5 28 52]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 210]
'base::internal::CheckedAddOp<int, int, void>' [ 0 6 16]
'std::__1::pair<std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>' [ 0 5 10]
'std::__1::addressof<const gfx::Rect>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned short *, std::__1::default_delete<unsigned short []> >' [ 0 5 10]
'std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >' [ 0 5 10]
'drm_buf_desc_t' [ 0]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__construct_at_end<gfx::ImagePNGRep *>' [ 0 5 10 76]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >::allocate' [ 0 5 10 209]
'std::__1::__const_pointer<color_utils::ColorProfile, color_utils::ColorProfile *, std::__1::allocator<color_utils::ColorProfile>, true>' [ 0 5 10]
'std::__1::default_delete<gfx::RenderText>' [ 0 5 10]
'std::__1::remove_reference<unsigned short *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__annotate_delete' [ 0 5 10 142]
'Cr_z_deflateBound' [ 0]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::release' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &, void>' [ 0 5 10 115]
'std::__1::addressof<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::destroy' [ 0 5 10 332]
'drmModeModeInfoPtr' [ 0]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::operator()' [ 0 5 10 244]
'SkImageInfo::makeAlphaType' [ 0 13]
'gfx::Canvas::Transform' [ 0 5 13]
'std::__1::remove_reference<gfx::(anonymous namespace)::ExtractSubsetImageSource *&>' [ 0 5 10]
'gfx::internal::TextRunList::ComputePrecedingRunWidths' [ 0 5 15 28]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::push_back' [ 0 5 10 152]
'scoped_refptr<gfx::FontListImpl>::AddRef' [ 0 34]
'std::__1::__pointer_type<char, std::__1::default_delete<char []> >' [ 0 5 10]
'logging::LOG_FATAL' [ 0 9]
'base::internal::OptionalStorageBase<cc::SkiaPaintCanvas, false>::Init<SkBitmap &>' [ 0 6 16 65]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::~vector' [ 0 5 10 113]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__end_cap' [ 0 5 10 91]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > &>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>::operator+' [ 0 5 10 45]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__root' [ 0 5 10 284]
'SkTypeface::isBold' [ 0 12]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::push' [ 0 5 10 322]
'std::__1::__compressed_pair_elem<gfx::internal::LineSegment *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 74]
'std::__1::forward<gfx::(anonymous namespace)::HSLImageSource *>' [ 0 5 10]
'color_utils::(anonymous namespace)::WeightedColor::WeightedColor' [ 0 13 36 51]
'AnnotateIgnoreSyncEnd' [ 0]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::reset' [ 0 5 10 73]
'std::__1::iterator_traits<float *>' [ 0 5 10]
'SkPoint::set' [ 0 9]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::size' [ 0 5 10 62]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::capacity' [ 0 5 10 142]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::max_size' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct_range_forward<float>' [ 0 5 10 57]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::~unique_ptr' [ 0 5 10 306]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ExtractSubsetImageSource *, 0, false>' [ 0 5 10]
'drm_lock_flags' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ClientNativePixmap *, std::__1::default_delete<gfx::ClientNativePixmap> >' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::operator()' [ 0 5 10 150]
'int16_t' [ 0]
'std::__1::__apply_cv<unsigned int, int, false, false>' [ 0 5 10]
'std::__1::__copy<int, int>' [ 0 5 10]
'std::__1::__insertion_sort_incomplete<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'Cr_z_x86_cpu_enable_simd' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>, false>' [ 0 5 10 30]
'drmModeFreeResources' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::deallocate' [ 0 5 10 101]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >, true>' [ 0 5 10 30]
'gfx::internal::ImageSkiaStorage::FindRepresentation' [ 0 5 15 33]
'std::__1::remove_reference<gfx::PathElement &>' [ 0 5 10]
'gfx::RenderText::ApplyStyle' [ 0 5 17]
'gfx::RectF::right' [ 0 5 12]
'base::PlatformThreadRef' [ 0 6]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::base' [ 0 5 10 81]
'gfx::Point3F::Scale' [ 0 5 14]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__insert_unique<std::__1::pair<unsigned int, int>, void>' [ 0 5 10 447]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>::operator->' [ 0 5 10 206]
'gfx::ClientNativePixmapDmaBuf' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<wchar_t, std::__1::allocator<wchar_t>, true>' [ 0 5 10 30]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::deallocate' [ 0 5 10 130]
'std::__1::__pointer_type<std::__1::__hash_value_type<unsigned int, int>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >' [ 0 5 10]
'hb_position_t' [ 0]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__end_cap' [ 0 5 10 149]
'std::__1::make_unique<gfx::(anonymous namespace)::DropShadowSource, const gfx::ImageSkia &, const std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> > &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>, void, void>' [ 0 5 10 93]
'base::LazyInstance<std::__1::basic_string<char>, base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> > >::Get' [ 0 6 123]
'std::__1::allocator<std::__1::pair<unsigned long, bool> >::construct<std::__1::pair<unsigned long, bool>, std::__1::pair<unsigned long, bool> >' [ 0 5 10 59]
'std::__1::__rebind_pointer<void *, const std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::forward<const gfx::BufferFormat &>' [ 0 5 10]
'gfx::NativePixmapDmaBuf::ScheduleOverlayPlane' [ 0 5 25]
'gfx::ElideString' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep &>' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformToBT2020CL>, 1, true>' [ 0 5 10]
'SkImageInfo::height' [ 0 13]
'std::__1::less<std::__1::pair<int, int> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10 30]
'sk_sp<SkTypeface>::operator bool' [ 0 19]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::operator->' [ 0 5 10 99]
'std::__1::__unique_if<gfx::ColorTransformFromLinear>' [ 0 5 10]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::~__vector_base' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::SkiaColorTransform *, void>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CaseInsensitiveCompare, 1, true>::__compressed_pair_elem<const gfx::(anonymous namespace)::CaseInsensitiveCompare &, void>' [ 0 5 10 95]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >, true>' [ 0 5 10 30]
'std::__1::enable_if<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool> >' [ 0 5 10]
'AnnotateRWLockAcquired' [ 0]
'std::__1::__list_const_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>' [ 0 5 10]
'gfx::internal::SkiaTextRenderer' [ 0 5 15]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::push_back' [ 0 5 10 82]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::hash_function' [ 0 5 10 447]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__end_cap' [ 0 5 10 139]
'std::__1::remove_reference<std::__1::pair<int, unsigned int> >' [ 0 5 10]
'std::__1::__const_void_pointer<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>, false>' [ 0 5 10]
'HashFind' [ 0]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::max_size' [ 0 5 10 96]
'std::__1::forward<XPoint *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::reset' [ 0 5 10 113]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >, long, true>' [ 0 5 10]
'switches::kTraceToFileName' [ 0 10]
'base::File' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >' [ 0 5 10]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::capacity' [ 0 5 10 76]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &, 1, false>::__get' [ 0 5 10 136]
'hb_codepoint_t' [ 0]
'std::__1::operator!=<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'drmPrimeFDToHandle' [ 0]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::__construct_backward<gfx::PathElement>' [ 0 5 10 68]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >::find' [ 0 5 10 195]
'gfx::internal::ImageRep::AsImageRepSkia' [ 0 5 15 25]
'SkMatrix::set' [ 0 10]
'std::__1::__compressed_pair_elem<XPoint *, 0, false>' [ 0 5 10]
'std::__1::pointer_traits<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::addressof<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::allocate' [ 0 5 10 62]
'std::__1::__vector_base<int, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::HorizontalShadowSource, true>' [ 0 5 10]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::~__split_buffer' [ 0 5 10 85]
'scoped_refptr<gfx::internal::ImageSkiaStorage>' [ 0]
'std::__1::addressof<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue> &, void>' [ 0 5 10 85]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::destroy' [ 0 5 10 557]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__destruct_at_end' [ 0 5 10 126]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>, void, void>' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::construct<std::__1::pair<unsigned long, gfx::Font::Weight>, const std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10 101]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::operator<<float, int>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__alloc' [ 0 5 10 140]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >::__get_ptr' [ 0 5 10 283]
'std::__1::move<gfx::PathElement &>' [ 0 5 10]
'drm_mode_get_blob' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::max_size' [ 0 5 10 90]
'std::__1::__compressed_pair_elem<gfx::ColorTransform *, 0, false>::__compressed_pair_elem<gfx::ColorTransform *&, void>' [ 0 5 10 67]
'gfx::ShadowValue::x' [ 0 5 18]
'gfx::(anonymous namespace)::kMaxScripts' [ 0 5 28]
'std::__1::__pointer_type<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >' [ 0 5 10]
'Cr_z_inflateResetKeep' [ 0]
'drmSyncobjCreate' [ 0]
'std::__1::forward<gfx::ImageSkia *&>' [ 0 5 10]
'base::Time' [ 0 6]
'std::__1::__to_raw_pointer<unsigned char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::allocate' [ 0 5 10 330]
'std::__1::__less<unsigned char, unsigned char>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>, void, void>' [ 0 5 10 93]
'base::internal::CheckedMulFastOp<unsigned long, unsigned long>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, 0, false>' [ 0 5 10]
'DRM_IOCTL' [ 0]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >' [ 0 5 10]
'std::__1::pair<unsigned int, unsigned int>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::operator*' [ 0 5 10 74]
'drm_mode_destroy_blob' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::allocate' [ 0 5 10 137]
'drmSetMaster' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__split_buffer' [ 0 5 10 152]
'std::__1::remove_reference<gfx::SkiaColorTransform *>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::~ScopedGeneric' [ 0 6 63]
'std::__1::__compressed_pair<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 280]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__root_ptr' [ 0 5 10 338]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::~__split_buffer' [ 0 5 10 140]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList>, false>' [ 0 5 10 30]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__destruct_at_end' [ 0 5 10 79]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'gfx::Insets::operator-' [ 0 5 13]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10 91]
'color_utils::(anonymous namespace)::UnPreMultiply' [ 0 13 36]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::deallocate' [ 0 5 10 153]
'std::__1::allocator<unsigned int>::deallocate' [ 0 5 10 35]
'std::__1::addressof<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'int_fast16_t' [ 0]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__annotate_delete' [ 0 5 10 62]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::operator->' [ 0 5 10 376]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::construct<gfx::ShadowValue, gfx::ShadowValue>' [ 0 5 10 68]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::vector' [ 0 5 10 101]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::capacity' [ 0 5 10 82]
'std::__1::max<float, std::__1::__less<float, float> >' [ 0 5 10]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPath> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFont *, 0, false>' [ 0 5 10]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::add_lvalue_reference<SkColorSpaceXform>' [ 0 5 10]
'std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::operator->' [ 0 5 10 93]
'base::internal::SaturateFastOp<int, float, void>::Do' [ 0 6 16 50]
'std::__1::__list_const_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__list_const_iterator' [ 0 5 10 112]
'std::__1::__compressed_pair<base::i18n::BreakIterator *, std::__1::default_delete<base::i18n::BreakIterator> >' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::~__vector_base' [ 0 5 10 147]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >' [ 0 5 10]
'sk_sp<SkColorSpace>::operator=' [ 0 21]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__upcast' [ 0 5 10 118]
'std::__1::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10]
'__vtbl_ptr_type' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__node_alloc' [ 0 5 10 626]
'std::__1::enable_if<true, base::FileDescriptor *>' [ 0 5 10]
'AnnotateBenignRace' [ 0]
'std::__1::forward<unsigned long &>' [ 0 5 10]
'static_bl_desc' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<base::FileDescriptor *>::__nat, base::FileDescriptor>' [ 0 5 10]
'gfx::FallbackFontData::FallbackFontData' [ 0 5 23]
'std::__1::__list_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>' [ 0 5 10]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >' [ 0 5 10]
'std::__1::__wrap_iter<float *>::base' [ 0 5 10 32]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<color_utils::ColorProfile *, 0, false>' [ 0 5 10]
'base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory>::Destruct' [ 0 6 65]
'std::__1::__advance<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRep *, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::empty' [ 0 5 10 213]
'switches::kForceFieldTrials' [ 0 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'gfx::ImageSkia::HasRepresentation' [ 0 5 16]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::pair<const unsigned int, int> *>::__nat, const std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'SkMatrix::getType' [ 0 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__node_alloc' [ 0 5 10 284]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::operator[]' [ 0 5 10 178]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::insert' [ 0 5 10 138]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10]
'std::__1::operator!=<gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 69]
'gfx::RenderText::MoveCursor' [ 0 5 17]
'std::__1::__pointer_type<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__max_size' [ 0 5 10 96]
'gfx::RenderText::GetSelectionModelForSelectionStart' [ 0 5 17]
'trace_event_internal::AddTraceEvent' [ 0 22]
'color_utils::ApplyColorReduction' [ 0 13]
'std::__1::remove_reference<gfx::ColorTransformToLinear *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::__max_size' [ 0 5 10 58]
'std::__1::move_iterator<std::__1::pair<unsigned long, bool> *>::base' [ 0 5 10 64]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::release' [ 0 5 10 93]
'base::Lock::Acquire' [ 0 6 12]
'std::__1::remove_reference<base::TimeTicks>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::allocate' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *&, void>' [ 0 5 10 194]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::key_eq' [ 0 5 10 447]
'std::__1::make_unique<gfx::SkiaColorTransform, sk_sp<SkColorSpace>, sk_sp<SkColorSpace> >' [ 0 5 10]
'std::__1::default_delete<gfx::internal::ImageRepPNG>::operator()' [ 0 5 10 54]
'gfx::GpuMemoryBufferType' [ 0 5]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *>::pointer_to' [ 0 5 10 276]
'std::__1::__vector_base<int, std::__1::allocator<int> >::clear' [ 0 5 10 57]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::ConstructSingleLine' [ 0 5 28 49]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>' [ 0 5 10]
'base::internal::CommonMax<int, unsigned char>' [ 0 6 16]
'std::__1::binary_function<unsigned int, unsigned int, bool>' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorTransformToBT2020CL *&>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::deallocate' [ 0 5 10 71]
'std::__1::__compressed_pair<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::second' [ 0 5 10 281]
'code' [ 0]
'std::__1::forward<_FcPattern *&>' [ 0 5 10]
'base::internal::strict_cast<long, long>' [ 0 6 16]
'std::__1::iterator_traits<gfx::Font *>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >' [ 0 5 10]
'drm_handle_t' [ 0]
'SkTextBlobBuilder::allocRunPos' [ 0 19]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::data' [ 0 5 10 70]
'std::__1::vector<int, std::__1::allocator<int> >::__destruct_at_end' [ 0 5 10 50]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::erase' [ 0 5 10 557]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformToBT2020CL *, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10 108]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > &>' [ 0 5 10]
'_drmBuf' [ 0]
'std::__1::sort<float *, std::__1::__less<float, float> >' [ 0 5 10]
'color_utils::(anonymous namespace)::ColorBox::ColorBox' [ 0 13 36 46]
'base::subtle::RefCountedBase::~RefCountedBase' [ 0 6 14 30]
'drm_version' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__alloc' [ 0 5 10 148]
'std::__1::forward<std::__1::allocator<SkPath> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> > &, 1, false>::__get' [ 0 5 10 105]
'std::__1::forward<gfx::(anonymous namespace)::ShadowNineboxSource *>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct<unsigned int>' [ 0 5 10 64]
'std::__1::allocator<cc::PaintFlags>::deallocate' [ 0 5 10 37]
'drmModeSetCursor2' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, 0, false>' [ 0 5 10]
'gfx::RectFBetweenSelectionBounds' [ 0 5]
'gfx::(anonymous namespace)::ScriptInterval' [ 0 5 28]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> >, false>' [ 0 5 10]
'SkPixmap::writable_addr' [ 0 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::operator*' [ 0 5 10 378]
'base::Optional<SkBitmap>::value' [ 0 6 26]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::clear' [ 0 5 10 63]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >::pair<const std::__1::basic_string<char> &, 0>' [ 0 5 10 188]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::size' [ 0 5 10 506]
'std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, gfx::BaselineStyle> &&, std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'std::__1::move<SkPath *&>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InterpolatedConstantTransform *, std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10]
'ui::InterpolatedScale::InterpolatedScale' [ 0 4 23]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__alloc' [ 0 5 10 110]
'std::__1::__size_type<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >, long, true>' [ 0 5 10]
'std::__1::conditional<true, const gfx::ImageSkiaRep &, gfx::ImageSkiaRep &&>' [ 0 5 10]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::RenderTextHarfBuzz>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > >::New' [ 0 6 16 334]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::operator*' [ 0 5 10 113]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__push_back_slow_path<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 142]
'std::__1::pointer_traits<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::__end_cap' [ 0 5 10 65]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::clear' [ 0 5 10 120]
'std::__1::__pointer_type<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::less<unsigned int>' [ 0 5 10]
'icu_61' [ 0]
'std::__1::forward<const std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true> &>' [ 0 5 10]
'std::__1::allocator<gfx::Font>::construct<gfx::Font, gfx::Font &>' [ 0 5 10 32]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::allocator<gfx::BufferFormat>::construct<gfx::BufferFormat, const gfx::BufferFormat &>' [ 0 5 10 40]
'std::__1::ios_base::setf' [ 0 5 10 20]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::clear' [ 0 5 10 186]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__swap_out_circular_buffer' [ 0 5 10 56]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::insert' [ 0 5 10 115]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__destruct_at_end' [ 0 5 10 115]
'std::__1::distance<const gfx::BufferFormat *>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::HSLImageSource>' [ 0 5 10]
'gfx::(anonymous namespace)::HasClipOrTransform' [ 0 5 28]
'gfx::BreakType' [ 0 5]
'trace_event_internal' [ 0]
'gfx::Transform::operator*=' [ 0 5 16]
'std::__1::iterator_traits<const std::__1::basic_string<char> *>' [ 0 5 10]
'color_utils::SaturationRange' [ 0 13]
'std::__1::forward<gfx::(anonymous namespace)::BlendingImageSource *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SkPoint, std::__1::default_delete<SkPoint []>, false>' [ 0 5 10 30]
'gfx::FindValidBoundaryAfter' [ 0 5]
'std::__1::forward<const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10]
'std::__1::remove_reference<gfx::ClientNativePixmapDmaBuf *>' [ 0 5 10]
'std::__1::pair<int, int>::pair<int &, int &, false>' [ 0 5 10 26]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::HSLImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >::__compressed_pair<gfx::(anonymous namespace)::HSLImageSource *&, true>' [ 0 5 10 146]
'gfx::CreateGradientShader' [ 0 5]
'std::__1::__compressed_pair_elem<gfx::internal::Line *, 0, false>' [ 0 5 10]
'_drmSetVersion' [ 0]
'base::ScopedPlatformFile' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__construct_backward<gfx::Font *>' [ 0 5 10 61]
'std::__1::move<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> &>' [ 0 5 10]
'gfx::Canvas::InitPaintFlagsForTiling' [ 0 5 13]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::map<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >, 1, false>' [ 0 5 10]
'gfx::ColorTransformInternal::GetSkColorSpaceIfNecessary' [ 0 5 29]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, false>' [ 0 5 10]
'base::FilePath::value' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct_backward<gfx::Rect>' [ 0 5 10 61]
'gfx::(anonymous namespace)::CaseInsensitiveCompare' [ 0 5 28]
'hb_glyph_info_t' [ 0]
'std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>::operator()' [ 0 5 10 68]
'std::__1::forward<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10]
'std::__1::move<cc::PaintFlags &>' [ 0 5 10]
'std::__1::make_unique<ui::InterpolatedConstantTransform, gfx::Transform &>' [ 0 5 10]
'std::__1::forward<SkPath>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::begin' [ 0 5 10 332]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::push_back' [ 0 5 10 113]
'base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > >::New' [ 0 6 16 480]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator=' [ 0 5 10 101]
'SkBitmapOperations::DownsampleByTwoUntilSize' [ 0 20]
'std::__1::numeric_limits<int>' [ 0 5 10]
'logging::LogSeverity' [ 0 9]
'std::__1::__pointer_type_imp::__pointer_type<_FcPattern, FcPatternDeleter, false>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__tree' [ 0 5 10 866]
'drm_mode_crtc_page_flip' [ 0]
'signed char' [ 0]
'std::__1::forward<std::__1::pair<int, unsigned int> >' [ 0 5 10]
'drmModeGetProperty' [ 0]
'skia::ImageOperations' [ 0 6]
'std::__1::addressof<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, true>' [ 0 5 10 30]
'base::internal::CommonMax<unsigned char, int>' [ 0 6 16]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::make_unsigned<int>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >, long, true>' [ 0 5 10]
'std::__1::allocator<gfx::ShadowValue>::construct<gfx::ShadowValue, gfx::Vector2d, int, unsigned int>' [ 0 5 10 39]
'std::__1::operator!=' [ 0 5 10]
'icu_61::CharacterIterator::getIndex' [ 0 8 27]
'std::__1::__pointer_type<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >' [ 0 5 10]
'gfx::FontListImpl' [ 0 5]
'sk_memory_order' [ 0]
'gfx::(anonymous namespace)::ResizeSource' [ 0 5 28]
'std::__1::unique_ptr<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource>, void, void>' [ 0 5 10 93]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ShadowNineboxSource *, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<const base::FileDescriptor *>::operator++' [ 0 5 10 53]
'sk_sp<SkPathRef>' [ 0]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__end_as_link' [ 0 5 10 187]
'std::__1::__pointer_type<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__destruct_at_end' [ 0 5 10 138]
'std::__1::forward<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'color_utils::(anonymous namespace)::KMeanCluster::SetCentroid' [ 0 13 36 50]
'gfx::(anonymous namespace)::RectangleText::NewLine' [ 0 5 28 43]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__copy_assign_alloc' [ 0 5 10 77]
'std::__1::operator==<gfx::(anonymous namespace)::CachedFont *, gfx::(anonymous namespace)::CachedFont *>' [ 0 5 10]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::reset' [ 0 5 10 103]
'std::__1::addressof<const gfx::Font>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::operator->' [ 0 5 10 135]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::Rect *>::__nat, gfx::Rect>' [ 0 5 10]
'std::__1::binary_function<gfx::ImageFamily::MapKey, gfx::ImageFamily::MapKey, bool>' [ 0 5 10]
'std::__1::forward<icu_61::BreakIterator *&>' [ 0 5 10]
'drm_mode_obj_get_properties' [ 0]
'std::__1::__move_backward<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >::Pointer' [ 0 6 464]
'cc::PaintImageBuilder' [ 0 4]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::deallocate' [ 0 5 10 88]
'base::internal::PassingTraits<base::TimeTicks, false>' [ 0 6 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::get_deleter' [ 0 5 10 250]
'gfx::Insets::right' [ 0 5 13]
'cc::PaintImage' [ 0 4]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>::Adjust<int, nullptr>' [ 0 6 16 68]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ShadowNineboxSource *, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >::__compressed_pair<gfx::(anonymous namespace)::ShadowNineboxSource *&, true>' [ 0 5 10 156]
'gfx::(anonymous namespace)::GetTransferMatrix' [ 0 5 28]
'base::AtomicRefCount::Increment' [ 0 6 22]
'std::__1::unique_ptr<SkBitmap, std::__1::default_delete<SkBitmap> >::~unique_ptr' [ 0 5 10 69]
'std::__1::__vector_base<float, std::__1::allocator<float> >::~__vector_base' [ 0 5 10 61]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10]
'std::__1::pair<unsigned long, gfx::Font::Weight>::pair<unsigned int, gfx::Font::Weight &, false>' [ 0 5 10 50]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >, true>' [ 0 5 10]
'gfx::operator==' [ 0 5]
'std::__1::move<std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> > &>' [ 0 5 10]
'drm_ctx_priv_map_t' [ 0]
'std::__1::conditional<true, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::unique_ptr' [ 0 5 10 113]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::destroy<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10 330]
'std::__1::remove_reference<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> &, void>' [ 0 5 10 216]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'std::__1::conditional<true, const gfx::internal::Line &, gfx::internal::Line &&>' [ 0 5 10]
'gfx::Font::GetFontName' [ 0 5 11]
'std::__1::move_if_noexcept<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::__tuple_leaf<4, const gfx::VectorIcon *&, false>::__tuple_leaf<const gfx::VectorIcon *&, void>' [ 0 5 10 60]
'std::__1::operator==<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformSkTransferFn *, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >::__compressed_pair<gfx::ColorTransformSkTransferFn *&, true>' [ 0 5 10 124]
'std::__1::operator==<const std::__1::pair<unsigned long, bool> *, const std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::__end_cap' [ 0 5 10 186]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::~vector' [ 0 5 10 76]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'logging::MakeCheckOpString<double, double>' [ 0 9]
'std::__1::advance<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'std::__1::operator!=<const std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::reset' [ 0 5 10 282]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::lowest' [ 0 6 16 69]
'base::trace_event::TraceCategory' [ 0 6 19]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, int> >, long, true>' [ 0 5 10]
'gfx::ImageFamily' [ 0 5]
'gfx::NativePixmapDmaBuf::NativePixmapDmaBuf' [ 0 5 25]
'drm_control' [ 0]
'scoped_refptr<gfx::PlatformFontLinux>::~scoped_refptr' [ 0 39]
'base::internal::CheckedAddOp<unsigned long, int, void>' [ 0 6 16]
'Cr_z__length_code' [ 0]
'gfx::(anonymous namespace)::CaseInsensitiveCompare::operator()' [ 0 5 28 52]
'std::__1::remove_reference<gfx::ColorTransformFromBT2020CL *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__recommend' [ 0 5 10 142]
'gfx::BreakList<bool>::breaks' [ 0 5 22]
'std::__1::default_delete<gfx::ImageSkiaSource>::operator()' [ 0 5 10 48]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >, long, true>' [ 0 5 10]
'std::__1::__apply_cv<unsigned char, unsigned char, false, false>' [ 0 5 10]
'gfx::BreakList<gfx::Font::Weight>::max' [ 0 5 35]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::get' [ 0 5 10 99]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >, void>' [ 0 5 10 202]
'base::LazyInstance<std::__1::basic_string<char>, base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> > >::IsCreated' [ 0 6 123]
'std::__1::pointer_traits<const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>' [ 0 5 10]
'logging::CheckNEImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::__const_void_pointer<float *, std::__1::allocator<float>, false>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const int &, false>' [ 0 5 10]
'drmRandomDouble' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >::reset' [ 0 5 10 147]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >::construct<std::__1::pair<const unsigned int, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 107]
'drm_context_tFlags' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRepPNG>, void>' [ 0 5 10 94]
'Cr_z_compressBound' [ 0]
'__pthread_list_t' [ 0]
'drmHost1xDeviceInfoPtr' [ 0]
'std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>::pair<gfx::ImageFamily::MapKey &&>' [ 0 5 10 60]
'gfx::RenderText::glyph_spacing' [ 0 5 17]
'drmHashLookup' [ 0]
'std::__1::forward<gfx::internal::TextRunHarfBuzz *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >, void>' [ 0 5 10 231]
'std::__1::__rebind_pointer<void *, gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >::unique_ptr<true, void>' [ 0 5 10 137]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::TiledImageSource *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 396]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::~unique_ptr' [ 0 5 10 103]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>, false>' [ 0 5 10 30]
'gfx::RenderText::GetVisualDirectionOfLogicalBeginning' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::allocate' [ 0 5 10 66]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>::Do<unsigned long>' [ 0 6 16 66]
'Cr_z__tr_flush_bits' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >::release' [ 0 5 10 153]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>::__get' [ 0 5 10 114]
'drm_ctx_res' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::~vector' [ 0 5 10 132]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkia>, 1, true>' [ 0 5 10]
'std::__1::__const_void_pointer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >, false>' [ 0 5 10]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::capacity' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::destroy<gfx::internal::LineSegment>' [ 0 5 10 78]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator+=' [ 0 5 10 75]
'std::__1::__insertion_sort_3<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'SkMatrix::set::operator()' [ 0 10 15]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::~__vector_base' [ 0 5 10 75]
'std::__1::__wrap_iter<gfx::(anonymous namespace)::CachedFont *>::__wrap_iter' [ 0 5 10 65]
'base::internal::CheckedAddFastOp<unsigned long, int>::Do<unsigned long>' [ 0 6 16 54]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::clear' [ 0 5 10 83]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>::__compressed_pair<nullptr_t, std::__1::allocator<float> &>' [ 0 5 10 68]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>::__nat, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorTransformSMPTEST2048NonHdrToLinear *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 127]
'sk_sp<SkImageFilter>' [ 0]
'std::__1::vector<float, std::__1::allocator<float> >::begin' [ 0 5 10 54]
'std::__1::remove_reference<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__push_back_slow_path<gfx::ShadowValue>' [ 0 5 10 76]
'ui::InterpolatedConstantTransform::InterpolateButDoNotCompose' [ 0 4 35]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::allocate' [ 0 5 10 199]
'UCharCategory' [ 0]
'gfx::Canvas::DrawStringRect' [ 0 5 13]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *>' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__annotate_shrink' [ 0 5 10 88]
'drmUsbDeviceInfoPtr' [ 0]
'std::__1::add_lvalue_reference<XPoint>' [ 0 5 10]
'std::__1::remove_reference<const unsigned int &>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::assign<int *>' [ 0 5 10 50]
'std::__1::__pointer_type<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::operator->' [ 0 5 10 71]
'std::__1::__compressed_pair<gfx::Size *, std::__1::default_delete<gfx::Size> >::__compressed_pair<gfx::Size *, true>' [ 0 5 10 80]
'base::DefaultRefCountedTraits<gfx::internal::ImageStorage>::Destruct' [ 0 6 60]
'std::__1::remove_reference<gfx::ImageSkia *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__end_cap' [ 0 5 10 184]
'SkPixmap' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct_backward<std::__1::basic_string<char> *>' [ 0 5 10 81]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__tuple_leaf<0, gfx::ImageFamily::MapKey &&, false>::__tuple_leaf<gfx::ImageFamily::MapKey, void>' [ 0 5 10 63]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator*' [ 0 5 10 77]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::AddWordToLine' [ 0 5 28 49]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__insert_node_at' [ 0 5 10 338]
'gfx::ShadowValue::GetBlurRegion' [ 0 5 18]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::reset<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **>' [ 0 5 10 324]
'gfx::(anonymous namespace)::RotatedSource' [ 0 5 28]
'gfx::DirectionalityMode' [ 0 5]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::~vector' [ 0 5 10 78]
'pthread_t' [ 0]
'SkFunctionWrapper<void, void, &sk_free>' [ 0]
'std::__1::conditional<false, std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__nat>' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::allocate' [ 0 5 10 88]
'FcLangSet' [ 0]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::size' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >, true>' [ 0 5 10 30]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__end_cap' [ 0 5 10 79]
'std::__1::__size_type<std::__1::allocator<gfx::ImageSkiaRep>, long, true>' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::capacity' [ 0 5 10 96]
'std::__1::__pointer_type<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::clear' [ 0 5 10 557]
'gfx::RenderText::GetLineContainingYCoord' [ 0 5 17]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >::deallocate' [ 0 5 10 72]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::data' [ 0 5 10 131]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::clear' [ 0 5 10 149]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__insert_node_at' [ 0 5 10 506]
'gfx::Rect::width' [ 0 5 11]
'std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>::pair<std::__1::pair<int, int>, gfx::ShadowDetails, false>' [ 0 5 10 62]
'gfx::RenderText::ElideEmail' [ 0 5 17]
'SkMScalar' [ 0]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::__split_buffer' [ 0 5 10 276]
'drmModeAtomicMerge' [ 0]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct<int>' [ 0 5 10 55]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__swap_out_circular_buffer' [ 0 5 10 213]
'std::__1::add_lvalue_reference<unsigned char>' [ 0 5 10]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::unordered_map' [ 0 5 10 191]
'gfx::Insets' [ 0 5]
'gfx::Font::GetFontRenderParams' [ 0 5 11]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::basic_string<char> > &, void>' [ 0 5 10 95]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::operator++' [ 0 5 10 196]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'logging::MakeCheckOpValueString<long>' [ 0 9]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::move_iterator' [ 0 5 10 78]
'std::__1::default_delete<gfx::SkiaColorTransform>::operator()' [ 0 5 10 51]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'GetRunningOnValgrind' [ 0]
'std::__1::__libcpp_numeric_limits<unsigned short, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >::reset' [ 0 5 10 141]
'std::__1::allocator<gfx::BreakList<bool> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::basic_string<char> &, false>::get' [ 0 5 10 72]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::reset' [ 0 5 10 99]
'gfx::(anonymous namespace)::FontData::~FontData' [ 0 5 28 38]
'std::__1::pointer_traits<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> *>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>, bool &, false>' [ 0 5 10 212]
'std::__1::vector<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia> >::size' [ 0 5 10 72]
'drmPlatformDeviceInfoPtr' [ 0]
'base_dist' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >::reset' [ 0 5 10 153]
'std::__1::__const_pointer<std::__1::pair<unsigned long, bool>, std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__construct<std::__1::pair<gfx::Font, gfx::Range>, const std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10 90]
'color_utils::GetRelativeLuminance' [ 0 13]
'gfx::RenderText::GetCursorBounds' [ 0 5 17]
'std::__1::__wrap_iter<unsigned int *>::operator+' [ 0 5 10 39]
'my_version' [ 0]
'drmIoctl' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::distance<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator+' [ 0 5 10 81]
'std::__1::__compressed_pair_elem<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__node_insert_multi' [ 0 5 10 332]
'gfx::(anonymous namespace)::DropShadowSource::GetImageForScale' [ 0 5 28 46]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::operator->' [ 0 5 10 157]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &, void>' [ 0 5 10 110]
'gfx::RenderText::word_wrap_behavior' [ 0 5 17]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, void>' [ 0 5 10 98]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >' [ 0 5 10]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >' [ 0 5 10]
'ui::InterpolatedMatrixTransform::~InterpolatedMatrixTransform' [ 0 4 33]
'std::__1::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >::unique_ptr<true, void>' [ 0 5 10 99]
'SkImageInfo::minRowBytes' [ 0 13]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::destroy<gfx::Font>' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>, 1, true>' [ 0 5 10]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >::reset' [ 0 5 10 147]
'std::__1::operator-<const std::__1::pair<unsigned long, unsigned long> *, const std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >::release' [ 0 5 10 155]
'std::__1::conditional<false, std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >, void>' [ 0 5 10 277]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::capacity' [ 0 5 10 91]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 506]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>, bool &, false>' [ 0 5 10 468]
'color_utils::(anonymous namespace)::KMeanCluster::CompareCentroidWithAggregate' [ 0 13 36 50]
'drm_scatter_gather' [ 0]
'std::__1::remove_reference<gfx::internal::(anonymous namespace)::PNGImageSource *&>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<int>::value' [ 0 6 16 47 61]
'base::internal::BigEnoughPromotion<unsigned long, int, true, false>' [ 0 6 16]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::capacity' [ 0 5 10 92]
'sktfitsin::Private::underlying_type<SkPath::FillType, true>' [ 0 11 20]
'gfx::RenderTextHarfBuzz::LastSelectionModelInsideRun' [ 0 5 25]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &, 1, false>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::__get_np' [ 0 5 10 378]
'std::__1::addressof<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::capacity' [ 0 5 10 78]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::assign<unsigned char *>' [ 0 5 10 70]
'base::internal::CheckedMulOp<unsigned long, unsigned long, void>' [ 0 6 16]
'std::__1::forward<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>' [ 0 5 10]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator++' [ 0 5 10 76]
'std::__1::move_backward<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::pair<unsigned long, unsigned int>' [ 0 5 10]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >::operator--' [ 0 5 10 229]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::begin' [ 0 5 10 141]
'SkBitmap::allocN32Pixels' [ 0 10]
'z_stream' [ 0]
'std::__1::__advance<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10]
'drmParsePlatformBusInfo' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__root_ptr' [ 0 5 10 557]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG>, void, void>' [ 0 5 10 99]
'ui::InterpolatedAxisAngleRotation' [ 0 4]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::end' [ 0 5 10 141]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >' [ 0 5 10]
'std::__1::binary_function<gfx::Image::RepresentationType, gfx::Image::RepresentationType, bool>' [ 0 5 10]
'base::internal::as_unsigned<int>' [ 0 6 16]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >::operator->' [ 0 5 10 229]
'std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformSkTransferFn>, void>' [ 0 5 10 94]
'base::internal::IsValueInRangeForNumericType<unsigned long, int>' [ 0 6 16]
'std::__1::pointer_traits<const std::__1::__hash_value_type<unsigned int, int> *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformFromBT2020CL *, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >::__compressed_pair<gfx::ColorTransformFromBT2020CL *&, true>' [ 0 5 10 124]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__push_back_slow_path<gfx::internal::Line>' [ 0 5 10 82]
'gfx::internal::TextRunList::runs' [ 0 5 15 28]
'wint_t' [ 0]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >' [ 0 5 10]
'scoped_refptr<base::RefCountedMemory>::AddRef' [ 0 39]
'base::BasePathKey' [ 0 6]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::operator--' [ 0 5 10 196]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::deallocate' [ 0 5 10 61]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::operator=' [ 0 5 10 143]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::TextRunList>, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::clear' [ 0 5 10 141]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::operator->' [ 0 5 10 164]
'SkBitmapOperations::CreateTransposedBitmap' [ 0 20]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__swap_out_circular_buffer' [ 0 5 10 82]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >, true>' [ 0 5 10 30]
'std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::front' [ 0 5 10 96]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::__split_buffer' [ 0 5 10 81]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >::OnExit' [ 0 6 464]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>::second' [ 0 5 10 98]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *&>' [ 0 5 10]
'std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__list_node_base' [ 0 5 10 135]
'gfx::ColorTransformMatrix::GetMatrix' [ 0 5 27]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::size' [ 0 5 10 447]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>' [ 0 5 10]
'logging::CheckNEImpl<gfx::Font::Weight, gfx::Font::Weight>' [ 0 9]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__annotate_new' [ 0 5 10 113]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__end_cap' [ 0 5 10 83]
'uint_fast64_t' [ 0]
'std::__1::remove_reference<gfx::Transform &>' [ 0 5 10]
'base::string16_internals::string16_char_traits::length' [ 0 6 26 48]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::destroy<gfx::ImageSkiaRep>' [ 0 5 10 69]
'std::__1::operator-<std::__1::__wrap_iter<const unsigned int *>, std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::release' [ 0 5 10 376]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *>' [ 0 5 10]
'gfx::RenderText::ApplyColor' [ 0 5 17]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::__tree_iterator' [ 0 5 10 356]
'std::__1::move<color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10]
'gfx::CanvasImageSource::CreatePadded' [ 0 5 24]
'std::__1::forward<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long> >' [ 0 5 10]
'std::__1::operator!=<std::__1::__wrap_iter<const unsigned int *>, std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<std::__1::basic_string<char> >' [ 0 6 16]
'read64le' [ 0]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__end_cap' [ 0 5 10 147]
'std::__1::addressof<const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'crc_k' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__root_ptr' [ 0 5 10 284]
'std::__1::equal_to<unsigned int>::operator()' [ 0 5 10 34]
'std::__1::make_unique<gfx::ColorTransformSMPTEST2048NonHdrToLinear>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::CachedFont &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, 0, false>::__compressed_pair_elem<gfx::ColorTransformSMPTEST2048NonHdrToLinear *&, void>' [ 0 5 10 92]
'std::__1::remove_reference<SkPath &>' [ 0 5 10]
'std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'gfx::RenderText::SetDisplayRect' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>, false>' [ 0 5 10 30]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::reset' [ 0 5 10 238]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>' [ 0 5 10]
'std::__1::pair<gfx::IconDescription, gfx::ImageSkia>::pair<const gfx::IconDescription &, gfx::ImageSkia &, false>' [ 0 5 10 54]
'base::subtle::GetOrCreateLazyPointer<std::__1::basic_string<char> >' [ 0 6 14]
'gfx::BreakList<gfx::Font::Weight>::CheckBreaks' [ 0 5 35]
'std::__1::__to_raw_pointer<gfx::Rect>' [ 0 5 10]
'gfx::(anonymous namespace)::GetGlyphHorizontalKerning' [ 0 5 28]
'gfx::RenderText::text_elided' [ 0 5 17]
'std::__1::make_unique<gfx::(anonymous namespace)::VectorIconSource, const std::__1::basic_string<char> &, int &, unsigned int &>' [ 0 5 10]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__hash_const_iterator' [ 0 5 10 114]
'logging::CheckEQImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::__clz' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_long_pointer' [ 0 5 10 126]
'gfx::NativePixmapPlane' [ 0 5]
'std::__1::max<unsigned char>' [ 0 5 10]
'drmUnmapBufs' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >::__compressed_pair<char *&, true>' [ 0 5 10 73]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::max_size' [ 0 5 10 90]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__nat, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >' [ 0 5 10]
'Cr_z_uInt' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, void>' [ 0 5 10 94]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator--' [ 0 5 10 76]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>::operator()' [ 0 5 10 132]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::size' [ 0 5 10 177]
'std::__1::operator==<float *, float *>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__end_cap' [ 0 5 10 122]
'std::__1::forward<gfx::internal::ImageRepSkia *&>' [ 0 5 10]
'std::__1::move<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *&>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >, false>' [ 0 5 10]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::push_back' [ 0 5 10 76]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::vector' [ 0 5 10 115]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::clear' [ 0 5 10 85]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::end' [ 0 5 10 141]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::clear' [ 0 5 10 331]
'Cr_z_crc_finalize' [ 0]
'gfx::SelectionModel::SelectionModel' [ 0 5 21]
'(anonymous namespace)::HSLShift::LineProcHnopSdecLinc' [ 0 23 33]
'HashBucketPtr' [ 0]
'gfx::SelectionModel::ToString' [ 0 5 21]
'std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >::~map' [ 0 5 10 195]
'std::__1::__pointer_type_imp::__pointer_type<XPoint, std::__1::default_delete<XPoint []>, false>' [ 0 5 10 30]
'sk_sp<SkData>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>, void>' [ 0 5 10 94]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &, 1, false>' [ 0 5 10]
'std::__1::__wrap_iter<gfx::Font *>::operator++' [ 0 5 10 36]
'std::__1::remove_volatile<unsigned int>' [ 0 5 10]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__insert_unique' [ 0 5 10 114]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::__bucket_list_deallocator' [ 0 5 10 179]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >' [ 0 5 10]
'std::__1::addressof<const std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'SkISize' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__destroy<gfx::internal::LineSegment>' [ 0 5 10 78]
'SkRefCntBase::getRefCnt' [ 0 14]
'SkTo<int, unsigned long>' [ 0]
'storechunk' [ 0]
'std::__1::forward<const std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__swap_out_circular_buffer' [ 0 5 10 177]
'gfx::internal::TextRunHarfBuzz::TextRunHarfBuzz' [ 0 5 15 32]
'drmCommandRead' [ 0]
'std::__1::__compressed_pair_elem<SkFunctionWrapper<void, void, &sk_free>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::ShadowNineboxSource *, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10 102]
'gfx::ColorTransformStep::AppendShaderSource' [ 0 5 25]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> *>::__nat, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::data' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformSkTransferFn>, 1, true>' [ 0 5 10]
'gfx::RenderText::SetCursorPosition' [ 0 5 17]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::back' [ 0 5 10 126]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::clear' [ 0 5 10 124]
'gfx::RenderText::MoveCursorToPoint' [ 0 5 17]
'std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >::deallocate' [ 0 5 10 72]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::erase' [ 0 5 10 131]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__vector_base' [ 0 5 10 108]
'_drmServerInfo' [ 0]
'base_hash' [ 0]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 76]
'std::__1::__next_hash_pow2' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> *, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::__tree_node_destructor' [ 0 5 10 233]
'std::__1::pointer_traits<SkPath *>' [ 0 5 10]
'std::__1::forward<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::allocator<gfx::BreakList<bool> >::construct<gfx::BreakList<bool>>' [ 0 5 10 44]
'std::__1::__pointer_type_imp::__pointer_type<gfx::Font, std::__1::allocator<gfx::Font>, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::operator->' [ 0 5 10 113]
'gfx::internal::TextRunList::~TextRunList' [ 0 5 15 28]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::operator[]' [ 0 5 10 167]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::internal::TextRunList, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &, 1, false>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::operator[]' [ 0 5 10 76]
'std::__1::__to_raw_pointer<gfx::DecoratedText::RangedAttribute>' [ 0 5 10]
'std::__1::unique_ptr<unsigned char, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >::release' [ 0 5 10 105]
'ui::SequentialIDGenerator::GetGeneratedID' [ 0 4 27]
'drm_ctx_priv_map' [ 0]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::find' [ 0 5 10 172]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__tree' [ 0 5 10 332]
'std::__1::remove_reference<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::InterpolatedTransform *, 0, false>::__compressed_pair_elem<ui::InterpolatedConstantTransform *, void>' [ 0 5 10 73]
'std::__1::remove_reference<float>' [ 0 5 10]
'gfx::(anonymous namespace)::PaintPath::trace_event_unique_atomic422' [ 0 5 28 39]
'sk_sp<SkFontMgr>' [ 0]
'std::__1::__compressed_pair_elem<int *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 51]
'std::__1::__compressed_pair<gfx::internal::(anonymous namespace)::PNGImageSource *, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__emplace_unique_key_args<gfx::ImageFamily::MapKey, const std::__1::piecewise_construct_t &, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::tuple<> >' [ 0 5 10 332]
'std::__1::forward<const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::WeightedColor *>::operator*' [ 0 5 10 76]
'gfx::ImageSkiaOperations::CreateBlendedImage' [ 0 5 26]
'ui::InterpolatedScale' [ 0 4]
'std::__1::make_unique<gfx::internal::ImageRepPNG, std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> > &>' [ 0 5 10]
'std::__1::swap<unsigned int *>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::clear' [ 0 5 10 71]
'gfx::Vector2dF' [ 0 5]
'std::__1::__vector_base<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 70]
'SkBitmapOperations::CreateHSLShiftedBitmap' [ 0 20]
'ui::InterpolatedTransformAboutPivot::InterpolateButDoNotCompose' [ 0 4 37]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::MaskedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10]
'switches::kWaitForDebugger' [ 0 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::__wrap_iter' [ 0 5 10 62]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep> &, 1, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, true>' [ 0 5 10]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::SynchronizedCache>' [ 0 6]
'drm_buf_free' [ 0]
'gfx::PlatformFontLinux::GetBaseline' [ 0 5 24]
'base::internal::ClampedNumeric<int>::operator int<int>' [ 0 6 16 37]
'HashTablePtr' [ 0]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>::__compressed_pair<nullptr_t, std::__1::allocator<int> &>' [ 0 5 10 64]
'std::__1::__list_node_pointer_traits<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>' [ 0 5 10]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::size' [ 0 5 10 181]
'std::__1::__compressed_pair<unsigned int *, std::__1::default_delete<unsigned int []> >::__compressed_pair<unsigned int *&, true>' [ 0 5 10 89]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::forward<gfx::ColorTransformSMPTEST2048NonHdrToLinear *&>' [ 0 5 10]
'gfx::(anonymous namespace)::SynchronizedCache' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct_forward<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'gfx::kEllipsis' [ 0 5]
'SkTextBlobBuilder' [ 0]
'std::__1::forward<gfx::(anonymous namespace)::ResizeSource *&>' [ 0 5 10]
'SkTFitsIn<unsigned char, int>' [ 0]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >::DeleteInternal<gfx::internal::ImageStorage>' [ 0 6 108]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::release' [ 0 5 10 238]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'scoped_refptr<gfx::PlatformFontLinux>::get' [ 0 39]
'std::__1::conditional<false, std::__1::pair<const unsigned int, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'Cr_z__dist_code' [ 0]
'gfx::Size::width' [ 0 5 11]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__insert_unique<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void>' [ 0 5 10 626]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'Cr_z_get_crc_table' [ 0]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::data' [ 0 5 10 119]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::data' [ 0 5 10 142]
'std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *&>' [ 0 5 10]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__sz' [ 0 5 10 243]
'Cr_z_gzclose_w' [ 0]
'std::__1::__compressed_pair<gfx::internal::(anonymous namespace)::PNGImageSource *, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::__compressed_pair<gfx::internal::(anonymous namespace)::PNGImageSource *&, true>' [ 0 5 10 166]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__move_range' [ 0 5 10 115]
'gfx::(anonymous namespace)::FontRenderParamsHintingToPaintFlagsHinting' [ 0 5 28]
'gfx::ColorTransformInternal::GetDstColorSpace' [ 0 5 29]
'base::TimeDelta::operator<' [ 0 6 17]
'SkPoint' [ 0]
'SkFontStyle::weight' [ 0 13]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::~__vector_base' [ 0 5 10 83]
'std::__1::remove_reference<std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::ExtractSubsetImageSource *&>' [ 0 5 10]
'SkPaint' [ 0]
'gfx::BreakList<bool>::GetRange' [ 0 5 22]
'std::__1::allocator<gfx::internal::Line>::deallocate' [ 0 5 10 42]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'SkTextBlob' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::end' [ 0 5 10 133]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct_range_forward<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'std::__1::pointer_traits<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> *>::pointer_to' [ 0 5 10 96]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'abs' [ 0]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__node_alloc' [ 0 5 10 243]
'uchf' [ 0]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz>, void, void>' [ 0 5 10 83]
'std::__1::__tree_prev_iter<std::__1::__tree_node_base<void *> *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'(anonymous namespace)::HSLShift::OperationOnH' [ 0 23 33]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__destruct_at_end' [ 0 5 10 141]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::~__split_buffer' [ 0 5 10 128]
'gfx::ColorTransformStep::GetFromLinear' [ 0 5 25]
'gfx::Point3F::Point3F' [ 0 5 14]
'gfx::(anonymous namespace)::SuperimposedImageSource::Draw' [ 0 5 28 53]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformFromLinear *, std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10 108]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::destroy<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10 90]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::operator+=' [ 0 5 10 67]
'std::__1::__wrap_iter<const color_utils::(anonymous namespace)::KMeanCluster *>::__wrap_iter<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10 81]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::~__split_buffer' [ 0 5 10 152]
'logging::MakeCheckOpValueString<gfx::Image::RepresentationType>' [ 0 9]
'Cr_z_deflateTune' [ 0]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__vector_base' [ 0 5 10 89]
'gfx::CalculateFaviconTargetSize' [ 0 5]
'gfx::ColorTransformStep::GetFromBT2020CL' [ 0 5 25]
'std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::ImageSkiaRep> &, void>' [ 0 5 10 83]
'base::TimeDelta::Max' [ 0 6 17]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::operator+=' [ 0 5 10 126]
'std::__1::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10]
'Cr_z_gzdopen' [ 0]
'std::__1::default_delete<gfx::ColorTransformMatrix>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::IconWithBadgeSource *, 0, false>' [ 0 5 10]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::insert<std::__1::pair<int, unsigned int>, void>' [ 0 5 10 191]
'std::__1::operator==<std::__1::__wrap_iter<const unsigned int *>, std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'base::TimeDelta::FromMillisecondsD' [ 0 6 17]
'std::__1::swap<unsigned int>' [ 0 5 10]
'gfx::(anonymous namespace)::StripAcceleratorChars' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'deflateStateCheck' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::front' [ 0 5 10 131]
'gfx::(anonymous namespace)::AddFadeEffect' [ 0 5 28]
'std::__1::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >::release' [ 0 5 10 141]
'std::__1::forward<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'std::__1::move<float *&>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::__destruct_at_end' [ 0 5 10 151]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>::base' [ 0 5 10 50]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'std::__1::pair<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::operator=' [ 0 5 10 141]
'std::__1::allocator<gfx::Rect>' [ 0 5 10]
'std::__1::forward<unsigned short *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::push_back' [ 0 5 10 114]
'std::__1::remove_const<int>' [ 0 5 10]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::end' [ 0 5 10 172]
'Cr_z_inflate_fast_chunk_' [ 0]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::__wrap_iter' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::__construct<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 227]
'std::__1::__vector_base<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::capacity' [ 0 5 10 220]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::~unique_ptr' [ 0 5 10 81]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10 291]
'std::__1::remove_reference<gfx::(anonymous namespace)::TiledImageSource *&>' [ 0 5 10]
'std::__1::remove_reference<const gfx::DecoratedText::RangedAttribute &>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>::operator*' [ 0 5 10 45]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::erase' [ 0 5 10 237]
'std::__1::remove_reference<gfx::NativePixmapPlane &>' [ 0 5 10]
'drm_client_t' [ 0]
'std::__1::forward<gfx::Size *>' [ 0 5 10]
'_drmDevice' [ 0]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::capacity' [ 0 5 10 85]
'std::__1::addressof<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'drmModeAtomicAddProperty' [ 0]
'std::__1::forward<gfx::ColorTransformSkTransferFn *>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageFamily::MapKey &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_new' [ 0 5 10 68]
'gfx::NumberOfPlanesForBufferFormat' [ 0 5]
'std::__1::forward<gfx::BreakList<bool> &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::__destruct_at_end' [ 0 5 10 71]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &, 1, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>, false>' [ 0 5 10 30]
'std::__1::allocator<unsigned char>::deallocate' [ 0 5 10 36]
'__time_t' [ 0]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRepSkia *, 0, false>::__compressed_pair_elem<gfx::internal::ImageRepSkia *&, void>' [ 0 5 10 75]
'std::__1::__compressed_pair<gfx::internal::TextRunHarfBuzz *, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::__compressed_pair<gfx::internal::TextRunHarfBuzz *, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10 122]
'gz_open' [ 0]
'std::__1::__vector_base<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::__end_cap' [ 0 5 10 85]
'base::subtle::Atomic32' [ 0 6 14]
'std::__1::binary_function<std::__1::pair<int, int>, std::__1::pair<int, int>, bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__destroy<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear::Transform' [ 0 5 46]
'std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__push_back_slow_path<std::__1::pair<unsigned long, int> >' [ 0 5 10 113]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__push_back_slow_path<const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10 132]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'base::LazyInstance<scoped_refptr<gfx::FontListImpl>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::FontListImpl> > >' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::max_size' [ 0 5 10 101]
'drm_mode_modeinfo' [ 0]
'chunkcopy_lapped_safe' [ 0]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__emplace_unique<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 357]
'gfx::Rect::set_height' [ 0 5 11]
'std::__1::__unique_if<gfx::ColorTransformSMPTEST2048NonHdrToLinear>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>::operator-' [ 0 5 10 45]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::end' [ 0 5 10 626]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__push_back_slow_path<const gfx::Font &>' [ 0 5 10 62]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 137]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::PathElement> &, 1, false>::__get' [ 0 5 10 85]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'UChar32' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'drmOpenByBusid' [ 0]
'std::__1::pointer_traits<const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>::pointer_to' [ 0 5 10 96]
'std::__1::__compressed_pair<icu_61::BreakIterator *, std::__1::default_delete<icu_61::BreakIterator> >' [ 0 5 10]
'gfx::(anonymous namespace)::PaddedImageSource' [ 0 5 28]
'gfx::Font::Derive' [ 0 5 11]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::value_comp' [ 0 5 10 557]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__annotate_shrink' [ 0 5 10 114]
'std::__1::__rebind_pointer<void *, std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'SkClipOp' [ 0]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::__get_np' [ 0 5 10 356]
'std::__1::remove_reference<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *&>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::SynchronizedCache>::New' [ 0 6 16 88]
'std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>::operator()' [ 0 5 10 79]
'std::__1::pointer_traits<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::move_if_noexcept<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaRep *, 0, false>' [ 0 5 10]
'gfx::(anonymous namespace)::PathParser::PathParser' [ 0 5 28 40]
'std::__1::addressof<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::base' [ 0 5 10 76]
'gfx::VSyncProvider::~VSyncProvider' [ 0 5 20]
'cc::PaintFlags::setTypeface' [ 0 4 16]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >' [ 0 5 10]
'gfx::RenderText::GetContentWidth' [ 0 5 17]
'send_tree' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::clear' [ 0 5 10 133]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::push_back' [ 0 5 10 237]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >' [ 0 5 10]
'gfx::(anonymous namespace)::PathParser::HasCommandsRemaining' [ 0 5 28 40]
'gfx::Vector3dF::x' [ 0 5 16]
'gfx::Vector3dF::y' [ 0 5 16]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique<std::__1::pair<int, unsigned int> >' [ 0 5 10 447]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__construct_at_end' [ 0 5 10 140]
'sk_sp<SkTypeface>::get' [ 0 19]
'gfx::RenderTextHarfBuzz::DrawVisualText' [ 0 5 25]
'std::__1::__tree_map_pointer_types<gfx::Font, void *, std::__1::__tree_key_value_types<gfx::Font>, false>' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'gfx::(anonymous namespace)::IsBracket::kBracketsEnd' [ 0 5 28 39]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >' [ 0 5 10]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>::operator()' [ 0 5 10 72]
'std::__1::__compressed_pair<gfx::RenderTextHarfBuzz *, std::__1::default_delete<gfx::RenderTextHarfBuzz> >::__compressed_pair<gfx::RenderTextHarfBuzz *&, true>' [ 0 5 10 108]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::capacity' [ 0 5 10 84]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::max_size' [ 0 5 10 143]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::~__split_buffer' [ 0 5 10 142]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::size' [ 0 5 10 76]
'std::__1::forward<std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> > >' [ 0 5 10]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__unlink_nodes' [ 0 5 10 187]
'std::__1::__pointer_type<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10]
'std::__1::__wrap_iter<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::base' [ 0 5 10 94]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::GetWordWidth' [ 0 5 28 49]
'gfx::internal::TextRunHarfBuzz' [ 0 5 15]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 109]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >::allocate' [ 0 5 10 301]
'__off_t' [ 0]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>::__compressed_pair_elem<unsigned int *&, void>' [ 0 5 10 60]
'color_utils::(anonymous namespace)::kDefaultUpperHSLBound' [ 0 13 36]
'color_utils::(anonymous namespace)::calcHue' [ 0 13 36]
'std::__1::move_iterator<std::__1::pair<unsigned long, int> *>::base' [ 0 5 10 63]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, bool> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformToBT2020CL *, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >::__compressed_pair<gfx::ColorTransformToBT2020CL *&, true>' [ 0 5 10 120]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::allocate' [ 0 5 10 81]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__annotate_shrink' [ 0 5 10 113]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__alloc' [ 0 5 10 147]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::SuperimposedImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::SuperimposedImageSource *&, void>' [ 0 5 10 99]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> &, void>' [ 0 5 10 219]
'strlcpy' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__end_cap' [ 0 5 10 140]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct_forward<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare' [ 0 5 10 87]
'gfx::SelectionModel::caret_affinity' [ 0 5 21]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >::__get_ptr' [ 0 5 10 225]
'std::__1::remove_reference<base::FileDescriptor *&>' [ 0 5 10]
'gfx::Canvas::SizeStringInt' [ 0 5 13]
'cc::PaintFlags::setAlpha' [ 0 4 16]
'gfx::VisualCursorDirection' [ 0 5]
'gfx::GpuMemoryBufferId' [ 0 5]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >::deallocate' [ 0 5 10 243]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::__construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 101]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >::~unique_ptr' [ 0 5 10 143]
'gfx::RenderText::multiline' [ 0 5 17]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::back' [ 0 5 10 88]
'SkSafeUnref<SkTypeface>' [ 0]
'std::__1::__advance<int *>' [ 0 5 10]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::Release' [ 0 6 118]
'std::__1::__compressed_pair_elem<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 177]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::get' [ 0 5 10 250]
'std::__1::make_unique<gfx::(anonymous namespace)::RotatedSource, const gfx::ImageSkia &, SkBitmapOperations::RotationAmount &>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >, false>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImagePNGRep &>' [ 0 5 10]
'gfx::RenderText::SetObscured' [ 0 5 17]
'std::__1::forward<gfx::(anonymous namespace)::MaskedImageSource *>' [ 0 5 10]
'gfx::Font::GetStyle' [ 0 5 11]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique_extract_key<std::__1::pair<int, unsigned int> >' [ 0 5 10 447]
'std::__1::pointer_traits<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> *>::pointer_to' [ 0 5 10 90]
'std::__1::default_delete<SkBitmap>::operator()' [ 0 5 10 36]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::clear' [ 0 5 10 91]
'std::__1::forward<const std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> > &>' [ 0 5 10]
'crc32_big' [ 0]
'unsigned char' [ 0]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::~__split_buffer' [ 0 5 10 149]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__construct_backward<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *>' [ 0 5 10 137]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Font *>::__wrap_iter' [ 0 5 10 42]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::BreakList<bool> *>::__nat, gfx::BreakList<bool> >' [ 0 5 10]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::reset' [ 0 5 10 284]
'std::__1::pointer_traits<const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>::pointer_to' [ 0 5 10 105]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>::pointer_to' [ 0 5 10 137]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>, bool, false>' [ 0 5 10 255]
'gfx::ColorTransformPerChannelTransferFn::~ColorTransformPerChannelTransferFn' [ 0 5 41]
'base::internal::CommonMaxOrMin<unsigned char, int>' [ 0 6 16]
'gfx::HorizontalAlignment' [ 0 5]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >::construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10 115]
'std::__1::__const_void_pointer<unsigned int *, std::__1::allocator<unsigned int>, false>' [ 0 5 10]
'SkPoint::iset' [ 0 9]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::operator->' [ 0 5 10 103]
'std::__1::forward<gfx::Transform &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::__destroy<int>' [ 0 5 10 55]
'gfx::PaintThrobberWaiting' [ 0 5]
'std::__1::remove_reference<color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::deallocate' [ 0 5 10 67]
'std::__1::move<unsigned long &>' [ 0 5 10]
'std::__1::__less<int, int>' [ 0 5 10]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >::reset' [ 0 5 10 87]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::map' [ 0 5 10 371]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::reset' [ 0 5 10 376]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__root' [ 0 5 10 626]
'std::__1::operator==<const std::__1::pair<unsigned long, int> *, const std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::allocate' [ 0 5 10 58]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__recommend' [ 0 5 10 114]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformStep, true>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedAddOp, base::internal::StrictNumeric<unsigned long> >' [ 0 6 16 47]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::~vector' [ 0 5 10 140]
'Cr_z_gz_header' [ 0]
'drmModeSetCrtc' [ 0]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::HSLImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10 102]
'std::__1::allocator<unsigned char>::allocate' [ 0 5 10 36]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::unique_ptr' [ 0 5 10 99]
'std::__1::operator<<gfx::ImageSkiaRep *, gfx::ImageSkiaRep *>' [ 0 5 10 25 46]
'std::__1::__const_void_pointer<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, false>' [ 0 5 10]
'drmGetDevices' [ 0]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__push_back_slow_path<const gfx::ImageSkiaRep &>' [ 0 5 10 78]
'scoped_refptr<base::RefCountedBytes>::AddRef' [ 0 38]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__move_assign' [ 0 5 10 332]
'std::__1::__unique_if<gfx::(anonymous namespace)::HSLImageSource>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::RefCountedThreadSafeBase' [ 0 6 14 40]
'drmLockFlags' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata>, true>' [ 0 5 10 30]
'flush_pending' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 454]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >::unique_ptr<XPoint *, true, void, void>' [ 0 5 10 71]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::data' [ 0 5 10 56]
'gz_init' [ 0]
'base::LazyInstance<scoped_refptr<gfx::FontListImpl>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<scoped_refptr<gfx::FontListImpl> > >' [ 0 6]
'SkSafeUnref<SkMaskFilter>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::allocator<unsigned char>, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__push_back_slow_path<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 119]
'std::__1::get<1, const gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10]
'base::internal::CheckedMulOp<unsigned long, unsigned long, void>::Do<unsigned long>' [ 0 6 16 66]
'gfx::ImageSkia::IsThreadSafe' [ 0 5 16]
'AnnotatePCQDestroy' [ 0]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__push_back_slow_path<const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10 213]
'gfx::RenderText::DetermineBaselineCenteringText' [ 0 5 17]
'ui::InterpolatedConstantTransform::InterpolatedConstantTransform' [ 0 4 35]
'std::__1::allocator<gfx::ImagePNGRep>::construct<gfx::ImagePNGRep, gfx::ImagePNGRep &>' [ 0 5 10 39]
'std::__1::swap<int *>' [ 0 5 10]
'std::initializer_list<cc::FrameMetadata>' [ 0 5]
'std::__1::__tuple_less<2>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet>::operator()' [ 0 5 10 69]
'std' [ 0]
'SkBitmap::colorType' [ 0 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::base' [ 0 5 10 76]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::capacity' [ 0 5 10 150]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__alloc' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedConstantTransform>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >::unique_ptr<true, void>' [ 0 5 10 71]
'std::__1::vector<int, std::__1::allocator<int> >::capacity' [ 0 5 10 50]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__alloc' [ 0 5 10 127]
'drmWaitVBlank' [ 0]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, std::__1::basic_string<char> &>' [ 0 5 10 81]
'std::__1::__const_void_pointer<int *, std::__1::allocator<int>, false>' [ 0 5 10]
'gfx::Canvas::Scale' [ 0 5 13]
'color_utils::ComputePrincipalComponentImage' [ 0 13]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >, long, true>' [ 0 5 10]
'std::__1::__copy<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::get_deleter' [ 0 5 10 256]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>::operator*' [ 0 5 10 44]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<unsigned int, unsigned short> *>::__nat, std::__1::__value_type<unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::deallocate' [ 0 5 10 161]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >, void>' [ 0 5 10 143]
'FcFontSet' [ 0]
'sktfitsin::Private::SkTInRange_LE_MaxD<int, unsigned long>' [ 0 11 20]
'std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__as_node' [ 0 5 10 107]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::FreeIfNecessary' [ 0 6 63]
'std::__1::move<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *&>' [ 0 5 10]
'logging::CheckGTImpl<unsigned long, unsigned long>' [ 0 9]
'gfx::Canvas::DrawPath' [ 0 5 13]
'std::__1::allocator<gfx::Rect>::deallocate' [ 0 5 10 32]
'std::__1::__wrap_iter<gfx::Font *>::base' [ 0 5 10 36]
'sync_fence_info_free' [ 0]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::clear' [ 0 5 10 127]
'std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::max_size' [ 0 5 10 85]
'std::__1::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10]
'std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>' [ 0 5 10]
'int_least16_t' [ 0]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::HarfBuzzLineBreaker' [ 0 5 28 49]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'Posf' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct_at_end' [ 0 5 10 141]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, 0, false>::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, void>' [ 0 5 10 165]
'gfx::ClearFontRenderParamsCacheForTest' [ 0 5]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__destruct_at_end' [ 0 5 10 149]
'logging::CheckNEImpl<bool, bool>' [ 0 9]
'std::__1::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >::~unique_ptr' [ 0 5 10 107]
'std::__1::forward<gfx::(anonymous namespace)::HorizontalShadowSource *&>' [ 0 5 10]
'gfx::PaintThrobberSpinning' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__construct_backward<base::FileDescriptor>' [ 0 5 10 72]
'std::__1::allocator<gfx::NativePixmapPlane>' [ 0 5 10]
'std::__1::remove_reference<const base::TimeDelta &>' [ 0 5 10]
'base::internal::OptionalBase<cc::SkiaPaintCanvas>::FreeIfNeeded' [ 0 6 16 51]
'std::__1::__const_void_pointer<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > *, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >, false>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::__list_const_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::operator*' [ 0 5 10 140]
'gfx::RenderText::SetMultiline' [ 0 5 17]
'base::TimeDelta::operator/' [ 0 6 17]
'Cr_z_deflateSetDictionary' [ 0]
'drmAllocCpy' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__destroy<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'std::__1::__to_raw_pointer<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'sk_sp<SkDrawLooper>::sk_sp' [ 0 21]
'drmGetMinorNameForFD' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__end_cap' [ 0 5 10 83]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::deallocate' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, 1, true>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::bucket_count' [ 0 5 10 447]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::__construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 199]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>::__tuple_impl<0, 1, 2, 3, 4, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10 178]
'std::__1::operator==<const std::__1::pair<unsigned long, unsigned int> *, const std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__annotate_new' [ 0 5 10 140]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::push_back' [ 0 5 10 142]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'std::__1::__pointer_type<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::construct<unsigned int>' [ 0 5 10 64]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__split_buffer' [ 0 5 10 140]
'gfx::ImageSkiaRep::unscaled' [ 0 5 19]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::unique_ptr<true, void>' [ 0 5 10 73]
'std::__1::__distance<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__pop_heap<bool (*&)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &), std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *> >' [ 0 5 10]
'gfx::ImageSkiaOperations::CreateTiledImage' [ 0 5 26]
'std::__1::operator-<color_utils::(anonymous namespace)::ColorBox *, color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__vector_base' [ 0 5 10 83]
'std::__1::__compressed_pair_elem<std::__1::pair<gfx::Font, gfx::Range> *, 0, false>' [ 0 5 10]
'SkBitmap::isOpaque' [ 0 10]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::~__vector_base' [ 0 5 10 91]
'base::internal::OptionalBase<SkBitmap>::FreeIfNeeded' [ 0 6 16 40]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_delete' [ 0 5 10 133]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10 89]
'SkSafeUnref<SkImage>' [ 0]
'base::subtle::GetOrCreateLazyPointer<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >' [ 0 6 14]
'SkRefCntBase::unref::operator()' [ 0 14 21]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::pair<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkia *, std::__1::default_delete<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__end_cap' [ 0 5 10 92]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__alloc' [ 0 5 10 79]
'drmRandomCreate' [ 0]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::move_if_noexcept<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'logging::CheckEQImpl<long, int>' [ 0 9]
'base::FileTracing' [ 0 6]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::size' [ 0 5 10 72]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >::~unique_ptr' [ 0 5 10 153]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> &>::second' [ 0 5 10 92]
'scoped_refptr<base::RefCountedBytes>::operator->' [ 0 38]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >' [ 0 5 10]
'std::__1::__const_pointer<gfx::BufferFormat, gfx::BufferFormat *, std::__1::allocator<gfx::BufferFormat>, true>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::clear' [ 0 5 10 140]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformMatrix>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::LineSegment *, 0, false>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *> >' [ 0 5 10 150]
'gfx::internal::LineSegment::width' [ 0 5 15 28]
'sk_sp<cc::PaintShader>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >, true>' [ 0 5 10 30]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::splice' [ 0 5 10 181]
'gfx::BreakList<gfx::BaselineStyle>::SetMax' [ 0 5 36]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const unsigned int, unsigned short> *>::__nat, std::__1::pair<const unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >::release' [ 0 5 10 107]
'drmHashCreate' [ 0]
'std::__1::__unwrap_iter<gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<int *, 0, false>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<unsigned long, unsigned long>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'gfx::RectF::width' [ 0 5 12]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'std::__1::forward<sk_sp<SkTextBlob> >' [ 0 5 10]
'std::__1::__vector_base<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::__alloc' [ 0 5 10 85]
'std::__1::__rebind_pointer<void *, const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'base::string16_internals' [ 0 6]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> &>::second' [ 0 5 10 90]
'std::__1::__const_pointer<gfx::BreakList<bool>, gfx::BreakList<bool> *, std::__1::allocator<gfx::BreakList<bool> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::BufferFormat>, 1, true>' [ 0 5 10]
'drmGetBusid' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 522]
'gfx::PNGCodec' [ 0 5]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >::release' [ 0 5 10 143]
'gfx::ColorTransformToBT2020CL' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> >, true>' [ 0 5 10 30]
'std::__1::remove_reference<gfx::SkiaColorTransform *&>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::__alloc' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 65]
'std::__1::forward<const unsigned char &>' [ 0 5 10]
'gfx::ColorTransformToLinear::IsNull' [ 0 5 29]
'std::__1::__apply_cv<unsigned long, unsigned long, false, false>' [ 0 5 10]
'gfx::internal::(anonymous namespace)::PNGImageSource' [ 0 5 15 38]
'SkIRect::width' [ 0 9]
'std::__1::__tuple_leaf<0, gfx::ImageFamily::MapKey &&, false>::get' [ 0 5 10 63]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 432]
'gfx::FontList' [ 0 5]
'std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >' [ 0 5 10]
'gfx::BreakList<gfx::BaselineStyle>::ApplyValue' [ 0 5 36]
'std::__1::__const_pointer<color_utils::(anonymous namespace)::ColorBox, color_utils::(anonymous namespace)::ColorBox *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >::release' [ 0 5 10 107]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::DropShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10 102]
'Cr_z_inflateValidate' [ 0]
'base::internal::UnderlyingType<unsigned long>' [ 0 6 16]
'std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::operator--' [ 0 5 10 106]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__tree' [ 0 5 10 338]
'gfx::Rect::top_right' [ 0 5 11]
'gfx::SkiaColorTransform::~SkiaColorTransform' [ 0 5 25]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::begin' [ 0 5 10 181]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > *>::pointer_to' [ 0 5 10 218]
'gfx::internal::ImageRepSkia::image' [ 0 5 15 29]
'drm_agp_info_t' [ 0]
'std::__1::forward<const base::TimeDelta &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >::reset' [ 0 5 10 153]
'gfx::NativePixmap::NativePixmap' [ 0 5 19]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::operator->' [ 0 5 10 190]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::destroy<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 114]
'std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::operator->' [ 0 5 10 106]
'SkAlphaTypeIsOpaque' [ 0]
'gfx::RowSizeForBufferFormat' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>, void>' [ 0 5 10 91]
'SkBitmap::eraseARGB' [ 0 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >::operator->' [ 0 5 10 217]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::find<unsigned int>' [ 0 5 10 410]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__vector_base' [ 0 5 10 103]
'std::__1::make_unique<gfx::(anonymous namespace)::BlendingImageSource, const gfx::ImageSkia &, const gfx::ImageSkia &, double &>' [ 0 5 10]
'gfx::internal::ImageSkiaStorage::size' [ 0 5 15 33]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::data' [ 0 5 10 120]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'gfx::internal::(anonymous namespace)::PNGImageSource::Compare::operator()' [ 0 5 15 38 54 63]
'std::__1::move<gfx::Rect *&>' [ 0 5 10]
'_drmStats' [ 0]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data::Data' [ 0 6 63 69]
'std::__1::operator==<gfx::Rect *, gfx::Rect *>' [ 0 5 10]
'drmSetInterfaceVersion' [ 0]
'std::__1::move_backward<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__destruct_at_end' [ 0 5 10 140]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >::operator[]' [ 0 5 10 71]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::second' [ 0 5 10 293]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::second' [ 0 5 10 441]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::capacity' [ 0 5 10 114]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::~unique_ptr' [ 0 5 10 282]
'gfx::NativePixmapDmaBuf::GetUniqueId' [ 0 5 25]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::capacity' [ 0 5 10 85]
'std::__1::remove_reference<gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::distance<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>' [ 0 5 10]
'gfx::FontRenderParams::SubpixelRenderingToSkiaLCDOrientation' [ 0 5 23]
'gfx::(anonymous namespace)::HorizontalShadowSource::Draw' [ 0 5 28 52]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10]
'gfx::RenderText::DrawSelection' [ 0 5 17]
'gfx::ImageSkiaRep::operator=' [ 0 5 19]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>, void>' [ 0 5 10 91]
'ui::InterpolatedTranslation::InterpolatedTranslation' [ 0 4 29]
'base::internal::CheckedNumeric<long>' [ 0 6 16]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__recommend' [ 0 5 10 62]
'gfx::Image::storage' [ 0 5 12]
'std::__1::__pointer_type<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >' [ 0 5 10]
'color_utils::GridSampler::GetSample' [ 0 13 26]
'AnnotateTraceMemory' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__deallocate_node' [ 0 5 10 447]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >::construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 170]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'color_utils::(anonymous namespace)' [ 0 13]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::MRUCacheBase' [ 0 6 126]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::assign<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10 131]
'base::internal::CommonMin<unsigned char, int>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>' [ 0 5 10]
'SkImageInfo::alphaType' [ 0 13]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &, void>' [ 0 5 10 107]
'std::__1::conditional<false, std::__1::pointer_traits<cc::PaintTypeface *>::__nat, cc::PaintTypeface>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'UBiDiDirection' [ 0]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, unsigned int> *>' [ 0 5 10]
'gfx::BreakList<unsigned int>::~BreakList' [ 0 5 30]
'gfx::(anonymous namespace)::PaintPath::operator()' [ 0 5 28 39]
'std::__1::allocator_traits<std::__1::allocator<float> >::construct<float, const float &>' [ 0 5 10 57]
'cpu_check_inited_once' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>, 1, true>' [ 0 5 10]
'gfx::(anonymous namespace)::FontData' [ 0 5 28]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::is_valid' [ 0 6 63]
'std::__1::remove_reference<std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>::base' [ 0 5 10 144]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__annotate_new' [ 0 5 10 119]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__to_raw_pointer<float>' [ 0 5 10]
'std::__1::remove_reference<const gfx::VectorIcon *&>' [ 0 5 10]
'base::operator*<int>' [ 0 6]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::size' [ 0 5 10 131]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned int &&>, std::__1::tuple<> >' [ 0 5 10 866]
'gfx::RenderText::IsPointInSelection' [ 0 5 17]
'cc::PaintImageBuilder::set_image' [ 0 4 23]
'std::__1::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >::unique_ptr<true, void>' [ 0 5 10 155]
'gfx::(anonymous namespace)::PaintPath' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >' [ 0 5 10]
'base::FileDescriptor::FileDescriptor' [ 0 6 22]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >, 1, true>' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'std::__1::default_delete<gfx::RenderTextHarfBuzz>::operator()' [ 0 5 10 51]
'sk_sp<SkDrawLooper>::reset' [ 0 21]
'switches::kDisableLowEndDeviceMode' [ 0 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >::release' [ 0 5 10 147]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const unsigned int &, false>::get' [ 0 5 10 56]
'base::internal::CheckOnFailure::HandleFailure<unsigned long>' [ 0 6 16 32]
'std::__1::remove_reference<gfx::Rect>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransform, true>' [ 0 5 10]
'std::__1::iterator_traits<color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10]
'Cr_z_deflateParams' [ 0]
'_IO_lock_t' [ 0]
'SkNVRefCnt<SkTextBlob>' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__make_iter' [ 0 5 10 267]
'std::__1::map<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::operator[]' [ 0 5 10 537]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::PaddedImageSource, true>' [ 0 5 10]
'sk_sp<SkColorFilter>::~sk_sp' [ 0 22]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 70]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::construct<std::__1::pair<unsigned long, int>, std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'drmGetLock' [ 0]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__annotate_delete' [ 0 5 10 72]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__move_range' [ 0 5 10 133]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::MaskedImageSource *, void>' [ 0 5 10 68]
'FcRange' [ 0]
'std::__1::tie<const gfx::VectorIcon *, const int, const unsigned int, const base::TimeDelta, const gfx::VectorIcon *>' [ 0 5 10]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::AddRef' [ 0 6 118]
'std::__1::forward<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__node_alloc' [ 0 5 10 141]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >::allocate' [ 0 5 10 243]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >' [ 0 5 10]
'uintptr_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__get' [ 0 5 10 98]
'drmProcessHost1xDevice' [ 0]
'scoped_refptr<gfx::PlatformFont>::Release' [ 0 34]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>, void>' [ 0 5 10 91]
'std::__1::make_unique<gfx::internal::TextRunHarfBuzz, const gfx::Font &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::__compressed_pair<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10 189]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, long, true>' [ 0 5 10]
'gfx::(anonymous namespace)::ResizeSource::~ResizeSource' [ 0 5 28 42]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *&, void>' [ 0 5 10 134]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>, void, void>' [ 0 5 10 93]
'std::__1::pointer_traits<gfx::internal::Line *>' [ 0 5 10]
'base::AutoLock::AutoLock' [ 0 6 16]
'std::__1::advance<int *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__root' [ 0 5 10 506]
'drmPciDeviceInfoPtr' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::__destroy<gfx::internal::Line>' [ 0 5 10 71]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::size' [ 0 5 10 78]
'gfx::(anonymous namespace)::ElideTextAndAdjustRange' [ 0 5 28]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane>, 1, true>' [ 0 5 10]
'gfx::ShadowDetails' [ 0 5]
'gfx::RenderText::RangeContainsCaret' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct<std::__1::pair<unsigned long, unsigned long>, const std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10 97]
'std::__1::remove_reference<gfx::(anonymous namespace)::ResizeSource *&>' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__push_back_slow_path<gfx::ImageSkiaRep>' [ 0 5 10 78]
'base::LazyInstance<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >, base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > > >' [ 0 6]
'color_utils::(anonymous namespace)::ColorBox::Split::operator()' [ 0 13 36 46 53]
'gfx::(anonymous namespace)::ResizeSource::ResizeSource' [ 0 5 28 42]
'gfx::(anonymous namespace)::RestoreBreakList<gfx::Font::Weight>' [ 0 5 28]
'Cr_z_free_func' [ 0]
'Cr_z_inflateEnd' [ 0]
'std::__1::conditional<false, std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>' [ 0 5 10]
'gfx::ColorTransformFromBT2020CL::CanAppendShaderSource' [ 0 5 33]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__recommend' [ 0 5 10 113]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::max_size' [ 0 5 10 177]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::__vector_base' [ 0 5 10 69]
'SkRect::Intersects' [ 0 8]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::Unmap' [ 0 5 28 54]
'sk_sp<SkTypeface>::sk_sp' [ 0 19]
'std::__1::move<gfx::ImageFamily::MapKey &>' [ 0 5 10]
'gfx::BreakList<unsigned int>::SetValue' [ 0 5 30]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::allocator<gfx::(anonymous namespace)::CachedFont>::construct<gfx::(anonymous namespace)::CachedFont, gfx::(anonymous namespace)::CachedFont>' [ 0 5 10 61]
'std::__1::pair<int, unsigned int>::pair<int &, unsigned int &, false>' [ 0 5 10 35]
'gzFile_s' [ 0]
'gfx::RenderText::EdgeSelectionModel' [ 0 5 17]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >::unique_ptr<true, void>' [ 0 5 10 91]
'drm_drawable_t' [ 0]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::get' [ 0 6 63]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned int> *>::__nat, std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkPoint []>, 1, true>' [ 0 5 10]
'ui::InterpolatedConstantTransform::~InterpolatedConstantTransform' [ 0 4 35]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::allocate' [ 0 5 10 90]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRep>, 1, true>' [ 0 5 10]
'cc::PaintFlags::setSubpixelText' [ 0 4 16]
'scoped_refptr<base::RefCountedMemory>::scoped_refptr' [ 0 39]
'std::__1::forward<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::__distance<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'ssize_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::construct<gfx::internal::Line, const gfx::internal::Line &>' [ 0 5 10 71]
'__int64_t' [ 0]
'std::__1::add_lvalue_reference<gfx::ColorTransformSMPTEST2048NonHdrToLinear>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >::deallocate' [ 0 5 10 209]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformToLinear>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformToLinear *, 0, false>' [ 0 5 10]
'SkPackARGB32' [ 0]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::~__tree' [ 0 5 10 114]
'base::internal::CheckedMulOp<unsigned long, int, void>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >, 1, true>' [ 0 5 10]
'SkSafeUnref<SkFontMgr>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>' [ 0 5 10]
'gfx::BreakList<int>::max' [ 0 5 21]
'std::__1::__compressed_pair_elem<gfx::ColorTransformToBT2020CL *, 0, false>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'drm_clip_rect' [ 0]
'std::__1::__atomic_base<int, false>::store' [ 0 5 10 37]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__construct_backward<gfx::ImageSkiaRep *>' [ 0 5 10 69]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *&>' [ 0 5 10]
'base::BasicStringPiece<std::__1::basic_string<wchar_t> >::BasicStringPiece' [ 0 6 58]
'std::__1::map<gfx::IconDescription, gfx::ImageSkia, gfx::(anonymous namespace)::CompareIconDescription, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >::insert<std::__1::pair<gfx::IconDescription, gfx::ImageSkia>, void>' [ 0 5 10 188]
'std::__1::iterator_traits<const base::FileDescriptor *>' [ 0 5 10]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__get_long_size' [ 0 5 10 96]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::max' [ 0 6 16 70]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'logging::CheckLEImpl<unsigned int, unsigned long>' [ 0 9]
'switches::kProfilingFile' [ 0 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__lower_bound<std::__1::pair<int, int> >' [ 0 5 10 357]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'std::__1::__to_raw_pointer<gfx::PathElement>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::BlendingImageSource *, 0, false>' [ 0 5 10]
'std::__1::allocator<gfx::internal::Line>::construct<gfx::internal::Line, gfx::internal::Line>' [ 0 5 10 42]
'std::__1::__pointer_type<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::CachedFontSet>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__destruct_at_end' [ 0 5 10 63]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::end' [ 0 5 10 371]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >::deallocate' [ 0 5 10 110]
'std::__1::__unique_if<gfx::(anonymous namespace)::MaskedImageSource>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__make_iter' [ 0 5 10 68]
'std::__1::__wrap_iter<gfx::(anonymous namespace)::CachedFont *>::base' [ 0 5 10 65]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, true>' [ 0 5 10 30]
'base::WrapUnique<gfx::internal::ImageRepPNG>' [ 0 6]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::__wrap_iter<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::__wrap_iter' [ 0 5 10 94]
'gfx::Image::Height' [ 0 5 12]
'std::__1::__pointer_type<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__annotate_new' [ 0 5 10 78]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::max_size' [ 0 5 10 88]
'SkSafeRef<SkTypeface>' [ 0]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::TransparentImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10]
'std::__1::__wrap_iter<float *>::operator++' [ 0 5 10 32]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'drm_mode_fb_cmd' [ 0]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >' [ 0 5 10]
'std::__1::less<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10]
'std::__1::__advance<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'gfx::Rect::GetClampedValue' [ 0 5 11]
'color_utils::(anonymous namespace)::ColorBracket::ColorBracket' [ 0 13 36 50]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &, 1, false>::__get' [ 0 5 10 181]
'std::__1::move<std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10]
'gfx::RangeF::length' [ 0 5 13]
'std::__1::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >::~unique_ptr' [ 0 5 10 155]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::__alloc' [ 0 5 10 186]
'logging::MakeCheckOpString<unsigned int, unsigned char>' [ 0 9]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >::reset' [ 0 5 10 306]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'std::__1::enable_if<true, unsigned char *>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::operator!=<const gfx::internal::LineSegment *>' [ 0 5 10]
'SkData' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::push_back' [ 0 5 10 150]
'std::__1::__const_pointer<gfx::ImagePNGRep, gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep>, true>' [ 0 5 10]
'base::MRUCache<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int> >' [ 0 6]
'gfx::FindValidBoundaryBefore' [ 0 5]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__insert_node_at' [ 0 5 10 332]
'std::__1::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >::~unique_ptr' [ 0 5 10 99]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__swap_out_circular_buffer' [ 0 5 10 72]
'gfx::operator-' [ 0 5]
'gfx::(anonymous namespace)::GetGlyphWidthAndExtents' [ 0 5 28]
'base::internal::IsValueInRangeForNumericType<long, long>' [ 0 6 16]
'(anonymous namespace)::HSLShift::epsilon' [ 0 23 33]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::operator[]' [ 0 5 10 56]
'std::__1::unique_ptr<XPoint [], std::__1::default_delete<XPoint []> >::~unique_ptr' [ 0 5 10 71]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >' [ 0 5 10]
'gfx::PlatformFont::PlatformFont' [ 0 5 19]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::clear' [ 0 5 10 267]
'gfx::(anonymous namespace)::CachedFontSet' [ 0 5 28]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10]
'SkTypeface::uniqueID' [ 0 12]
'gfx::FontList::GetBaseline' [ 0 5 15]
'std::__1::__pointer_type<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >' [ 0 5 10]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >::~RefCountedThreadSafe' [ 0 6 136]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__end_cap' [ 0 5 10 108]
'gfx::Range::operator!=' [ 0 5 12]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__destruct_at_end' [ 0 5 10 139]
'std::__1::__rebind_pointer<void *, std::__1::__tree_node_base<void *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >::release' [ 0 5 10 111]
'SkPixmap::width' [ 0 10]
'SkTo<int, unsigned long>::operator()' [ 0 26]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::vector' [ 0 5 10 120]
'drmParseHost1xBusInfo' [ 0]
'std::__1::remove_reference<gfx::ColorTransformSkTransferFn *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::VectorIconSource *, void>' [ 0 5 10 68]
'std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>::operator()' [ 0 5 10 142]
'gfx::ImageSkia::operator=' [ 0 5 16]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned long> *&>' [ 0 5 10]
'base::Optional<SkBitmap>::operator bool' [ 0 6 26]
'std::__1::forward<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::__wrap_iter' [ 0 5 10 71]
'std::__1::addressof<const std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::__const_void_pointer<color_utils::(anonymous namespace)::ColorBracket *, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>, false>' [ 0 5 10]
'gfx::PlatformFontLinux::GetActualFontNameForTesting' [ 0 5 24]
'gfx::Canvas::~Canvas' [ 0 5 13]
'std::__1::streamoff' [ 0 5 10]
'std::__1::pair<int, unsigned int>' [ 0 5 10]
'std::__1::operator==' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, gfx::ImageFamily::MapKey &&>::__tuple_impl<0, gfx::ImageFamily::MapKey &&, gfx::ImageFamily::MapKey>' [ 0 5 10 83]
'std::__1::allocator<gfx::ImageSkiaRep>::construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep &>' [ 0 5 10 40]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::substr' [ 0 5 10 126]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::push_back' [ 0 5 10 142]
'std::__1::remove_reference<color_utils::(anonymous namespace)::ColorBox *&>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource>' [ 0 5 10]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__push_back_slow_path<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 267]
'std::__1::__const_void_pointer<std::__1::__hash_value_type<unsigned int, unsigned int> *, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> >, false>' [ 0 5 10]
'gfx::internal::ImageRep::ImageRep' [ 0 5 15 25]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>::Do' [ 0 6 16 64]
'std::__1::forward<ui::InterpolatedConstantTransform *&>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::ColorTransformToBT2020CL>' [ 0 5 10]
'gfx::GpuMemoryBufferHandle' [ 0 5]
'std::__1::__distance<unsigned char *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet>, false>' [ 0 5 10 30]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::begin' [ 0 5 10 172]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >' [ 0 5 10]
'gfx::Transform::matrix' [ 0 5 16]
'gfx::(anonymous namespace)::DeleteByType<gfx::(anonymous namespace)::FontData>' [ 0 5 28]
'std::__1::advance<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__swap_out_circular_buffer' [ 0 5 10 140]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>::__get_np' [ 0 5 10 206]
'std::__1::__unwrap_iter<unsigned char *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::BaselineStyle> *&>' [ 0 5 10]
'SkCanvas::clear' [ 0 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__alloc' [ 0 5 10 69]
'std::__1::swap<gfx::PathElement *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::NativePixmapPlane *>::__nat, gfx::NativePixmapPlane>' [ 0 5 10]
'gfx::SkiaColorTransform::IsNull' [ 0 5 25]
'(anonymous namespace)::Remove<std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > > >' [ 0 23]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >::reset<unsigned short *>' [ 0 5 10 87]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::operator->' [ 0 5 10 196]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::capacity' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__construct_backward<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'std::__1::move<base::FileDescriptor *&>' [ 0 5 10]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::capacity' [ 0 5 10 176]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>::__compressed_pair_elem<int, void>' [ 0 5 10 59]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >, true>' [ 0 5 10 30]
'std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >::~pair' [ 0 5 10 209]
'std::__1::allocator<base::FileDescriptor>::construct<base::FileDescriptor, int, bool>' [ 0 5 10 43]
'Cr_z_inflateCodesUsed' [ 0]
'gfx::PlatformFontLinux::~PlatformFontLinux' [ 0 5 24]
'cc::PaintFlags::getColor' [ 0 4 16]
'std::__1::swap<gfx::internal::ImageStorage *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__root' [ 0 5 10 725]
'gfx::internal::SkiaTextRenderer::SetTypeface' [ 0 5 15 33]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::__end_cap' [ 0 5 10 81]
'std::__1::remove_reference<base::i18n::BreakIterator *>' [ 0 5 10]
'std::__1::pair<float, int>' [ 0 5 10]
'color_utils::InvertColor' [ 0 13]
'std::__1::iterator_traits<gfx::internal::LineSegment *>' [ 0 5 10]
'base::internal::OptionalStorageBase<SkBitmap, false>::OptionalStorageBase' [ 0 6 16 54]
'gfx::Insets::Insets' [ 0 5 13]
'gfx::Typesetter' [ 0 5]
'std::__1::less<void>' [ 0 5 10]
'std::__1::remove_reference<unsigned int>' [ 0 5 10]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__vector_base' [ 0 5 10 91]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::assign<gfx::NativePixmapPlane *>' [ 0 5 10 88]
'color_utils::(anonymous namespace)::ColorBox::CompareByVolume' [ 0 13 36 46]
'SkPixmap::height' [ 0 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__make_iter' [ 0 5 10 142]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::deallocate' [ 0 5 10 113]
'Cr_z_gzread' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::__destroy<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 152]
'std::__1::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >::release' [ 0 5 10 141]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>, 1, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::ShadowNineboxSource, true>' [ 0 5 10]
'std::__1::remove_reference<SkPoint *>' [ 0 5 10]
'ui::SequentialIDGenerator::UpdateNextAvailableIDAfterRelease' [ 0 4 27]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >::release' [ 0 5 10 153]
'std::__1::true_type' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmap *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, void>' [ 0 5 10 71]
'std::__1::__tree_key_value_types<gfx::ImageSkiaRep>::__get_ptr' [ 0 5 10 53]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::reset' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *&, void>' [ 0 5 10 147]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__node_alloc' [ 0 5 10 357]
'std::__1::move<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__construct_backward<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10 164]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::size' [ 0 5 10 76]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::end' [ 0 5 10 331]
'std::__1::allocator<gfx::internal::Line>' [ 0 5 10]
'intptr_t' [ 0]
'std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>::operator()' [ 0 5 10 176]
'std::__1::pair<unsigned long, int>::operator=' [ 0 5 10 36]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >' [ 0 5 10]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__link_nodes' [ 0 5 10 181]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >' [ 0 5 10]
'base::internal::StrictNumeric<unsigned long>::StrictNumeric<unsigned long>' [ 0 6 16 46]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::emplace_back<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 132]
'std::__1::get<1, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10 157]
'max_align_t' [ 0]
'std::__1::remove_reference<const gfx::ImageSkia &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<gfx::Font, gfx::Range> *&>' [ 0 5 10]
'gfx::FontList::DeriveWithStyle' [ 0 5 15]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__push_back_slow_path<const std::__1::basic_string<char> &>' [ 0 5 10 101]
'gfx::internal::ImageRepPNG::Height' [ 0 5 15 28]
'std::__1::unique_ptr<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >::operator->' [ 0 5 10 87]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__destruct_at_end' [ 0 5 10 101]
'sk_sp<SkTypeface>::operator->' [ 0 19]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn>, false>' [ 0 5 10 30]
'std::__1::__wrap_iter<const gfx::ImageSkiaRep *>' [ 0 5 10]
'drmHashFirst' [ 0]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'drmModeObjectPropertiesPtr' [ 0]
'gfx::PlatformFontLinux::GetStyle' [ 0 5 24]
'size_t' [ 0]
'gfx::ImageSkiaRep::sk_bitmap' [ 0 5 19]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__annotate_new' [ 0 5 10 88]
'gfx::RenderText::SetSelectionModel' [ 0 5 17]
'base::ClampToRange<unsigned long>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::select_on_container_copy_construction' [ 0 5 10 74]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >::deallocate' [ 0 5 10 198]
'scoped_refptr<base::RefCountedBytes>' [ 0]
'std::__1::__unique_if<gfx::(anonymous namespace)::SuperimposedImageSource>' [ 0 5 10]
'SkRegion::Iterator::done' [ 0 10 20]
'std::__1::vector<float, std::__1::allocator<float> >::__annotate_new' [ 0 5 10 54]
'std::__1::forward<_FcPattern *>' [ 0 5 10]
'Cr_z_gzopen64' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>, false>' [ 0 5 10 30]
'std::__1::move<gfx::(anonymous namespace)::CachedFont *&>' [ 0 5 10]
'drmParsePlatformDeviceInfo' [ 0]
'drmMarkBufs' [ 0]
'std::__1::move_backward<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::emplace<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10 322]
'std::__1::__compressed_pair<gfx::PathElement *, std::__1::allocator<gfx::PathElement> &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__end_cap' [ 0 5 10 150]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::operator++' [ 0 5 10 356]
'std::__1::pointer_traits<gfx::ShadowValue *>' [ 0 5 10]
'std::__1::remove_reference<_FcPattern *&>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >' [ 0 5 10]
'gz_reset' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__annotate_delete' [ 0 5 10 84]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >::construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, const int &>' [ 0 5 10 85]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::deallocate' [ 0 5 10 72]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >' [ 0 5 10]
'std::__1::move<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10]
'std::__1::__compressed_pair<XPoint *, std::__1::default_delete<XPoint []> >::__compressed_pair<XPoint *&, true>' [ 0 5 10 77]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::capacity' [ 0 5 10 79]
'std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::~list' [ 0 5 10 181]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 284]
'gfx::(anonymous namespace)::HorizontalShadowSource' [ 0 5 28]
'gfx::ColorTransformStep::ColorTransformStep' [ 0 5 25]
'gfx::FontListImpl::GetFonts' [ 0 5 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >' [ 0 5 10]
'color_utils::GetSysSkColor' [ 0 13]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::__wrap_iter' [ 0 5 10 75]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__annotate_delete' [ 0 5 10 76]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::size' [ 0 5 10 140]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::capacity' [ 0 5 10 113]
'drm_ctx_res_t' [ 0]
'drmModeGetPropertyBlob' [ 0]
'std::__1::__unwrap_iter<int *>' [ 0 5 10]
'SkPixmap::alphaType' [ 0 10]
'std::__1::pair<unsigned long, unsigned long>::pair<unsigned int, unsigned long &, false>' [ 0 5 10 46]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >, true>' [ 0 5 10 30]
'std::__1::remove_reference<const float &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia>, true>' [ 0 5 10 30]
'gfx::(anonymous namespace)::RowSizeForBufferFormatChecked' [ 0 5 28]
'std::__1::move<gfx::Rect &>' [ 0 5 10]
'std::__1::__const_pointer<gfx::ImageSkia, gfx::ImageSkia *, std::__1::allocator<gfx::ImageSkia>, true>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::clear' [ 0 5 10 76]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10]
'color_utils::(anonymous namespace)::ColorBox' [ 0 13 36]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::max_size' [ 0 5 10 114]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__destroy<gfx::ShadowValue>' [ 0 5 10 68]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique_impl<std::__1::pair<int, unsigned int> >' [ 0 5 10 447]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__destruct_at_end' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<SkPoint *, 0, false>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, const std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'gfx::ImageSkiaOperations::CreateMaskedImage' [ 0 5 26]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__max_size' [ 0 5 10 61]
'SkBitmap::getColor' [ 0 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator+=' [ 0 5 10 76]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >, long, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::front' [ 0 5 10 115]
'std::__1::forward<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::remove_reference<unsigned long &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::operator=' [ 0 5 10 115]
'logging::CheckNEImpl<unsigned int, unsigned int>' [ 0 9]
'std::__1::__const_pointer<int, int *, std::__1::allocator<int>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >, void>' [ 0 5 10 288]
'std::__1::allocator<std::__1::pair<unsigned long, bool> >::allocate' [ 0 5 10 59]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__emplace_back_slow_path<int, bool>' [ 0 5 10 84]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::capacity' [ 0 5 10 81]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::operator<<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10 31 93 117 143 205 229]
'std::__1::__const_void_pointer<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags>, false>' [ 0 5 10]
'std::__1::allocator<unsigned char>::construct<unsigned char>' [ 0 5 10 36]
'color_utils::(anonymous namespace)::kNumberOfIterations' [ 0 13 36]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::__construct<std::__1::pair<const unsigned int, int>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 130]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::operator[]' [ 0 5 10 88]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__get_short_size' [ 0 5 10 96]
'SkPMColor' [ 0]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >, std::__1::pair<unsigned long, gfx::BaselineStyle> *, true>' [ 0 5 10]
'SkVector' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<gfx::Font, gfx::Range> *>::__nat, std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::ShadowValue *>::base' [ 0 5 10 49]
'gfx::ScopedCanvas::ScopedCanvas' [ 0 5 19]
'std::__1::move_backward<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::addressof<std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::__pointer_type<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__rehash' [ 0 5 10 447]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::internal::(anonymous namespace)::PNGImageSource, true>' [ 0 5 10]
'base::internal::UnderlyingType<float>' [ 0 6 16]
'gfx::(anonymous namespace)::ExtractSubsetImageSource' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::max_size' [ 0 5 10 164]
'std::__1::__size_type<std::__1::allocator<float>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>' [ 0 5 10]
'std::__1::addressof<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'ui::InterpolatedScale::InterpolateButDoNotCompose' [ 0 4 23]
'drmModeListLessees' [ 0]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::make_unique<gfx::RenderTextHarfBuzz>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct<std::__1::pair<unsigned long, bool>, const std::__1::pair<unsigned long, bool> &>' [ 0 5 10 88]
'std::__1::__rebind_pointer<void *, std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::clear' [ 0 5 10 69]
'std::__1::__compressed_pair<gfx::ImageSkia *, std::__1::default_delete<gfx::ImageSkia> >::__compressed_pair<gfx::ImageSkia *&, true>' [ 0 5 10 90]
'std::__1::get<0, gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 256]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>::operator->' [ 0 5 10 356]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::destroy<std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'std::__1::conditional<true, std::__1::pair<unsigned long, unsigned int> &&, std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10]
'gfx::Font::GetCapHeight' [ 0 5 11]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Rect *>::operator++' [ 0 5 10 42]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__copy_assign_alloc' [ 0 5 10 332]
'base::internal::CheckedAndOp<unsigned long, int, void>' [ 0 6 16]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >' [ 0 5 10]
'gfx::ColorTransformStep::GetSkTransferFn' [ 0 5 25]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::ExtractSubsetImageSource>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InterpolatedConstantTransform *, std::__1::default_delete<ui::InterpolatedConstantTransform> >::__compressed_pair<ui::InterpolatedConstantTransform *&, true>' [ 0 5 10 128]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::~__split_buffer' [ 0 5 10 71]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10 115]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::capacity' [ 0 5 10 139]
'std::__1::get<3, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'inflate_state' [ 0]
'std::__1::unique_ptr<unsigned short [], std::__1::default_delete<unsigned short []> >::~unique_ptr' [ 0 5 10 87]
'drmModeFreeProperty' [ 0]
'std::__1::__const_void_pointer<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, false>' [ 0 5 10]
'SkRect' [ 0]
'gfx::internal::TextRunList::InitIndexMap' [ 0 5 15 28]
'gfx::(anonymous namespace)::kBufferFormats' [ 0 5 28]
'gfx::ImageFamily::GetBest' [ 0 5 18]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10 154]
'std::__1::unique_ptr<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >::~unique_ptr' [ 0 5 10 141]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::clear' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>, void>' [ 0 5 10 91]
'gfx::SkiaColorTransform' [ 0 5]
'drmRandom' [ 0]
'std::__1::addressof<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'gfx::Image::CopyImageSkia' [ 0 5 12]
'drm_agp_buffer_t' [ 0]
'gfx::Range::length' [ 0 5 12]
'std::__1::conditional<false, const std::__1::basic_string<char> &, std::__1::basic_string<char> &&>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >::reset' [ 0 5 10 143]
'std::__1::move<std::__1::pair<unsigned long, gfx::Font::Weight> *&>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::IconWithBadgeSource *>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > > >' [ 0 6]
'drmModeAtomicReqItemPtr' [ 0]
'base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::PlatformFontLinux> >' [ 0 6 16]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::operator->' [ 0 5 10 238]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::operator=' [ 0 5 10 88]
'std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>, bool>' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::begin' [ 0 5 10 85]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true> &>' [ 0 5 10 318]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'std::__1::allocator<unsigned int>::construct<unsigned int, const unsigned int &>' [ 0 5 10 35]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::~vector' [ 0 5 10 177]
'gfx::Path::~Path' [ 0 5 11]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__tree' [ 0 5 10 141]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedTransform>, 1, true>::__compressed_pair_elem<std::__1::default_delete<ui::InterpolatedConstantTransform>, void>' [ 0 5 10 96]
'gfx::(anonymous namespace)::HarfBuzzFace::get' [ 0 5 28 42]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::begin' [ 0 5 10 140]
'gfx::Canvas::Canvas' [ 0 5 13]
'std::__1::allocator<gfx::ImagePNGRep>::deallocate' [ 0 5 10 39]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::BlendingImageSource>' [ 0 5 10]
'drmModeLesseeListPtr' [ 0]
'std::__1::__pointer_type<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__root' [ 0 5 10 114]
'std::__1::forward<std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::back' [ 0 5 10 141]
'drmGetMinorName' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'gfx::Image::AddRepresentation' [ 0 5 12]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >, long, true>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'std::__1::__size_type<std::__1::allocator<gfx::PathElement>, long, true>' [ 0 5 10]
'std::__1::__const_pointer<cc::PaintFlags, cc::PaintFlags *, std::__1::allocator<cc::PaintFlags>, true>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 218]
'gfx::(anonymous namespace)::g_fallback_cache' [ 0 5 28]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >, true>' [ 0 5 10 30]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'static_dtree' [ 0]
'std::__1::__const_void_pointer<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, false>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__recommend' [ 0 5 10 213]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRepSkia *, 0, false>' [ 0 5 10]
'std::__1::swap<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__construct_range_forward<gfx::Font *, gfx::Font *>' [ 0 5 10 61]
'__blkcnt_t' [ 0]
'std::__1::conditional<true, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >, std::__1::__nat>' [ 0 5 10]
'std::__1::move<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > &>' [ 0 5 10]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::capacity' [ 0 5 10 69]
'std::__1::__pointer_type<_FcPattern, FcPatternDeleter>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::VectorIconSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::VectorIconSource *&, void>' [ 0 5 10 92]
'drm_stats' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__construct<gfx::ImagePNGRep, gfx::ImagePNGRep &>' [ 0 5 10 68]
'std::__1::__wrap_iter<const color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__tuple_less<2>::operator()<std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&> >' [ 0 5 10 27]
'std::__1::allocator<gfx::Font>::deallocate' [ 0 5 10 32]
'std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::operator[]' [ 0 5 10 292]
'std::__1::__tuple_less<4>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'gfx::BreakList<gfx::Font::Weight>::breaks' [ 0 5 35]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >' [ 0 5 10]
'gfx::CALayerParams::CALayerParams' [ 0 5 20]
'gfx::internal::Line::Line' [ 0 5 15 21]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::~vector' [ 0 5 10 114]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::operator->' [ 0 5 10 61]
'logging::CheckNEImpl<SkAlphaType, SkAlphaType>' [ 0 9]
'color_utils::(anonymous namespace)::KMeanCluster::AddPoint' [ 0 13 36 50]
'gfx::Vector2dF::Vector2dF' [ 0 5 16]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::clear' [ 0 5 10 187]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::data' [ 0 5 10 267]
'std::__1::forward<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::clear' [ 0 5 10 147]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::PathElement> &, 1, false>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Rect *>::operator->' [ 0 5 10 42]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >' [ 0 5 10]
'gfx::GetFontRenderParams' [ 0 5]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10 647]
'std::__1::__const_pointer<gfx::NativePixmapPlane, gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane>, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__destroy<unsigned char>' [ 0 5 10 65]
'gfx::RenderText::GetLineOffset' [ 0 5 17]
'drmModeFreeCrtc' [ 0]
'Cr_z_gzrewind' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::destroy<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 96]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::allocate' [ 0 5 10 164]
'std::__1::__tuple_less<3>' [ 0 5 10]
'SkSafeUnref<SkColorSpace>' [ 0]
'__v4su' [ 0]
'gfx::Transform' [ 0 5]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'gfx::BreakList<int>' [ 0 5]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__link_nodes_at_front' [ 0 5 10 181]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::release' [ 0 5 10 266]
'Cr_z_inflateSync' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::internal::ImageRepSkia>, void>' [ 0 5 10 94]
'Cr_z_gzseek' [ 0]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::CachedFontSet, true>' [ 0 5 10]
'Cr_z_inflateGetHeader' [ 0]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *>::base' [ 0 5 10 72]
'gfx::BreakList<unsigned int>::ApplyValue' [ 0 5 30]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator+=' [ 0 5 10 81]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintFlags> &, 1, false>' [ 0 5 10]
'std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >::allocate' [ 0 5 10 90]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::reset' [ 0 5 10 81]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__annotate_new' [ 0 5 10 76]
'fold_2' [ 0]
'fold_3' [ 0]
'fold_4' [ 0]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::__end_cap' [ 0 5 10 87]
'std::__1::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10 108]
'std::__1::default_delete<ui::InterpolatedConstantTransform>' [ 0 5 10]
'drm_mode_cursor' [ 0]
'std::__1::tuple<gfx::ImageFamily::MapKey &&>::tuple<gfx::ImageFamily::MapKey, false, false>' [ 0 5 10 46]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>, void, void>' [ 0 5 10 93]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::operator--' [ 0 5 10 71]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::data' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::default_delete<icu_61::BreakIterator>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::~__tree' [ 0 5 10 332]
'std::__1::operator==<const gfx::Rect *, const gfx::Rect *>' [ 0 5 10]
'scoped_refptr<gfx::PlatformFontLinux>::operator=' [ 0 39]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>, void, void>' [ 0 5 10 99]
'std::__1::basic_iostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'gfx::(anonymous namespace)::HarfBuzzLineBreaker::AddLineSegment' [ 0 5 28 49]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>::__get_np' [ 0 5 10 300]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>, void, void>' [ 0 5 10 93]
'__blksize_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::allocate' [ 0 5 10 69]
'gfx::ColorTransformSkTransferFn::Join' [ 0 5 33]
'gfx::BufferSizeForBufferFormat' [ 0 5]
'std::__1::__compressed_pair<gfx::ColorTransformFromBT2020CL *, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10]
'std::__1::allocator<base::FileDescriptor>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct<std::__1::pair<unsigned long, int>, const std::__1::pair<unsigned long, int> &>' [ 0 5 10 87]
'base::time_internal' [ 0 6]
'SkBitmap::alphaType' [ 0 10]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, unsigned int> >::__get_ptr' [ 0 5 10 92]
'std::__1::addressof<const std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct_at_end' [ 0 5 10 143]
'std::__1::pointer_traits<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> *>' [ 0 5 10]
'gfx::IsValidCodePointIndex' [ 0 5]
'std::__1::remove_const<float>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>::__get' [ 0 5 10 81]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'std::__1::conditional<false, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &&>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'base::FilePath' [ 0 6]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::allocate' [ 0 5 10 61]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__split_buffer' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__construct_backward<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 119]
'SkBitmap::height' [ 0 10]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>' [ 0 6 16]
'AnnotateCondVarWait' [ 0]
'SkRect::width' [ 0 8]
'SkBitmap::getAddr32::operator()' [ 0 10 21]
'scoped_refptr<base::RefCountedBytes>::scoped_refptr' [ 0 38]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::size' [ 0 5 10 626]
'std::__1::conditional<true, std::__1::pair<gfx::Font, gfx::Range>, std::__1::__nat>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::~unique_ptr' [ 0 5 10 324]
'std::__1::__const_void_pointer<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment>, false>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::get' [ 0 5 10 99]
'std::__1::operator!=<const gfx::Font *>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, true>::__atomic_base' [ 0 5 10 45]
'SkImageInfo::isEmpty' [ 0 13]
'logging::LogMessage' [ 0 9]
'std::__1::add_lvalue_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >' [ 0 5 10]
'drmSetServerInfo' [ 0]
'logging::CheckEQImpl<SkColorType, SkColorType>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::allocate' [ 0 5 10 88]
'std::__1::conditional<true, const gfx::DecoratedText::RangedAttribute &, gfx::DecoratedText::RangedAttribute &&>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >::deallocate' [ 0 5 10 67]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::~__split_buffer' [ 0 5 10 186]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::operator->' [ 0 48]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__max_size' [ 0 5 10 87]
'AnnotateEnableRaceDetection' [ 0]
'base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::FontFuncs>::New' [ 0 6 16 80]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::allocate' [ 0 5 10 153]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep>, true>' [ 0 5 10 30]
'std::__1::forward<const gfx::ShadowValue &>' [ 0 5 10]
'std::__1::allocator<gfx::Font>::construct<gfx::Font, gfx::Font>' [ 0 5 10 32]
'gfx::GetFallbackFontForChar' [ 0 5]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__destruct_at_end' [ 0 5 10 140]
'gfx::(anonymous namespace)::HashFontRenderParamsQuery' [ 0 5 28]
'base::i18n::kLeftToRightMark' [ 0 6 12]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > >' [ 0 6]
'std::__1::pair<const unsigned int, unsigned int>::pair<int, unsigned int, false>' [ 0 5 10 50]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'logging::MakeCheckOpValueString<unsigned short>' [ 0 9]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >::construct<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 115]
'gfx::CanvasImageSource::MakeImageSkia<gfx::(anonymous namespace)::VectorIconSource, const std::__1::basic_string<char> &, int &, unsigned int &>' [ 0 5 24]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >' [ 0 5 10]
'std::__1::pair<unsigned long, unsigned int>::operator=' [ 0 5 10 45]
'std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>::operator()' [ 0 5 10 135]
'std::__1::__compressed_pair<SkPath *, std::__1::allocator<SkPath> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::allocate' [ 0 5 10 101]
'std::__1::make_signed<int>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::allocate' [ 0 5 10 170]
'gfx::Rect::right' [ 0 5 11]
'std::__1::__compressed_pair_elem<float *, 0, false>' [ 0 5 10]
'__pthread_mutex_s' [ 0]
'logging::MakeCheckOpString<gfx::ElideBehavior, gfx::ElideBehavior>' [ 0 9]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__split_buffer' [ 0 5 10 59]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>::second' [ 0 5 10 82]
'SkImageInfo::width' [ 0 13]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'gfx::ColorTransformPerChannelTransferFn::AppendShaderSource' [ 0 5 41]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >' [ 0 5 10]
'drm_update_draw' [ 0]
'(anonymous namespace)::MassageRotationIfMultipleOfNinetyDegrees' [ 0 23]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::operator()' [ 0 5 10 187]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >::construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, const std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10 73]
'gfx::(anonymous namespace)::TiledImageSource::GetImageForScale' [ 0 5 28 46]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::construct<gfx::Font, const gfx::Font &>' [ 0 5 10 93]
'std::__1::default_delete<gfx::internal::ImageRepPNG>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__construct<color_utils::(anonymous namespace)::KMeanCluster, const color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10 100]
'std::__1::remove_reference<const std::__1::basic_string<char> &>' [ 0 5 10]
'(anonymous namespace)::IsFontFamilyAvailable' [ 0 23]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::destroy' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::max_size' [ 0 5 10 72]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::allocate' [ 0 5 10 78]
'gfx::ClientNativePixmapFactory' [ 0 5]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__emplace_back_slow_path<_FcPattern *&, _FcCharSet *&>' [ 0 5 10 120]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::size' [ 0 5 10 133]
'std::__1::__pointer_type<SkBitmap, std::__1::default_delete<SkBitmap> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *&>' [ 0 5 10]
'base::internal::ConditionalNegate<int>' [ 0 6 16]
'std::__1::__atomic_base<int, true>::__atomic_base' [ 0 5 10 36]
'std::__1::__pointer_type_imp::__pointer_type<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__insert_node_at' [ 0 5 10 866]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::operator+=' [ 0 5 10 74]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkia>, 1, true>' [ 0 5 10]
'base::internal::OptionalStorage<cc::SkiaPaintCanvas, false, false>' [ 0 6 16]
'gfx::(anonymous namespace)::g_icon_cache' [ 0 5 28]
'switches::kNoErrorDialogs' [ 0 10]
'drmError' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::allocate' [ 0 5 10 181]
'std::__1::add_lvalue_reference<gfx::internal::(anonymous namespace)::PNGImageSource>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::vector' [ 0 5 10 133]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__allocate_node' [ 0 5 10 181]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10]
'std::__1::remove_reference<cc::PaintImageBuilder &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, gfx::Font::Weight> *>::__nat, std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const wchar_t *>::__nat, const wchar_t>' [ 0 5 10]
'std::initializer_list<gfx::ShadowValue>::begin' [ 0 5 41]
'std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >::~pair' [ 0 5 10 154]
'std::__1::allocator<float>' [ 0 5 10]
'std::__1::__less<char *, char *>' [ 0 5 10]
'gfx::LinuxFontDelegate::SetInstance' [ 0 5 24]
'gfx::(anonymous namespace)::VectorIconSource::~VectorIconSource' [ 0 5 28 46]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>' [ 0 5 10]
'__compar_fn_t' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::pair<unsigned long, int>::pair<unsigned int, int &, false>' [ 0 5 10 36]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::push_back' [ 0 5 10 72]
'std::__1::min<unsigned char>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia>, false>' [ 0 5 10 30]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'SkPixmap::addr' [ 0 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::data' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Font> &, 1, false>::__get' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::operator[]' [ 0 5 10 177]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::deallocate' [ 0 5 10 115]
'std::__1::conditional<true, std::__1::pair<unsigned long, unsigned int>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::destroy<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10 100]
'std::__1::allocator<gfx::ShadowValue>::deallocate' [ 0 5 10 39]
'base::internal::OptionalStorageBase<SkBitmap, false>::Init<>' [ 0 6 16 54]
'Cr_z_adler32' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::__end_cap' [ 0 5 10 222]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >' [ 0 5 10]
'color_utils::(anonymous namespace)::KMeanCluster' [ 0 13 36]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'gfx::CanvasImageSource::GetImageForScale' [ 0 5 24]
'drm_map_t' [ 0]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedAddOp, int>' [ 0 6 16 47]
'std::__1::__compressed_pair<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 132]
'std::__1::remove_reference<std::__1::pair<unsigned long, int> &>' [ 0 5 10]
'SkImageInfo::~SkImageInfo' [ 0 13]
'std::__1::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'config' [ 0]
'std::__1::__tuple_leaf<0, const gfx::VectorIcon *&, false>::get' [ 0 5 10 60]
'std::__1::__pointer_type<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >::allocate' [ 0 5 10 115]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >::Release' [ 0 6 108]
'std::__1::remove_reference<XPoint *&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__swap_out_circular_buffer' [ 0 5 10 119]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::empty' [ 0 5 10 113]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct_forward<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'std::__1::move_iterator<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::allocator<gfx::ShadowValue>::allocate' [ 0 5 10 39]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>' [ 0 5 10]
'FcCharSet' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::push_back' [ 0 5 10 124]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >' [ 0 5 10]
'std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::base' [ 0 5 10 55]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::RotatedSource>' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::less<unsigned int>::operator()' [ 0 5 10 30]
'SkBitmap::getAddr8' [ 0 10]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache> >::Pointer' [ 0 6 163]
'gfx::RenderText::SetCompositionRange' [ 0 5 17]
'std::__1::remove_reference<_FcCharSet *&>' [ 0 5 10]
'base::TimeDelta::operator+' [ 0 6 17]
'gfx::RenderText::Draw' [ 0 5 17]
'base::TimeDelta::operator-' [ 0 6 17]
'gfx::ImageSkiaOperations::CreateHorizontalShadow' [ 0 5 26]
'gfx::FontList::DeriveWithHeightUpperBound' [ 0 5 15]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::back' [ 0 5 10 82]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::back' [ 0 5 10 68]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::operator++' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>' [ 0 5 10]
'drmDevicesEqual' [ 0]
'extra_lbits' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >' [ 0 5 10]
'gfx::RenderText::CreateHarfBuzzInstance' [ 0 5 17]
'std::__1::__const_pointer<gfx::Font, gfx::Font *, std::__1::allocator<gfx::Font>, true>' [ 0 5 10]
'base::TimeDelta::operator=' [ 0 6 17]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::vector' [ 0 5 10 213]
'sk_sp<SkDrawLooper>::release' [ 0 21]
'gfx::RenderText::OnTextAttributeChanged::kNewline' [ 0 5 17 41]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >::construct<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 123]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__vector_base' [ 0 5 10 149]
'cc::PaintFlags::setTextEncoding' [ 0 4 16]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__swap_out_circular_buffer' [ 0 5 10 141]
'color_utils::(anonymous namespace)::g_color_utils_darkest' [ 0 13 36]
'std::__1::iterator_traits<const unsigned int *>' [ 0 5 10]
'std::__1::min<double>' [ 0 5 10]
'std::__1::__wrap_iter<const float *>::__wrap_iter<float *>' [ 0 5 10 38]
'Cr_z_deflateInit_' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::move_iterator<std::__1::pair<unsigned long, int> *>::operator++' [ 0 5 10 63]
'gfx::internal::SkiaTextRenderer::~SkiaTextRenderer' [ 0 5 15 33]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__pointer_type<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'sk_sp<SkPixelRef>::get' [ 0 19]
'std::__1::remove_reference<std::__1::allocator<gfx::internal::Line> &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::second' [ 0 5 10 647]
'gfx::(anonymous namespace)::QueryFontconfig' [ 0 5 28]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::~__tree' [ 0 5 10 626]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintFlags>, 1, true>' [ 0 5 10]
'gfx::Font::Font' [ 0 5 11]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::count' [ 0 5 10 191]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::clear' [ 0 5 10 123]
'std::__1::forward<gfx::ImagePNGRep &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__insert_node_at' [ 0 5 10 284]
'gfx::ImageSkia::height' [ 0 5 16]
'gfx::RangeF::GetMax' [ 0 5 13]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::capacity' [ 0 5 10 63]
'std::__1::__pointer_type<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::tuple<const unsigned int &>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<icu_61::BreakIterator *, 0, false>' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<char> >::allocate' [ 0 5 10 52]
'std::__1::swap<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::default_delete<SkColorSpaceXform>' [ 0 5 10]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__destruct_at_end' [ 0 5 10 174]
'gfx::RenderTextHarfBuzz::AdjacentWordSelectionModel' [ 0 5 25]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__find_equal<unsigned int>' [ 0 5 10 557]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10]
'Cr_z_gz_headerp' [ 0]
'gfx::operator+' [ 0 5]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::emplace_front<const unsigned int &, gfx::(anonymous namespace)::QueryResult>' [ 0 5 10 181]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__annotate_delete' [ 0 5 10 76]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'gfx::PlatformFont::CreateFromNameAndSize' [ 0 5 19]
'ceil' [ 0]
'__gid_t' [ 0]
'std::__1::forward<gfx::RenderTextHarfBuzz *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::construct<gfx::Rect>' [ 0 5 10 61]
'gfx::Size::IsEmpty' [ 0 5 11]
'std::__1::move<std::__1::pair<unsigned long, unsigned int> *&>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'gfx::RangeF::RangeF' [ 0 5 13]
'std::__1::forward<std::__1::allocator<float> &>' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::BlendingImageSource *&>' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__make_iter' [ 0 5 10 76]
'icu_61::ConstChar16Ptr::~ConstChar16Ptr' [ 0 8 24]
'gfx::Rect::Rect' [ 0 5 11]
'gfx::BreakList<unsigned long>::GetBreak' [ 0 5 31]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::capacity' [ 0 5 10 140]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true> >::__compressed_pair<int, true>' [ 0 5 10 187]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkColorSpaceXform *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>::__compressed_pair_elem<std::__1::allocator<unsigned int> &, void>' [ 0 5 10 81]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::operator+=' [ 0 5 10 70]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >, false>' [ 0 5 10]
'std::__1::__move_backward<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::tuple<gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'__uint8_t' [ 0]
'std::__1::iterator_traits<unsigned char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::max_size' [ 0 5 10 119]
'std::__1::pointer_traits<gfx::PathElement *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::tuple<> >' [ 0 5 10 332]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ResizeSource, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >::unique_ptr<true, void>' [ 0 5 10 133]
'gfx::ClientNativePixmapDmaBuf::GetStride' [ 0 5 31]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::ExtractSubsetImageSource, true>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>' [ 0 5 10]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >::__get_key' [ 0 5 10 97]
'drm_mode_list_lessees' [ 0]
'std::__1::move<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *&>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> &>' [ 0 5 10 374]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > >' [ 0 5 10]
'std::__1::operator==<const gfx::ImagePNGRep *, const gfx::ImagePNGRep *>' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__construct_at_end<base::FileDescriptor *>' [ 0 5 10 84]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > &>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<unsigned char *>' [ 0 5 10 70]
'gfx::RenderText::SetCursorEnabled' [ 0 5 17]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'FcChar8' [ 0]
'std::__1::addressof<std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'SkBitmapOperations::CreateBlendedBitmap' [ 0 20]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >::release' [ 0 5 10 157]
'std::__1::__wrap_iter<const gfx::BreakList<bool> *>::operator*' [ 0 5 10 53]
'std::__1::__to_raw_pointer<SkPath>' [ 0 5 10]
'SkBitmapOperations::CreateBlendedBitmap::alpha_max' [ 0 20 41]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >::unique_ptr<true, void>' [ 0 5 10 107]
'gfx::(anonymous namespace)::GetInsets' [ 0 5 28]
'gfx::ImageSkia::RemoveUnsupportedRepresentationsForScale' [ 0 5 16]
'gfx::RenderTextHarfBuzz::MultilineSupported' [ 0 5 25]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__find_equal<gfx::ImageFamily::MapKey>' [ 0 5 10 332]
'SkTDArray<SkPathRef::GenIDChangeListener *>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::construct<gfx::Rect, gfx::Rect>' [ 0 5 10 61]
'std::__1::atomic<int>::atomic' [ 0 5 10 23]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::destroy' [ 0 5 10 626]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'uintmax_t' [ 0]
'insert_string_sse' [ 0]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::capacity' [ 0 5 10 85]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct_range_forward<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::__compressed_pair<true, void>' [ 0 5 10 167]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__make_iter' [ 0 5 10 143]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::RenderText>, 1, true>' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane>, false>' [ 0 5 10]
'std::__1::pair<unsigned long, gfx::Font::Weight>' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >::~map' [ 0 5 10 150]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache> >::OnExit' [ 0 6 163]
'std::__1::forward<std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__emplace_back_slow_path<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 167]
'std::__1::move<std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::second' [ 0 5 10 147]
'drm_auth_t' [ 0]
'gfx::CALayerParams::~CALayerParams' [ 0 5 20]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, 0, false>' [ 0 5 10]
'ui::SequentialIDGenerator::ResetForTest' [ 0 4 27]
'uch' [ 0]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > &>' [ 0 5 10]
'gfx::(anonymous namespace)::PathParser::~PathParser' [ 0 5 28 40]
'std::__1::forward<const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, 1, true>' [ 0 5 10]
'gfx::ClientNativePixmapFactory::~ClientNativePixmapFactory' [ 0 5 32]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::max_load_factor' [ 0 5 10 447]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<gfx::Font, void *> *>' [ 0 5 10]
'gfx::internal::Line' [ 0 5 15]
'std::__1::__const_pointer<unsigned short, unsigned short *, std::__1::allocator<unsigned short>, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> &, void>' [ 0 5 10 274]
'gfx::BreakList<int>::GetRange' [ 0 5 21]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct<float, const float &>' [ 0 5 10 57]
'gfx::FontList::GetHeight' [ 0 5 15]
'std::__1::swap<base::FileDescriptor *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'std::__1::__unique_if<gfx::internal::ImageRepSkia>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::__find_equal<std::__1::basic_string<char> >' [ 0 5 10 725]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 81]
'__mm_loadl_epi64_struct' [ 0]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__alloc' [ 0 5 10 103]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >::operator++' [ 0 5 10 140]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::__destruct_at_end' [ 0 5 10 141]
'decltype(nullptr)' [ 0]
'SkBitmap::readyToDraw' [ 0 10]
'SkTPin<int>' [ 0]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__hash' [ 0 5 10 118]
'std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long>' [ 0 5 10]
'Cr_z_adler32_combine' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::~unique_ptr' [ 0 5 10 180]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::capacity' [ 0 5 10 110]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, 1, true>' [ 0 5 10]
'fill_window' [ 0]
'std::__1::__wrap_iter<const base::FileDescriptor *>::__wrap_iter' [ 0 5 10 53]
'gfx::Canvas' [ 0 5]
'cc::PaintFlags::setPathEffect' [ 0 4 16]
'color_utils::(anonymous namespace)::g_color_utils_luma_midpoint' [ 0 13 36]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >::construct<std::__1::pair<unsigned long, unsigned int>, std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 67]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::deallocate' [ 0 5 10 73]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, std::__1::pair<unsigned long, unsigned long> *, true>' [ 0 5 10]
'gfx::ColorTransformInternal::CanGetShaderSource' [ 0 5 29]
'std::__1::__wrap_iter<const gfx::ImagePNGRep *>::__wrap_iter' [ 0 5 10 49]
'std::__1::forward<gfx::(anonymous namespace)::IconWithBadgeSource *&>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *>::pointer_to' [ 0 5 10 135]
'sk_sp<SkImage>::operator=' [ 0 16]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 70]
'gfx::CALayerParams::operator=' [ 0 5 20]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::TransparentImageSource *, void>' [ 0 5 10 68]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, void>' [ 0 5 10 91]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'gfx::(anonymous namespace)::kMaxTextLength' [ 0 5 28]
'std::__1::operator==<const unsigned int *, const unsigned int *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<const unsigned int, unsigned short>, std::__1::__nat>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric<unsigned long>' [ 0 6 16 47]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >::__get_ptr' [ 0 5 10 105]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::clear' [ 0 5 10 75]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>' [ 0 5 10]
'std::__1::operator!=<const base::FileDescriptor *>' [ 0 5 10]
'std::__1::operator==<std::__1::basic_string<char> *, std::__1::basic_string<char> *>' [ 0 5 10]
'drmModeObjectGetProperties' [ 0]
'gfx::BreakList<int>::operator=' [ 0 5 21]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::release' [ 0 5 10 522]
'std::__1::operator<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10 31 36 60 65]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::__tree_node_destructor' [ 0 5 10 150]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >, false>' [ 0 5 10]
'Cr_z_adler32_z' [ 0]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::begin' [ 0 5 10 68]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__destruct_at_end' [ 0 5 10 75]
'std::__1::forward<const color_utils::HSL &>' [ 0 5 10]
'std::__1::set<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::insert' [ 0 5 10 111]
'std::__1::unary_function<unsigned int, unsigned long>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >' [ 0 5 10]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__alloc' [ 0 5 10 91]
'std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__list_node_base' [ 0 5 10 107]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::clear' [ 0 5 10 65]
'drmCtlInstHandler' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::destroy<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10 199]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::__destruct_at_end' [ 0 5 10 85]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::max_size' [ 0 5 10 131]
'std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>' [ 0 5 10]
'gfx::RenderText::GetUpdatedCursorBounds' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<unsigned int, int> >' [ 0 5 10 139]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'std::__1::iterator_traits<const gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::PaintTypeface *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 65]
'std::__1::pair<unsigned long, bool>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::max_size' [ 0 5 10 167]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::operator++' [ 0 5 10 117]
'std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>::operator++' [ 0 5 10 110]
'drmAgpVersionMinor' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct_range_forward<gfx::ShadowValue>' [ 0 5 10 68]
'gfx::Image::ToImageSkia' [ 0 5 12]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__max_size' [ 0 5 10 68]
'logging::MakeCheckOpValueString<bool>' [ 0 9]
'std::__1::swap<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >::construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 243]
'gfx::(anonymous namespace)::HSLImageSource' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::max_size' [ 0 5 10 78]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::ShadowValue *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>, 1, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 218]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator+=' [ 0 5 10 87]
'std::__1::__tree_const_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>::__tree_const_iterator' [ 0 5 10 110]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::__construct<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10 181]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::max_size' [ 0 5 10 69]
'std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >::~RefCounted' [ 0 6 88]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::deallocate' [ 0 5 10 68]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::~map' [ 0 5 10 371]
'std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::addressof<std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10]
'drmModeCrtcSetGamma' [ 0]
'std::__1::__add_lvalue_reference_impl<icu_61::BreakIterator, true>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::capacity' [ 0 5 10 63]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::push_back' [ 0 5 10 76]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__destruct_at_end' [ 0 5 10 83]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__tree' [ 0 5 10 114]
'std::__1::remove_reference<gfx::Size *>' [ 0 5 10]
'sk_sp<SkColorSpace>::release' [ 0 21]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__copy_assign_alloc' [ 0 5 10 95]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::operator++' [ 0 5 10 55]
'drm_context_t' [ 0]
'std::__1::__compressed_pair<gfx::SkiaColorTransform *, std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__annotate_delete' [ 0 5 10 177]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10 463]
'SkRegion::Iterator::rect' [ 0 10 20]
'std::__1::__compressed_pair<SkPath *, std::__1::allocator<SkPath> >' [ 0 5 10]
'gfx::BreakList<gfx::Font::Weight>::SetValue' [ 0 5 35]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>' [ 0 5 10]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__recommend' [ 0 5 10 119]
'std::__1::__pointer_type<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'ui::InterpolatedTransformAboutPivot::~InterpolatedTransformAboutPivot' [ 0 4 37]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct_backward<gfx::ShadowValue>' [ 0 5 10 68]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::SkiaColorTransform *, std::__1::default_delete<gfx::SkiaColorTransform> >::__compressed_pair<gfx::SkiaColorTransform *&, true>' [ 0 5 10 108]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>, bool>' [ 0 5 10]
'base::internal::CommonMax<int, int>' [ 0 6 16]
'std::__1::operator==<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'UBlockCode' [ 0]
'std::__1::tuple<>' [ 0 5 10]
'std::__1::remove_reference<gfx::PathElement *&>' [ 0 5 10]
'gfx::internal::TextRunList' [ 0 5 15]
'std::__1::forward<int &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<_FcPattern *, 0, false>::__compressed_pair_elem<_FcPattern *, void>' [ 0 5 10 58]
'std::__1::__wrap_iter<const color_utils::(anonymous namespace)::KMeanCluster *>::base' [ 0 5 10 81]
'drmModeGetCrtc' [ 0]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>, void, void>' [ 0 5 10 93]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::capacity' [ 0 5 10 140]
'std::__1::default_delete<unsigned short []>' [ 0 5 10]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::basic_string_view' [ 0 5 10 65]
'std::__1::__const_void_pointer<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, false>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> *>::pointer_to' [ 0 5 10 90]
'std::__1::__pointer_type<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >' [ 0 5 10]
'color_utils::GridSampler::~GridSampler' [ 0 13 26]
'std::__1::__const_pointer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >, true>' [ 0 5 10]
'std::__1::char_traits<char>::compare' [ 0 5 10 29]
'gfx::RenderText::min_line_height' [ 0 5 17]
'drmModePropertyPtr' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__annotate_new' [ 0 5 10 115]
'std::__1::move<color_utils::(anonymous namespace)::ColorBox *&>' [ 0 5 10]
'std::__1::swap<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::vector<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >' [ 0 5 10]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::__hash_node_destructor' [ 0 5 10 145]
'std::__1::__compressed_pair_elem<gfx::ColorTransformFromLinear *, 0, false>::__compressed_pair_elem<gfx::ColorTransformFromLinear *&, void>' [ 0 5 10 77]
'logging::CheckEQImpl' [ 0 9]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >::construct<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 72]
'std::__1::__compressed_pair<cc::PaintFlags *, std::__1::allocator<cc::PaintFlags> &>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<gfx::ImageSkiaRep, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, 0, false>' [ 0 5 10]
'SK_ColorRED' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_value_type<unsigned int, unsigned int> *>::__nat, std::__1::__hash_value_type<unsigned int, unsigned int> >' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > >' [ 0 6 16]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::vector' [ 0 5 10 132]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::capacity' [ 0 5 10 149]
'std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >::construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, 0, false>' [ 0 5 10]
'uint_fast8_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >, 1, true>' [ 0 5 10]
'tree_desc_s' [ 0]
'std::__1::remove_reference<std::__1::tuple<const std::__1::basic_string<char> &> >' [ 0 5 10]
'base::DefaultRefCountedTraits<gfx::FontListImpl>::Destruct' [ 0 6 50]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::operator->' [ 0 5 10 117]
'std::__1::conditional<false, const gfx::(anonymous namespace)::CachedFont &, gfx::(anonymous namespace)::CachedFont &&>' [ 0 5 10]
'sk_sp<SkColorSpace>::reset' [ 0 21]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >::release' [ 0 5 10 147]
'drmRandomDestroy' [ 0]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long> >' [ 0 5 10]
'gfx::NativePixmap::~NativePixmap' [ 0 5 19]
'std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >' [ 0 5 10]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'gfx::ColorTransformToLinear::Evaluate' [ 0 5 29]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, unsigned short> *>::pointer_to' [ 0 5 10 82]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>' [ 0 6 16]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__link_nodes_at_back' [ 0 5 10 237]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__annotate_delete' [ 0 5 10 96]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'std::__1::forward<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *&>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>' [ 0 5 10]
'std::__1::operator==<gfx::ImageSkiaRep *, const gfx::ImageSkiaRep *>' [ 0 5 10]
'__v8hi' [ 0]
'std::__1::__vector_base<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__destruct_at_end' [ 0 5 10 147]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *>::__nat, std::__1::__list_node_base<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::__annotate_shrink' [ 0 5 10 56]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &, void>' [ 0 5 10 118]
'std::__1::allocator<gfx::NativePixmapPlane>::construct<gfx::NativePixmapPlane, gfx::NativePixmapPlane &>' [ 0 5 10 45]
'std::__1::remove_reference<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__pointer_type<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *>::operator++' [ 0 5 10 72]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::max_size' [ 0 5 10 140]
'std::__1::default_delete<SkPoint []>::operator()<SkPoint>' [ 0 5 10 38]
'Cr_z_inflateInit2_' [ 0]
'Cr_z_uncompress' [ 0]
'std::__1::addressof<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__end_node' [ 0 5 10 141]
'gfx::(anonymous namespace)::BuildDescription' [ 0 5 28]
'std::__1::forward<gfx::ColorTransformToBT2020CL *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::size' [ 0 5 10 143]
'std::__1::move<std::__1::basic_string<char> *&>' [ 0 5 10]
'std::__1::pair<const unsigned int, int>::pair<const unsigned int &>' [ 0 5 10 41]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> *, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<_FcPattern *, 0, false>::__compressed_pair_elem<_FcPattern *&, void>' [ 0 5 10 58]
'std::__1::add_lvalue_reference<std::__1::__tree_node<gfx::Font, void *> >' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'gfx::SelectionBound::edge_bottom' [ 0 5 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &, 1, false>::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &, void>' [ 0 5 10 117]
'gfx::ColorTransformFromBT2020CL::Transform' [ 0 5 33]
'std::__1::__compressed_pair<ui::InterpolatedTransform *, std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10]
'base::subtle::AdoptRefIfNeeded<gfx::internal::ImageSkiaStorage>' [ 0 6 14]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >' [ 0 5 10]
'std::__1::swap<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::DropShadowSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::DropShadowSource *&, void>' [ 0 5 10 92]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::SkiaColorTransform *, std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10 108]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::clear' [ 0 5 10 115]
'std::__1::__to_raw_pointer<std::__1::basic_string<char> >' [ 0 5 10]
'gfx::RenderTextHarfBuzz::CreateInstanceOfSameType' [ 0 5 25]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 63]
'gfx::RenderText::SelectRange' [ 0 5 17]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> >::__compressed_pair<int, const std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> &>' [ 0 5 10 218]
'gfx::(anonymous namespace)::CachedFontSet::FillFallbackList' [ 0 5 28 43]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> > &, void>' [ 0 5 10 105]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<base::internal::StrictNumeric<unsigned long> >::is_valid' [ 0 6 16 47 103]
'gfx::RenderText::SetGlyphWidthForTest' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__recommend' [ 0 5 10 131]
'std::__1::__compressed_pair_elem<std::__1::allocator<int>, 1, true>' [ 0 5 10]
'std::__1::pointer_traits<gfx::Rect *>' [ 0 5 10]
'std::__1::operator!=<const std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'gfx::RenderText::GetRunList' [ 0 5 17]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::size' [ 0 5 10 84]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::Get' [ 0 6 126]
'std::__1::__compressed_pair_elem<gfx::BufferFormat *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 65]
'std::__1::move<gfx::FontListImpl *&>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::CachedFont' [ 0 5 28 40]
'std::__1::set<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::~set' [ 0 5 10 111]
'gfx::RenderText::OnTextAttributeChanged' [ 0 5 17]
'std::__1::__compressed_pair<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 180]
'AnnotateIgnoreWritesBegin' [ 0]
'gfx::CreateRegionFromSkRegion' [ 0 5]
'std::__1::remove_reference<gfx::ColorTransformToLinear *>' [ 0 5 10]
'sk_sp<SkShader>' [ 0]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::BlendingImageSource *&>' [ 0 5 10]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::capacity' [ 0 5 10 85]
'std::__1::move<gfx::Font &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >, true>' [ 0 5 10 30]
'std::__1::default_delete<gfx::ClientNativePixmap>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>, bool &, false>' [ 0 5 10 584]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformToLinear *, void>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ClientNativePixmap>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>, void>' [ 0 5 10 94]
'scan_tree' [ 0]
'gfx::PlatformFontLinux::InitFromDetails' [ 0 5 24]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::DropShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>::__nat, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >' [ 0 5 10]
'Cr_z_fill_window_sse' [ 0]
'std::__1::__compressed_pair<SkPath *, std::__1::allocator<SkPath> &>::__compressed_pair<nullptr_t, std::__1::allocator<SkPath> &>' [ 0 5 10 70]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >::allocate' [ 0 5 10 170]
'gfx::Range::operator==' [ 0 5 12]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__list_const_iterator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__list_const_iterator' [ 0 5 10 140]
'base::internal::strict_cast<unsigned long, unsigned long>' [ 0 6 16]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'gfx::(anonymous namespace)::IconWithBadgeSource' [ 0 5 28]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::__tree_const_iterator' [ 0 5 10 384]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::max_size' [ 0 5 10 84]
'std::__1::move<cc::PaintFlags *&>' [ 0 5 10]
'gfx::(anonymous namespace)::kUnderlineOffset' [ 0 5 28]
'SkFontStyle::slant' [ 0 13]
'std::__1::__sort<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::TransparentImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >::__compressed_pair<gfx::(anonymous namespace)::TransparentImageSource *&, true>' [ 0 5 10 162]
'std::__1::remove_reference<unsigned long>' [ 0 5 10]
'gfx::BreakList<bool>' [ 0 5]
'std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >::__hash_map_const_iterator' [ 0 5 10 161]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::assign<const unsigned char *>' [ 0 5 10 70]
'drmMsg' [ 0]
'std::__1::remove_reference<const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'drmGetContextFlags' [ 0]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::vector' [ 0 5 10 85]
'gfx::ImageSkiaOperations' [ 0 5]
'std::__1::allocator<gfx::internal::LineSegment>::construct<gfx::internal::LineSegment, gfx::internal::LineSegment>' [ 0 5 10 49]
'std::__1::move_if_noexcept<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'gfx::internal::TextRunList::size' [ 0 5 15 28]
'std::__1::iterator_traits<const gfx::BufferFormat *>' [ 0 5 10]
'gfx::Image::IsEmpty' [ 0 5 12]
'int64_t' [ 0]
'std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >::allocate' [ 0 5 10 152]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >::allocate' [ 0 5 10 64]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::allocate' [ 0 5 10 68]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10 77]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct_backward<std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'gfx::ImageSkia::CreateFrom1xBitmap' [ 0 5 16]
'drmMapBufs' [ 0]
'base::internal::CheckedSubFastOp<int, int>' [ 0 6 16]
'std::__1::__const_pointer<SkPath, SkPath *, std::__1::allocator<SkPath>, true>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> >::__compressed_pair<const std::__1::allocator<unsigned short> &>' [ 0 5 10 200]
'std::__1::remove_reference<gfx::PlatformFontLinux *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::data' [ 0 5 10 141]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >' [ 0 5 10]
'logging::CheckNEImpl<gfx::ElideBehavior, gfx::ElideBehavior>' [ 0 9]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__copy_assign_alloc' [ 0 5 10 122]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gfx::Font, void *>, std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::reset' [ 0 5 10 164]
'std::__1::__compressed_pair<SkPoint *, std::__1::default_delete<SkPoint []> >::__compressed_pair<SkPoint *&, true>' [ 0 5 10 79]
'gfx::(anonymous namespace)::TiledImageSource::TiledImageSource' [ 0 5 28 46]
'std::__1::__compressed_pair_elem<gfx::DecoratedText::RangedAttribute *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 83]
'base::internal::SaturationDefaultLimits<unsigned char>::Overflow' [ 0 6 16 56]
'std::__1::operator==<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__const_pointer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::pair<gfx::Font, gfx::Range> *, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >, true>' [ 0 5 10 30]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>::__wrap_iter' [ 0 5 10 81]
'std::__1::__copy<unsigned char, unsigned char>' [ 0 5 10]
'std::__1::__advance<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'drmDestroyContext' [ 0]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformFromLinear *, void>' [ 0 5 10 71]
'std::__1::make_unique<gfx::ColorTransformSkTransferFn, SkColorSpaceTransferFn &, bool>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__destruct_at_end' [ 0 5 10 274]
'std::__1::__pointer_type_imp::__pointer_type<int, std::__1::allocator<int>, true>' [ 0 5 10 30]
'std::__1::__move<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'gfx::NativePixmapDmaBuf::GetDmaBufModifier' [ 0 5 25]
'logging::MakeCheckOpString<unsigned int, unsigned int>' [ 0 9]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator basic_string_view' [ 0 5 10 87]
'pow' [ 0]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >::operator->' [ 0 5 10 405]
'gfx::(anonymous namespace)::PathParser::GetArgument' [ 0 5 28 40]
'sqrt' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__destruct_at_end' [ 0 5 10 113]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__root_ptr' [ 0 5 10 506]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>::operator()' [ 0 5 10 135]
'gfx::BreakList<bool>::BreakList' [ 0 5 22]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkColorSpaceXform>, 1, true>' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::front' [ 0 5 10 84]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >::__map_const_iterator' [ 0 5 10 229]
'std::__1::remove_volatile<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'std::__1::__compressed_pair<cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'slide_hash' [ 0]
'std::__1::unique_ptr<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >::~unique_ptr' [ 0 5 10 105]
'base::LazyInstance<scoped_refptr<gfx::PlatformFontLinux>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<scoped_refptr<gfx::PlatformFontLinux> > >' [ 0 6]
'std::__1::__sort4<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'drmMatchBusID' [ 0]
'__u16' [ 0]
'HashHash' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, 1, true>' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__recommend' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned int> *&>' [ 0 5 10]
'scoped_refptr<cc::PaintTextBlob>::~scoped_refptr' [ 0 34]
'std::__1::pair<float, int>::pair<float &, int &, false>' [ 0 5 10 28]
'SkPixmap::~SkPixmap' [ 0 10]
'std::__1::swap<gfx::ImagePNGRep *>' [ 0 5 10]
'_drmDMAReq' [ 0]
'int32_t' [ 0]
'ClientBuffer' [ 0]
'std::__1::addressof<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'color_utils::HSLShift' [ 0 13]
'gfx::SelectionBound::SetEdgeTop' [ 0 5 21]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::assign<std::__1::pair<unsigned long, bool> *>' [ 0 5 10 115]
'gfx::ColorTransformFromLinear::Evaluate' [ 0 5 31]
'gfx::Size::set_height' [ 0 5 11]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>, true>' [ 0 5 10 30]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::__tree_node_destructor' [ 0 5 10 150]
'base::internal::StrictNumeric<long>::operator long<long, nullptr>' [ 0 6 16 37]
'gfx::internal::ImageRepSkia::~ImageRepSkia' [ 0 5 15 29]
'std::__1::copy<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::forward<gfx::Font::Weight>' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::size' [ 0 5 10 88]
'base::SequenceCheckerImpl' [ 0 6]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__vector_base' [ 0 5 10 83]
'std::__1::pointer_traits<const std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::ColorBracket *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 96]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::WeightedColor *>::operator++' [ 0 5 10 76]
'base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > >' [ 0 6 16]
'gfx::CanvasImageSource::CanvasImageSource' [ 0 5 24]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::clear' [ 0 5 10 110]
'std::__1::__copy<const unsigned char, unsigned char>' [ 0 5 10]
'color_utils::PickContrastingColor' [ 0 13]
'std::__1::__split_buffer<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> &>::__alloc' [ 0 5 10 87]
'base::internal::CheckedMulFastOp<unsigned long, unsigned long>::Do<unsigned long>' [ 0 6 16 64]
'std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__as_link' [ 0 5 10 130]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__alloc' [ 0 5 10 93]
'gfx::(anonymous namespace)::ShadowNineboxSource::ShadowNineboxSource' [ 0 5 28 49]
'drmOpen' [ 0]
'std::__1::remove_reference<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *&>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Font *>::base' [ 0 5 10 42]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__recommend' [ 0 5 10 143]
'gfx::(anonymous namespace)::RectangleString::AddLine' [ 0 5 28 45]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__destruct_at_end' [ 0 5 10 89]
'gfx::(anonymous namespace)::FontFuncs::get' [ 0 5 28 39]
'std::__1::distance<gfx::NativePixmapPlane *>' [ 0 5 10]
'base::DefaultRefCountedTraits<gfx::internal::ImageStorage>' [ 0 6]
'drmFree' [ 0]
'gfx::PlatformFontLinux::ReloadDefaultFont' [ 0 5 24]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10 82]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::end' [ 0 5 10 181]
'ui::InterpolatedRotation' [ 0 4]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::get_deleter' [ 0 5 10 266]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::basic_string' [ 0 5 10 126]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >::__map_iterator' [ 0 5 10 233]
'std::__1::__distance<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>::__nat, const std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>::operator()' [ 0 5 10 273]
'SkRRect::MakeRectXY' [ 0 9]
'std::__1::__compressed_pair<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>' [ 0 5 10 227]
'std::__1::__pointer_type<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::__tree_const_iterator' [ 0 5 10 196]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::clear' [ 0 5 10 222]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__recommend' [ 0 5 10 132]
'sk_sp<SkPathEffect>::release' [ 0 21]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >::unique_ptr<true, void>' [ 0 5 10 157]
'std::__1::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >::~unique_ptr' [ 0 5 10 111]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<const unsigned char *, unsigned char *>' [ 0 5 10 65]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > &>' [ 0 5 10]
'drm_mode_get_lease' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface>, true>' [ 0 5 10 30]
'ui::InterpolatedRotation::~InterpolatedRotation' [ 0 4 26]
'base::string16_internals::string16_char_traits::assign' [ 0 6 26 48]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__insert_unique' [ 0 5 10 141]
'std::__1::default_delete<gfx::ColorTransformFromLinear>::operator()' [ 0 5 10 57]
'int_fast64_t' [ 0]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::__split_buffer' [ 0 5 10 71]
'std::__1::forward<gfx::(anonymous namespace)::VectorIconSource *&>' [ 0 5 10]
'gz_comp' [ 0]
'drm_mode_get_plane' [ 0]
'std::__1::__pointer_type<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__max_size' [ 0 5 10 96]
'std::__1::forward_as_tuple<const unsigned int &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::TiledImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10]
'gfx::(anonymous namespace)::DropShadowSource::DropShadowSource' [ 0 5 28 46]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::allocate' [ 0 5 10 96]
'gfx::RenderText::text' [ 0 5 17]
'logging::CheckGEImpl<unsigned int, unsigned int>' [ 0 9]
'std::__1::remove_reference<gfx::DecoratedText::RangedAttribute *&>' [ 0 5 10]
'wchar_t' [ 0]
'gfx::BreakList<int>::CheckBreaks' [ 0 5 21]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::second' [ 0 5 10 134]
'std::__1::forward<const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'std::__1::__tuple_less<1>::operator()<std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&> >' [ 0 5 10 27]
'ui::InterpolatedScale::~InterpolatedScale' [ 0 4 23]
'std::__1::unique_ptr<gfx::(anonymous namespace)::RotatedSource, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >::release' [ 0 5 10 135]
'std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::construct<std::__1::pair<gfx::Font, gfx::Range>, const std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10 90]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct_at_end<std::__1::pair<unsigned long, bool> *>' [ 0 5 10 115]
'SkSafeUnref<SkImageFilter>' [ 0]
'logging::MakeCheckOpValueString<SkColorType>' [ 0 9]
'std::__1::remove_reference<gfx::(anonymous namespace)::HSLImageSource *&>' [ 0 5 10]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringstream' [ 0 5 10 93]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::construct<std::__1::pair<unsigned long, unsigned long>, const std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >, true>' [ 0 5 10 30]
'gfx::internal::ImageSkiaStorage::ImageSkiaStorage' [ 0 5 15 33]
'gfx::Canvas::DrawRect' [ 0 5 13]
'gfx::SizeF::set_height' [ 0 5 12]
'std::__1::__move_backward<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::enable_if<true, int *>' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::BreakList<bool> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_long_cap' [ 0 5 10 126]
'color_utils::SetDarkestColor' [ 0 13]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *>' [ 0 5 10]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__end_node' [ 0 5 10 114]
'std::__1::forward<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> &>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::ResizeSource *>' [ 0 5 10]
'bi_reverse' [ 0]
'drmSetBusid' [ 0]
'gfx::RenderTextHarfBuzz::EnsureLayout' [ 0 5 25]
'gfx::RectF::height' [ 0 5 12]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__move_assign_alloc' [ 0 5 10 57]
'gfx::StringSlicer' [ 0 5]
'gfx::CreateRegionFromSkPath' [ 0 5]
'std::__1::pair<unsigned long, unsigned long>::operator=' [ 0 5 10 46]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 266]
'base::internal::OptionalBase<SkBitmap>' [ 0 6 16]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__find_equal<gfx::IconDescription>' [ 0 5 10 338]
'drmFreePlatformDevice' [ 0]
'std::__1::remove_reference<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::__get_ptr' [ 0 5 10 180]
'std::__1::__compressed_pair_elem<gfx::Size *, 0, false>' [ 0 5 10]
'std::__1::iterator_traits<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::allocate' [ 0 5 10 76]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >::AddRef' [ 0 6 88]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::unordered_map' [ 0 5 10 172]
'std::__1::__tuple_less<4>::operator()<std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&> >' [ 0 5 10 27]
'drm_scatter_gather_t' [ 0]
'std::__1::forward<const gfx::ColorSpace::TransferID &>' [ 0 5 10]
'gfx::RenderText::focused' [ 0 5 17]
'std::__1::default_delete<gfx::Size>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::CachedFont *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__max_size' [ 0 5 10 90]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>, void, void>' [ 0 5 10 93]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__annotate_new' [ 0 5 10 84]
'gfx::RenderText::SetColor' [ 0 5 17]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >::get_deleter' [ 0 5 10 638]
'std::__1::__compressed_pair<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>::second' [ 0 5 10 227]
'std::__1::unique_ptr<gfx::(anonymous namespace)::SuperimposedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::vector' [ 0 5 10 267]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >::__map_iterator' [ 0 5 10 383]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *&, void>' [ 0 5 10 131]
'SkColorType' [ 0]
'crc_table' [ 0]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::VectorIconCache>::CallDestructor' [ 0 6 75]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::push_back' [ 0 5 10 267]
'std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::operator()' [ 0 5 10 107]
'std::__1::remove_reference<base::RefCountedMemory *&>' [ 0 5 10]
'gfx::(anonymous namespace)::CalculateWaitingAngles' [ 0 5 28]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::__split_buffer' [ 0 5 10 151]
'Sk32_can_overflow_sub' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::allocate' [ 0 5 10 130]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct<std::__1::pair<unsigned long, int>, std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::operator->' [ 0 5 10 76]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >::destroy' [ 0 5 10 85]
'std::__1::remove_reference<sk_sp<SkColorSpace> >' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, true>' [ 0 5 10]
'color_utils::SkColorToRgbString' [ 0 13]
'std::__1::__rebind_pointer<void *, const gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::get_deleter' [ 0 5 10 180]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >, true>' [ 0 5 10]
'gfx::RenderText::ExpandRangeToWordBoundary' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment> &, 1, false>::__get' [ 0 5 10 95]
'std::__1::swap<gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::operator!=<const std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::initializer_list<gfx::ShadowValue>::size' [ 0 5 41]
'connection' [ 0]
'base::LazyInstance<scoped_refptr<gfx::FontListImpl>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::FontListImpl> > >::Get' [ 0 6 131]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::__construct<gfx::BreakList<bool>, gfx::BreakList<bool> &>' [ 0 5 10 73]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::operator--' [ 0 5 10 62]
'Cr_z_gzvprintf' [ 0]
'std::__1::forward<const std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true> &>' [ 0 5 10]
'std::__1::move<std::__1::pair<gfx::Font, gfx::Range> *&>' [ 0 5 10]
'std::__1::forward<const gfx::Size &>' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, std::__1::__tree_node<gfx::ImageSkiaRep, void *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::~__vector_base' [ 0 5 10 150]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::TiledImageSource *, void>' [ 0 5 10 68]
'std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>' [ 0 5 10]
'base::internal::ArithmeticPromotionCategory' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> >, true>' [ 0 5 10 30]
'AnnotateNoOp' [ 0]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'gfx::ColorTransformMatrix::Transform' [ 0 5 27]
'gfx::RectBetweenSelectionBounds' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::destroy<gfx::ImagePNGRep>' [ 0 5 10 68]
'std::__1::make_unique<gfx::(anonymous namespace)::HSLImageSource, const gfx::ImageSkia &, const color_utils::HSL &>' [ 0 5 10]
'(anonymous namespace)::EPSILON' [ 0 23]
'double_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__max_size' [ 0 5 10 101]
'std::__1::__pointer_type<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >' [ 0 5 10]
'std::__1::__tuple_types<gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__hash_value_type<unsigned int, int> *, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> >, false>' [ 0 5 10]
'SkAlphaMulQ' [ 0]
'gfx::RenderTextHarfBuzz::FindCursorPosition' [ 0 5 25]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::unique_ptr<true, void>' [ 0 5 10 164]
'gfx::RenderText::UpdateStyleLengths' [ 0 5 17]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::base' [ 0 5 10 62]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__swap_out_circular_buffer' [ 0 5 10 133]
'std::__1::operator!=<gfx::Font *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >::~unique_ptr' [ 0 5 10 83]
'SkBitmap' [ 0]
'std::__1::iterator_traits<gfx::ImageSkiaRep *>' [ 0 5 10]
'base_hash::hash<unsigned int>::operator()' [ 0 11 31]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::clear' [ 0 5 10 83]
'std::__1::__size_type<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, long, true>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>, bool &, false>' [ 0 5 10 322]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, true>' [ 0 5 10]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>::operator+=' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> > &, 1, false>' [ 0 5 10]
'hb_script_t' [ 0]
'drmModeFreeModeInfo' [ 0]
'std::__1::remove_reference<gfx::ColorSpace::TransferID &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::__split_buffer' [ 0 5 10 105]
'switches::kVModule' [ 0 10]
'gfx::(anonymous namespace)::CachedFont::fallback_font' [ 0 5 28 40]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::vector' [ 0 5 10 82]
'base::LazyInstance<gfx::(anonymous namespace)::SynchronizedCache, base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::SynchronizedCache> >::Pointer' [ 0 6 156]
'send_all_trees' [ 0]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::MaskedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10 102]
'gfx::ColorTransformMatrix::IsNull' [ 0 5 27]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>::__end_cap' [ 0 5 10 105]
'color_utils::GetReadableColor' [ 0 13]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::~vector' [ 0 5 10 131]
'gfx::ImageFamily::operator=' [ 0 5 18]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::__wrap_iter<std::__1::pair<unsigned long, int> *>' [ 0 5 10 67]
'gfx::(anonymous namespace)::BinaryImageSource::BinaryImageSource' [ 0 5 28 47]
'gfx::ImageFamily::MapKey::aspect' [ 0 5 18 26]
'std::__1::__rebind_pointer<void *, const std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'__nlink_t' [ 0]
'std::__1::conditional<false, std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > &>' [ 0 5 10]
'sktfitsin::Private' [ 0 11]
'drm_get_cap' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::deallocate' [ 0 5 10 69]
'exp' [ 0]
'gfx::PointF::x' [ 0 5 13]
'std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>' [ 0 5 10]
'_drmModeObjectProperties' [ 0]
'std::__1::operator!=<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::__alloc' [ 0 5 10 71]
'std::__1::operator!=<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>::operator()' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<gfx::ColorTransform *, 0, false>' [ 0 5 10]
'base::AutoLock::~AutoLock' [ 0 6 16]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::begin' [ 0 5 10 237]
'drmCrtcQueueSequence' [ 0]
'std::__1::swap<std::__1::pair<gfx::Font, gfx::Range> *>' [ 0 5 10]
'XRectangle' [ 0]
'SkAutoTMalloc<unsigned char>' [ 0]
'std::__1::distance<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'intmax_t' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__destroy<gfx::NativePixmapPlane>' [ 0 5 10 74]
'std::__1::__to_raw_pointer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'drmModeMoveCursor' [ 0]
'gfx::CreateVectorIconWithBadge' [ 0 5]
'std::__1::forward<const std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator--' [ 0 5 10 76]
'std::__1::__split_buffer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>::__end_cap' [ 0 5 10 276]
'std::__1::allocator<unsigned short>::deallocate' [ 0 5 10 37]
'gfx::internal::ImageSkiaStorage::AddRepresentation' [ 0 5 15 33]
'AnnotateRWLockDestroy' [ 0]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > &>' [ 0 5 10]
'drmGetContextTag' [ 0]
'std::__1::operator==<color_utils::(anonymous namespace)::WeightedColor *, color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> > &, void>' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, gfx::Font::Weight> *, 0, false>' [ 0 5 10]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__is_long' [ 0 5 10 96]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, 1, true>::__compressed_pair_elem<const std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> &, void>' [ 0 5 10 178]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::max_size' [ 0 5 10 72]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::KMeanCluster *, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::second' [ 0 5 10 154]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::pointer_to' [ 0 5 10 184]
'gfx::(anonymous namespace)::ExtractSubsetImageSource::ExtractSubsetImageSource' [ 0 5 28 54]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect>, 1, true>' [ 0 5 10]
'gfx::NativePixmapHandle::operator=' [ 0 5 25]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct_range_forward<std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'gfx::RenderText::directionality_mode' [ 0 5 17]
'gfx::Rect::AddWouldOverflow' [ 0 5 11]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>, void>' [ 0 5 10 91]
'sk_sp<SkFontMgr>::get' [ 0 18]
'log' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::__destroy<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10 330]
'SkBitmapOperations::CreateColorMask' [ 0 20]
'std::__1::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10]
'drmGetKeyFromFd' [ 0]
'std::__1::move<sk_sp<SkImage> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__max_size' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear>, 1, true>' [ 0 5 10]
'gfx::FontRenderParams::SubpixelRenderingToSkiaLCDOrder' [ 0 5 23]
'std::__1::allocator<std::__1::basic_string<char> >::deallocate' [ 0 5 10 52]
'uint16_t' [ 0]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::__tree_node_destructor' [ 0 5 10 107]
'std::__1::distance<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::__destroy<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 238]
'std::__1::__add_lvalue_reference_impl<SkPoint, true>' [ 0 5 10]
'std::__1::__pointer_type<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, false>' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::~__vector_base' [ 0 5 10 69]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::__construct_at_end<const gfx::BufferFormat *>' [ 0 5 10 78]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::Release' [ 0 6 14 40]
'gfx::BreakList<bool>::GetBreak' [ 0 5 22]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'gfx::PlatformFontLinux::GetWeight' [ 0 5 24]
'drmModeSetCursor' [ 0]
'std::__1::unique_ptr<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >::operator->' [ 0 5 10 95]
'gfx::FontList::DeriveWithSizeDelta' [ 0 5 15]
'std::__1::unique_ptr<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >::get' [ 0 5 10 105]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__make_iter' [ 0 5 10 115]
'gfx::(anonymous namespace)::CachedFont::IsFontBold' [ 0 5 28 40]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::emplace_back<_FcPattern *&, _FcCharSet *&>' [ 0 5 10 120]
'std::__1::remove_reference<gfx::internal::TextRunHarfBuzz *>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::GetDisplayTextBaseline' [ 0 5 25]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > > >::Pointer' [ 0 6 939]
'std::__1::__unique_if<gfx::(anonymous namespace)::TransparentImageSource>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource>' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 52]
'std::__1::move<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__construct_at_end' [ 0 5 10 50]
'gfx::ColorTransform::NewColorTransform' [ 0 5 21]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__construct_at_end<gfx::internal::LineSegment *>' [ 0 5 10 96]
'std::__1::remove_reference<gfx::(anonymous namespace)::DropShadowSource *>' [ 0 5 10]
'logging::MakeCheckOpString<gfx::Image::RepresentationType, gfx::Image::RepresentationType>' [ 0 9]
'Cr_z_deflate_read_buf' [ 0]
'_drmBufMap' [ 0]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > &>' [ 0 5 10]
'std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<unsigned long, bool> > &, void>' [ 0 5 10 102]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__emplace_unique<std::__1::pair<unsigned int, int> >' [ 0 5 10 447]
'gfx::internal::ImageSkiaStorage::CanRead' [ 0 5 15 33]
'std::__1::__copy<gfx::NativePixmapPlane, gfx::NativePixmapPlane>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::__construct<gfx::Font, const gfx::Font &>' [ 0 5 10 93]
'std::__1::__const_pointer<gfx::ShadowValue, gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue>, true>' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'Cr_z_inflate_copyright' [ 0]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::IconWithBadgeSource>' [ 0 5 10]
'std::__1::__advance<unsigned char *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<color_utils::(anonymous namespace)::KMeanCluster *>::__nat, color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'drmHashInsert' [ 0]
'std::__1::__compressed_pair_elem<std::__1::pair<gfx::Font, gfx::Range> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 85]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~vector' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<gfx::ShadowValue *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >::operator->' [ 0 5 10 103]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::construct<gfx::ShadowValue, gfx::Vector2d, int, unsigned int>' [ 0 5 10 68]
'drmGetDevices2' [ 0]
'RunningOnValgrind' [ 0]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::iterator_traits<const gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>, long, true>' [ 0 5 10]
'gfx::ImageSkia::DetachStorageFromSequence' [ 0 5 16]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__swap_out_circular_buffer' [ 0 5 10 101]
'dma_buf_sync' [ 0]
'ct_data' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >' [ 0 5 10]
'drm_mode_mode_cmd' [ 0]
'gfx::RenderText::GetVisualDirectionOfLogicalEnd' [ 0 5 17]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::value_comp' [ 0 5 10 506]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::DropShadowSource *, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >::__compressed_pair<gfx::(anonymous namespace)::DropShadowSource *&, true>' [ 0 5 10 150]
'std::__1::__compressed_pair_elem<gfx::Font *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 57]
'std::__1::__compressed_pair<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>' [ 0 5 10 128]
'drmAgpUnbind' [ 0]
'sk_sp<SkTextBlob>' [ 0]
'std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gfx::(anonymous namespace)::IconWithBadgeSource::~IconWithBadgeSource' [ 0 5 28 49]
'gfx::Rect' [ 0 5]
'std::__1::default_delete<gfx::ColorTransformSkTransferFn>::operator()' [ 0 5 10 59]
'std::__1::underlying_type<SkPath::FillType>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &, 1, false>::__get' [ 0 5 10 113]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::destroy<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10 144]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::erase' [ 0 5 10 115]
'color_utils::IsInvertedColorScheme' [ 0 13]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'std::__1::forward<gfx::ImageSkia>' [ 0 5 10]
'gfx::(anonymous namespace)::InitStringStream' [ 0 5 28]
'gfx::(anonymous namespace)::NullImageRep::null_image_rep' [ 0 5 28 42]
'std::__1::false_type' [ 0 5 10]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >::AddRef' [ 0 6 108]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::deallocate' [ 0 5 10 87]
'std::__1::forward<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'__u8' [ 0]
'std::__1::set<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::end' [ 0 5 10 138]
'gfx::BreakList<unsigned long>::ApplyValue' [ 0 5 31]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear>, void, void>' [ 0 5 10 99]
'std::__1::__less<double, double>::operator()' [ 0 5 10 34]
'drmGetInterruptFromBusID' [ 0]
'std::__1::forward<const gfx::ImageSkia &>' [ 0 5 10]
'mode_t' [ 0]
'std::__1::__const_void_pointer<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >, false>' [ 0 5 10]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>::second' [ 0 5 10 64]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__annotate_shrink' [ 0 5 10 132]
'gfx::ColorTransformPerChannelTransferFn::ColorTransformPerChannelTransferFn' [ 0 5 41]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ClientNativePixmap>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>, void>' [ 0 5 10 94]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformStep>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransformFromLinear>, void>' [ 0 5 10 94]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::~__tree' [ 0 5 10 284]
'SkMatrix44::get' [ 0 12]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__alloc' [ 0 5 10 150]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__destroy<gfx::ImagePNGRep>' [ 0 5 10 68]
'std::__1::move<sk_sp<SkPathEffect> &>' [ 0 5 10]
'gfx::(anonymous namespace)::TiledImageSource' [ 0 5 28]
'std::__1::remove_reference<icu_61::BreakIterator *&>' [ 0 5 10]
'gfx::GetFontRenderParamsDeviceScaleFactor' [ 0 5]
'std::__1::__pointer_type<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::remove_cv<unsigned int>' [ 0 5 10]
'base::internal::OptionalStorageBase<SkBitmap, false>::~OptionalStorageBase' [ 0 6 16 54]
'icu_61::ConstChar16Ptr' [ 0 8]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__split_buffer' [ 0 5 10 124]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__end_node' [ 0 5 10 866]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'std::__1::__wrap_iter<gfx::ImageSkiaRep *>::__wrap_iter' [ 0 5 10 44]
'std::__1::forward<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__make_iter' [ 0 5 10 167]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__swap_out_circular_buffer' [ 0 5 10 78]
'gfx::TruncateString' [ 0 5]
'Cr_z_zlibVersion' [ 0]
'std::__1::default_delete<gfx::internal::ImageRep>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_sub' [ 0 5 10 36]
'drmModeObjectSetProperty' [ 0]
'std::__1::forward<std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'gfx::(anonymous namespace)::ShadowNineboxSource::Draw' [ 0 5 28 49]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::operator()' [ 0 5 10 145]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmapDmaBuf *, 0, false>::__compressed_pair_elem<gfx::ClientNativePixmapDmaBuf *&, void>' [ 0 5 10 77]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__root_ptr' [ 0 5 10 141]
'std::__1::remove_reference<gfx::(anonymous namespace)::MaskedImageSource *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__recommend' [ 0 5 10 141]
'std::__1::forward<const std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> &>' [ 0 5 10]
'drmModeGetConnectorCurrent' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::insert' [ 0 5 10 143]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 97]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::front' [ 0 5 10 132]
'std::__1::conditional<false, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 91]
'std::__1::swap<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'drmAgpEnable' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::data' [ 0 5 10 84]
'std::__1::remove_reference<const std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformMatrix *, std::__1::default_delete<gfx::ColorTransformMatrix> >::__compressed_pair<gfx::ColorTransformMatrix *&, true>' [ 0 5 10 112]
'gfx::GpuFence::FromClientGpuFence' [ 0 5 15]
'std::__1::allocator<gfx::internal::LineSegment>::construct<gfx::internal::LineSegment, gfx::internal::LineSegment &>' [ 0 5 10 49]
'std::__1::__vector_base<gfx::Font, std::__1::allocator<gfx::Font> >::__alloc' [ 0 5 10 69]
'(anonymous namespace)::HSLShift' [ 0 23]
'std::__1::__compressed_pair_elem<gfx::SkiaColorTransform *, 0, false>' [ 0 5 10]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >::deallocate' [ 0 5 10 85]
'std::__1::remove_reference<gfx::ColorTransformSMPTEST2048NonHdrToLinear *&>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 101]
'gfx::Point3F::SetPoint' [ 0 5 14]
'gfx::RenderText::GetCurrentHorizontalAlignment' [ 0 5 17]
'std::__1::max<unsigned int, std::__1::__less<unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__vector_base' [ 0 5 10 75]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >, std::__1::__tree_node<gfx::ImageSkiaRep, void *> >' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::deallocate' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::max_size' [ 0 5 10 100]
'gfx::(anonymous namespace)::RectangleText::WrapWord' [ 0 5 28 43]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> >, 1, true>' [ 0 5 10]
'SkGlyphID' [ 0]
'scoped_refptr<cc::PaintTextBlob>::scoped_refptr' [ 0 34]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::max_size' [ 0 5 10 73]
'std::__1::move<std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > > &>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::BreakList<bool> *>' [ 0 5 10]
'gfx::(anonymous namespace)::GetRepForPxSize' [ 0 5 28]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__make_iter' [ 0 5 10 84]
'SkImageInfo::MakeN32' [ 0 13]
'SkRRect::SkRRect' [ 0 9]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::second' [ 0 5 10 291]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource>, false>' [ 0 5 10 30]
'base::internal::FastIntegerArithmeticPromotion<unsigned long, int, false>' [ 0 6 16]
'std::__1::forward<gfx::Rect &>' [ 0 5 10]
'std::__1::__less<double, double>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::TransparentImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10 102]
'std::__1::allocator<gfx::ImageSkiaRep>::construct<gfx::ImageSkiaRep, const gfx::ImageSkiaRep &>' [ 0 5 10 40]
'gfx::GpuFence::Wait' [ 0 5 15]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 101]
'std::__1::addressof<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'gfx::(anonymous namespace)::IsBracket' [ 0 5 28]
'std::__1::move_backward<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'logging::MakeCheckOpValueString<unsigned char>' [ 0 9]
'gfx::ColorTransformSkTransferFn::GetSkTransferFn' [ 0 5 33]
'std::__1::remove_reference<std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10]
'SkScalar' [ 0]
'std::__1::vector<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>' [ 0 5 10]
'color_utils::MakeHSLShiftValid' [ 0 13]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::swap' [ 0 5 10 82]
'base::AsserterBase::~AsserterBase' [ 0 6 20]
'std::__1::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >' [ 0 5 10]
'base::internal::UnderlyingType<double>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ButtonImageSource *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, true>' [ 0 5 10 30]
'std::__1::remove_reference<const gfx::internal::(anonymous namespace)::PNGImageSource::Compare &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>' [ 0 5 10]
'drmAgpVersionMajor' [ 0]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::deallocate' [ 0 5 10 76]
'std::__1::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >::~unique_ptr' [ 0 5 10 147]
'std::__1::remove_reference<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>' [ 0 5 10]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::__split_buffer' [ 0 5 10 141]
'std::__1::vector<int, std::__1::allocator<int> >::deallocate' [ 0 5 10 50]
'std::__1::remove_reference<gfx::(anonymous namespace)::PaddedImageSource *>' [ 0 5 10]
'std::__1::find<const char *, int>' [ 0 5 10]
'gfx::RangeF::set_start' [ 0 5 13]
'gfx::Canvas::DrawImageIntInPixel' [ 0 5 13]
'std::__1::unique_ptr<SkColorSpaceXform, std::__1::default_delete<SkColorSpaceXform> >::operator bool' [ 0 5 10 87]
'std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>::operator()' [ 0 5 10 73]
'base::CompareCase' [ 0 6]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >, true>' [ 0 5 10 30]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>' [ 0 5 10]
'AnnotateExpectRace' [ 0]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'gfx::ImagePNGRep::Size' [ 0 5 18]
'base::internal::DstRangeRelationToSrcRangeImpl<int, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::capacity' [ 0 5 10 131]
'drmModeGetLease' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, 0, false>' [ 0 5 10]
'chown_check_return' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::erase' [ 0 5 10 143]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::operator[]' [ 0 5 10 68]
'SkTo<unsigned char, SkPath::FillType>::operator()' [ 0 39]
'gfx::internal::ImageSkiaStorage::has_source' [ 0 5 15 33]
'std::__1::forward<gfx::ShadowValue>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >, long, true>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator[]' [ 0 5 10 101]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct<int, const int &>' [ 0 5 10 55]
'std::__1::move<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::second' [ 0 5 10 115]
'std::__1::__tree<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 284]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > > >' [ 0 6]
'gfx::BreakList<unsigned int>::GetBreak' [ 0 5 30]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'std::__1::integral_constant<unsigned long, 5>' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>::operator()' [ 0 5 10 75]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__alloc' [ 0 5 10 77]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::ExtractSubsetImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>, false>' [ 0 5 10 30]
'std::__1::pair<float, int>::operator=' [ 0 5 10 28]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform>, void, void>' [ 0 5 10 99]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::map' [ 0 5 10 331]
'std::__1::__pointer_type<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >, 1, true>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::back' [ 0 5 10 142]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__swap_out_circular_buffer' [ 0 5 10 96]
'std::__1::pointer_traits<cc::FrameMetadata *>' [ 0 5 10]
'logging::CheckGEImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Font>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::Font> &, void>' [ 0 5 10 75]
'std::__1::__wrap_iter<const gfx::internal::LineSegment *>::operator++' [ 0 5 10 59]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__annotate_new' [ 0 5 10 114]
'std::__1::__size_type<std::__1::allocator<cc::FrameMetadata>, long, true>' [ 0 5 10]
'ui::InterpolatedTransform::SetChild' [ 0 4 27]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10 114]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::__construct<SkPath, SkPath>' [ 0 5 10 58]
'std::__1::tuple<unsigned int &&>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::TransparentImageSource *&>' [ 0 5 10]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'base::internal::SafeUnsignedAbs<unsigned char>' [ 0 6 16]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::~__vector_base' [ 0 5 10 149]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__destroy<std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::__destruct_at_end' [ 0 5 10 123]
'gfx::ColorTransformFromLinear::IsNull' [ 0 5 31]
'gfx::internal::SkiaTextRenderer::DrawStrike' [ 0 5 15 33]
'std::__1::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::get_deleter' [ 0 5 10 522]
'drm_ctx' [ 0]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__destroy<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10 100]
'std::__1::iterator_traits<const unsigned char *>' [ 0 5 10]
'init_block' [ 0]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *>' [ 0 5 10]
'SkAlpha255To256::operator()' [ 0 17]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::SuperimposedImageSource *, void>' [ 0 5 10 68]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned int> *>::operator--' [ 0 5 10 70]
'std::__1::forward<gfx::Font &>' [ 0 5 10]
'drmModeGetConnector' [ 0]
'gfx::ImageSkiaRep::pixel_height' [ 0 5 19]
'std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::operator()' [ 0 5 10 278]
'gfx::RenderText::GetTextFromRange' [ 0 5 17]
'std::__1::remove_reference<const std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'drm_stat_type' [ 0]
'base::Callback<void (const base::TimeTicks, const base::TimeDelta)>' [ 0 6]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::data' [ 0 5 10 82]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >' [ 0 5 10]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >::destroy' [ 0 5 10 108]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 101]
'std::__1::unique_ptr<gfx::(anonymous namespace)::IconWithBadgeSource, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >::unique_ptr<true, void>' [ 0 5 10 147]
'std::__1::__pointer_type<XPoint, std::__1::default_delete<XPoint []> >' [ 0 5 10]
'gfx::internal::ImageRep::type' [ 0 5 15 25]
'std::__1::__pointer_type<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'Cr_z_inflate' [ 0]
'gfx::RenderTextHarfBuzz::GetCursorSpan' [ 0 5 25]
'std::__1::__wrap_iter<const gfx::BreakList<bool> *>::operator++' [ 0 5 10 53]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__vector_base' [ 0 5 10 85]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, int> *>::__nat, std::__1::pair<unsigned long, int> >' [ 0 5 10]
'drmModeAtomicGetCursor' [ 0]
'size_type' [ 0]
'std::__1::forward<gfx::Range>' [ 0 5 10]
'drm_mode_crtc' [ 0]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::operator->' [ 0 5 10 62]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>, false>' [ 0 5 10 30]
'ui::SequentialIDGenerator::ReleaseNumber' [ 0 4 27]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::allocate' [ 0 5 10 68]
'std::__1::__compressed_pair<gfx::ColorTransformToLinear *, std::__1::default_delete<gfx::ColorTransformToLinear> >::__compressed_pair<gfx::ColorTransformToLinear *&, true>' [ 0 5 10 116]
'std::__1::conditional<false, const color_utils::(anonymous namespace)::ColorBox &, color_utils::(anonymous namespace)::ColorBox &&>' [ 0 5 10]
'std::__1::forward<SkPoint *&>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__alloc' [ 0 5 10 139]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct_backward<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'gfx::ColorTransformFromBT2020CL::AppendShaderSource' [ 0 5 33]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long> >' [ 0 5 10]
'std::__1::move<gfx::internal::ImageStorage *&>' [ 0 5 10]
'gfx::SetFontRenderParamsDeviceScaleFactor' [ 0 5]
'gfx::SelectionModel' [ 0 5]
'std::__1::forward<unsigned int &&>' [ 0 5 10]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::__destruct_at_end' [ 0 5 10 65]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__push_back_slow_path<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 213]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::data' [ 0 5 10 96]
'std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >::~unique_ptr' [ 0 5 10 147]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::__construct<gfx::ImagePNGRep, gfx::ImagePNGRep>' [ 0 5 10 68]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >, false>' [ 0 5 10]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> >::__compressed_pair<nullptr_t, const std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10 97]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::data' [ 0 5 10 65]
'hb_bool_t' [ 0]
'std::__1::__vector_base<float, std::__1::allocator<float> >::capacity' [ 0 5 10 61]
'distfix' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::get' [ 0 5 10 180]
'drm_buf_info' [ 0]
'gfx::GpuMemoryBuffer::SetColorSpace' [ 0 5 22]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<unsigned int, unsigned short> >' [ 0 5 10]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<unsigned long>' [ 0 6 16 85]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator+=' [ 0 5 10 76]
'scoped_refptr<gfx::internal::ImageStorage>::~scoped_refptr' [ 0 44]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *, true>' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep>, false>' [ 0 5 10 30]
'std::__1::forward<gfx::internal::ImageRepPNG *>' [ 0 5 10]
'drm_crtc_queue_sequence' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >, long, true>' [ 0 5 10]
'base::ThreadCollisionWarner::ThreadCollisionWarner' [ 0 6 29]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::capacity' [ 0 5 10 85]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char> *>::__nat, std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::clear' [ 0 5 10 147]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::~__vector_base' [ 0 5 10 77]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformSkTransferFn, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >' [ 0 5 10]
'logging::CheckOpResult' [ 0 9]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >::__map_iterator' [ 0 5 10 217]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct<gfx::ShadowValue, const gfx::ShadowValue &>' [ 0 5 10 68]
'gz_fetch' [ 0]
'SkBlendMode' [ 0]
'std::__1::__pointer_type<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::operator[]' [ 0 5 10 213]
'gfx::(anonymous namespace)::Cache' [ 0 5 28]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>::__get_np' [ 0 5 10 446]
'Cr_z_gzfwrite' [ 0]
'drmCommandWriteRead' [ 0]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::construct<unsigned int, const unsigned int &>' [ 0 5 10 64]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> >, true>' [ 0 5 10 30]
'std::__1::swap<color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10]
'drmMapType' [ 0]
'gfx::FontList::GetExpectedTextWidth' [ 0 5 15]
'std::__1::make_unique<gfx::(anonymous namespace)::PaddedImageSource, const gfx::ImageSkia &, const gfx::Insets &>' [ 0 5 10]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__end_cap' [ 0 5 10 83]
'std::__1::operator!=<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'drm_prime_handle' [ 0]
'base::internal::ClampedNumeric<int>' [ 0 6 16]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::operator-' [ 0 5 10 74]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >::~unique_ptr' [ 0 5 10 103]
'std::__1::__pointer_type_imp::__pointer_type<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, true>' [ 0 5 10 30]
'std::__1::operator!=<const std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__annotate_shrink' [ 0 5 10 143]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__construct<gfx::NativePixmapPlane, gfx::NativePixmapPlane &>' [ 0 5 10 74]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, long, true>' [ 0 5 10]
'std::__1::ios_base::precision' [ 0 5 10 20]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> *>::__nat, std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'gfx::RenderText::GetDisplayTextDirection' [ 0 5 17]
'std::__1::forward<const std::__1::allocator<float> &>' [ 0 5 10]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::clear' [ 0 5 10 93]
'logging::CheckLEImpl<float, float>' [ 0 9]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::~__vector_base' [ 0 5 10 138]
'SkBool8' [ 0]
'std::__1::piecewise_construct' [ 0 5 10]
'gf2_matrix_square' [ 0]
'gfx::ColorTransformFromBT2020CL' [ 0 5]
'base::AutoLock' [ 0 6]
'std::__1::__size_type<std::__1::allocator<int>, long, true>' [ 0 5 10]
'std::__1::numeric_limits<unsigned char>' [ 0 5 10]
'drmAddMap' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<unsigned int, std::__1::allocator<unsigned int>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &, 1, false>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>, bool &, false>' [ 0 5 10 228]
'Cr_z_inflateGetDictionary' [ 0]
'gfx::Rect::OffsetFromOrigin' [ 0 5 11]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'gfx::(anonymous namespace)::FontFuncs::FontFuncs' [ 0 5 28 39]
'gfx::ClientNativePixmap::ClientNativePixmap' [ 0 5 25]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::~list' [ 0 5 10 237]
'drmModePageFlip' [ 0]
'gfx::internal' [ 0 5]
'drmHashDelete' [ 0]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::~vector' [ 0 5 10 84]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<gfx::ImageSkiaRep>, gfx::ImageSkiaRep *, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::BaselineStyle> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 156]
'std::__1::forward<gfx::SkiaColorTransform *&>' [ 0 5 10]
'std::__1::pair<unsigned long, gfx::Font::Weight>::operator=' [ 0 5 10 50]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::Font::Weight> *>::base' [ 0 5 10 77]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::__nat, std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageStorage>::AddRef' [ 0 44]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__construct_backward<color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10 96]
'logging::MakeCheckOpValueString<float>' [ 0 9]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::push_back' [ 0 5 10 132]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> >, false>' [ 0 5 10]
'std::__1::move<sk_sp<SkDrawLooper> &>' [ 0 5 10]
'gfx::ImageFamily::GetWithExactAspect' [ 0 5 18]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::bucket_count' [ 0 5 10 410]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'std::__1::remove_cv<gfx::internal::LineSegment>' [ 0 5 10]
'gfx::PlatformFontLinux::GetExpectedTextWidth' [ 0 5 24]
'std::__1::operator!=<const unsigned int *>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::allocate' [ 0 5 10 50]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__node_alloc' [ 0 5 10 410]
'std::__1::iterator_traits<color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'scoped_refptr<base::RefCountedMemory>::~scoped_refptr' [ 0 39]
'std::__1::__const_pointer<gfx::(anonymous namespace)::CachedFont, gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont>, true>' [ 0 5 10]
'std::__1::forward<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::assign<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10 141]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'base::LazyInstanceTraitsBase<std::__1::basic_string<char> >' [ 0 6]
'std::__1::forward<gfx::IconDescription>' [ 0 5 10]
'std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>' [ 0 5 10]
'uint8_t' [ 0]
'std::__1::remove_reference<gfx::ImagePNGRep *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > &>' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__swap_out_circular_buffer' [ 0 5 10 62]
'drmSyncobjSignal' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::allocate' [ 0 5 10 113]
'base::internal::IsValueInRangeFastOp<unsigned char, int, void>' [ 0 6 16]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::VectorIconSource>' [ 0 5 10]
'crc32_combine_' [ 0]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::VectorIconCache>' [ 0 6]
'std::__1::__tree_const_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>::__tree_const_iterator' [ 0 5 10 94]
'std::__1::unique_ptr<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform> >::release' [ 0 5 10 99]
'base::i18n::BiDiLineIterator' [ 0 6 12]
'gfx::ScopedRTLFlipCanvas' [ 0 5]
'gfx::ShadowValue::ToString' [ 0 5 18]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::__split_buffer' [ 0 5 10 85]
'base::internal::CheckedNumeric<long>::ValueOrDie<long, base::internal::CheckOnFailure>' [ 0 6 16 38]
'gfx::ImageSkiaSource::ImageSkiaSource' [ 0 5 22]
'std::__1::allocator_traits<std::__1::allocator<wchar_t> >' [ 0 5 10]
'base::DefaultRefCountedTraits<gfx::PlatformFont>' [ 0 6]
'SkPackARGB32::operator()' [ 0 14]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::destroy<gfx::Font>' [ 0 5 10 61]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > &>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10]
'gfx::PlatformFontLinux::InitFromPlatformFont' [ 0 5 24]
'ui::InterpolatedMatrixTransform::Init' [ 0 4 33]
'gfx::ColorTransformStep::GetNull' [ 0 5 25]
'std::__1::add_lvalue_reference<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::allocate' [ 0 5 10 101]
'std::__1::__size_type<std::__1::allocator<color_utils::ColorProfile>, long, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>, void, void>' [ 0 5 10 93]
'std::__1::make_pair<unsigned int &, int &>' [ 0 5 10]
'gfx::RenderText::TextIndexToGivenTextIndex' [ 0 5 17]
'gfx::internal::StyleIterator' [ 0 5 15]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::~vector' [ 0 5 10 267]
'gfx::(anonymous namespace)::FontFuncs' [ 0 5 28]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::__compressed_pair<int, true>' [ 0 5 10 177]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CaseInsensitiveCompare, 1, true>' [ 0 5 10]
'gfx::RenderText::GetNumLines' [ 0 5 17]
'std::__1::__split_buffer<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::operator*=<int>' [ 0 6 16 47]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, const std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10 102]
'std::__1::addressof<const unsigned short>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkPath *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 54]
'std::__1::__add_lvalue_reference_impl<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, true>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10]
'base::subtle::RefCountedBase::IsOnValidSequence' [ 0 6 14 30]
'ushf' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned short>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10 108]
'std::__1::iterator_traits<gfx::BreakList<bool> *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::Font> &>' [ 0 5 10 75]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >::__get_ptr' [ 0 5 10 97]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::operator--' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<gfx::Rect *, 0, false>' [ 0 5 10]
'std::__1::remove_const<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__end_cap' [ 0 5 10 142]
'gfx::Range::set_start' [ 0 5 12]
'std::__1::make_unique<gfx::internal::ImageRepSkia, gfx::ImageSkia *>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::swap<color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::capacity' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::TransparentImageSource *, 0, false>' [ 0 5 10]
'gfx::GetBufferFormatsForTesting' [ 0 5]
'scoped_refptr<gfx::PlatformFontLinux>::AddRef' [ 0 39]
'gfx::(anonymous namespace)::RectangleString::Finalize' [ 0 5 28 45]
'__uid_t' [ 0]
'gfx::Image::operator=' [ 0 5 12]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear>, false>' [ 0 5 10 30]
'gfx::internal::ImageStorage::GetRepresentation' [ 0 5 15 29]
'std::__1::default_delete<base::i18n::BreakIterator>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::__destroy<float>' [ 0 5 10 57]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::unique_ptr<true, void>' [ 0 5 10 99]
'SkAlpha255To256' [ 0]
'std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::data' [ 0 5 10 54]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10 102]
'SkMatrix' [ 0]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::value_comp' [ 0 5 10 141]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::capacity' [ 0 5 10 89]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__construct_at_end<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10 143]
'std::__1::remove_reference<std::__1::allocator<int> &>' [ 0 5 10]
'std::__1::allocator<int>::allocate' [ 0 5 10 26]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRep *, 0, false>::__compressed_pair_elem<gfx::internal::ImageRepSkia *, void>' [ 0 5 10 71]
'scoped_refptr<cc::PaintTextBlob>::AddRef' [ 0 34]
'std::__1::remove_reference<gfx::(anonymous namespace)::TransparentImageSource *>' [ 0 5 10]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>, bool, false>' [ 0 5 10 239]
'std::__1::default_delete<gfx::internal::TextRunHarfBuzz>::operator()' [ 0 5 10 58]
'std::__1::move<std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> > &>' [ 0 5 10]
'AnnotateCondVarSignal' [ 0]
'SkRect::isEmpty' [ 0 8]
'std::__1::move<gfx::PlatformFontLinux *&>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, true>' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >::reset' [ 0 5 10 111]
'std::__1::__split_buffer<gfx::Font, std::__1::allocator<gfx::Font> &>::__end_cap' [ 0 5 10 71]
'std::__1::__compressed_pair<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 95]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::vector' [ 0 5 10 62]
'gfx::Point3F::operator+=' [ 0 5 14]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::Font, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'gfx::Canvas::DrawLine' [ 0 5 13]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__find_equal<std::__1::basic_string<char> >' [ 0 5 10 506]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::clear' [ 0 5 10 143]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::~vector' [ 0 5 10 76]
'std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>::operator()' [ 0 5 10 173]
'std::__1::allocator<gfx::PathElement>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'base::internal::SaturateFastOp<int, float, void>' [ 0 6 16]
'std::__1::conditional<true, std::__1::pointer_traits<void *>::__nat, void>' [ 0 5 10]
'Cr_z_deflateSetHeader' [ 0]
'gfx::BreakList<gfx::Font::Weight>::ApplyValue' [ 0 5 35]
'SkMaxScalar' [ 0]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__append' [ 0 5 10 140]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__annotate_new' [ 0 5 10 143]
'std::__1::__split_buffer<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::__end_cap' [ 0 5 10 176]
'std::__1::forward<gfx::Transform>' [ 0 5 10]
'base::internal::CheckedNumeric<long>::operator*=<int>' [ 0 6 16 38]
'FcValue' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::__compressed_pair<int, true>' [ 0 5 10 169]
'drmOpenRender' [ 0]
'std::__1::add_lvalue_reference<gfx::ColorTransformMatrix>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>::__tree_iterator' [ 0 5 10 206]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'int' [ 0]
'ui::InterpolatedRotation::InterpolateButDoNotCompose' [ 0 4 26]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >' [ 0 5 10]
'std::__1::iterator_traits<base::FileDescriptor *>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 211]
'gfx::ClientNativePixmapFactoryDmabuf::ImportFromHandle' [ 0 5 38]
'std::__1::forward<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::allocator<gfx::Font>::destroy' [ 0 5 10 32]
'std::__1::move<std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true> >' [ 0 5 10]
'drmModeGetResources' [ 0]
'std::__1::pointer_traits<cc::PaintFlags *>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::empty' [ 0 5 10 140]
'SkIRect' [ 0]
'std::__1::__size_type<std::__1::allocator<unsigned char>, long, true>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >::allocate' [ 0 5 10 67]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix>, false>' [ 0 5 10 30]
'std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned short, std::__1::default_delete<unsigned short []>, false>' [ 0 5 10 30]
'drmModePropertyBlobPtr' [ 0]
'std::__1::remove_reference<gfx::PathElement>' [ 0 5 10]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, unsigned int>::fits' [ 0 11 20 66]
'std::__1::unique_ptr<gfx::ColorTransformToBT2020CL, std::__1::default_delete<gfx::ColorTransformToBT2020CL> >::release' [ 0 5 10 111]
'base::LazyInstanceTraitsBase<scoped_refptr<gfx::PlatformFontLinux> >' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >' [ 0 5 10]
'std::__1::get<0, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'drm_agp_binding_t' [ 0]
'std::__1::__copy<gfx::BreakList<bool> *, gfx::BreakList<bool> *>' [ 0 5 10]
'SkSafeUnref<SkPathEffect>' [ 0]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>::operator*' [ 0 5 10 196]
'color_utils::(anonymous namespace)::ColorBox::GetWeightedAverageColor' [ 0 13 36 46]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'__ssize_t' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'WTF' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, const std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> &>' [ 0 5 10 137]
'std::__1::min<unsigned char, std::__1::__less<unsigned char, unsigned char> >' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::ImageSkia *, std::__1::allocator<gfx::ImageSkia>, false>' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *>, true>' [ 0 5 10]
'std::__1::__tree_const_iterator<gfx::Font, std::__1::__tree_node<gfx::Font, void *> *, long>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<gfx::Font, void *>, std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >' [ 0 5 10]
'gfx::(anonymous namespace)::GetPrimaryTransform' [ 0 5 28]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::pop_back' [ 0 5 10 72]
'std::__1::__compressed_pair<gfx::ColorTransformFromLinear *, std::__1::default_delete<gfx::ColorTransformFromLinear> >::__compressed_pair<gfx::ColorTransformFromLinear *&, true>' [ 0 5 10 120]
'std::__1::operator!=<gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::forward<gfx::ColorSpace::TransferID &>' [ 0 5 10]
'std::__1::distance<const unsigned char *>' [ 0 5 10]
'drmCrtcGetSequence' [ 0]
'std::__1::__wrap_iter<const gfx::Rect *>::base' [ 0 5 10 42]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep> &, 1, false>::__get' [ 0 5 10 85]
'gfx::ImageSkia::BackedBySameObjectAs' [ 0 5 16]
'gfx::(anonymous namespace)::ButtonImageSource::~ButtonImageSource' [ 0 5 28 47]
'std::__1::remove_reference<gfx::(anonymous namespace)::ShadowNineboxSource *&>' [ 0 5 10]
'std::__1::__value_type<unsigned int, unsigned short>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::deallocate' [ 0 5 10 139]
'std::__1::__compressed_pair<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>' [ 0 5 10]
'std::__1::addressof<std::__1::__value_type<unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<gfx::ImageSkiaRep>, std::__1::__tree_node<gfx::ImageSkiaRep, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10 155]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'gfx::internal::SkiaTextRenderer::SetForegroundColor' [ 0 5 15 33]
'color_utils::HSLToSkColor' [ 0 13]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::size' [ 0 5 10 213]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'gfx::ColorTransformSkTransferFn::CanAppendShaderSource' [ 0 5 33]
'gfx::SizeF::IsEmpty' [ 0 5 12]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__emplace_unique_key_args<gfx::IconDescription, std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 338]
'gfx::internal::(anonymous namespace)::PNGImageSource::ToImageSkiaRep' [ 0 5 15 38 54]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__destroy<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 114]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__push_back_slow_path<gfx::PathElement>' [ 0 5 10 76]
'std::__1::__size_type<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor>, long, true>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__alloc' [ 0 5 10 142]
'gfx::(anonymous namespace)::ShadowNineboxSource' [ 0 5 28]
'std::__1::add_lvalue_reference<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::internal::ImageRepPNG>' [ 0 5 10]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'drmGetBufInfo' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 153]
'sktfitsin::Private::underlying_type<unsigned long, false>' [ 0 11 20]
'gfx::RenderText::SetText' [ 0 5 17]
'std::__1::remove_reference<gfx::internal::TextRunHarfBuzz *&>' [ 0 5 10]
'drm_event' [ 0]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >' [ 0 5 10]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::push_back' [ 0 5 10 78]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__alloc' [ 0 5 10 150]
'std::__1::vector<float, std::__1::allocator<float> >::__swap_out_circular_buffer' [ 0 5 10 54]
'gfx::ColorTransformStep::GetToBT2020CL' [ 0 5 25]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::~__hash_table' [ 0 5 10 410]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::destroy' [ 0 5 10 67]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::construct<SkPath, SkPath>' [ 0 5 10 58]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'chunkcopy_safe' [ 0]
'gfx::ImageSkiaRep::scale' [ 0 5 19]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10]
'__intmax_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, 1, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, long>' [ 0 6 16]
'gfx::internal::ImageRepPNG::~ImageRepPNG' [ 0 5 15 28]
'std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::allocator<gfx::DecoratedText::RangedAttribute>::allocate' [ 0 5 10 58]
'std::__1::forward<gfx::ColorTransformMatrix *>' [ 0 5 10]
'gfx::RenderTextHarfBuzz::FirstSelectionModelInsideRun' [ 0 5 25]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator-' [ 0 5 10 75]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::second' [ 0 5 10 191]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >::construct<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned int &&>, std::__1::tuple<> >' [ 0 5 10 301]
'std::__1::forward<const std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &, 1, false>::__get' [ 0 5 10 113]
'AnnotatePCQGet' [ 0]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::allocate' [ 0 5 10 62]
'gfx::Point' [ 0 5]
'std::__1::pair<unsigned long, bool>::operator=' [ 0 5 10 37]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::construct<color_utils::(anonymous namespace)::ColorBox, const color_utils::(anonymous namespace)::ColorBox &>' [ 0 5 10 67]
'gfx::RenderTextHarfBuzz::GetStringSize' [ 0 5 25]
'base::internal::LockImpl::Unlock' [ 0 6 16 26]
'std::__1::__const_pointer<wchar_t, wchar_t *, std::__1::allocator<wchar_t>, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ResizeSource *, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > *>::__nat, std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::HorizontalShadowSource *&>' [ 0 5 10]
'fold_1' [ 0]
'gfx::internal::ImageRep::AsImageRepPNG' [ 0 5 15 25]
'drm_update_draw_t' [ 0]
'std::__1::remove_reference<std::__1::tuple<> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource::Compare, 1, true>::__compressed_pair_elem<const gfx::internal::(anonymous namespace)::PNGImageSource::Compare &, void>' [ 0 5 10 106]
'std::__1::add_lvalue_reference<gfx::SkiaColorTransform>' [ 0 5 10]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>::max' [ 0 6 16 77]
'std::__1::sort<unsigned int *, (lambda at ../../ui/gfx/color_analysis.cc:196:26) &>' [ 0 5 10]
'std::__1::__vector_base<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__destruct_at_end' [ 0 5 10 147]
'gfx::FontRenderParamsQuery' [ 0 5]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>::__hash_const_iterator' [ 0 5 10 123]
'gfx::CanvasImageSource::size' [ 0 5 24]
'std::__1::__tree_node_base<void *>' [ 0 5 10]
'base::WrapUnique<gfx::(anonymous namespace)::CachedFontSet>' [ 0 6]
'std::__1::vector<gfx::ImageSkia, std::__1::allocator<gfx::ImageSkia> >::operator[]' [ 0 5 10 72]
'std::__1::operator!=<gfx::Rect *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >, 1, true>' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__construct_node<const gfx::ImageSkiaRep &>' [ 0 5 10 141]
'std::__1::add_lvalue_reference<gfx::ImageSkiaSource>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::RotatedSource *&>' [ 0 5 10]
'base::SequenceChecker::SequenceChecker' [ 0 6 23]
'gfx::(anonymous namespace)::GetRangeAdjustMatrix' [ 0 5 28]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformMatrix> >' [ 0 5 10]
'gfx::Canvas::DrawSharpLine' [ 0 5 13]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> &, void>' [ 0 5 10 269]
'base::i18n::UTF16CharIterator' [ 0 6 12]
'ui::InterpolatedTransform::InterpolatedTransform' [ 0 4 27]
'std::__1::remove_reference<SkPath>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >::construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<int, unsigned int> >' [ 0 5 10 110]
'SkBitmapOperations' [ 0]
'std::__1::iterator_traits<const color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>, void, void>' [ 0 5 10 93]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::release' [ 0 5 10 135]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::Line> &, 1, false>' [ 0 5 10]
'gfx::Image::Image' [ 0 5 12]
'AnnotateFlushState' [ 0]
'gfx::SizeF::SizeF' [ 0 5 12]
'std::__1::__throw_length_error' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__annotate_delete' [ 0 5 10 213]
'std::__1::move_if_noexcept<gfx::Font>' [ 0 5 10]
'std::__1::pair<std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >, bool>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >, false>' [ 0 5 10]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, bool>::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>, bool &, false>' [ 0 5 10 130]
'gfx::ScopedCanvas::~ScopedCanvas' [ 0 5 19]
'drmAgpBase' [ 0]
'std::__1::__tuple_leaf<0, unsigned int &&, false>::get' [ 0 5 10 51]
'gfx::RenderText::ApplyFadeEffects' [ 0 5 17]
'gfx::RenderText::ApplyTextShadows' [ 0 5 17]
'std::__1::__pointer_type<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10]
'gfx::BreakList<int>::SetValue' [ 0 5 21]
'gfx::ScopedCanvas' [ 0 5]
'std::__1::addressof<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__construct_node<std::__1::pair<int, unsigned int> >' [ 0 5 10 447]
'drm_version_t' [ 0]
'base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'scoped_refptr<gfx::FontListImpl>' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end' [ 0 5 10 70]
'std::__1::unique_ptr<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >::release' [ 0 5 10 111]
'std::__1::operator!=<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource>, void, void>' [ 0 5 10 93]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >::construct<std::__1::pair<gfx::Font, gfx::Range>, const std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10 61]
'std::__1::forward_iterator_tag' [ 0 5 10]
'gfx::Canvas::Restore' [ 0 5 13]
'gfx::RenderText::selection' [ 0 5 17]
'std::__1::__wrap_iter<const base::FileDescriptor *>::base' [ 0 5 10 53]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__vector_base' [ 0 5 10 79]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'base::trace_event::MemoryAllocatorDumpGuid' [ 0 6 19]
'drmParseUsbBusInfo' [ 0]
'std::__1::forward<std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'std::__1::swap<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *>' [ 0 5 10]
'std::__1::__const_pointer<gfx::DecoratedText::RangedAttribute, gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute>, true>' [ 0 5 10]
'std::__1::__const_pointer<gfx::ImageSkiaRep, gfx::ImageSkiaRep *, std::__1::allocator<gfx::ImageSkiaRep>, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 304]
'gfx::internal::TextRunList::TextRunList' [ 0 5 15 28]
'gfx::RenderText::kPasswordReplacementChar' [ 0 5 17]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__root' [ 0 5 10 338]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >::deallocate' [ 0 5 10 101]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >::__compressed_pair<true, void>' [ 0 5 10 159]
'gfx::RenderText::SetBaselineStyle' [ 0 5 17]
'std::__1::__compressed_pair<gfx::internal::ImageRepPNG *, std::__1::default_delete<gfx::internal::ImageRepPNG> >::__compressed_pair<gfx::internal::ImageRepPNG *&, true>' [ 0 5 10 114]
'std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource>::operator()' [ 0 5 10 75]
'gfx::ColorTransformToLinear::AppendTransferShaderSource' [ 0 5 29]
'Byte' [ 0]
'base::StringPiece16' [ 0 6]
'base::LazyInstanceTraitsBase<scoped_refptr<gfx::PlatformFontLinux> >::New' [ 0 6 70]
'std::__1::__const_void_pointer<wchar_t *, std::__1::allocator<wchar_t>, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>' [ 0 5 10]
'Cr_z__tr_align' [ 0]
'gfx::scrollbar_size' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<SkBitmap, std::__1::default_delete<SkBitmap>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<cc::PaintFlags *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 62]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::operator=' [ 0 5 10 126]
'base::internal::CheckedNumeric<long>::Wrapper<int>::is_valid' [ 0 6 16 38 52]
'cc::PaintFlags::setStyle' [ 0 4 16]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::back' [ 0 5 10 113]
'std::__1::allocator<std::__1::pair<unsigned long, int> >::construct<std::__1::pair<unsigned long, int>, std::__1::pair<unsigned long, int> >' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, 1, true>' [ 0 5 10]
'std::__1::addressof<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'base::internal::SaturateFastOp<int, double, void>::Do' [ 0 6 16 51]
'std::__1::iterator_traits<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'block_state' [ 0]
'std::__1::forward<gfx::(anonymous namespace)::TransparentImageSource *&>' [ 0 5 10]
'std::__1::__tree_node<gfx::ImageSkiaRep, void *>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, true>' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__destruct_at_end' [ 0 5 10 85]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>::operator*' [ 0 5 10 190]
'std::__1::__compressed_pair_elem<base::i18n::BreakIterator *, 0, false>::__compressed_pair_elem<base::i18n::BreakIterator *, void>' [ 0 5 10 73]
'std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >' [ 0 5 10]
'std::__1::__to_raw_pointer<base::FileDescriptor>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, bool> >::construct<std::__1::pair<unsigned long, bool>, const std::__1::pair<unsigned long, bool> &>' [ 0 5 10 59]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__destroy<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 119]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::operator->' [ 0 5 10 77]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__end_cap' [ 0 5 10 150]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::capacity' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >, void>' [ 0 5 10 151]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'gfx::ShadowValue::ShadowValue' [ 0 5 18]
'color_utils::(anonymous namespace)::kNumberOfClusters' [ 0 13 36]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true> &, void>' [ 0 5 10 347]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >, void>' [ 0 5 10 322]
'std::__1::unique_ptr<gfx::ColorTransformSkTransferFn, std::__1::default_delete<gfx::ColorTransformSkTransferFn> >::release' [ 0 5 10 115]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >, long, true>' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::clear' [ 0 5 10 126]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::destroy<unsigned char>' [ 0 5 10 65]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::begin' [ 0 5 10 84]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::~map' [ 0 5 10 331]
'std::__1::default_delete<XPoint []>::operator()<XPoint>' [ 0 5 10 37]
'std::__1::operator==<const gfx::ImageSkiaRep *, const gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::deallocate' [ 0 5 10 96]
'gfx::BoxF' [ 0 5]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::BlendingImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::BlendingImageSource *&, void>' [ 0 5 10 95]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_shrink' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::__construct_forward<std::__1::pair<unsigned long, int> >' [ 0 5 10 87]
'std::__1::move<std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> > &>' [ 0 5 10]
'gfx::ColorTransformStep::GetSkia' [ 0 5 25]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::second' [ 0 5 10 155]
'gfx::BreakList<unsigned long>::GetRange' [ 0 5 31]
'gfx::GpuFenceHandleType' [ 0 5]
'std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource>::operator()' [ 0 5 10 69]
'std::__1::__pointer_type<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::get_traits' [ 0 6 63]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::~__vector_base' [ 0 5 10 89]
'color_utils::CalculateProminentColorsOfBitmap' [ 0 13]
'gfx::ColorTransformToLinear::Join' [ 0 5 29]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__destruct_at_end' [ 0 5 10 83]
'base::internal::SaturateFastOp<unsigned char, int, void>::Do' [ 0 6 16 58]
'gfx::(anonymous namespace)::ImageRepWidthInPixels' [ 0 5 28]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__push_back_slow_path<gfx::Font>' [ 0 5 10 62]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::destroy<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 164]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__split_buffer' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<gfx::internal::TextRunHarfBuzz *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<char *&>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__tree' [ 0 5 10 557]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__root_ptr' [ 0 5 10 626]
'std::__1::allocator_traits<std::__1::allocator<gfx::BufferFormat> >::construct<gfx::BufferFormat, const gfx::BufferFormat &>' [ 0 5 10 69]
'SkString' [ 0]
'std::__1::swap<gfx::ShadowValue *>' [ 0 5 10]
'int_least64_t' [ 0]
'std::__1::__pointer_type<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >' [ 0 5 10]
'logging::CheckNEImpl<unsigned int, unsigned long>' [ 0 9]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::reset' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<float> >::allocate' [ 0 5 10 57]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'gfx::SelectionBound::ToString' [ 0 5 21]
'std::__1::__rebind_pointer<void *, std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::get' [ 0 5 10 282]
'gfx::Vector3dF' [ 0 5]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::clear' [ 0 5 10 85]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::operator+=' [ 0 5 10 68]
'std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>::operator()' [ 0 5 10 167]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__annotate_delete' [ 0 5 10 115]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__end_cap' [ 0 5 10 77]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::select_on_container_copy_construction' [ 0 5 10 68]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::capacity' [ 0 5 10 119]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::empty' [ 0 5 10 82]
'gfx::RenderText::SetWeight' [ 0 5 17]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL>, void, void>' [ 0 5 10 99]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned long> *, 0, false>' [ 0 5 10]
'fpos_t' [ 0]
'gfx::(anonymous namespace)::RestoreBreakList<int>' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::deallocate' [ 0 5 10 90]
'base::internal::OptionalStorageBase<cc::SkiaPaintCanvas, false>::OptionalStorageBase' [ 0 6 16 65]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::~unique_ptr' [ 0 5 10 93]
'std::__1::addressof<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::destroy<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 137]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::allocate' [ 0 5 10 68]
'std::__1::allocator<gfx::ImagePNGRep>::construct<gfx::ImagePNGRep, gfx::ImagePNGRep>' [ 0 5 10 39]
'std::__1::forward<std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10]
'std::__1::vector<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::vector<const gfx::BufferFormat *>' [ 0 5 10 78]
'std::__1::__pointer_type<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::capacity' [ 0 5 10 77]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::construct<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 164]
'int8_t' [ 0]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::reverse_iterator' [ 0 5 10 74]
'std::__1::move_if_noexcept<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__unique_if<gfx::SkiaColorTransform>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::__end_cap' [ 0 5 10 128]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned int> *>::__wrap_iter' [ 0 5 10 76]
'std::__1::default_delete<gfx::ImageSkia>::operator()' [ 0 5 10 42]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::operator->' [ 0 5 10 432]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'sk_sp<SkPathEffect>::reset' [ 0 21]
'std::__1::allocator<int>::deallocate' [ 0 5 10 26]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >::allocate' [ 0 5 10 68]
'RandomState' [ 0]
'drmBufDescPtr' [ 0]
'switches::kDisableFeatures' [ 0 10]
'std::__1::operator!=<const gfx::ImagePNGRep *>' [ 0 5 10]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::__const_pointer<unsigned int, unsigned int *, std::__1::allocator<unsigned int>, true>' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::operator->' [ 0 5 10 384]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__node_insert_unique' [ 0 5 10 447]
'base::ThreadCollisionWarner' [ 0 6]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>::Run' [ 0 6 66]
'std::__1::forward<const std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>, bool &, false>' [ 0 5 10 212]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__vector_base' [ 0 5 10 57]
'std::__1::memory_order' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >, long, true>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__annotate_new' [ 0 5 10 140]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::__copy<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>, color_utils::(anonymous namespace)::KMeanCluster *, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::internal::TextRunList>' [ 0 5 10]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::__end_cap' [ 0 5 10 123]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::push_back' [ 0 5 10 141]
'gfx::internal::ImageStorage::RepresentationCount' [ 0 5 15 29]
'std::__1::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >::__compressed_pair<gfx::internal::ImageRepSkia *, std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10 108]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__move_assign_alloc' [ 0 5 10 83]
'std::__1::addressof<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::capacity' [ 0 5 10 150]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::construct<gfx::Font, gfx::Font>' [ 0 5 10 61]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'std::__1::forward<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::PaintTypeface *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<bool &>' [ 0 5 10]
'gfx::RenderText::font_size_overrides' [ 0 5 17]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::push_back' [ 0 5 10 62]
'inflate_holder_t' [ 0]
'gfx::internal::CreateSkiaTypeface' [ 0 5 15]
'std::__1::__move<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >' [ 0 5 10]
'AnnotatePublishMemoryRange' [ 0]
'gfx::BreakList<bool>::operator=' [ 0 5 22]
'gfx::(anonymous namespace)::ICUScriptToHBScript' [ 0 5 28]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__clear_and_shrink' [ 0 5 10 126]
'gfx::(anonymous namespace)::ShadowNineboxSource::CalculateSize' [ 0 5 28 49]
'std::__1::operator!=<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::HorizontalShadowSource>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::deallocate' [ 0 5 10 131]
'std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>' [ 0 5 10]
'std::__1::make_signed<unsigned int>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::vector' [ 0 5 10 167]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>::operator->' [ 0 5 10 68]
'std::__1::forward<cc::PaintFlags>' [ 0 5 10]
'gfx::RenderText::ToViewPoint' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::construct<gfx::NativePixmapPlane, gfx::NativePixmapPlane &>' [ 0 5 10 74]
'std::__1::addressof<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>::second' [ 0 5 10 76]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>' [ 0 5 10]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >::RefCountedThreadSafe' [ 0 6 136]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRepPNG *, 0, false>' [ 0 5 10]
'SkBitmapOperations::CreateDropShadow' [ 0 20]
'std::__1::pointer_traits<std::__1::__tree_node<gfx::Font, void *> *>' [ 0 5 10]
'std::__1::remove_cv<color_utils::(anonymous namespace)::KMeanCluster>' [ 0 5 10]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque' [ 0 5 28]
'drmVBlankReq' [ 0]
'logging::CheckNEImpl<float, float>' [ 0 9]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>' [ 0 5 10]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::~MRUCacheBase' [ 0 6 126]
'gfx::ShadowDetails::Get' [ 0 5 20]
'drmOpenControl' [ 0]
'base::Optional<SkBitmap>::~Optional' [ 0 6 26]
'gfx::(anonymous namespace)::RectangleString' [ 0 5 28]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 144]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::push_back' [ 0 5 10 119]
'UErrorCode' [ 0]
'std::__1::unique_ptr<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >::unique_ptr<true, void>' [ 0 5 10 95]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10 128]
'std::__1::tuple<const unsigned int &>::tuple<true, false>' [ 0 5 10 39]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::deallocate' [ 0 5 10 181]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::construct<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10 181]
'base::internal::IsValueInRangeFastOp<unsigned char, int, void>::Do' [ 0 6 16 64]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__emplace_unique<const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 557]
'std::__1::forward<const std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> *, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >, false>' [ 0 5 10]
'gfx::ClientNativePixmapDmaBuf::Map::trace_event_unique_atomic102' [ 0 5 31 36]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ExtractSubsetImageSource *, void>' [ 0 5 10 68]
'base::internal::CheckedNumeric<long>::Wrapper<int>::value' [ 0 6 16 38 52]
'gfx::(anonymous namespace)::kStrikeThroughOffset' [ 0 5 28]
'std::__1::operator-<const std::__1::pair<unsigned long, gfx::Font::Weight> *, const std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::reset' [ 0 5 10 135]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 199]
'std::__1::__rebind_pointer<void *, std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct_backward<unsigned int>' [ 0 5 10 64]
'updatewindow' [ 0]
'gfx::Canvas::CreateOwnedCanvas' [ 0 5 13]
'gfx::ImageSkiaRep::~ImageSkiaRep' [ 0 5 19]
'gfx::ColorTransformFromLinear::AppendTransferShaderSource' [ 0 5 31]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__construct<gfx::(anonymous namespace)::CachedFont, _FcPattern *&, _FcCharSet *&>' [ 0 5 10 90]
'cc::FrameMetadata' [ 0 4]
'base::LazyInstance<scoped_refptr<gfx::PlatformFontLinux>, base::internal::LeakyLazyInstanceTraits<scoped_refptr<gfx::PlatformFontLinux> > >::Get' [ 0 6 141]
'std::__1::move<gfx::ImageSkiaRep &>' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformStep>::operator()' [ 0 5 10 51]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::end' [ 0 5 10 143]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::empty' [ 0 5 10 322]
'std::__1::allocator<gfx::ImageSkiaRep>::destroy' [ 0 5 10 40]
'base::internal::OptionalStorage<SkBitmap, false, false>::~OptionalStorage' [ 0 6 16 57]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::select_on_container_copy_construction' [ 0 5 10 78]
'gfx::(anonymous namespace)::CachedFontSet::~CachedFontSet' [ 0 5 28 43]
'std::__1::move_if_noexcept<SkPath>' [ 0 5 10]
'std::__1::remove_reference<gfx::Rect *&>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10]
'gfx::(anonymous namespace)::GetCodePointAt' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::__destroy<cc::PaintTypeface>' [ 0 5 10 69]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >::operator->' [ 0 5 10 282]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >::pair<const std::__1::basic_string<char> &>' [ 0 5 10 115]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__construct<base::FileDescriptor, int, bool>' [ 0 5 10 72]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>::__end_cap' [ 0 5 10 141]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >::__tree' [ 0 5 10 506]
'sw_sync_create_fence_data' [ 0]
'std::__1::__unique_if<gfx::(anonymous namespace)::PaddedImageSource>' [ 0 5 10]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::internal::TextRunHarfBuzz>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::internal::TextRunHarfBuzz>, void>' [ 0 5 10 101]
'gfx::(anonymous namespace)::RectangleText::Elide' [ 0 5 28 43]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__construct<std::__1::pair<unsigned long, bool>, std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'std::__1::__const_void_pointer<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >, false>' [ 0 5 10]
'scoped_refptr<gfx::PlatformFont>::operator->' [ 0 34]
'std::__1::__pointer_type<gfx::RenderText, std::__1::default_delete<gfx::RenderText> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::operator->' [ 0 5 10 266]
'std::__1::move<float &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::RenderTextHarfBuzz *, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::~vector' [ 0 5 10 143]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &>::__destruct_at_end' [ 0 5 10 152]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *&>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, bool> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::RotatedSource *, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10]
'gfx::(anonymous namespace)::TiledImageSource::~TiledImageSource' [ 0 5 28 46]
'std::__1::remove_reference<sk_sp<SkTypeface> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::ImageSkia, true>' [ 0 5 10]
'std::__1::remove_reference<const gfx::ShadowValue &>' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__recommend' [ 0 5 10 85]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::IconWithBadgeSource *, std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10 102]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__vector_base' [ 0 5 10 69]
'std::__1::__less<unsigned long, unsigned int>::operator()' [ 0 5 10 47]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &, 1, false>' [ 0 5 10]
'std::__1::allocator<gfx::internal::LineSegment>::construct<gfx::internal::LineSegment, const gfx::internal::LineSegment &>' [ 0 5 10 49]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>' [ 0 5 10]
'gfx::GetFallbackFonts' [ 0 5]
'std::__1::__wrap_iter<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>::operator++' [ 0 5 10 144]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'gfx::RenderText::GetLookupDataForRange' [ 0 5 17]
'drmAgpFree' [ 0]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__end_cap' [ 0 5 10 61]
'char16_t' [ 0]
'gfx::ImageSkiaRep' [ 0 5]
'gfx::Canvas::DrawImageInPath' [ 0 5 13]
'std::__1::__tuple_indices<0, 1, 2, 3, 4>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, true>' [ 0 5 10 30]
'SkString::c_str' [ 0 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::PaddedImageSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::PaddedImageSource *&, void>' [ 0 5 10 93]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::push_back' [ 0 5 10 143]
'gz_state' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::~__tree' [ 0 5 10 557]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::empty' [ 0 5 10 68]
'deflate_slow' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >, true>' [ 0 5 10 30]
'std::__1::pair<unsigned int, unsigned short>' [ 0 5 10]
'gfx::BreakList<unsigned int>::GetRange' [ 0 5 30]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct<gfx::Rect, gfx::Rect>' [ 0 5 10 61]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::ShadowValue *>::__nat, gfx::ShadowValue>' [ 0 5 10]
'drm_munmap' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__push_back_slow_path<std::__1::pair<unsigned long, bool> >' [ 0 5 10 115]
'logging::MakeCheckOpString<SkColorType, SkColorType>' [ 0 9]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::clear' [ 0 5 10 184]
'Cr_z_gzclose_r' [ 0]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::capacity' [ 0 5 10 95]
'std::__1::__compressed_pair_elem<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'gfx::(anonymous namespace)::kEmptyIconSize' [ 0 5 28]
'std::__1::__compressed_pair<gfx::PathElement *, std::__1::allocator<gfx::PathElement> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::clear' [ 0 5 10 131]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::~__vector_base' [ 0 5 10 83]
'SkTypefaceResolverProc' [ 0]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >' [ 0 5 10]
'gfx::Vector2d::set_y' [ 0 5 15]
'std::__1::forward<gfx::(anonymous namespace)::ClientNativePixmapOpaque *&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::operator[]' [ 0 5 10 324]
'__uint16_t' [ 0]
'std::__1::__vector_base<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__alloc' [ 0 5 10 83]
'gfx::(anonymous namespace)::IsBracket::kBrackets' [ 0 5 28 39]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::__construct_range_forward<gfx::BreakList<bool> *, gfx::BreakList<bool> *>' [ 0 5 10 73]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> >::__compressed_pair<int, const std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true> &>' [ 0 5 10 221]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::allocate' [ 0 5 10 144]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::RenderTextHarfBuzz>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign' [ 0 5 10 101]
'gfx::kFaviconSize' [ 0 5]
'gfx::DecoratedText::RangedAttribute::~RangedAttribute' [ 0 5 20 37]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10 144]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::pop_back' [ 0 5 10 132]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > &, 1, false>' [ 0 5 10]
'gfx::PaintThrobberSpinningAfterWaiting' [ 0 5]
'SkIVector' [ 0]
'std::__1::__pointer_type<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10]
'std::__1::remove_reference<base::TimeDelta>' [ 0 5 10]
'base::TimeDelta::FromMilliseconds' [ 0 6 17]
'std::__1::__wrap_iter<gfx::Rect *>::base' [ 0 5 10 36]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::ResizeSource, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >, 1, false>::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >, void>' [ 0 5 10 214]
'base::LazyInstance<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >, base::internal::LeakyLazyInstanceTraits<std::__1::map<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > > > >' [ 0 6]
'std::__1::remove_reference<const std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::capacity' [ 0 5 10 65]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::vector' [ 0 5 10 131]
'std::__1::unique_ptr<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >::unique_ptr<true, void>' [ 0 5 10 99]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::__make_iter' [ 0 5 10 96]
'std::__1::operator==<const std::__1::pair<unsigned long, unsigned long> *, const std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::pair<unsigned long, bool> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >::__compressed_pair<gfx::ColorTransformStep *, std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10 108]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *&, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >' [ 0 5 10 247]
'pthread_once_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface>, 1, true>' [ 0 5 10]
'gfx::(anonymous namespace)::GetLineSegmentContainingXCoord' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::__construct<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, const unsigned int &, gfx::(anonymous namespace)::QueryResult>' [ 0 5 10 153]
'logging::CheckLTImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, int> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<unsigned long, int> > &, void>' [ 0 5 10 101]
'base::i18n' [ 0 6]
'cc::PaintFlags::setStrokeWidth' [ 0 4 16]
'std::__1::move_iterator<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator++' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<char *&, void>' [ 0 5 10 52]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::second' [ 0 5 10 145]
'std::__1::pair<const unsigned int, unsigned int>::pair<unsigned int, int, false>' [ 0 5 10 50]
'std::__1::__compressed_pair<_FcPattern *, FcPatternDeleter>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >' [ 0 5 10]
'gfx::GpuFence::GetGpuFenceHandle' [ 0 5 15]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::internal::(anonymous namespace)::PNGImageSource *, void>' [ 0 5 10 68]
'std::__1::__advance<std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::add_lvalue_reference<SkBitmap>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *>' [ 0 5 10]
'std::__1::forward<const int &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10 110]
'std::__1::__compressed_pair<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::__compressed_pair<nullptr_t, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>' [ 0 5 10 181]
'gfx::(anonymous namespace)::PaintThrobberSpinningWithStartAngle' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__construct<color_utils::(anonymous namespace)::WeightedColor, color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10 101]
'ui::SequentialIDGenerator::GetNextAvailableID' [ 0 4 27]
'std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource>' [ 0 5 10]
'std::__1::pointer_traits<void *>' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::ExtractSubsetImageSource, const gfx::ImageSkia &, gfx::Rect &>' [ 0 5 10]
'drmDevicePtr' [ 0]
'std::__1::advance<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<gfx::Font, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::__compressed_pair<std::__1::__tree_node<gfx::Font, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10 173]
'std::__1::pointer_traits<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::FileDescriptor *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::PaddedImageSource *&>' [ 0 5 10]
'std::__1::__compressed_pair<SkPath *, std::__1::allocator<SkPath> &>::second' [ 0 5 10 70]
'SkNoncopyable' [ 0]
'drmOpenWithType' [ 0]
'gfx::RenderText::IndexOfAdjacentGrapheme' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator>, false>' [ 0 5 10 30]
'std::__1::__to_raw_pointer<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFont *, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 133]
'std::__1::__compressed_pair<color_utils::(anonymous namespace)::WeightedColor *, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >, long, true>' [ 0 5 10]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::Release' [ 0 48]
'std::__1::less<gfx::Image::RepresentationType>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> >' [ 0 5 10]
'std::__1::operator!=<const gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::MaskedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource> >::reset' [ 0 5 10 143]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__hash_table' [ 0 5 10 410]
'std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>::tuple<true, false>' [ 0 5 10 129]
'drmCopyVersion' [ 0]
'Cr_z_gzflush' [ 0]
'SkIRect::y' [ 0 9]
'gfx::internal::SkiaTextRenderer::SetTextSize' [ 0 5 15 33]
'Cr_z_deflateCopy' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::max_size' [ 0 5 10 87]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric<int>' [ 0 6 16 47]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>::__alloc' [ 0 5 10 81]
'_drmModeFB' [ 0]
'std::__1::move<gfx::PathElement *&>' [ 0 5 10]
'std::__1::__wrap_iter<gfx::Rect *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'base::internal::SaturateFastOp<unsigned char, int, void>' [ 0 6 16]
'std::__1::__wrap_iter<gfx::Rect *>::operator++' [ 0 5 10 36]
'std::__1::__pointer_type<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::pop_back' [ 0 5 10 213]
'drmModeObjectList' [ 0]
'std::__1::default_delete<unsigned int []>::operator()<unsigned int>' [ 0 5 10 43]
'std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>' [ 0 5 10]
'std::__1::__sort5<(lambda at ../../ui/gfx/color_analysis.cc:196:26) &, unsigned int *>' [ 0 5 10]
'std::__1::__const_pointer<std::__1::basic_string<char>, std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::allocator<gfx::BufferFormat>' [ 0 5 10]
'_drmModeAtomicReqItem' [ 0]
'drm_agp_binding' [ 0]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>::operator->' [ 0 5 10 190]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >, true>' [ 0 5 10 30]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::TiledImageSource *>' [ 0 5 10]
'std::__1::forward<gfx::internal::ImageRep *>' [ 0 5 10]
'logging::CheckGEImpl<long, int>' [ 0 9]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__swap_out_circular_buffer' [ 0 5 10 84]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::rbegin' [ 0 6 126]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::ImageSkia *>::__nat, gfx::ImageSkia>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::operator[]' [ 0 5 10 131]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10]
'gfx::ColorTransformMatrix::AppendShaderSource' [ 0 5 27]
'sk_sp<SkImage>::release' [ 0 16]
'base::internal::CommonMax<int, unsigned long>' [ 0 6 16]
'color_utils::(anonymous namespace)::ColorBox::CanSplit' [ 0 13 36 46]
'gfx::Range::is_reversed' [ 0 5 12]
'std::__1::__list_node_pointer_traits<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__unsafe_link_pointer_cast' [ 0 5 10 117]
'gfx::(anonymous namespace)::HSLImageSource::HSLImageSource' [ 0 5 28 44]
'color_utils::(anonymous namespace)::KMeanCluster::GetCentroid' [ 0 13 36 50]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::FontFuncs>::New' [ 0 6 69]
'std::__1::conditional<false, std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__swap_out_circular_buffer' [ 0 5 10 113]
'std::__1::default_delete<XPoint []>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > > >' [ 0 5 10]
'std::__1::__vector_base<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::~__vector_base' [ 0 5 10 79]
'color_utils::BlendTowardOppositeLuma' [ 0 13]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >' [ 0 5 10]
'std::__1::move<gfx::ImagePNGRep &>' [ 0 5 10]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::value_comp' [ 0 5 10 626]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, 0, false>' [ 0 5 10]
'gfx::internal::SkiaTextRenderer::DrawUnderline' [ 0 5 15 33]
'gfx::(anonymous namespace)::PathParser' [ 0 5 28]
'std::__1::__allocator_traits_rebind<std::__1::allocator<gfx::Font>, std::__1::__tree_node<gfx::Font, void *>, true>' [ 0 5 10]
'gfx::BreakList<gfx::BaselineStyle>::CheckBreaks' [ 0 5 36]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >::construct<std::__1::pair<gfx::Font, gfx::Range>, std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 61]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::base' [ 0 5 10 75]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__end_cap' [ 0 5 10 148]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'std::__1::__move<std::__1::pair<unsigned long, bool> *, std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::unique_ptr<true, void>' [ 0 5 10 157]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::allocate' [ 0 5 10 227]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::__end_cap' [ 0 5 10 149]
'std::__1::__const_void_pointer<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep>, false>' [ 0 5 10]
'chunkcopy_core_safe' [ 0]
'gfx::internal::ImageSkiaStorage::CanModify' [ 0 5 15 33]
'std::__1::__const_void_pointer<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::capacity' [ 0 5 10 133]
'std::__1::default_delete<gfx::ColorTransformSkTransferFn>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ShadowValue>, 1, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'gfx::(anonymous namespace)::GetScriptExtensions' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<unsigned short, std::__1::default_delete<unsigned short []> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::__destroy<cc::PaintFlags>' [ 0 5 10 66]
'gfx::Canvas::DrawFadedString' [ 0 5 13]
'gfx::SelectionBehavior' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::construct<gfx::PathElement, gfx::PathElement>' [ 0 5 10 68]
'std::__1::__vector_base<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> >::clear' [ 0 5 10 149]
'gfx::Vector2d::set_x' [ 0 5 15]
'std::__1::unique_ptr<unsigned int [], std::__1::default_delete<unsigned int []> >::unique_ptr<unsigned int *, true, void, void>' [ 0 5 10 83]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::value_comp' [ 0 5 10 338]
'base::subtle::NoBarrier_Store' [ 0 6 14]
'gfx::StringSlicer::CutString' [ 0 5 19]
'FILE' [ 0]
'Cr_z_gzwrite' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::get' [ 0 5 10 113]
'gfx::(anonymous namespace)::PaddedImageSource::PaddedImageSource' [ 0 5 28 47]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct<gfx::ShadowValue, gfx::ShadowValue>' [ 0 5 10 68]
'std::__1::pointer_traits<color_utils::(anonymous namespace)::ColorBracket *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned short *, 0, false>::__compressed_pair_elem<unsigned short *, void>' [ 0 5 10 62]
'_drmModeProperty' [ 0]
'std::__1::forward<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::ColorTransformSkTransferFn>' [ 0 5 10]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >::~RefCounted' [ 0 6 108]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::__tree_node_destructor' [ 0 5 10 244]
'std::__1::__pointer_type<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::base' [ 0 5 10 61]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long> >' [ 0 5 10]
'std::__1::__pointer_type<SkPoint, std::__1::default_delete<SkPoint []> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::internal::ImageRep *, 0, false>::__compressed_pair_elem<gfx::internal::ImageRep *, void>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, bool> >, 1, true>' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::vector' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 132]
'std::__1::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >::reset' [ 0 5 10 147]
'gfx::RenderText::ApplyWeight' [ 0 5 17]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10 275]
'std::__1::allocator<int>::construct<int>' [ 0 5 10 26]
'std::__1::allocator_traits<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::deallocate' [ 0 5 10 114]
'std::__1::__const_void_pointer<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface>, false>' [ 0 5 10]
'std::__1::move<gfx::DecoratedText::RangedAttribute *&>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::VectorIconSource *&>' [ 0 5 10]
'gfx::ColorTransformMatrix::CanAppendShaderSource' [ 0 5 27]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__emplace_unique_key_args<std::__1::pair<int, int>, std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10 357]
'__intptr_t' [ 0]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10]
'gfx::ScopedRTLFlipCanvas::ScopedRTLFlipCanvas' [ 0 5 26]
'std::__1::remove_reference<std::__1::pair<gfx::Font, gfx::Range> &>' [ 0 5 10]
'_drmPlatformDeviceInfo' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::begin' [ 0 5 10 115]
'gfx::(anonymous namespace)::GetCanvasDimensions' [ 0 5 28]
'std::__1::remove_reference<gfx::internal::Line *&>' [ 0 5 10]
'base::internal::PassingTraitsType<base::TimeTicks>' [ 0 6 16]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>' [ 0 6 16]
'std::__1::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >::reset' [ 0 5 10 107]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::CachedFontSet *&>' [ 0 5 10]
'base::subtle::RefCountedBase::Release' [ 0 6 14 30]
'base::string16_internals::string16_char_traits::compare' [ 0 6 26 48]
'_drmHost1xDeviceInfo' [ 0]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::reset' [ 0 6 63]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::empty' [ 0 5 10 62]
'trace_event_internal::kNoId' [ 0 22]
'drmAddressPtr' [ 0]
'base::LazyInstance<gfx::(anonymous namespace)::VectorIconCache, base::internal::DestructorAtExitLazyInstanceTraits<gfx::(anonymous namespace)::VectorIconCache> >::Get' [ 0 6 163]
'std::__1::forward<std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >::unique_ptr<true, void>' [ 0 5 10 141]
'gfx::RenderText::SetSelection' [ 0 5 17]
'Cr_z_gz_error' [ 0]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::DeleteInternal<base::RefCountedMemory>' [ 0 6 118]
'pqdownheap' [ 0]
'gfx::DecomposedTransform' [ 0 5]
'parse_config_sysfs_file' [ 0]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >::construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::piecewise_construct_t &, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::tuple<> >' [ 0 5 10 115]
'std::__1::__wrap_iter<const unsigned int *>::operator++' [ 0 5 10 45]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__end_node' [ 0 5 10 338]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__annotate_delete' [ 0 5 10 141]
'ush' [ 0]
'std::__1::remove_reference<cc::PaintFlags>' [ 0 5 10]
'std::__1::distance<std::__1::pair<unsigned long, gfx::Font::Weight> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::__split_buffer' [ 0 5 10 150]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<unsigned int, unsigned short>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned short> >, true>' [ 0 5 10 30]
'std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>' [ 0 5 10]
'std::__1::make_pair<std::__1::pair<int, int>, gfx::ShadowDetails>' [ 0 5 10]
'std::__1::make_unique<gfx::(anonymous namespace)::ResizeSource, const gfx::ImageSkia &, skia::ImageOperations::ResizeMethod &, const gfx::Size &>' [ 0 5 10]
'drmModeAddFB2WithModifiers' [ 0]
'gfx::(anonymous namespace)::RectangleText::AddToCurrentLineWithWidth' [ 0 5 28 43]
'std::__1::__wrap_iter<const unsigned int *>::operator+=' [ 0 5 10 45]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::end' [ 0 5 10 62]
'std::__1::forward<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'SkIRect::height' [ 0 9]
'gfx::ImageSkiaRep::is_null' [ 0 5 19]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__vector_base' [ 0 5 10 174]
'gfx::Canvas::FillRect' [ 0 5 13]
'gfx::LinuxFontDelegate::instance' [ 0 5 24]
'std::__1::move<std::__1::pair<unsigned long, unsigned long> *&>' [ 0 5 10]
'std::__1::remove_reference<SkColorSpaceTransferFn &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >::construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<unsigned int, int> >' [ 0 5 10 110]
'_drmUsbDeviceInfo' [ 0]
'skstd::underlying_type_t<SkPath::FillType>' [ 0 7]
'drm_irq_busid' [ 0]
'std::__1::forward<const std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'base::internal::CheckedAddOp<unsigned long, int, void>::Do<unsigned long>' [ 0 6 16 56]
'hb_buffer_t' [ 0]
'base::string16_internals::string16_char_traits' [ 0 6 26]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::__allocator_destructor' [ 0 5 10 159]
'std::__1::addressof<std::__1::pair<unsigned long, int> >' [ 0 5 10]
'std::__1::pair<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::begin' [ 0 5 10 167]
'std::__1::__unwrap_iter<const unsigned char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__destroy<gfx::(anonymous namespace)::CachedFont>' [ 0 5 10 90]
'std::__1::remove_reference<gfx::RenderTextHarfBuzz *&>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformToLinear, std::__1::default_delete<gfx::ColorTransformToLinear> >::reset' [ 0 5 10 107]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >::__construct<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned int &&>, std::__1::tuple<> >' [ 0 5 10 330]
'gfx::RenderText::GetAlignmentOffset' [ 0 5 17]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__end_cap' [ 0 5 10 63]
'base::internal::CheckedMulFastOp<long, int>' [ 0 6 16]
'std::__1::remove_reference<color_utils::(anonymous namespace)::WeightedColor *&>' [ 0 5 10]
'gfx::Canvas::Save' [ 0 5 13]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ResizeSource *, 0, false>' [ 0 5 10]
'(anonymous namespace)::g_default_impl_initialized' [ 0 23]
'std::__1::vector<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__construct_at_end<gfx::ImageSkiaRep *>' [ 0 5 10 78]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__find_equal<std::__1::pair<int, int> >' [ 0 5 10 357]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >' [ 0 5 10]
'std::__1::move<sk_sp<SkColorSpace> &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ButtonImageSource, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >::unique_ptr<true, void>' [ 0 5 10 143]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>::__nat, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__vector_base' [ 0 5 10 150]
'std::__1::remove_reference<std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>' [ 0 5 10]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::__sz' [ 0 5 10 187]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::allocate' [ 0 5 10 90]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >' [ 0 5 10]
'gfx::PlatformFontLinux::DeriveFont' [ 0 5 24]
'gfx::ColorTransformPerChannelTransferFn' [ 0 5]
'gfx::internal::StyleIterator::weight' [ 0 5 15 30]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__move_range' [ 0 5 10 143]
'gfx::BreakList<gfx::BaselineStyle>::breaks' [ 0 5 36]
'drmModeDestroyPropertyBlob' [ 0]
'gfx::(anonymous namespace)::DIPToPixelBounds' [ 0 5 28]
'std::__1::__size_type<std::__1::allocator<gfx::ImageSkia>, long, true>' [ 0 5 10]
'drmOpenMinor' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::construct<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 144]
'std::__1::vector<int, std::__1::allocator<int> >::__construct_at_end<int *>' [ 0 5 10 50]
'std::__1::advance<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'gfx::BaselineStyle' [ 0 5]
'std::__1::add_lvalue_reference<gfx::ImageSkia>' [ 0 5 10]
'std::__1::forward<unsigned int *&>' [ 0 5 10]
'std::__1::allocator<gfx::NativePixmapPlane>::allocate' [ 0 5 10 45]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::PathElement> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::PathElement> &, void>' [ 0 5 10 85]
'gfx::RenderText::IsValidLogicalIndex' [ 0 5 17]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::insert<std::__1::pair<unsigned int, int>, void>' [ 0 5 10 191]
'std::__1::addressof<const gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::default_delete<gfx::ColorTransformFromBT2020CL>::operator()' [ 0 5 10 59]
'gfx::BreakList<unsigned long>::max' [ 0 5 31]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::~__tree' [ 0 5 10 338]
'base::LazyInstance<gfx::(anonymous namespace)::SynchronizedCache, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<gfx::(anonymous namespace)::SynchronizedCache> >' [ 0 6]
'std::__1::remove_reference<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > &>' [ 0 5 10]
'gfx::Range::GetMax' [ 0 5 12]
'gfx::ImageFamily::MapKey::MapKey' [ 0 5 18 26]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource> >' [ 0 5 10]
'base::internal::saturated_cast<int, SaturationDefaultLimits, double>' [ 0 6 16]
'gfx::ToRoundedInt' [ 0 5]
'drmGetDevice2' [ 0]
'base::internal::CheckedNumeric<long>::CheckedNumeric<long>' [ 0 6 16 38]
'SK_ColorGRAY' [ 0]
'logging::CheckGEImpl<double, double>' [ 0 9]
'AnnotateIgnoreWritesEnd' [ 0]
'std::__1::__wrap_iter<color_utils::(anonymous namespace)::WeightedColor *>' [ 0 5 10]
'std::__1::iterator_traits<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'gfx::(anonymous namespace)::GetErrorImageRep' [ 0 5 28]
'gfx::GpuFence::AsClientGpuFence' [ 0 5 15]
'v_store_128' [ 0]
'std::__1::remove_reference<ui::InterpolatedConstantTransform *&>' [ 0 5 10]
'gfx::ImagePNGRep' [ 0 5]
'std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource>, false>' [ 0 5 10 30]
'std::__1::__sift_up<bool (*&)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &), std::__1::__wrap_iter<color_utils::(anonymous namespace)::ColorBox *> >' [ 0 5 10]
'std::__1::remove_reference<gfx::internal::ImageRepPNG *&>' [ 0 5 10]
'Cr_z_gztell64' [ 0]
'std::__1::move_if_noexcept<gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::allocator<base::FileDescriptor>::allocate' [ 0 5 10 43]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__recommend' [ 0 5 10 82]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::size' [ 0 5 10 725]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::__construct<cc::PaintFlags, cc::PaintFlags>' [ 0 5 10 66]
'std::__1::default_delete<SkColorSpaceXform>::operator()' [ 0 5 10 45]
'fill_window_c' [ 0]
'std::__1::swap<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::move<color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10]
'std::__1::remove_reference<gfx::ImageSkiaSource *>' [ 0 5 10]
'std::__1::conditional<true, const cc::PaintFlags &, cc::PaintFlags &&>' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__swap_out_circular_buffer' [ 0 5 10 132]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long> >' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::BreakList<bool> *, std::__1::allocator<gfx::BreakList<bool> >, false>' [ 0 5 10]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::emplace<const unsigned int &, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10 331]
'std::__1::unique_ptr<_FcPattern, FcPatternDeleter>' [ 0 5 10]
'AnnotateBarrierInit' [ 0]
'gfx::GpuMemoryBufferHandle::~GpuMemoryBufferHandle' [ 0 5 28]
'(anonymous namespace)' [ 0]
'std::__1::remove_reference<gfx::(anonymous namespace)::ExtractSubsetImageSource *>' [ 0 5 10]
'scoped_refptr<gfx::PlatformFontLinux>::scoped_refptr' [ 0 39]
'std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > &>::__split_buffer' [ 0 5 10 186]
'pthread_mutex_t' [ 0]
'std::__1::__vector_base<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__alloc' [ 0 5 10 83]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__destruct_at_end' [ 0 5 10 184]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::__construct_backward<gfx::internal::Line *>' [ 0 5 10 71]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::vector' [ 0 5 10 76]
'std::__1::allocator_traits<std::__1::allocator<int> >::construct<int, const int &>' [ 0 5 10 55]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>::operator-' [ 0 5 10 62]
'base::Optional<cc::SkiaPaintCanvas>::emplace<SkBitmap &>' [ 0 6 37]
'std::__1::__const_void_pointer<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::Line> >::construct<gfx::internal::Line, gfx::internal::Line>' [ 0 5 10 71]
'std::__1::__unique_if<gfx::(anonymous namespace)::BlendingImageSource>' [ 0 5 10]
'std::__1::default_delete<unsigned short []>::operator()<unsigned short>' [ 0 5 10 45]
'gfx::CreateImageRepShaderForScale' [ 0 5]
'std::__1::__compressed_pair<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line> &>::second' [ 0 5 10 96]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::destroy<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 144]
'std::__1::__compressed_pair<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >' [ 0 5 10]
'SkBitmapOperations::DownsampleByTwo' [ 0 20]
'std::__1::conditional<true, std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__nat>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, const std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, bool> *, 0, false>' [ 0 5 10]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::end' [ 0 5 10 191]
'gfx::RenderText::GetAdjacentSelectionModel' [ 0 5 17]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__construct_node_hash<std::__1::pair<unsigned int, int>>' [ 0 5 10 447]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::max_size' [ 0 5 10 97]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::__construct<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10 100]
'std::__1::allocator<SkPath>::construct<SkPath, const SkPath &>' [ 0 5 10 29]
'__gnuc_va_list' [ 0]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource>, void, void>' [ 0 5 10 93]
'SkImageInfo::SkImageInfo' [ 0 13]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::internal::Line *>::__nat, gfx::internal::Line>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::__node_alloc' [ 0 5 10 447]
'SkNO_RETURN_HINT' [ 0]
'std::__1::__compressed_pair<gfx::internal::ImageRepSkia *, std::__1::default_delete<gfx::internal::ImageRepSkia> >::__compressed_pair<gfx::internal::ImageRepSkia *&, true>' [ 0 5 10 116]
'_IO_marker' [ 0]
'std::__1::operator==<gfx::Font *, gfx::Font *>' [ 0 5 10]
'SkFontID' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::destroy<std::__1::pair<gfx::Font, gfx::Range> >' [ 0 5 10 90]
'sync_merge_data' [ 0]
'std::__1::pair<unsigned long, unsigned long>::pair<int, unsigned long, false>' [ 0 5 10 46]
'drmDMA' [ 0]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__make_iter' [ 0 5 10 131]
'icu_61::ConstChar16Ptr::get' [ 0 8 24]
'SkAtomic<unsigned int, sk_memory_order_seq_cst>' [ 0]
'std::__1::__list_node_base<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>::__self' [ 0 5 10 107]
'gfx::kEllipsisUTF16' [ 0 5]
'_FcMatchKind' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 114]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_new' [ 0 5 10 50]
'gfx::UTF16OffsetToIndex' [ 0 5]
'gfx::ClientNativePixmapFactoryDmabuf::~ClientNativePixmapFactoryDmabuf' [ 0 5 38]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::max_size' [ 0 5 10 120]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >' [ 0 5 10]
'std::__1::pair<unsigned long, int>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ClientNativePixmapOpaque *, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >' [ 0 5 10]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__end_cap' [ 0 5 10 93]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<gfx::Font, void *>, true>' [ 0 5 10]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::~vector' [ 0 5 10 56]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::capacity' [ 0 5 10 71]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::__construct_node_hash<const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 410]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned short>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *, long>::operator->' [ 0 5 10 174]
'std::__1::__tuple_leaf<0, const std::__1::basic_string<char> &, false>::__tuple_leaf<const std::__1::basic_string<char> &, void>' [ 0 5 10 72]
'k5k0' [ 0]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::max_size' [ 0 5 10 115]
'ui::InterpolatedMatrixTransform::InterpolatedMatrixTransform' [ 0 4 33]
'inflate_mode' [ 0]
'base::AtomicRefCount::AtomicRefCount' [ 0 6 22]
'std::__1::addressof<const std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::allocate' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, 0, false>' [ 0 5 10]
'base::TimeDelta::FromDouble' [ 0 6 17]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__move_assign' [ 0 5 10 76]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >::unique_ptr<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia>, void, void>' [ 0 5 10 99]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::BreakList<bool> >, 1, true>' [ 0 5 10]
'drmGetNodeTypeFromFd' [ 0]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::Clear' [ 0 6 126]
'std::__1::forward_as_tuple<gfx::ImageFamily::MapKey>' [ 0 5 10]
'std::__1::__compressed_pair_elem<XPoint *, 0, false>::__compressed_pair_elem<XPoint *&, void>' [ 0 5 10 54]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__destruct_at_end' [ 0 5 10 110]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &, 1, false>::__get' [ 0 5 10 119]
'std::__1::__compressed_pair<gfx::ColorTransform *, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'__v4si' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> *&, void>' [ 0 5 10 176]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::ShadowNineboxSource>' [ 0 5 10]
'std::__1::__tuple_leaf<3, const base::TimeDelta &, false>::get' [ 0 5 10 59]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear::Luma' [ 0 5 46]
'base::i18n::BreakIterator' [ 0 6 12]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::BlendingImageSource, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'gfx::ImageSkiaRep::SetScaled' [ 0 5 19]
'gfx::Vector3dF::z' [ 0 5 16]
'gfx::internal::SkiaTextRenderer::SkiaTextRenderer' [ 0 5 15 33]
'gfx::ImageFamily::CreateExact' [ 0 5 18]
'std::__1::pointer_traits<color_utils::(anonymous namespace)::ColorBox *>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<unsigned int, unsigned short>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<unsigned int, unsigned short> >, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::erase' [ 0 5 10 141]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned int, int> >::__get_ptr' [ 0 5 10 83]
'sk_sp<SkImageFilter>::~sk_sp' [ 0 22]
'std::__1::__compressed_pair<gfx::internal::TextRunHarfBuzz *, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >' [ 0 5 10]
'std::__1::sort<color_utils::(anonymous namespace)::KMeanCluster, bool (*)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &)>' [ 0 5 10]
'std::__1::pair<const unsigned int, unsigned short>::pair<const unsigned int &>' [ 0 5 10 52]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::reset<SkPoint *>' [ 0 5 10 73]
'std::__1::iterator_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__move<std::__1::pair<unsigned long, unsigned long> *, std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'drmModeGetPlane' [ 0]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::SuperimposedImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::SuperimposedImageSource> >::__compressed_pair<gfx::(anonymous namespace)::SuperimposedImageSource *&, true>' [ 0 5 10 164]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::clear' [ 0 5 10 142]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, false>' [ 0 5 10]
'base::internal::CheckedAddFastOp<int, int>::Do<int>' [ 0 6 16 44]
'std::__1::__vector_base<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >' [ 0 5 10]
'SkBitmapOperations::CreateBlendedBitmap::alpha_min' [ 0 20 41]
'logging::MakeCheckOpString<SkAlphaType, SkAlphaType>' [ 0 9]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::CachedFont *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 86]
'_drmModeModeInfo' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::operator+' [ 0 5 10 77]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::allocate' [ 0 5 10 96]
'std::__1::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >::__compressed_pair<gfx::internal::ImageRepPNG *, std::__1::default_delete<gfx::internal::ImageRepPNG> >' [ 0 5 10 108]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >::unique_ptr<gfx::ColorTransformMatrix, std::__1::default_delete<gfx::ColorTransformMatrix>, void, void>' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::deallocate' [ 0 5 10 66]
'drmSyncobjImportSyncFile' [ 0]
'std::__1::remove_reference<std::__1::pair<unsigned long, bool> *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > >::deallocate' [ 0 5 10 152]
'color_utils::DeriveDefaultIconColor' [ 0 13]
'std::__1::pair<const unsigned int, int>' [ 0 5 10]
'gfx::Range::Range' [ 0 5 12]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> &>::__split_buffer' [ 0 5 10 149]
'gfx::(anonymous namespace)::kFontFormatCFF' [ 0 5 28]
'gfx::Font::GetBaseline' [ 0 5 11]
'std::__1::__unique_if<gfx::ColorTransformSkTransferFn>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__annotate_shrink' [ 0 5 10 141]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >::release' [ 0 5 10 164]
'gfx::ColorTransformSkTransferFn::Evaluate' [ 0 5 33]
'_drmBufDesc' [ 0]
'gfx::Canvas::Draw1pxLine' [ 0 5 13]
'std::__1::default_delete<ui::InterpolatedConstantTransform>::operator()' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::__construct<std::__1::pair<const unsigned int, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 136]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::IconWithBadgeSource> >' [ 0 5 10]
'std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>' [ 0 5 10]
'std::__1::remove_reference<const int &>' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::base' [ 0 5 10 74]
'gfx::Canvas::image_scale' [ 0 5 13]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::vector' [ 0 5 10 76]
'gfx::ShadowValues' [ 0 5]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned short>, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'sk_sp<SkFontMgr>::~sk_sp' [ 0 18]
'base::internal::ClampedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'gfx::NineImagePainter::GetSubsetRegions' [ 0 5 23]
'gfx::(anonymous namespace)::HSLImageSource::~HSLImageSource' [ 0 5 28 44]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >' [ 0 6]
'std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__split_buffer' [ 0 5 10 142]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >::deallocate' [ 0 5 10 73]
'std::__1::make_unsigned<unsigned int>' [ 0 5 10]
'base::internal::StrictNumeric<long>' [ 0 6 16]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >::operator bool' [ 0 5 10 71]
'gfx::BufferUsage' [ 0 5]
'gfx::PlatformFontLinux::GetFontSize' [ 0 5 24]
'std::__1::__insertion_sort_incomplete<bool (*&)(const color_utils::(anonymous namespace)::KMeanCluster &, const color_utils::(anonymous namespace)::KMeanCluster &), color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::PaddedImageSource, std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>, false>' [ 0 5 10 30]
'gfx::RenderText::SetMinLineHeight' [ 0 5 17]
'std::__1::__vector_base<gfx::BufferFormat, std::__1::allocator<gfx::BufferFormat> >::__vector_base' [ 0 5 10 85]
'Cr_z__tr_stored_block' [ 0]
'base::internal::CheckedAndOp<unsigned long, int, void>::Do<unsigned long>' [ 0 6 16 56]
'gfx::NativePixmapDmaBuf::GetDmaBufOffset' [ 0 5 25]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::data' [ 0 5 10 126]
'std::__1::vector<int, std::__1::allocator<int> >::__recommend' [ 0 5 10 50]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__annotate_shrink' [ 0 5 10 120]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'gfx::BreakList<gfx::Font::Weight>' [ 0 5]
'std::__1::unordered_map<unsigned int, int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int> > >::~unordered_map' [ 0 5 10 172]
'std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>::operator()' [ 0 5 10 144]
'std::__1::default_delete<gfx::ColorTransformToBT2020CL>::operator()' [ 0 5 10 57]
'chunkunroll_relaxed' [ 0]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::TiledImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >::__compressed_pair<gfx::(anonymous namespace)::TiledImageSource *&, true>' [ 0 5 10 150]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >' [ 0 5 10]
'std::__1::copy<gfx::BreakList<bool> *, gfx::BreakList<bool> *>' [ 0 5 10]
'gfx::RenderText::set_lines' [ 0 5 17]
'order' [ 0]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::__vector_base' [ 0 5 10 184]
'drmHashDestroy' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__copy_assign_alloc' [ 0 5 10 150]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, bool> *, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10 129]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > >' [ 0 5 10]
'std::__1::basic_iostream<char, std::__1::char_traits<char> >::basic_iostream' [ 0 5 10 62]
'_drmHost1xBusInfo' [ 0]
'gfx::Range::Contains' [ 0 5 12]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__find_equal<gfx::Image::RepresentationType>' [ 0 5 10 626]
'std::__1::__const_void_pointer<gfx::Font *, std::__1::allocator<gfx::Font>, false>' [ 0 5 10]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__alloc' [ 0 5 10 85]
'std::__1::unique_ptr<gfx::internal::TextRunList, std::__1::default_delete<gfx::internal::TextRunList> >::unique_ptr<true, void>' [ 0 5 10 105]
'drmModeConnection' [ 0]
'std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource>' [ 0 5 10]
'logging::MakeCheckOpString<float, int>' [ 0 9]
'std::__1::remove_reference<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *&>' [ 0 5 10]
'std::__1::__pointer_type<gfx::internal::ImageRepSkia, std::__1::default_delete<gfx::internal::ImageRepSkia> >' [ 0 5 10]
'gfx::internal::ImageStorage::ImageStorage' [ 0 5 15 29]
'gfx::ColorTransformStep::Join' [ 0 5 25]
'std::__1::allocator_traits<std::__1::allocator<SkPath> >::construct<SkPath, const SkPath &>' [ 0 5 10 58]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedMulOp, int>' [ 0 6 16 47]
'gfx::RenderTextHarfBuzz' [ 0 5]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::SuperimposedImageSource *, 0, false>' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__annotate_delete' [ 0 5 10 82]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<gfx::ImageSkiaRep, void *> *&, void>' [ 0 5 10 96]
'std::__1::__copy<base::FileDescriptor, base::FileDescriptor>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::~__split_buffer' [ 0 5 10 124]
'gfx::ShadowValue::color' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::deallocate' [ 0 5 10 88]
'std::__1::addressof<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, int> *&>' [ 0 5 10]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::~vector' [ 0 5 10 62]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::allocate' [ 0 5 10 133]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >::RefCountedThreadSafe' [ 0 6 108]
'base::LazyInstanceTraitsBase<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >::CallDestructor' [ 0 6 226]
'drmScatterGatherAlloc' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__vector_base' [ 0 5 10 138]
'std::__1::remove_reference<gfx::(anonymous namespace)::VectorIconSource *>' [ 0 5 10]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__annotate_delete' [ 0 5 10 76]
'std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >::construct<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 85]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::size' [ 0 5 10 331]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >::unique_ptr<SkPoint *, true, void, void>' [ 0 5 10 73]
'std::__1::__split_buffer<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, bool> *> >' [ 0 5 10 124]
'std::__1::__split_buffer<SkPath, std::__1::allocator<SkPath> &>::__split_buffer' [ 0 5 10 65]
'std::__1::allocator<gfx::NativePixmapPlane>::deallocate' [ 0 5 10 45]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::ShrinkToSize' [ 0 6 126]
'fixedtables' [ 0]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, bool> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 83]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >' [ 0 5 10]
'_drmModeConnector' [ 0]
'drmModeAddFB' [ 0]
'std::__1::make_unique<gfx::ColorTransformToBT2020CL>' [ 0 5 10]
'std::__1::forward<const std::__1::pair<unsigned long, int> &>' [ 0 5 10]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__destruct_at_end' [ 0 5 10 77]
'std::__1::forward<std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10]
'std::__1::move<std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10]
'gfx::Point::x' [ 0 5 12]
'std::__1::unique_ptr<unsigned int [], std::__1::default_delete<unsigned int []> >::reset' [ 0 5 10 83]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::operator=' [ 0 48]
'sk_sp<SkImage>' [ 0]
'SkTFitsIn<int, unsigned long>' [ 0]
'gfx::ImageSkia' [ 0 5]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__vector_base' [ 0 5 10 122]
'std::__1::conditional<false, const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> &, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> &&>' [ 0 5 10]
'std::__1::vector<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::vector' [ 0 5 10 177]
'std::__1::forward<float>' [ 0 5 10]
'base::internal::CheckedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'base::ThreadCollisionWarner::~ThreadCollisionWarner' [ 0 6 29]
'std::__1::__libcpp_numeric_limits<short, true>' [ 0 5 10]
'std::__1::unique_ptr<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >::operator=' [ 0 5 10 103]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'SkRegion' [ 0]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >::__compressed_pair<nullptr_t, const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10 91]
'std::__1::unique_ptr<std::__1::__tree_node<gfx::ImageSkiaRep, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >::release' [ 0 5 10 180]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::get' [ 0 5 10 432]
'std::__1::conditional<true, std::__1::pair<unsigned int, unsigned short>, std::__1::__nat>' [ 0 5 10]
'base::internal::MoveAssignable<false>' [ 0 6 16]
'std::__1::swap<color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10]
'gfx::ImageSkia::ImageSkia' [ 0 5 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::InterpolatedConstantTransform *, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::~vector' [ 0 5 10 115]
'Cr_z_gzgetc_' [ 0]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::~__split_buffer' [ 0 5 10 77]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque> >::~unique_ptr' [ 0 5 10 157]
'std::__1::default_delete<SkBitmap>' [ 0 5 10]
'gfx::Insets::left' [ 0 5 13]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::end' [ 0 5 10 140]
'gfx::GpuMemoryBufferHandle::GpuMemoryBufferHandle' [ 0 5 28]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::allocate' [ 0 5 10 101]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::size' [ 0 5 10 126]
'logging::MakeCheckOpValueString<unsigned int>' [ 0 9]
'std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >::deallocate' [ 0 5 10 90]
'std::__1::operator==<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<gfx::Font, void *> *, std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> >, false>' [ 0 5 10]
'std::__1::addressof<unsigned short>' [ 0 5 10]
'base::internal::OptionalStorage<SkBitmap, false, false>::OptionalStorage' [ 0 6 16 57]
'std::__1::unique_ptr<SkPoint [], std::__1::default_delete<SkPoint []> >' [ 0 5 10]
'gfx::GenericSharedMemoryId' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>::__nat, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10]
'drm_syncobj_create' [ 0]
'std::__1::__vector_base<SkPath, std::__1::allocator<SkPath> >::~__vector_base' [ 0 5 10 63]
'dirent' [ 0]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__destroy<base::FileDescriptor>' [ 0 5 10 72]
'sktfitsin::Private::SkTInRange_LE_MaxD<int, unsigned long>::fits' [ 0 11 20 60]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >::~unique_ptr' [ 0 5 10 137]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::get' [ 0 5 10 284]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__lower_bound<gfx::ImageFamily::MapKey>' [ 0 5 10 332]
'std::__1::__pointer_type_imp::__pointer_type<gfx::Rect, std::__1::allocator<gfx::Rect>, true>' [ 0 5 10 30]
'gfx::(anonymous namespace)::BlendingImageSource::~BlendingImageSource' [ 0 5 28 49]
'std::__1::remove_reference<std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >' [ 0 5 10]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>' [ 0 5 10]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >::RefCounted' [ 0 6 108]
'std::__1::__pointer_type<gfx::Size, std::__1::default_delete<gfx::Size> >' [ 0 5 10]
'color_utils::(anonymous namespace)::ColorBox::Split' [ 0 13 36 46]
'gfx::internal::Line::~Line' [ 0 5 15 21]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::__allocate_node' [ 0 5 10 237]
'std::__1::remove_reference<gfx::ColorTransformStep *>' [ 0 5 10]
'std::__1::__tree_key_value_types<gfx::Font>::__get_key' [ 0 5 10 45]
'FcPattern' [ 0]
'gfx::(anonymous namespace)::RestoreBreakList<bool>' [ 0 5 28]
'std::__1::__pointer_type_imp::__pointer_type<base::FileDescriptor, std::__1::allocator<base::FileDescriptor>, true>' [ 0 5 10 30]
'gfx::Image::AsBitmap' [ 0 5 12]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPath>, 1, true>' [ 0 5 10]
'std::__1::allocator<gfx::Font>::allocate' [ 0 5 10 32]
'off64_t' [ 0]
'std::__1::__to_raw_pointer<const wchar_t>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> &>::second' [ 0 5 10 110]
'gfx::Range::GetMin' [ 0 5 12]
'std::__1::vector<float, std::__1::allocator<float> >::allocate' [ 0 5 10 54]
'__u64' [ 0]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::operator->' [ 0 5 10 81]
'gfx::FontListImpl::GetPrimaryFont' [ 0 5 19]
'std::__1::forward<const std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true> &>' [ 0 5 10]
'SkBitmap::width' [ 0 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >::~unique_ptr' [ 0 5 10 147]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::HSLImageSource *, 0, false>' [ 0 5 10]
'std::__1::allocator<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::__unique_if<gfx::internal::TextRunHarfBuzz>' [ 0 5 10]
'sk_sp<cc::PaintShader>::reset' [ 0 24]
'sk_sp<SkTextBlob>::sk_sp' [ 0 19]
'std::__1::__compressed_pair_elem<gfx::Size *, 0, false>::__compressed_pair_elem<gfx::Size *, void>' [ 0 5 10 57]
'std::__1::__const_pointer<gfx::internal::Line, gfx::internal::Line *, std::__1::allocator<gfx::internal::Line>, true>' [ 0 5 10]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__end_cap' [ 0 5 10 57]
'std::__1::make_pair<int &, unsigned int &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, int> *, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10 127]
'base::internal::CheckedAddFastOp<int, int>' [ 0 6 16]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__destruct_at_end' [ 0 5 10 120]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, unsigned long> *>::operator+=' [ 0 5 10 71]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::rehash' [ 0 5 10 447]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__annotate_shrink' [ 0 5 10 213]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__swap_out_circular_buffer' [ 0 5 10 114]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ButtonImageSource *, void>' [ 0 5 10 68]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<' [ 0 5 10 61]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__copy_assign_alloc' [ 0 5 10 148]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBracket, std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket> >::data' [ 0 5 10 140]
'lbase' [ 0]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 76]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >' [ 0 5 10]
'ldiv_t' [ 0]
'base::SequenceChecker::~SequenceChecker' [ 0 6 23]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >::get_deleter' [ 0 5 10 432]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::__split_buffer' [ 0 5 10 123]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::~__list_imp' [ 0 5 10 243]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >, false>' [ 0 5 10]
'gfx::Canvas::DrawFocusRect' [ 0 5 13]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::construct<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 68]
'std::__1::conditional<true, std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::__nat>' [ 0 5 10]
'std::__1::pair<unsigned long, unsigned int>::pair<unsigned int, unsigned int &, false>' [ 0 5 10 45]
'gfx::(anonymous namespace)::PathFromSource' [ 0 5 28]
'std::__1::remove_const<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > &>' [ 0 5 10]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::Put<gfx::(anonymous namespace)::QueryResult>' [ 0 6 126]
'std::__1::move<SkPath &>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >, false>' [ 0 5 10]
'drmCommandNone' [ 0]
'std::__1::move<gfx::ImageSkiaRep *, gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__vector_base<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::__vector_base' [ 0 5 10 121]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::vector' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::max_size' [ 0 5 10 102]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >, void>' [ 0 5 10 203]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<unsigned long, int> > &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::__emplace_unique_key_args<unsigned int, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned int &&>, std::__1::tuple<> >' [ 0 5 10 866]
'std::__1::__rebind_pointer<void *, const gfx::Font>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::vector' [ 0 5 10 50]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::find_last_of' [ 0 5 10 126]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::operator[]' [ 0 5 10 62]
'std::__1::__const_pointer<gfx::internal::LineSegment, gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment>, true>' [ 0 5 10]
'chunkset_core' [ 0]
'gfx::Image::CreateFrom1xPNGBytes' [ 0 5 12]
'std::__1::allocator<gfx::ShadowValue>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::NativePixmapPlane *, 0, false>' [ 0 5 10]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >::__map_const_iterator' [ 0 5 10 417]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'std::__1::__const_pointer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::pair<unsigned long, gfx::Font::Weight> *, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, true>' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'parse_separate_sysfs_files' [ 0]
'std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> >::unique_ptr<gfx::(anonymous namespace)::BlendingImageSource, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource>, void, void>' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *&, void>' [ 0 5 10 139]
'std::__1::forward<std::__1::allocator<gfx::ImageSkiaRep> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::operator->' [ 0 5 10 256]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::__construct_at_end<gfx::ShadowValue *>' [ 0 5 10 76]
'std::__1::__split_buffer<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> &>::__alloc' [ 0 5 10 85]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > *>::__nat, std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::GetFontName' [ 0 5 28 40]
'std::__1::forward<const std::__1::pair<unsigned long, unsigned int> &>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>::__wrap_iter' [ 0 5 10 45]
'std::__1::forward<std::__1::tuple<> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 159]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::clear' [ 0 5 10 91]
'std::__1::__compressed_pair_elem<float, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::ImageSkiaSource, std::__1::default_delete<gfx::ImageSkiaSource> > &>' [ 0 5 10]
'std::__1::map<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> >, std::__1::less<gfx::Image::RepresentationType>, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::size' [ 0 5 10 371]
'std::__1::forward<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pubimbue' [ 0 5 10 63]
'std::__1::iterator_traits<color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::reset' [ 0 5 10 256]
'gfx::internal::StyleIterator::UpdatePosition' [ 0 5 15 30]
'gfx::(anonymous namespace)::PathParser::GetArgumentCount' [ 0 5 28 40]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >::deallocate' [ 0 5 10 108]
'std::__1::__rebind_pointer<void *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::remove_reference<gfx::Image::RepresentationType>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::destroy<base::FileDescriptor>' [ 0 5 10 72]
'std::__1::__compressed_pair<gfx::internal::ImageRep *, std::__1::default_delete<gfx::internal::ImageRep> >::__compressed_pair<gfx::internal::ImageRep *, true>' [ 0 5 10 108]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>' [ 0 5 10]
'std::__1::move<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *&>' [ 0 5 10]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__alloc' [ 0 5 10 77]
'std::__1::iterator_traits<const std::__1::pair<unsigned long, bool> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::RenderTextHarfBuzz *, 0, false>::__compressed_pair_elem<gfx::RenderTextHarfBuzz *&, void>' [ 0 5 10 71]
'switches::kEnableCrashReporter' [ 0 10]
'(anonymous namespace)::IsMultipleOfNinetyDegrees' [ 0 23]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::emplace_back<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10 167]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 65]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>::__compressed_pair_elem<std::__1::allocator<int> &, void>' [ 0 5 10 72]
'gz_skip' [ 0]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__split_buffer' [ 0 5 10 93]
'gfx::ImageSkia::~ImageSkia' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__construct<gfx::internal::LineSegment, const gfx::internal::LineSegment &>' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::deallocate' [ 0 5 10 68]
'std::__1::move<std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> > &>' [ 0 5 10]
'std::__1::atomic<unsigned int>::atomic' [ 0 5 10 32]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &>::__alloc' [ 0 5 10 140]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'drmModeAddFB2' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >::release' [ 0 5 10 266]
'std::__1::default_delete<SkPoint []>' [ 0 5 10]
'std::__1::tuple_element<1, std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct_range_forward<std::__1::basic_string<char> *, std::__1::basic_string<char> *>' [ 0 5 10 81]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ColorTransformStep *, 0, false>::__compressed_pair_elem<gfx::ColorTransformSkTransferFn *, void>' [ 0 5 10 71]
'std::__1::__wrap_iter<const gfx::Font *>::operator++' [ 0 5 10 42]
'SkRect::height' [ 0 8]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FrameMetadata>, 1, true>' [ 0 5 10]
'std::__1::__upper_bound<std::__1::__less<unsigned long, unsigned int> &, std::__1::__wrap_iter<const unsigned int *>, unsigned long>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned short> >::deallocate' [ 0 5 10 66]
'std::__1::remove_reference<gfx::(anonymous namespace)::SuperimposedImageSource *&>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__split_buffer' [ 0 5 10 122]
'std::__1::operator==<color_utils::(anonymous namespace)::KMeanCluster *, color_utils::(anonymous namespace)::KMeanCluster *>' [ 0 5 10]
'std::__1::remove_reference<const gfx::Font &>' [ 0 5 10]
'base::RefCountedThreadSafe<gfx::internal::ImageSkiaStorage, base::DefaultRefCountedThreadSafeTraits<gfx::internal::ImageSkiaStorage> >::AddRef' [ 0 6 136]
'gfx::RenderTextHarfBuzz::DisplayIndexToTextIndex' [ 0 5 25]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >, true>' [ 0 5 10 30]
'base::internal::OptionalBase<cc::SkiaPaintCanvas>::OptionalBase' [ 0 6 16 51]
'std::__1::__wrap_iter<const std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'std::__1::ios_base::unsetf' [ 0 5 10 20]
'std::__1::remove_reference<float *&>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true> &>' [ 0 5 10]
'(anonymous namespace)::HSLShift::LineProcHnopSdecLnop' [ 0 23 33]
'std::__1::unique_ptr<unsigned int [], std::__1::default_delete<unsigned int []> >' [ 0 5 10]
'std::__1::addressof<const std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<cc::PaintFlags>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &>::second' [ 0 5 10 181]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>::__get' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10]
'std::__1::remove_reference<gfx::(anonymous namespace)::ShadowNineboxSource *>' [ 0 5 10]
'std::__1::pointer_traits<unsigned char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::select_on_container_copy_construction' [ 0 5 10 69]
'std::__1::forward<const std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >::deallocate' [ 0 5 10 135]
'std::__1::move_if_noexcept<gfx::DecoratedText::RangedAttribute>' [ 0 5 10]
'std::__1::move<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> &>' [ 0 5 10]
'drmCreateDrawable' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::__extract_key_fail_tag' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::~vector' [ 0 5 10 85]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::allocate' [ 0 5 10 72]
'gfx::Rect::origin' [ 0 5 11]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>::__get_np' [ 0 5 10 384]
'drmOpenOnce' [ 0]
'gfx::internal::TextRunHarfBuzz::~TextRunHarfBuzz' [ 0 5 15 32]
'std::__1::__compressed_pair_elem<color_utils::(anonymous namespace)::KMeanCluster *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 96]
'std::__1::__const_void_pointer<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> *, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> >, false>' [ 0 5 10]
'logging::MakeCheckOpString<bool, bool>' [ 0 9]
'mbstate_t' [ 0]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::end' [ 0 5 10 101]
'std::__1::__unique_if<gfx::(anonymous namespace)::VectorIconSource>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::RotatedSource *, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >' [ 0 5 10 102]
'std::__1::unique_ptr<gfx::(anonymous namespace)::HSLImageSource, std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ClientNativePixmap>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ColorTransformSMPTEST2048NonHdrToLinear, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10]
'std::__1::pair<std::__1::pair<int, int>, gfx::ShadowDetails>::~pair' [ 0 5 10 62]
'std::__1::__size_type<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>, long, true>' [ 0 5 10]
'std::__1::move<gfx::PlatformFont *&>' [ 0 5 10]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>::Do<unsigned long>' [ 0 6 16 64]
'gfx::(anonymous namespace)::CharIsMark' [ 0 5 28]
'std::__1::__rebind_pointer<void *, std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>' [ 0 5 10]
'std::__1::remove_reference<gfx::BreakList<bool> &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__end_cap' [ 0 5 10 89]
'z_size_t' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> >::__compressed_pair<true, void>' [ 0 5 10 200]
'drmModeRevokeLease' [ 0]
'unsigned int' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::allocate' [ 0 5 10 74]
'FcResult' [ 0]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::max_size' [ 0 5 10 267]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::size' [ 0 5 10 410]
'base::hash_map<uint32_t, uint32_t>' [ 0 6]
'std::__1::__tree_is_left_child<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::(anonymous namespace)::MaskedImageSource>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::construct<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, const unsigned int &, gfx::(anonymous namespace)::QueryResult>' [ 0 5 10 153]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::size' [ 0 5 10 866]
'gfx::(anonymous namespace)::MaskedImageSource::MaskedImageSource' [ 0 5 28 47]
'std::__1::pointer_traits<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::allocator<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >, true>' [ 0 5 10 30]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::ClientNativePixmap, std::__1::default_delete<gfx::ClientNativePixmap> >::unique_ptr<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf>, void, void>' [ 0 5 10 99]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'SkSafeRef<SkColorSpace>' [ 0]
'SkMatrix::isIdentity' [ 0 10]
'std::__1::copy<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__end_cap' [ 0 5 10 69]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long> >, bool>' [ 0 5 10]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::__split_buffer' [ 0 5 10 85]
'std::__1::__pointer_type<gfx::ClientNativePixmapDmaBuf, std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10]
'SkBitmap::computeByteSize' [ 0 10]
'std::__1::unique_ptr<gfx::internal::ImageRepPNG, std::__1::default_delete<gfx::internal::ImageRepPNG> >::reset' [ 0 5 10 105]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >::allocate' [ 0 5 10 198]
'sk_sp<SkTypeface>::release' [ 0 19]
'std::__1::__wrap_iter<const gfx::internal::LineSegment *>::operator*' [ 0 5 10 59]
'std::__1::remove_reference<gfx::ColorTransformSkTransferFn *&>' [ 0 5 10]
'std::__1::remove_reference<gfx::internal::LineSegment &>' [ 0 5 10]
'base::RefCounted<gfx::FontListImpl, base::DefaultRefCountedTraits<gfx::FontListImpl> >::DeleteInternal<gfx::FontListImpl>' [ 0 6 88]
'std::__1::__vector_base<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *>, std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> > >::~__vector_base' [ 0 5 10 184]
'std::__1::map<gfx::ImageFamily::MapKey, gfx::Image, std::__1::less<gfx::ImageFamily::MapKey>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >::map' [ 0 5 10 178]
'std::__1::allocator<gfx::internal::LineSegment>::deallocate' [ 0 5 10 49]
'std::__1::allocator<gfx::BreakList<bool> >::allocate' [ 0 5 10 44]
'std::__1::operator!=<std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::size' [ 0 5 10 50]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::begin' [ 0 5 10 187]
'std::__1::remove_reference<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintFlags> >::__construct<cc::PaintFlags, const cc::PaintFlags &>' [ 0 5 10 66]
'std::__1::swap<gfx::Rect *>' [ 0 5 10]
'std::__1::__vector_base<color_utils::ColorProfile, std::__1::allocator<color_utils::ColorProfile> >' [ 0 5 10]
'Cr_z_deflate' [ 0]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::list' [ 0 5 10 237]
'std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >' [ 0 5 10]
'base::internal::operator&<base::internal::CheckedNumeric<unsigned long>, int, nullptr>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > &, void>' [ 0 5 10 113]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >::construct<std::__1::pair<const unsigned int, unsigned int>, std::__1::pair<int, unsigned int> >' [ 0 5 10 139]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::BlendingImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::BlendingImageSource> >' [ 0 5 10]
'std::__1::map<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::~map' [ 0 5 10 537]
'Cr_z_inflateUndermine' [ 0]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'std::__1::swap<base::RefCountedMemory *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, long>::operator->' [ 0 5 10 562]
'gfx::ElideBehavior' [ 0 5]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10]
'gfx::RenderText::ApplyBaselineStyle' [ 0 5 17]
'std::__1::remove_reference<gfx::(anonymous namespace)::BlendingImageSource *>' [ 0 5 10]
'__dev_t' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__emplace_unique<std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 626]
'std::__1::__libcpp_numeric_limits<unsigned int, true>' [ 0 5 10]
'drmDMAReqPtr' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 70]
'std::__1::__pointer_type<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >' [ 0 5 10]
'base::internal::ClampAdd<int, int>' [ 0 6 16]
'std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, long>::operator->' [ 0 5 10 446]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::end' [ 0 5 10 62]
'std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >::pair<const std::__1::basic_string<char> &>' [ 0 5 10 188]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__get_pointer' [ 0 5 10 96]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ResizeSource *, std::__1::default_delete<gfx::(anonymous namespace)::ResizeSource> >::__compressed_pair<gfx::(anonymous namespace)::ResizeSource *&, true>' [ 0 5 10 142]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::DropShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::DropShadowSource>, false>' [ 0 5 10 30]
'gfx::ColorTransform::~ColorTransform' [ 0 5 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface>, 1, true>::__compressed_pair_elem<const std::__1::allocator<cc::PaintTypeface> &, void>' [ 0 5 10 83]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::begin' [ 0 5 10 101]
'SkBitmap::getAddr8::operator()' [ 0 10 20]
'std::__1::remove_reference<gfx::ColorTransformMatrix *&>' [ 0 5 10]
'std::__1::allocator<gfx::PathElement>::deallocate' [ 0 5 10 39]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > *>::pointer_to' [ 0 5 10 171]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::__wrap_iter' [ 0 5 10 55]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::SkiaColorTransform, true>' [ 0 5 10]
'std::__1::__sort3<(lambda at ../../ui/gfx/render_text_harfbuzz.cc:391:17) &, gfx::internal::LineSegment *>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::vector' [ 0 5 10 62]
'std::__1::unique_ptr<gfx::(anonymous namespace)::TiledImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >::release' [ 0 5 10 141]
'std::__1::allocator<gfx::Rect>::construct<gfx::Rect>' [ 0 5 10 32]
'gfx::(anonymous namespace)::HarfBuzzFace::Init' [ 0 5 28 42]
'sk_sp<cc::PaintShader>::sk_sp' [ 0 24]
'std::__1::forward<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::Size, std::__1::default_delete<gfx::Size> >::reset' [ 0 5 10 71]
'std::__1::vector<SkPath, std::__1::allocator<SkPath> >::vector' [ 0 5 10 56]
'std::__1::pointer_traits<int *>' [ 0 5 10]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__destruct_at_end' [ 0 5 10 92]
'std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> >::__annotate_new' [ 0 5 10 62]
'std::__1::__tuple_less<3>::operator()<std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>, std::__1::tuple<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&> >' [ 0 5 10 27]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::~vector' [ 0 5 10 62]
'gfx::ImageFamily::Clone' [ 0 5 18]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct<unsigned int, const unsigned int &>' [ 0 5 10 64]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::__end_cap' [ 0 5 10 85]
'drmModeFreePlaneResources' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__destruct_at_end' [ 0 5 10 148]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'dbase' [ 0]
'base::TimeDelta::Min' [ 0 6 17]
'std::__1::pointer_traits<wchar_t *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::PathElement *, std::__1::allocator<gfx::PathElement> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::PathElement> &>' [ 0 5 10 90]
'gfx::FontListImpl::FontListImpl' [ 0 5 19]
'std::__1::remove_reference<std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'gfx::RectF::bottom' [ 0 5 12]
'std::__1::forward<gfx::(anonymous namespace)::PaddedImageSource *>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::clear' [ 0 5 10 122]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::__construct_backward<std::__1::pair<unsigned long, gfx::Font::Weight> >' [ 0 5 10 101]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, true>' [ 0 5 10 330]
'std::__1::__compressed_pair_elem<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > *>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::TiledImageSource, true>' [ 0 5 10]
'std::__1::forward<std::__1::pair<unsigned long, gfx::BaselineStyle> >' [ 0 5 10]
'sync_fence_info' [ 0]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >::~unique_ptr' [ 0 5 10 340]
'std::__1::allocator<gfx::BufferFormat>::allocate' [ 0 5 10 40]
'gfx::(anonymous namespace)::MaskedImageSource::CreateImageSkiaRep' [ 0 5 28 47]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::replace' [ 0 5 10 126]
'gfx::(anonymous namespace)::g_font_funcs' [ 0 5 28]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::~__vector_base' [ 0 5 10 85]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::pop_back' [ 0 5 10 82]
'gfx::ImageSkia::CanModify' [ 0 5 16]
'gfx::ColorTransformFromBT2020CL::Join' [ 0 5 33]
'std::__1::find_if<std::__1::__wrap_iter<const gfx::ImageSkiaRep *>, (lambda at ../../ui/gfx/image/image_skia.cc:257:22)>' [ 0 5 10]
'gfx::(anonymous namespace)::Invert' [ 0 5 28]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > &>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'cc::PaintFlags::getTypeface' [ 0 4 16]
'std::__1::__compressed_pair<gfx::ImageSkiaSource *, std::__1::default_delete<gfx::ImageSkiaSource> >::__compressed_pair<gfx::(anonymous namespace)::TiledImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::TiledImageSource> >' [ 0 5 10 102]
'gfx::(anonymous namespace)::DropShadowSource' [ 0 5 28]
'std::__1::add_lvalue_reference<unsigned short>' [ 0 5 10]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBox>::construct<color_utils::(anonymous namespace)::ColorBox, color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 67]
'std::__1::allocator<std::__1::pair<unsigned long, int> >::allocate' [ 0 5 10 58]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::clear' [ 0 5 10 83]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 137]
'drmVersionPtr' [ 0]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >::DeleteInternal<gfx::PlatformFont>' [ 0 6 88]
'std::__1::__compressed_pair<gfx::DecoratedText::RangedAttribute *, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::second' [ 0 5 10 128]
'logging::CheckNEImpl<gfx::BaselineStyle, gfx::BaselineStyle>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >, 1, false>' [ 0 5 10]
'std::__1::vector<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> >::__annotate_new' [ 0 5 10 72]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__swap_out_circular_buffer' [ 0 5 10 68]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned long> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 92]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::~__vector_base' [ 0 5 10 274]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::push_back' [ 0 5 10 68]
'gfx::internal::(anonymous namespace)::PNGImageSource::AddPNGData' [ 0 5 15 38 54]
'gfx::(anonymous namespace)::GetGlyphHorizontalAdvance' [ 0 5 28]
'std::__1::float_denorm_style' [ 0 5 10]
'deflate_state' [ 0]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >, bool>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::__push_back_slow_path<std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 131]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >' [ 0 5 10]
'trace_event_internal::ScopedTracer::Initialize' [ 0 22 36]
'std::__1::allocator_traits<std::__1::allocator<int> >::deallocate' [ 0 5 10 55]
'gfx::ColorTransformMatrix::ColorTransformMatrix' [ 0 5 27]
'base::subtle::GetOrCreateLazyPointer<gfx::(anonymous namespace)::VectorIconCache>' [ 0 6 14]
'gfx::internal::ImageRepPNG::Width' [ 0 5 15 28]
'std::__1::streampos' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::get' [ 0 5 10 266]
'gfx::GpuMemoryBuffer::~GpuMemoryBuffer' [ 0 5 22]
'drm_dma_flags' [ 0]
'std::__1::addressof<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned int> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 91]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::~vector' [ 0 5 10 133]
'std::__1::__wrap_iter<float *>::operator*' [ 0 5 10 32]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >' [ 0 5 10]
'std::__1::advance<base::FileDescriptor *>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::internal::LineSegment *>::base' [ 0 5 10 59]
'SkImageInfo::MakeUnknown' [ 0 13]
'std::__1::__compressed_pair<base::i18n::BreakIterator *, std::__1::default_delete<base::i18n::BreakIterator> >::__compressed_pair<base::i18n::BreakIterator *, true>' [ 0 5 10 112]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::deallocate' [ 0 5 10 96]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__emplace_unique_key_args<gfx::Image::RepresentationType, std::__1::pair<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 626]
'logging::CheckLEImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::forward<gfx::(anonymous namespace)::ClientNativePixmapOpaque *>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> >::__compressed_pair<int, const std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::less<std::__1::basic_string<char> >, true> &>' [ 0 5 10 276]
'gfx::internal::ImageRepPNG' [ 0 5 15]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >' [ 0 5 10]
'logging::CheckEQImpl<unsigned int, unsigned int>' [ 0 9]
'detect_data_type' [ 0]
'gfx::(anonymous namespace)::PaddedImageSource::~PaddedImageSource' [ 0 5 28 47]
'std::__1::remove_reference<color_utils::(anonymous namespace)::WeightedColor &>' [ 0 5 10]
'gfx::(anonymous namespace)::kFontFormatTrueType' [ 0 5 28]
'std::__1::remove_reference<std::__1::default_delete<gfx::(anonymous namespace)::PaddedImageSource> >' [ 0 5 10]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>::~__split_buffer' [ 0 5 10 123]
'std::__1::__compressed_pair<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::__compressed_pair<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10 293]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::construct<std::__1::pair<unsigned long, bool>, std::__1::pair<unsigned long, bool> >' [ 0 5 10 88]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >::end' [ 0 5 10 447]
'std::__1::__pointer_type<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::Font> &>' [ 0 5 10 76]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ExtractSubsetImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource> >::__compressed_pair<gfx::(anonymous namespace)::ExtractSubsetImageSource *&, true>' [ 0 5 10 166]
'gfx::Rect::size' [ 0 5 11]
'std::__1::__less<unsigned char, unsigned char>::operator()' [ 0 5 10 48]
'std::__1::__compressed_pair_elem<gfx::ImageSkia *, 0, false>::__compressed_pair_elem<gfx::ImageSkia *&, void>' [ 0 5 10 62]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::HSLImageSource>, 1, true>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__map_value_compare<gfx::Image::RepresentationType, std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::less<gfx::Image::RepresentationType>, true>, std::__1::allocator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > > >::__count_unique<gfx::Image::RepresentationType>' [ 0 5 10 626]
'std::__1::allocator_traits<std::__1::allocator<gfx::PathElement> >::__max_size' [ 0 5 10 68]
'std::__1::remove_reference<gfx::ImageSkiaRep>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> >::allocate' [ 0 5 10 73]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, unsigned long> *>::operator++' [ 0 5 10 77]
'std::__1::__pointer_type<std::__1::__tree_node<gfx::Font, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::Font, void *> > > >' [ 0 5 10]
'base::WrapUnique<gfx::ImageSkia>' [ 0 6]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> >, true>' [ 0 5 10 30]
'base::internal::DestructorAtExitLazyInstanceTraits<std::__1::map<std::__1::pair<int, int>, gfx::ShadowDetails, std::__1::less<std::__1::pair<int, int> >, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, gfx::ShadowDetails> > > >::New' [ 0 6 16 248]
'std::__1::conditional<false, std::__1::pointer_traits<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>::__nat, base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<float, std::__1::allocator<float>, true>' [ 0 5 10 30]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::HorizontalShadowSource, std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>, false>' [ 0 5 10 30]
'gfx::PlatformFontLinux::ComputeMetricsIfNecessary' [ 0 5 24]
'std::__1::allocator<std::__1::pair<unsigned long, bool> >' [ 0 5 10]
'std::__1::forward<gfx::internal::TextRunList *>' [ 0 5 10]
'SkBitmap::empty' [ 0 10]
'std::__1::forward<const std::__1::pair<unsigned long, unsigned long> &>' [ 0 5 10]
'std::__1::advance<const unsigned char *>' [ 0 5 10]
'Cr_z_alloc_func' [ 0]
'std::__1::__tuple_leaf<0, const unsigned int &, false>' [ 0 5 10]
'__storeu_si128' [ 0]
'std::__1::add_lvalue_reference<gfx::internal::ImageRepSkia>' [ 0 5 10]
'std::__1::list<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::size' [ 0 5 10 237]
'std::__1::forward<std::__1::allocator<cc::PaintFlags> &>' [ 0 5 10]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>::__compressed_pair<nullptr_t, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10 98]
'gfx::(anonymous namespace)::CreateFadeShader' [ 0 5 28]
'logging::CheckLEImpl<unsigned int, unsigned short>' [ 0 9]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ImagePNGRep *, std::__1::allocator<gfx::ImagePNGRep> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::ImagePNGRep> &>' [ 0 5 10 89]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::vector<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> >::empty' [ 0 5 10 76]
'gfx::RenderText::styles' [ 0 5 17]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::clear' [ 0 5 10 150]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_delete' [ 0 5 10 101]
'gfx::RenderText::GetLookupDataForRange::operator()' [ 0 5 17 40]
'std::__1::__pointer_type_imp::__pointer_type<ui::InterpolatedConstantTransform, std::__1::default_delete<ui::InterpolatedConstantTransform>, false>' [ 0 5 10 30]
'std::__1::__list_node_pointer_traits<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *>::__unsafe_link_pointer_cast' [ 0 5 10 145]
'std::__1::remove_reference<gfx::ShadowValue>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > > >::get_deleter' [ 0 5 10 238]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::construct<gfx::BreakList<bool>, gfx::BreakList<bool> &>' [ 0 5 10 73]
'base::MRUCacheBase<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int>, MRUCacheStandardMap>::Erase' [ 0 6 126]
'std::__1::remove_reference<const std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'gfx::RenderText::GetUpdatedDisplayOffset' [ 0 5 17]
'std::__1::allocator<gfx::BreakList<bool> >::destroy' [ 0 5 10 44]
'std::__1::move<color_utils::(anonymous namespace)::WeightedColor &>' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'std::__1::allocator_traits<std::__1::allocator<color_utils::ColorProfile> >' [ 0 5 10]
'cc' [ 0]
'std::__1::default_delete<icu_61::BreakIterator>::operator()' [ 0 5 10 49]
'std::__1::allocator<int>::construct<int, const int &>' [ 0 5 10 26]
'std::__1::unique_ptr<gfx::internal::(anonymous namespace)::PNGImageSource, std::__1::default_delete<gfx::internal::(anonymous namespace)::PNGImageSource> >::release' [ 0 5 10 157]
'std::__1::__pointer_type<ui::InterpolatedTransform, std::__1::default_delete<ui::InterpolatedTransform> >' [ 0 5 10]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::end' [ 0 5 10 120]
'base::LazyInstanceTraitsBase<gfx::(anonymous namespace)::VectorIconCache>::New' [ 0 6 75]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformMatrix, true>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::ImagePNGRep *>::base' [ 0 5 10 49]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > &, void>' [ 0 5 10 119]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::__root_ptr' [ 0 5 10 357]
'cc::PaintFlags::setLCDRenderText' [ 0 4 16]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::push_back' [ 0 5 10 96]
'gfx::WordWrapBehavior' [ 0 5]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::end' [ 0 5 10 410]
'std::__1::__compressed_pair_elem<gfx::ImagePNGRep *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 64]
'drmFoldDuplicatedDevices' [ 0]
'base::i18n::UTF16CharIterator::get' [ 0 6 12 31]
'std::__1::min<int>' [ 0 5 10]
'gfx::(anonymous namespace)::IconWithBadgeSource::IconWithBadgeSource' [ 0 5 28 49]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::allocate' [ 0 5 10 97]
'std::__1::operator==<const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *, const base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::~vector' [ 0 5 10 119]
'std::__1::forward<color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::max' [ 0 6 16 69]
'std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > > >::map' [ 0 5 10 438]
'std::__1::__rebind_pointer<void *, std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >' [ 0 5 10]
'gfx::BreakList<gfx::BaselineStyle>::~BreakList' [ 0 5 36]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__alloc' [ 0 5 10 57]
'std::__1::__rebind_pointer<void *, const std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >' [ 0 5 10]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__annotate_new' [ 0 5 10 76]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > > >' [ 0 5 10]
'gfx::(anonymous namespace)::BlendingImageSource::BlendingImageSource' [ 0 5 28 49]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > > >::get_deleter' [ 0 5 10 266]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::end' [ 0 5 10 85]
'gfx::internal::(anonymous namespace)::PNGImageSource::GetImageForScale' [ 0 5 15 38 54]
'base::internal::SaturationDefaultLimits<unsigned char>' [ 0 6 16]
'std::__1::__compressed_pair_elem<gfx::(anonymous namespace)::ResizeSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::ResizeSource *&, void>' [ 0 5 10 88]
'std::__1::swap<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::construct<std::__1::pair<const unsigned int, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const unsigned int &>, std::__1::tuple<> >' [ 0 5 10 136]
'std::__1::allocator_traits<std::__1::allocator<int> >::destroy<int>' [ 0 5 10 55]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >::destroy<std::__1::pair<const unsigned int, int> >' [ 0 5 10 130]
'std::__1::__atomic_base<unsigned int, false>::load' [ 0 5 10 46]
'std::__1::__pointer_type<gfx::(anonymous namespace)::TransparentImageSource, std::__1::default_delete<gfx::(anonymous namespace)::TransparentImageSource> >' [ 0 5 10]
'base::internal::CheckOnFailure' [ 0 6 16]
'std::__1::__vector_base<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::clear' [ 0 5 10 148]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::__max_size' [ 0 5 10 137]
'std::__1::reverse_iterator<std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >::base' [ 0 5 10 135]
'std::__1::add_lvalue_reference<base::i18n::BreakIterator>' [ 0 5 10]
'drmGetDevice' [ 0]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__make_iter' [ 0 5 10 62]
'std::__1::vector<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >::size' [ 0 5 10 141]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::construct<std::__1::pair<unsigned long, unsigned int>, std::__1::pair<unsigned long, unsigned int> >' [ 0 5 10 96]
'std::__1::make_unique<gfx::(anonymous namespace)::ButtonImageSource, unsigned int &, const gfx::ImageSkia &, const gfx::ImageSkia &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >' [ 0 5 10]
'std::__1::__move<std::__1::pair<unsigned long, int> *, std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *>' [ 0 5 10]
'logging::MakeCheckOpString<gfx::BaselineStyle, gfx::BaselineStyle>' [ 0 9]
'std::__1::__tuple_less<5>' [ 0 5 10]
'Cr_z_uncompress2' [ 0]
'std::__1::unique_ptr<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::Font *>::operator*' [ 0 5 10 42]
'std::__1::remove_reference<gfx::internal::LineSegment>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImagePNGRep> >' [ 0 5 10]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__end_cap' [ 0 5 10 85]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > > >, long, true>' [ 0 5 10]
'gfx::RenderText::GetTextDirection' [ 0 5 17]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> >::deallocate' [ 0 5 10 170]
'std::__1::pair<unsigned long, gfx::BaselineStyle>::pair<unsigned int, gfx::BaselineStyle &, false>' [ 0 5 10 51]
'std::__1::__unique_if<gfx::internal::ImageRepPNG>' [ 0 5 10]
'cc::PaintImageBuilder::set_id' [ 0 4 23]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::capacity' [ 0 5 10 126]
'std::__1::__pointer_type<unsigned int, std::__1::default_delete<unsigned int []> >' [ 0 5 10]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__alloc' [ 0 5 10 174]
'gfx::internal::ImageRep' [ 0 5 15]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::clear' [ 0 5 10 82]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::push_back' [ 0 5 10 76]
'drmAgpMemoryAvail' [ 0]
'icu_61::ConstChar16Ptr::ConstChar16Ptr' [ 0 8 24]
'std::__1::remove_reference<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> >::__compressed_pair<float, const std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> &>' [ 0 5 10 172]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::Map' [ 0 5 28 54]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::destroy<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10 181]
'sk_sp<SkColorSpace>::operator bool' [ 0 21]
'std::__1::enable_if<true, void>' [ 0 5 10]
'std::__1::list<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::clear' [ 0 5 10 181]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::data' [ 0 5 10 68]
'std::__1::allocator<gfx::PathElement>::construct<gfx::PathElement, gfx::PathElement>' [ 0 5 10 39]
'std::__1::__distance<int *>' [ 0 5 10]
'sk_sp<SkColorSpace>::~sk_sp' [ 0 21]
'std::__1::distance<int *>' [ 0 5 10]
'pagesize_mask' [ 0]
'std::__1::unique_ptr<gfx::ColorTransformFromBT2020CL, std::__1::default_delete<gfx::ColorTransformFromBT2020CL> >::reset' [ 0 5 10 115]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::end' [ 0 5 10 332]
'std::__1::remove_reference<ui::InterpolatedConstantTransform *>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>' [ 0 5 10]
'std::__1::chrono' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > >::__destroy<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > >' [ 0 5 10 199]
'gfx::RenderTextHarfBuzz::CompareFamily' [ 0 5 25]
'std::__1::pointer_traits<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> *>' [ 0 5 10]
'std::__1::forward<gfx::ColorTransformSMPTEST2048NonHdrToLinear *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::internal::LineSegment>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::internal::LineSegment> &, void>' [ 0 5 10 92]
'std::__1::remove_reference<gfx::IconDescription>' [ 0 5 10]
'std::__1::remove_reference<const color_utils::HSL &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<color_utils::(anonymous namespace)::WeightedColor *>::__nat, color_utils::(anonymous namespace)::WeightedColor>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__max_size' [ 0 5 10 90]
'base::internal::ClampedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'std::__1::forward<const cc::PaintFlags &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::operator[]' [ 0 5 10 143]
'std::__1::__pointer_type<gfx::ColorTransformFromLinear, std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> > >, true>' [ 0 5 10 30]
'SkRect::MakeLTRB' [ 0 8]
'std::initializer_list<unsigned char>' [ 0 5]
'gfx::RenderText::SelectAll' [ 0 5 17]
'std::__1::__const_pointer<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, true>' [ 0 5 10]
'SkColor' [ 0]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'base::TimeDelta::FromProduct' [ 0 6 17]
'SkTextBlob::operator delete' [ 0 12]
'drm_mode_cursor2' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::emplace_back<int, bool>' [ 0 5 10 84]
'AnnotateFlushExpectedRaces' [ 0]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::__end_cap' [ 0 5 10 85]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >' [ 0 5 10]
'std::__1::default_delete<base::i18n::BreakIterator>::operator()' [ 0 5 10 53]
'_drmEventContext' [ 0]
'gfx::Canvas::UndoDeviceScaleFactor' [ 0 5 13]
'std::__1::forward<gfx::PathElement>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::max_size' [ 0 5 10 74]
'scoped_refptr<base::RefCountedMemory>' [ 0]
'std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > > >::~__tree' [ 0 5 10 866]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >' [ 0 5 10]
'sort_req_list' [ 0]
'std::__1::__vector_base<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::__vector_base' [ 0 5 10 92]
'std::__1::__unwrap_iter<std::__1::pair<unsigned long, int> *>' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::operator--' [ 0 5 10 74]
'color_utils::(anonymous namespace)::IsInterestingColor' [ 0 13 36]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::~ClientNativePixmapOpaque' [ 0 5 28 54]
'std::__1::default_delete<gfx::internal::ImageRepSkia>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransformToLinear, true>' [ 0 5 10]
'gfx::RadiusToSigma' [ 0 5]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >::empty' [ 0 5 10 187]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::RotatedSource *, std::__1::default_delete<gfx::(anonymous namespace)::RotatedSource> >::__compressed_pair<gfx::(anonymous namespace)::RotatedSource *&, true>' [ 0 5 10 144]
'gfx::(anonymous namespace)::VectorIconSource' [ 0 5 28]
'std::__1::__unique_if<gfx::RenderTextHarfBuzz>' [ 0 5 10]
'lext' [ 0]
'base::internal::CheckedNumeric<long>::MathOp<CheckedMulOp, int>' [ 0 6 16 38]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformSMPTEST2048NonHdrToLinear *, std::__1::default_delete<gfx::ColorTransformSMPTEST2048NonHdrToLinear> >' [ 0 5 10]
'base::RefCounted<gfx::PlatformFont, base::DefaultRefCountedTraits<gfx::PlatformFont> >::RefCounted' [ 0 6 88]
'std::__1::move<unsigned int *&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, gfx::ImageFamily::MapKey &&>' [ 0 5 10]
'gfx::RenderText::layout_text' [ 0 5 17]
'base::internal::CheckedNumeric<unsigned long>' [ 0 6 16]
'std::__1::pointer_traits<cc::PaintTypeface *>' [ 0 5 10]
'gfx::RenderText::display_rect' [ 0 5 17]
'std::__1::__split_buffer<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > &>::~__split_buffer' [ 0 5 10 150]
'std::__1::__compressed_pair<gfx::Font *, std::__1::allocator<gfx::Font> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 75]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::__wrap_iter' [ 0 5 10 76]
'gfx::SelectionBound::edge_bottom_rounded' [ 0 5 21]
'drmAgpGetMode' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__vector_base' [ 0 5 10 120]
'std::__1::__compressed_pair<gfx::internal::TextRunHarfBuzz *, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >::__compressed_pair<gfx::internal::TextRunHarfBuzz *&, true>' [ 0 5 10 122]
'base::WrapUnique<gfx::ClientNativePixmapDmaBuf>' [ 0 6]
'base::internal::DstRangeRelationToSrcRange<unsigned long, std::numeric_limits, unsigned long>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::__construct<color_utils::(anonymous namespace)::ColorBox, color_utils::(anonymous namespace)::ColorBox>' [ 0 5 10 96]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::construct<gfx::internal::LineSegment, const gfx::internal::LineSegment &>' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImagePNGRep>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::ImagePNGRep> &, void>' [ 0 5 10 82]
'ct_data_s' [ 0]
'logging::CheckOpResult::message' [ 0 9 24]
'std::__1::__tree<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__map_value_compare<gfx::IconDescription, std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, gfx::(anonymous namespace)::CompareIconDescription, true>, std::__1::allocator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia> > >::__construct_node<std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 338]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__max_size' [ 0 5 10 88]
'base::CommandLine' [ 0 6]
'k3k4' [ 0]
'std::__1::allocator_traits<std::__1::allocator<float> >' [ 0 5 10]
'gfx::ImageSkiaRep::GetWidth' [ 0 5 19]
'std::__1::__list_imp<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, std::__1::allocator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> > >' [ 0 5 10]
'std::__1::__split_buffer<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> &>::__destruct_at_end' [ 0 5 10 129]
'sw_sync_timeline_inc' [ 0]
'std::__1::allocator<gfx::PathElement>::allocate' [ 0 5 10 39]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator+=' [ 0 5 10 82]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>::Adjust<unsigned char, nullptr>' [ 0 6 16 77]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::data' [ 0 5 10 113]
'std::__1::forward<gfx::Rect>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *>, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<gfx::Font> &>' [ 0 5 10]
'gfx::GpuFenceHandle::operator=' [ 0 5 21]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > *>::__nat, std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > >' [ 0 5 10]
'z_stream_s' [ 0]
'__syscall_slong_t' [ 0]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::ButtonImageSource *, std::__1::default_delete<gfx::(anonymous namespace)::ButtonImageSource> >' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__recommend' [ 0 5 10 68]
'drmModeSubPixel' [ 0]
'std::__1::__split_buffer<color_utils::(anonymous namespace)::WeightedColor, std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>::capacity' [ 0 5 10 151]
'SkColorSetA' [ 0]
'std::__1::__compressed_pair<gfx::internal::Line *, std::__1::allocator<gfx::internal::Line> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::internal::Line> &>' [ 0 5 10 96]
'drm_buf_pub' [ 0]
'std::__1::__pointer_type<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorTransformFromLinear *&>' [ 0 5 10]
'std::__1::unique_ptr<base::i18n::BreakIterator, std::__1::default_delete<base::i18n::BreakIterator> >::reset' [ 0 5 10 103]
'base::internal::ClampMathOp<ClampedSubOp, int, int>' [ 0 6 16]
'drm_mode_atomic' [ 0]
'std::__1::default_delete<gfx::(anonymous namespace)::ExtractSubsetImageSource>::operator()' [ 0 5 10 80]
'std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>' [ 0 5 10]
'std::__1::__split_buffer<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'std::__1::allocator<std::__1::__wrap_iter<const std::__1::pair<unsigned long, bool> *> >' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFontSet::CreateFcFontSetForLocale' [ 0 5 28 43]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<gfx::ImageSkiaRep, void *> *>' [ 0 5 10]
'std::__1::max_element<const unsigned char *, std::__1::__less<unsigned char, unsigned char> >' [ 0 5 10]
'std::__1::__vector_base<int, std::__1::allocator<int> >::~__vector_base' [ 0 5 10 57]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > &, void>' [ 0 5 10 131]
'std::__1::__wrap_iter<const gfx::internal::LineSegment *>::__wrap_iter' [ 0 5 10 59]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__alloc' [ 0 5 10 108]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::__annotate_delete' [ 0 5 10 167]
'gfx::FontRenderParams' [ 0 5]
'std::__1::__to_raw_pointer<gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::remove_reference<gfx::Range>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::size' [ 0 5 10 357]
'std::__1::less<gfx::Image::RepresentationType>::operator()' [ 0 5 10 48]
'_drmModeAtomicReq' [ 0]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>, bool, false>' [ 0 5 10 427]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >::deallocate' [ 0 5 10 170]
'std::__1::__compressed_pair<icu_61::BreakIterator *, std::__1::default_delete<icu_61::BreakIterator> >::__compressed_pair<icu_61::BreakIterator *&, true>' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<gfx::ColorTransformToBT2020CL *, 0, false>::__compressed_pair_elem<gfx::ColorTransformToBT2020CL *&, void>' [ 0 5 10 77]
'std::__1::__vector_base<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::__end_cap' [ 0 5 10 120]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::operator->' [ 0 5 10 250]
'cc::PaintFlags::setShader' [ 0 4 16]
'gfx::Path::Path' [ 0 5 11]
'base::Optional<cc::SkiaPaintCanvas>::value' [ 0 6 37]
'std::__1::forward<std::__1::default_delete<gfx::ClientNativePixmapDmaBuf> >' [ 0 5 10]
'_hb_var_int_t' [ 0]
'std::__1::__size_type<std::__1::allocator<gfx::internal::Line>, long, true>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true> &>' [ 0 5 10]
'std::__1::__less<unsigned int, unsigned int>' [ 0 5 10]
'gfx::(anonymous namespace)::CachedFont::IsFontItalic' [ 0 5 28 40]
'gfx::NativePixmapPlane::~NativePixmapPlane' [ 0 5 24]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__move<std::__1::pair<unsigned long, unsigned int> *, std::__1::pair<unsigned long, unsigned int> *>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__recommend' [ 0 5 10 70]
'sk_sp<SkTypeface>::reset' [ 0 19]
'std::__1::forward<gfx::internal::(anonymous namespace)::PNGImageSource *>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::Size>' [ 0 5 10]
'gfx::(anonymous namespace)::HSLImageSource::GetImageForScale' [ 0 5 28 44]
'std::__1::priority_queue<color_utils::(anonymous namespace)::ColorBox, std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >, bool (*)(const color_utils::(anonymous namespace)::ColorBox &, const color_utils::(anonymous namespace)::ColorBox &)>::priority_queue' [ 0 5 10 322]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::__alloc' [ 0 5 10 91]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, long>' [ 0 5 10]
'Cr_z_inflateBack' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::internal::LineSegment> >::__construct<gfx::internal::LineSegment, gfx::internal::LineSegment &>' [ 0 5 10 78]
'v_load8_dup' [ 0]
'uint_least8_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > >::destroy<std::__1::pair<const gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > > >' [ 0 5 10 238]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::~vector' [ 0 5 10 82]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::max_size' [ 0 5 10 64]
'std::__1::__pointer_type<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<gfx::Rect>, long, true>' [ 0 5 10]
'std::__1::forward<gfx::(anonymous namespace)::RotatedSource *&>' [ 0 5 10]
'sk_sp<SkMaskFilter>' [ 0]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >::operator()' [ 0 5 10 159]
'std::__1::__pointer_type_imp::__pointer_type<unsigned short, std::__1::allocator<unsigned short>, true>' [ 0 5 10 30]
'gfx::ColorTransformFromBT2020CL::~ColorTransformFromBT2020CL' [ 0 5 33]
'std::__1::pair<unsigned long, gfx::BaselineStyle>::pair<int, gfx::BaselineStyle &, false>' [ 0 5 10 51]
'loadchunk' [ 0]
'SkPixmap::SkPixmap' [ 0 10]
'std::__1::remove_reference<std::__1::pair<unsigned long, gfx::Font::Weight> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ClientNativePixmap *, 0, false>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> > > >' [ 0 5 10]
'SK_ColorBLACK' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::ImageSkiaRep> &, 1, false>::__get' [ 0 5 10 86]
'std::__1::forward<const SkPath &>' [ 0 5 10]
'drmModeAttachMode' [ 0]
'base::internal::LeakyLazyInstanceTraits<gfx::(anonymous namespace)::FontFuncs>' [ 0 6 16]
'std::__1::forward<std::__1::default_delete<gfx::ColorTransformToLinear> >' [ 0 5 10]
'drmProcessPlatformDevice' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >' [ 0 5 10]
'logging::MakeCheckOpValueString<SkAlphaType>' [ 0 9]
'std::__1::__pointer_type<std::__1::pair<const unsigned int, unsigned short>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > >' [ 0 5 10]
'std::__1::operator!=<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'tr_static_init' [ 0]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, base_hash::hash<unsigned int>, true> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator+' [ 0 5 10 76]
'gfx::(anonymous namespace)::BinaryImageSource::GetImageForScale' [ 0 5 28 47]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator-' [ 0 5 10 76]
'std::__1::atomic<int>' [ 0 5 10]
'gfx::Path' [ 0 5]
'gfx::ColorTransform::ColorTransform' [ 0 5 21]
'drmDelContextTag' [ 0]
'std::__1::__tuple_types<const gfx::VectorIcon *&, const int &, const unsigned int &, const base::TimeDelta &, const gfx::VectorIcon *&>' [ 0 5 10]
'gfx::FallbackFontData::~FallbackFontData' [ 0 5 23]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::insert' [ 0 5 10 131]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> >, 1, true>' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >, true>' [ 0 5 10]
'color_utils::KMeanImageSampler::~KMeanImageSampler' [ 0 13 32]
'SkSafeUnref<cc::PaintShader>' [ 0]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> > > >::get' [ 0 5 10 376]
'drmVBlankReply' [ 0]
'gfx::(anonymous namespace)::Fill' [ 0 5 28]
'std::__1::pointer_traits<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >' [ 0 5 10]
'SkMatrix::getScaleY' [ 0 10]
'std::__1::pair<unsigned long, gfx::Font::Weight>::pair<int, gfx::Font::Weight &, false>' [ 0 5 10 50]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'gfx::BufferFormatToString' [ 0 5]
'gfx::PlatformFontLinux::PlatformFontLinux' [ 0 5 24]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >' [ 0 5 10]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__make_iter' [ 0 5 10 140]
'gfx::internal::StyleIterator::~StyleIterator' [ 0 5 15 30]
'std::__1::allocator_traits<std::__1::allocator<gfx::BreakList<bool> > >::allocate' [ 0 5 10 73]
'gfx::Point3F::x' [ 0 5 14]
'std::__1::__tree<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__map_value_compare<gfx::ImageFamily::MapKey, std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, std::__1::less<gfx::ImageFamily::MapKey>, true>, std::__1::allocator<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image> > >::__node_alloc' [ 0 5 10 332]
'gfx::Point3F::z' [ 0 5 14]
'(anonymous namespace)::HSLShift::LineProcessor' [ 0 23 33]
'std::__1::__hash_node_types<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, gfx::BaselineStyle>, std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >::__annotate_delete' [ 0 5 10 143]
'gfx::ClientNativePixmapFactoryDmabuf' [ 0 5]
'gfx::RemoveAcceleratorChar' [ 0 5]
'std::__1::__vector_base<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::capacity' [ 0 5 10 274]
'std::__1::remove_reference<std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::default_delete<char []>, false>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::end' [ 0 5 10 357]
'(anonymous namespace)::HSLShift::LineProcHnopSnopLinc' [ 0 23 33]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gfx::ImageSkiaRep, void *> > >::__destroy<gfx::ImageSkiaRep>' [ 0 5 10 101]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >, 1, false>' [ 0 5 10]
'std::__1::__split_buffer<gfx::ShadowValue, std::__1::allocator<gfx::ShadowValue> &>::__destruct_at_end' [ 0 5 10 85]
'gfx::(anonymous namespace)::kFallbackToSmallerScaleDiff' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> *&, void>' [ 0 5 10 325]
'std::__1::forward<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > &>' [ 0 5 10]
'gen_bitlen' [ 0]
'gfx::Image::DefaultRepresentationType' [ 0 5 12]
'gfx::internal::SkiaTextRenderer::DrawPosText' [ 0 5 15 33]
'std::__1::forward<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10]
'std::__1::unique_ptr<gfx::(anonymous namespace)::VectorIconSource, std::__1::default_delete<gfx::(anonymous namespace)::VectorIconSource> >::release' [ 0 5 10 141]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *> >::size' [ 0 5 10 170]
'std::__1::forward<std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10]
'gfx::GpuFence::GpuFence' [ 0 5 15]
'gfx::ReformattingResultFlags' [ 0 5]
'std::__1::vector<color_utils::(anonymous namespace)::KMeanCluster, std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster> >::__annotate_delete' [ 0 5 10 140]
'std::__1::__split_buffer<gfx::PathElement, std::__1::allocator<gfx::PathElement> &>::__destruct_at_end' [ 0 5 10 85]
'drmDMAFlags' [ 0]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator->' [ 0 5 10 75]
'drmAgpMemoryUsed' [ 0]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::clear' [ 0 5 10 122]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::capacity' [ 0 5 10 69]
'std::__1::unordered_map<unsigned int, unsigned int, base_hash::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >::operator[]' [ 0 5 10 191]
'std::__1::__split_buffer<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> &>' [ 0 5 10]
'std::__1::operator==<const gfx::ShadowValue *, const gfx::ShadowValue *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned int> >, 1, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult> *>::pointer_to' [ 0 5 10 99]
'std::__1::conditional<false, std::__1::pair<gfx::IconDescription, gfx::ImageSkia>, std::__1::__nat>' [ 0 5 10]
'drmModeAtomicSetCursor' [ 0]
'std::__1::__vector_base<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::~__vector_base' [ 0 5 10 126]
'std::__1::__vector_base<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::~__vector_base' [ 0 5 10 174]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'gfx::ColorTransformSMPTEST2048NonHdrToLinear' [ 0 5]
'gfx::NativePixmapPlane::NativePixmapPlane' [ 0 5 24]
'std::__1::move<gfx::ImageSkiaRep *&>' [ 0 5 10]
'switches::kDisableDevShmUsage' [ 0 10]
'std::__1::__tuple_leaf<2, const unsigned int &, false>' [ 0 5 10]
'std::__1::vector<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::__recommend' [ 0 5 10 267]
'std::__1::__compressed_pair<gfx::(anonymous namespace)::CachedFontSet *, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> >::__compressed_pair<gfx::(anonymous namespace)::CachedFontSet *, true>' [ 0 5 10 144]
'gfx::RenderText::lines' [ 0 5 17]
'gfx::ImageSkia::DeepCopy' [ 0 5 16]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::max_load_factor' [ 0 5 10 410]
'lenfix' [ 0]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::size' [ 0 5 10 76]
'std::__1::add_lvalue_reference<gfx::ClientNativePixmapDmaBuf>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> *&>' [ 0 5 10]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::~__split_buffer' [ 0 5 10 59]
'std::__1::__pointer_type<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, std::__1::allocator<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned int> *, 0, false>' [ 0 5 10]
'std::__1::default_delete<ui::InterpolatedTransform>' [ 0 5 10]
'logging::MakeCheckOpString<gfx::CommandType, gfx::CommandType>' [ 0 9]
'drm_mode_fb_cmd2' [ 0]
'chunkcopy_core' [ 0]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__alloc' [ 0 5 10 83]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'gfx::RenderText::SetStyle' [ 0 5 17]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::internal::LineSegment *, std::__1::allocator<gfx::internal::LineSegment> &>' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::operator[]' [ 0 5 10 96]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::vector' [ 0 5 10 119]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::value_comp' [ 0 5 10 357]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, 0, false>' [ 0 5 10]
'base::MRUCache<unsigned int, gfx::(anonymous namespace)::QueryResult, std::__1::less<unsigned int> >::MRUCache' [ 0 6 102]
'gfx::PointF::PointF' [ 0 5 13]
'std::__1::forward<const gfx::internal::LineSegment &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::max_size' [ 0 5 10 133]
'gfx::Canvas::IsClipEmpty' [ 0 5 13]
'std::__1::__tree<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, std::__1::less<std::__1::pair<int, int> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> > >::~__tree' [ 0 5 10 357]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::ImagePNGRep *>::__nat, gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 250]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__annotate_delete' [ 0 5 10 120]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::~__split_buffer' [ 0 5 10 71]
'drm_stats_t' [ 0]
'std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> >, 1, true>' [ 0 5 10]
'extra_blbits' [ 0]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::remove_reference<sk_sp<SkTextBlob> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<unsigned long, unsigned long> *> >' [ 0 5 10 142]
'__ino64_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, gfx::Font::Weight>, std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> >, true>' [ 0 5 10 30]
'std::__1::forward<std::__1::tuple<unsigned int &&> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> >, long, true>' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'gfx::NativePixmapDmaBuf' [ 0 5]
'std::__1::unique_ptr<icu_61::BreakIterator, std::__1::default_delete<icu_61::BreakIterator> >::~unique_ptr' [ 0 5 10 95]
'std::__1::vector<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::__make_iter' [ 0 5 10 120]
'std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >::construct<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> >' [ 0 5 10 108]
'std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *>, true>' [ 0 5 10]
'base::MakeRefCounted<cc::PaintTextBlob, sk_sp<SkTextBlob>, std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 6]
'std::__1::__advance<std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> > >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, gfx::BaselineStyle> *>::operator->' [ 0 5 10 82]
'std::__1::remove_reference<gfx::ColorTransformToBT2020CL *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::ColorTransformFromLinear *, std::__1::default_delete<gfx::ColorTransformFromLinear> >' [ 0 5 10]
'Cr_z_gzeof' [ 0]
'std::__1::move<cc::PaintImageBuilder &>' [ 0 5 10]
'gfx::GetDefaultSizeOfVectorIcon' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<SkPath, std::__1::allocator<SkPath>, true>' [ 0 5 10 30]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::release' [ 0 5 10 284]
'gfx::BreakList<gfx::BaselineStyle>::max' [ 0 5 36]
'std::__1::__const_void_pointer<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> **, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *> *>, false>' [ 0 5 10]
'std::__1::vector<gfx::DecoratedText::RangedAttribute, std::__1::allocator<gfx::DecoratedText::RangedAttribute> >' [ 0 5 10]
'SkPoint::offset' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::Font::Weight> > >' [ 0 5 10]
'base::subtle' [ 0 6]
'std::__1::__compressed_pair<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::SkiaColorTransform, std::__1::default_delete<gfx::SkiaColorTransform>, false>' [ 0 5 10 30]
'gz_zero' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::Font> >::__construct<gfx::Font, gfx::Font &>' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>' [ 0 5 10]
'drmGetVersion' [ 0]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const unsigned int *> >::operator++' [ 0 5 10 74]
'chunkcopy_lapped_relaxed' [ 0]
'gfx::TruncateString::kElideString' [ 0 5 21]
'std::__1::unique_ptr<gfx::(anonymous namespace)::ShadowNineboxSource, std::__1::default_delete<gfx::(anonymous namespace)::ShadowNineboxSource> >' [ 0 5 10]
'drmAddBufs' [ 0]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 202]
'std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>::pair<const unsigned int &, gfx::(anonymous namespace)::QueryResult, false>' [ 0 5 10 71]
'syncsearch' [ 0]
'std::__1::endl<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<int> &>' [ 0 5 10]
'gfx::RangeF::start' [ 0 5 13]
'gfx::ColorTransformFromLinear::CanAppendShaderSource' [ 0 5 31]
'configuration_table' [ 0]
'crc32_little' [ 0]
'gfx::PointF::y' [ 0 5 13]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >' [ 0 5 10]
'drmModeFBPtr' [ 0]
'base::AsserterBase' [ 0 6]
'drmAgpBind' [ 0]
'sk_sp<SkPathEffect>::~sk_sp' [ 0 21]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::HSLImageSource, true>' [ 0 5 10]
'sk_sp<SkPixelRef>::operator bool' [ 0 19]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> *>::__nat, std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails> >' [ 0 5 10]
'Cr_z__tr_flush_block' [ 0]
'std::__1::forward<const std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::clear' [ 0 5 10 89]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__destruct_at_end' [ 0 5 10 93]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > > >::second' [ 0 5 10 531]
'std::__1::__tuple_leaf<3, const base::TimeDelta &, false>::__tuple_leaf<const base::TimeDelta &, void>' [ 0 5 10 59]
'gfx::(anonymous namespace)::ClientNativePixmapOpaque::GetStride' [ 0 5 28 54]
'std::__1::__vector_base<gfx::(anonymous namespace)::CachedFont, std::__1::allocator<gfx::(anonymous namespace)::CachedFont> >::~__vector_base' [ 0 5 10 127]
'uint64_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::allocator_traits<std::__1::allocator<gfx::ShadowValue> >::__construct_range_forward<const gfx::ShadowValue *, gfx::ShadowValue *>' [ 0 5 10 68]
'std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> >::destroy' [ 0 5 10 61]
'std::__1::remove_reference<std::__1::pair<int, int> >' [ 0 5 10]
'scoped_refptr<gfx::FontListImpl>::Release' [ 0 34]
'std::__1::default_delete<char []>' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<gfx::Font, void *> *, std::__1::__tree_node<gfx::Font, void *> >' [ 0 5 10]
'std::__1::__list_imp<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, std::__1::allocator<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> > > >::clear' [ 0 5 10 243]
'std::__1::__add_lvalue_reference_impl<gfx::internal::TextRunHarfBuzz, true>' [ 0 5 10]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__vector_base' [ 0 5 10 95]
'std::__1::conditional<true, std::__1::pair<unsigned long, gfx::Font::Weight> &&, std::__1::pair<unsigned long, gfx::Font::Weight> &>' [ 0 5 10]
'std::__1::pair<unsigned long, unsigned long>::pair<unsigned long, unsigned long, false>' [ 0 5 10 46]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream' [ 0 5 10 93]
'gfx::GpuFenceHandle' [ 0 5]
'base::subtle::RefCountedBase::AddRef' [ 0 6 14 30]
'std::__1::move<int *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, int> > >::select_on_container_copy_construction' [ 0 5 10 87]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__construct_at_end' [ 0 5 10 62]
'std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >' [ 0 5 10]
'drmAddContextTag' [ 0]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *&, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > > >' [ 0 5 10 265]
'std::__1::remove_reference<std::__1::allocator<color_utils::(anonymous namespace)::WeightedColor> &>' [ 0 5 10]
'std::__1::__const_pointer<base::FileDescriptor, base::FileDescriptor *, std::__1::allocator<base::FileDescriptor>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<unsigned short []>, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<unsigned long, int> *>::base' [ 0 5 10 67]
'std::__1::vector<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits>, std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >::max_size' [ 0 5 10 213]
'std::__1::remove_reference<gfx::internal::Line>' [ 0 5 10]
'color_utils::(anonymous namespace)::KMeanCluster::SortKMeanClusterByWeight' [ 0 13 36 50]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > > >, long, true>' [ 0 5 10]
'drmModeLesseeList' [ 0]
'std::__1::pair<unsigned long, bool>::pair<int, bool, false>' [ 0 5 10 37]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ImageSkiaSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::(anonymous namespace)::MaskedImageSource>, void>' [ 0 5 10 91]
'std::__1::conditional<false, std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, std::__1::__nat>' [ 0 5 10]
'std::__1::conditional<true, const SkPath &, SkPath &&>' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, void *> *, 0, false>' [ 0 5 10]
'drmPlatformBusInfoPtr' [ 0]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::unique_ptr<gfx::ColorTransformStep, std::__1::default_delete<gfx::ColorTransformStep> >, void *> > >::__compressed_pair<int, true>' [ 0 5 10 197]
'std::__1::__compressed_pair_elem<std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>, 1, true>' [ 0 5 10]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>' [ 0 11 20]
'std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::less<unsigned int>, true>::operator()' [ 0 5 10 226]
'std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >::construct<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> >, std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > >' [ 0 5 10 135]
'gfx::NativePixmapHandle' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<gfx::(anonymous namespace)::ClientNativePixmapOpaque, std::__1::default_delete<gfx::(anonymous namespace)::ClientNativePixmapOpaque>, false>' [ 0 5 10 30]
'sync_fence_info_data' [ 0]
'hb_font_t' [ 0]
'__ino_t' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned long> *>::__nat, std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::vector<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >::__annotate_shrink' [ 0 5 10 82]
'std::__1::__vector_base<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::default_delete<gfx::(anonymous namespace)::HorizontalShadowSource>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> > >' [ 0 5 10]
'cc::PaintFlags::getTextSize' [ 0 4 16]
'ui::InterpolatedTransform::ValueBetween' [ 0 4 27]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::allocate' [ 0 5 10 68]
'gfx::(anonymous namespace)::RectangleString::NewLine' [ 0 5 28 45]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::pair<gfx::(anonymous namespace)::HarfBuzzFace, std::__1::map<unsigned int, unsigned short, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned short> > > > >, void *> > >, 1, false>' [ 0 5 10]
'gfx::FontList::GetFonts' [ 0 5 15]
'SkPath' [ 0]
'scoped_refptr<gfx::internal::ImageSkiaStorage>::get' [ 0 48]
'base::internal::ScopedFDCloseTraits' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<int> >::allocate' [ 0 5 10 55]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >, void>' [ 0 5 10 194]
'std::__1::map<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::erase' [ 0 5 10 331]
'std::__1::allocator_traits<std::__1::allocator<gfx::ImageSkiaRep> >::__construct<gfx::ImageSkiaRep, gfx::ImageSkiaRep>' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::destroy<gfx::Rect>' [ 0 5 10 61]
'std::__1::unique_ptr<gfx::ImageSkia, std::__1::default_delete<gfx::ImageSkia> >::operator*' [ 0 5 10 81]
'gfx::FontList::GetPrimaryFont' [ 0 5 15]
'std::__1::forward<const std::__1::pair<unsigned long, gfx::BaselineStyle> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> > >::destroy<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > >' [ 0 5 10 227]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *, true>' [ 0 5 10]
'base::internal::IsCompileTimeConstant<int>' [ 0 6 16]
'base::Optional<SkBitmap>::emplace<>' [ 0 6 26]
'gfx::ImageSkia::GetBitmap' [ 0 5 16]
'std::__1::vector<gfx::PathElement, std::__1::allocator<gfx::PathElement> >' [ 0 5 10]
'bl_order' [ 0]
'gfx::ImageSkiaSource::~ImageSkiaSource' [ 0 5 22]
'std::__1::__const_void_pointer<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> *, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, int>, void *> >, false>' [ 0 5 10]
'gfx::(anonymous namespace)::HorizontalShadowSource::HorizontalShadowSource' [ 0 5 28 52]
'std::__1::forward<gfx::RenderTextHarfBuzz *&>' [ 0 5 10]
'std::__1::__wrap_iter<const gfx::ImagePNGRep *>' [ 0 5 10]
'std::__1::allocator<gfx::ImagePNGRep>' [ 0 5 10]
'std::__1::allocator<gfx::NativePixmapPlane>::destroy' [ 0 5 10 45]
'std::__1::__split_buffer<cc::PaintFlags, std::__1::allocator<cc::PaintFlags> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<base::char16, base::string16_internals::string16_char_traits> *, 0, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::(anonymous namespace)::VectorIconSource, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > >::begin' [ 0 5 10 113]
'std::__1::operator-<const gfx::ImageSkiaRep *, const gfx::ImageSkiaRep *>' [ 0 5 10]
'std::__1::__vector_base<gfx::PathElement, std::__1::allocator<gfx::PathElement> >::__destruct_at_end' [ 0 5 10 83]
'std::__1::__pointer_type<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> >' [ 0 5 10]
'std::__1::vector<gfx::internal::LineSegment, std::__1::allocator<gfx::internal::LineSegment> >::back' [ 0 5 10 96]
'sk_sp<cc::PaintOpBuffer>' [ 0]
'std::__1::__pointer_type<gfx::RenderTextHarfBuzz, std::__1::default_delete<gfx::RenderTextHarfBuzz> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_short_size' [ 0 5 10 126]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> > > >::reset' [ 0 5 10 454]
'gfx::SelectionBound::SelectionBound' [ 0 5 21]
'std::__1::__compressed_pair<gfx::ShadowValue *, std::__1::allocator<gfx::ShadowValue> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::ShadowValue> &>' [ 0 5 10 90]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::vector<gfx::BreakList<bool>, std::__1::allocator<gfx::BreakList<bool> > >::allocate' [ 0 5 10 85]
'__int32_t' [ 0]
'Cr_z_crc32_combine' [ 0]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> >, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, void *> > >::__construct<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<gfx::(anonymous namespace)::CachedFontSet, std::__1::default_delete<gfx::(anonymous namespace)::CachedFontSet> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const std::__1::basic_string<char> &>, std::__1::tuple<> >' [ 0 5 10 272]
'std::__1::default_delete<gfx::ColorTransformFromBT2020CL>' [ 0 5 10]
'base::RefCounted<gfx::internal::ImageStorage, base::DefaultRefCountedTraits<gfx::internal::ImageStorage> >' [ 0 6]
'gfx::InsetsF::InsetsF' [ 0 5 14]
'std::__1::unique_ptr<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__list_node<std::__1::pair<unsigned int, gfx::(anonymous namespace)::QueryResult>, void *> > > >::operator->' [ 0 5 10 284]
'scoped_refptr<gfx::FontListImpl>::scoped_refptr' [ 0 34]
'std::__1::vector<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >' [ 0 5 10]
'gfx::BreakList<unsigned int>' [ 0 5]
'std::__1::vector<color_utils::(anonymous namespace)::ColorBox, std::__1::allocator<color_utils::(anonymous namespace)::ColorBox> >::size' [ 0 5 10 132]
'std::__1::pointer_traits<std::__1::pair<const unsigned int, unsigned short> *>' [ 0 5 10]
'std::__1::max<int>' [ 0 5 10]
'std::__1::forward<std::__1::pair<int, int> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, gfx::Font::Weight> *>::operator--' [ 0 5 10 75]
'gfx::RenderText::weights' [ 0 5 17]
'gfx::RenderTextHarfBuzz::IsValidCursorIndex' [ 0 5 25]
'SkBitmap::getPixels' [ 0 10]
'SkImageInfo::minRowBytes64' [ 0 13]
'base::LazyInstanceTraitsBase<scoped_refptr<gfx::FontListImpl> >::New' [ 0 6 65]
'base::internal::ClampedNumeric<int>::MathOp<ClampedSubOp, int, int>' [ 0 6 16 37]
'drmModeConnectorPtr' [ 0]
'std::__1::__split_buffer<std::__1::pair<gfx::Font, gfx::Range>, std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > &>::__destruct_at_end' [ 0 5 10 128]
'gfx::GpuMemoryBuffer::GetGUIDForTracing' [ 0 5 22]
'std::__1::__split_buffer<std::__1::pair<unsigned long, int>, std::__1::allocator<std::__1::pair<unsigned long, int> > &>::__alloc' [ 0 5 10 122]
'longest_match' [ 0]
'std::__1::__tree<gfx::Font, gfx::(anonymous namespace)::CaseInsensitiveCompare, std::__1::allocator<gfx::Font> >::__count_unique<gfx::Font>' [ 0 5 10 114]
'gfx::ClientNativePixmapDmaBuf::~ClientNativePixmapDmaBuf::trace_event_unique_atomic94' [ 0 5 31 58]
'std::__1::remove_reference<gfx::Font *&>' [ 0 5 10]
'std::__1::forward<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'std::__1::__tree<gfx::ImageSkiaRep, gfx::internal::(anonymous namespace)::PNGImageSource::Compare, std::__1::allocator<gfx::ImageSkiaRep> >::__insert_node_at' [ 0 5 10 141]
'std::__1::forward<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 5 10]
'std::__1::forward<gfx::internal::Line>' [ 0 5 10]
'Cr_z_gzungetc' [ 0]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> *, std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::ImageSkiaSource *, 0, false>::__compressed_pair_elem<gfx::(anonymous namespace)::PaddedImageSource *, void>' [ 0 5 10 68]
'std::__1::allocator_traits<std::__1::allocator<gfx::DecoratedText::RangedAttribute> >::max_size' [ 0 5 10 87]
'std::__1::add_lvalue_reference<gfx::ColorTransformFromBT2020CL>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ImageFamily::MapKey, gfx::Image>, void *> > >::construct<std::__1::pair<const gfx::ImageFamily::MapKey, gfx::Image>, const std::__1::piecewise_construct_t &, std::__1::tuple<gfx::ImageFamily::MapKey &&>, std::__1::tuple<> >' [ 0 5 10 144]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<gfx::Font, gfx::Range> > >::__construct_backward<std::__1::pair<gfx::Font, gfx::Range> *>' [ 0 5 10 90]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, std::__1::__tree_node<std::__1::__value_type<gfx::Image::RepresentationType, std::__1::unique_ptr<gfx::internal::ImageRep, std::__1::default_delete<gfx::internal::ImageRep> > >, void *> *, long>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<gfx::Font, std::__1::allocator<gfx::Font> > > > >' [ 0 5 10]
'gfx::PaintVectorIcon' [ 0 5]
'std::__1::addressof<const std::__1::__hash_value_type<unsigned int, int> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long, unsigned int> > >::begin' [ 0 5 10 131]
'Cr_z__tr_init' [ 0]
'std::__1::__vector_base<gfx::ImageSkiaRep, std::__1::allocator<gfx::ImageSkiaRep> >::__alloc' [ 0 5 10 85]
'drmBufInfoPtr' [ 0]
'std::__1::default_delete<icu_61::BreakIterator>' [ 0 5 10]
'long double' [ 0]
'std::__1::allocator<color_utils::(anonymous namespace)::KMeanCluster>::construct<color_utils::(anonymous namespace)::KMeanCluster, const color_utils::(anonymous namespace)::KMeanCluster &>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *, 0, false>' [ 0 5 10]
'drm_buf_info_t' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, int> > >::key_eq' [ 0 5 10 410]
'std::__1::__tree_node_base<void *>::__set_parent' [ 0 5 10 36]
'wctrans_t' [ 0]
'gfx::(anonymous namespace)::RectangleText::AddString' [ 0 5 28 43]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> > >::__construct<std::__1::pair<const gfx::IconDescription, gfx::ImageSkia>, std::__1::pair<gfx::IconDescription, gfx::ImageSkia> >' [ 0 5 10 144]
'Cr_z_gzputc' [ 0]
'std::__1::equal_to<unsigned int>' [ 0 5 10]
'gfx::ColorTransformToLinear::CanAppendShaderSource' [ 0 5 29]
'gfx::ImageSkiaOperations::CreateResizedImage' [ 0 5 26]
'std::__1::allocator<color_utils::(anonymous namespace)::ColorBracket>::construct<color_utils::(anonymous namespace)::ColorBracket>' [ 0 5 10 71]
'std::__1::allocator_traits<std::__1::allocator<std::__1::unique_ptr<gfx::internal::TextRunHarfBuzz, std::__1::default_delete<gfx::internal::TextRunHarfBuzz> > > >::deallocate' [ 0 5 10 164]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> *, std::__1::__tree_node<std::__1::__value_type<gfx::IconDescription, gfx::ImageSkia>, void *> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, const gfx::VectorIcon *&, false>::__tuple_leaf<const gfx::VectorIcon *&, void>' [ 0 5 10 60]
'std::__1::__wrap_iter<const float *>::operator++' [ 0 5 10 38]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, bool> > &>' [ 0 5 10]
'std::__1::__wrap_iter<gfx::Font *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, gfx::BaselineStyle> > >' [ 0 5 10]
'gfx::ClientNativePixmapDmaBuf::Unmap' [ 0 5 31]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::destroy<gfx::NativePixmapPlane>' [ 0 5 10 74]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10 147]
'std::__1::vector<gfx::ImagePNGRep, std::__1::allocator<gfx::ImagePNGRep> >::__swap_out_circular_buffer' [ 0 5 10 76]
'std::__1::__wrap_iter<std::__1::pair<unsigned long, int> *>::operator-' [ 0 5 10 61]
'std::__1::copy<int *, int *>' [ 0 5 10]
'std::__1::remove_reference<const SkPath &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::BufferFormat *, std::__1::allocator<gfx::BufferFormat> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 91]
'Cr_z_inflateSyncPoint' [ 0]
'std::__1::vector<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>, std::__1::allocator<base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits> > >::end' [ 0 5 10 167]
'gfx::FontList::ParseDescription' [ 0 5 15]
'std::__1::__rebind_pointer<void *, const std::__1::pair<const unsigned int, int> >' [ 0 5 10]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_long_size' [ 0 5 10 126]
'std::__1::__vector_base<std::__1::pair<unsigned long, bool>, std::__1::allocator<std::__1::pair<unsigned long, bool> > >::__alloc' [ 0 5 10 122]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, gfx::ShadowDetails>, void *> >::allocate' [ 0 5 10 123]
'std::__1::__split_buffer<gfx::internal::Line, std::__1::allocator<gfx::internal::Line> &>::~__split_buffer' [ 0 5 10 91]
