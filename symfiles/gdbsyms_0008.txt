'logging::CheckOpResult::operator bool' [ 0 9 24]
'gfx::SizeFToSkSize' [ 0 5]
'logging' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'gfx::BoxF::BoxF' [ 0 5 11]
'gfx::Transform::Preserves2dAxisAlignment' [ 0 5 16]
'wint_t' [ 0]
'std::__1::max<double, std::__1::__less<double, double> >' [ 0 5 10]
'gfx::BoxF::depth' [ 0 5 11]
'gfx::Transform::IsApproximatelyIdentityOrTranslation' [ 0 5 16]
'SkMatrix44::operator=' [ 0 12]
'gfx::(anonymous namespace)::ComposeTransform' [ 0 5 28]
'gfx::Transform' [ 0 5]
'gfx::SizeF' [ 0 5]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'SkMatrix' [ 0]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'SkMatrix44::getType' [ 0 12]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'gfx::Transform::ApproximatelyEqual::component_tolerance' [ 0 5 16 36]
'base::internal::SaturationDefaultLimits<int>::NaN' [ 0 6 16 46]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'gfx::BoxF::set_origin' [ 0 5 11]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 69]
'__gnuc_va_list' [ 0]
'std::__1::true_type' [ 0 5 10]
'SkPoint::Make' [ 0 9]
'std::__1::false_type' [ 0 5 10]
'base::internal::NarrowingRange<int, float, numeric_limits>::max' [ 0 6 16 60]
'unsigned char' [ 0]
'gfx::Transform::Scale' [ 0 5 16]
'__va_list_tag' [ 0]
'SkMatrix44::get::operator()' [ 0 12 17]
'SkSize' [ 0]
'logging::CheckOpResult::message' [ 0 9 24]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'std::__1::__less<double, double>::operator()' [ 0 5 10 34]
'std::__1::allocator<void>' [ 0 5 10]
'gfx::QuadFToSkPoints' [ 0 5]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'gfx::RectF::RectF' [ 0 5 12]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'gfx::Transform::TransformPoint' [ 0 5 16]
'gfx::Vector3dF::z' [ 0 5 16]
'unsigned short' [ 0]
'Sk64_pin_to_s32' [ 0]
'round' [ 0]
'SkMatrix44::get' [ 0 12]
'SkMatrix44::isIdentity' [ 0 12]
'gfx::Transform::Skew' [ 0 5 16]
'std::__1::numeric_limits<int>' [ 0 5 10]
'char' [ 0]
'logging::LogSeverity' [ 0 9]
'gfx::Transform::PreconcatTransform' [ 0 5 16]
'base::internal::RangeCheck' [ 0 6 16]
'size_t' [ 0]
'gfx::BoxF' [ 0 5]
'gfx::(anonymous namespace)::BuildScaleMatrix' [ 0 5 28]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::make_unsigned<int>' [ 0 5 10]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, false>::load' [ 0 5 10 46]
'SkIRect::bottom' [ 0 9]
'SkMScalar' [ 0]
'base::internal::CheckOnFailure' [ 0 6 16]
'SkMatrix44::preConcat' [ 0 12]
'std::__1::memory_order' [ 0 5 10]
'gfx::Vector2dF::Vector2dF' [ 0 5 16]
'gfx::Vector3dF::set_z' [ 0 5 16]
'gfx::RectToSkRect' [ 0 5]
'gfx::Quaternion::w' [ 0 5 17]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'gfx::Quaternion::y' [ 0 5 17]
'gfx::Quaternion::z' [ 0 5 17]
'sk_sp<SkColorFilter>' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'gfx::Transform::Transpose' [ 0 5 16]
'__uint64_t' [ 0]
'int_least64_t' [ 0]
'SkBitmap::computeByteSize' [ 0 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'gfx::(anonymous namespace)::TanDegrees' [ 0 5 28]
'gfx::Vector3dF' [ 0 5]
'gfx::DecomposedTransform::ToString' [ 0 5 26]
'gfx::ComposeTransform' [ 0 5]
'std::__1::distance<char *>' [ 0 5 10]
'gfx::Point3F' [ 0 5]
'gfx::Point3F::SetPoint' [ 0 5 14]
'SkFloatToMScalar' [ 0]
'std::__1::allocator<char>' [ 0 5 10]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'SkGlyphID' [ 0]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'gfx::(anonymous namespace)::Length3' [ 0 5 28]
'U8CPU' [ 0]
'tm' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'gfx::Point::x' [ 0 5 12]
'gfx::PointToSkIPoint' [ 0 5]
'gfx::SizeF::clamp' [ 0 5 12]
'std::__1::once_flag' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'int8_t' [ 0]
'SkIPoint' [ 0]
'SkColorType' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'gfx::(anonymous namespace)::Combine<3>' [ 0 5 28]
'std::__1::__less<double, double>' [ 0 5 10]
'SkRect::width' [ 0 8]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'__int64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'SkISize::width' [ 0 9]
'uint_least64_t' [ 0]
'gfx::PointToSkPoint' [ 0 5]
'SkScalar' [ 0]
'gfx::Transform::ToString' [ 0 5 16]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::lowest' [ 0 6 16 69]
'std::__1::make_unsigned<unsigned int>' [ 0 5 10]
'gfx::BoxF::height' [ 0 5 11]
'int_least32_t' [ 0]
'gfx::SizeF::width' [ 0 5 12]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'gfx::(anonymous namespace)::ApproximatelyZero' [ 0 5 28]
'SkSize::height' [ 0 8]
'std::__1::ios_base::width' [ 0 5 10 20]
'gfx::Rect::Rect' [ 0 5 11]
'div_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'gfx::PointFToSkPoint' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'gfx::Quaternion::Quaternion' [ 0 5 17]
'gfx::RectToSkIRect' [ 0 5]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::__pointer_type_imp' [ 0 5 10]
'gfx::SnapTransform' [ 0 5]
'gfx::QuadF' [ 0 5]
'gfx::(anonymous namespace)::Combine<4>' [ 0 5 28]
'std::__1::literals' [ 0 5 10]
'gfx::Rect::bottom' [ 0 5 11]
'gfx::DegToRad' [ 0 5]
'gfx::TransformToFlattenedSkMatrix' [ 0 5]
'fpos_t' [ 0]
'std::__1::__apply_cv<unsigned int, unsigned int, false, false>' [ 0 5 10]
'FILE' [ 0]
'SkColor' [ 0]
'gfx::(anonymous namespace)::Cross3' [ 0 5 28]
'std::__1::make_signed<unsigned int>' [ 0 5 10]
'base::internal::SaturateFastOp<int, float, void>::Do' [ 0 6 16 50]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'gfx::(anonymous namespace)::BuildTranslationMatrix' [ 0 5 28]
'SkMScalarToFloat' [ 0]
'gfx::Transform::RotateAboutXAxis' [ 0 5 16]
'base::internal::NarrowingRange<int, float, numeric_limits>::lowest' [ 0 6 16 60]
'gfx::QuadF::p1' [ 0 5 12]
'gfx::QuadF::p2' [ 0 5 12]
'gfx::QuadF::p3' [ 0 5 12]
'gfx::QuadF::p4' [ 0 5 12]
'gfx::SizeF::height' [ 0 5 12]
'sk_sp<SkDrawLooper>' [ 0]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'uint_least32_t' [ 0]
'_G_fpos64_t' [ 0]
'SkRect' [ 0]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'gfx::Vector2d' [ 0 5]
'std::__1::addressof<const char>' [ 0 5 10]
'sk_sp<SkImageFilter>' [ 0]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'sk_double_to_float' [ 0]
'long unsigned int' [ 0]
'gfx::Rect' [ 0 5]
'std::__1::__atomic_base<unsigned int, false>::operator unsigned int' [ 0 5 10 46]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<float, false>' [ 0 6 16]
'SkIPoint::Make' [ 0 10]
'int_least16_t' [ 0]
'std::__1::float_round_style' [ 0 5 10]
'gfx::(anonymous namespace)::Dot<3>' [ 0 5 28]
'SkPixmap' [ 0]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'SkMatrix44::getType::operator()' [ 0 12 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'__vtbl_ptr_type' [ 0]
'std::__1::__atomic_base<unsigned int, true>::__atomic_base' [ 0 5 10 45]
'SkColor4f' [ 0]
'SkImageInfo::width' [ 0 13]
'gfx::Quaternion' [ 0 5]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'std::__1::__less<char *, char *>' [ 0 5 10]
'gfx::Transform::RotateAboutYAxis' [ 0 5 16]
'gfx::SkiaScalarToHarfBuzzUnits' [ 0 5]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'base::internal::SafeUnsignedAbs<int>' [ 0 6 16]
'time_t' [ 0]
'SkTo<unsigned char, int>' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'SkTransferFunctionBehavior' [ 0]
'gfx::SizeF::SizeF' [ 0 5 12]
'gfx::Rect::width' [ 0 5 11]
'bool' [ 0]
'gfx::Transform::ConcatTransform' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'double' [ 0]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'gfx::Transform::TransformRect' [ 0 5 16]
'SkImageInfo' [ 0]
'clock_t' [ 0]
'gfx::SkSizeToSizeF' [ 0 5]
'SkMatrix::setTypeMask' [ 0 10]
'gfx::kHbUnit1' [ 0 5]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'gfx::Transform::ApproximatelyEqual' [ 0 5 16]
'std::__1::enable_if<true, void>' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'uint_least8_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'uintmax_t' [ 0]
'SkBitmap::getAddr32' [ 0 10]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'sk_sp<SkMaskFilter>' [ 0]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'SkPixmap::writable_addr32' [ 0 10]
'gfx::Rect::top_right' [ 0 5 11]
'logging::CheckOpResult' [ 0 9]
'base::internal::NarrowingRange<int, float, numeric_limits>::Adjust<int, nullptr>' [ 0 6 16 60]
'long long int' [ 0]
'SkBlendMode' [ 0]
'mbstate_t' [ 0]
'SkPixmap::addr32::operator()' [ 0 10 18]
'SkRect::x' [ 0 8]
'SkRect::y' [ 0 8]
'std::__1::output_iterator_tag' [ 0 5 10]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'base::internal::IsValueInRangeForNumericType<int, float>' [ 0 6 16]
'gfx::BoxF::width' [ 0 5 11]
'sk_sp<SkPixelRef>' [ 0]
'SkMatrix::mapRect' [ 0 10]
'long long unsigned int' [ 0]
'SkMatrix::set::operator()' [ 0 10 15]
'base::internal::UnderlyingType<float>' [ 0 6 16]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gfx::Transform::FlattenTo2d' [ 0 5 16]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'gfx::RectF::width' [ 0 5 12]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'int_fast8_t' [ 0]
'SkRect::height' [ 0 8]
'sktfitsin::Private::underlying_type<int, false>' [ 0 11 20]
'__uint16_t' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'gfx::Quaternion::set_w' [ 0 5 17]
'WTF' [ 0]
'SkPixmap::addr32' [ 0 10]
'gfx::Quaternion::set_z' [ 0 5 17]
'std::__1::__atomic_base<unsigned int, false>::__atomic_base' [ 0 5 10 46]
'gfx::TransformAboutPivot' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'base::kPiDouble' [ 0 6]
'gfx::RectF' [ 0 5]
'std::__1' [ 0 5]
'float' [ 0]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'gfx::(anonymous namespace)::BuildSnappedTranslationMatrix' [ 0 5 28]
'ldiv_t' [ 0]
'SkIVector' [ 0]
'wctype_t' [ 0]
'gfx::Point3F::x' [ 0 5 14]
'gfx::Point3F::y' [ 0 5 14]
'gfx::Point3F::z' [ 0 5 14]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'logging::MakeCheckOpValueString<float>' [ 0 9]
'std::__1::__atomic_base<unsigned int, false>::store' [ 0 5 10 46]
'logging::LogMessage' [ 0 9]
'gfx::HarfBuzzUnitsToSkiaScalar::kSkToHbRatio' [ 0 5 32]
'int32_t' [ 0]
'SkMatrix44::setDouble' [ 0 12]
'std::nullptr_t' [ 0 5]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'gfx::Transform::To2dTranslation' [ 0 5 16]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'base::internal::ConditionalNegate<unsigned int>' [ 0 6 16]
'gfx::Vector2dF::y' [ 0 5 16]
'uint16_t' [ 0]
'Sk32_sat_add' [ 0]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>' [ 0 11 20]
'gfx::SkIRectToRect' [ 0 5]
'gfx::Quaternion::x' [ 0 5 17]
'logging::CheckGEImpl<float, int>' [ 0 9]
'uint8_t' [ 0]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'gfx::Transform::Translate3d' [ 0 5 16]
'SkTo<unsigned char, int>::operator()' [ 0 26]
'gfx::ConvertSkiaToRGBA' [ 0 5]
'SkBitmap::getAddr32::operator()' [ 0 10 21]
'gfx::Point3F::operator+=' [ 0 5 14]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 215]
'uint_fast64_t' [ 0]
'gfx::Transform::IsIdentityOrIntegerTranslation' [ 0 5 16]
'SkAlphaType' [ 0]
'std::__1::char_traits<char>' [ 0 5 10]
'gfx::Vector3dF::x' [ 0 5 16]
'gfx::Transform::RoundTranslationComponents' [ 0 5 16]
'sktfitsin' [ 0]
'logging::LogMessage::stream' [ 0 9 21]
'gfx::HarfBuzzUnitsToFloat::kFloatToHbRatio' [ 0 5 27]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'gfx::(anonymous namespace)::Round' [ 0 5 28]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>::fits' [ 0 11 20 57]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'gfx::Vector3dF::y' [ 0 5 16]
'gfx::Point::y' [ 0 5 12]
'__uint32_t' [ 0]
'SK_MScalar1' [ 0]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'sk_sp<SkShader>' [ 0]
'std::__1::max<double>' [ 0 5 10]
'gfx::(anonymous namespace)::kEpsilon' [ 0 5 28]
'gfx::Rect::bottom_left' [ 0 5 11]
'short' [ 0]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, float>' [ 0 6 16]
'SkISize::height' [ 0 9]
'sk_sp<SkTypeface>' [ 0]
'gfx::Rect::right' [ 0 5 11]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'SkRect::MakeXYWH' [ 0 8]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'logging::LOG_DCHECK' [ 0 9]
'int_fast64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'sk_sp<SkColorSpace>' [ 0]
'gfx::SizeToSkISize' [ 0 5]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'int16_t' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1::__apply_cv<unsigned int, int, false, false>' [ 0 5 10]
'SkUnichar' [ 0]
'gfx::RectFToSkRect' [ 0 5]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'wchar_t' [ 0]
'std::__1::string' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'gfx::Transform::TransformVector' [ 0 5 16]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'SkMatrix44::set' [ 0 12]
'gfx::RectF::x' [ 0 5 12]
'gfx::RectF::y' [ 0 5 12]
'SkSize::width' [ 0 8]
'SkFilterQuality' [ 0]
'gfx::Rect::height' [ 0 5 11]
'wctrans_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'gfx::Size::Size' [ 0 5 11]
'gfx::(anonymous namespace)::BuildSnappedScaleMatrix' [ 0 5 28]
'gfx::Transform::TransformPointInternal' [ 0 5 16]
'signed char' [ 0]
'gfx::Transform::TransformRectReverse' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'SkISize' [ 0]
'base::internal' [ 0 6]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'logging::MakeCheckOpString<float, int>' [ 0 9]
'gfx::Vector2dF::x' [ 0 5 16]
'SkImageInfo::height' [ 0 13]
'gfx::RectF::height' [ 0 5 12]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'__compar_fn_t' [ 0]
'uintptr_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'gfx::PointF::x' [ 0 5 13]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'gfx::(anonymous namespace)::Normalize' [ 0 5 28]
'SkIRect::left' [ 0 9]
'base::internal::SaturateFastOp<int, float, void>' [ 0 6 16]
'unsigned int' [ 0]
'SkPixmap::addr' [ 0 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'gfx::BitmapsAreEqual' [ 0 5]
'int_fast32_t' [ 0]
'int_least8_t' [ 0]
'gfx::Transform::RotateAbout' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'SkMatrix44::SkMatrix44' [ 0 12]
'gfx::Transform::TransformBoxReverse' [ 0 5 16]
'gfx' [ 0]
'uint_fast8_t' [ 0]
'uint64_t' [ 0]
'size_type' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::float_denorm_style' [ 0 5 10]
'int' [ 0]
'SkIRect::right' [ 0 9]
'SkMatrix::set' [ 0 10]
'gfx::Transform::operator*' [ 0 5 16]
'SkISize::Make' [ 0 9]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::max' [ 0 6 16 69]
'std::__1::locale' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'gfx::(anonymous namespace)::BuildRotationMatrix' [ 0 5 28]
'gfx::Transform::TransformPointReverse' [ 0 5 16]
'__clock_t' [ 0]
'SK_MScalarPI' [ 0]
'gfx::Transform::IsFlat' [ 0 5 16]
'__int8_t' [ 0]
'gfx::PointF::y' [ 0 5 13]
'gfx::Size::height' [ 0 5 11]
'gfx::DecomposedTransform' [ 0 5]
'uint_fast16_t' [ 0]
'gfx::SkRectToRectF' [ 0 5]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'gfx::Vector2dF' [ 0 5]
'gfx::(anonymous namespace)::BuildSnappedRotationMatrix' [ 0 5 28]
'SkNO_RETURN_HINT' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'base::internal::IsCompileTimeConstant<float>' [ 0 6 16]
'double_t' [ 0]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'gfx::Quaternion::set_x' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'base::internal::NarrowingRange<int, float, numeric_limits>' [ 0 6 16]
'gfx::HarfBuzzUnitsToSkiaScalar' [ 0 5]
'gfx::(anonymous namespace)::CheckViewportPointMapsWithinOnePixel' [ 0 5 28]
'uint32_t' [ 0]
'SkBitmap' [ 0]
'gfx::(anonymous namespace)' [ 0 5]
'gfx::Quaternion::set_y' [ 0 5 17]
'__intmax_t' [ 0]
'SkPixmap::computeByteSize' [ 0 10]
'SkSize::Make' [ 0 8]
'gfx::Point::Point' [ 0 5 12]
'base::internal::saturated_cast<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 224]
'gfx::PointF::SetPoint' [ 0 5 13]
'SkTFitsIn<unsigned char, int>' [ 0]
'gfx::GetScaleTransform' [ 0 5]
'gfx::(anonymous namespace)::CheckTransformsMapsIntViewportWithinOnePixel' [ 0 5 28]
'int_fast16_t' [ 0]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'gfx::SkISizeToSize' [ 0 5]
'gfx::Size::width' [ 0 5 11]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'gfx::Transform::IsIdentityOrTranslation' [ 0 5 16]
'gfx::Transform::GetInverse' [ 0 5 16]
'abs' [ 0]
'gfx::Transform::operator=' [ 0 5 16]
'sktfitsin::Private' [ 0 11]
'SkMatrix44' [ 0]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, float>' [ 0 6 16]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'gfx::Transform::Scale3d' [ 0 5 16]
'SkDoubleToMScalar' [ 0]
'gfx::Transform::TransformBox' [ 0 5 16]
'SkPoint' [ 0]
'__mbstate_t' [ 0]
'gfx::PointF' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'gfx::Rect::origin' [ 0 5 11]
'SkPaint' [ 0]
'gfx::Transform::MakeIdentity' [ 0 5 16]
'gfx::Transform::TransformVectorInternal' [ 0 5 16]
'SkMatrix44::dirtyTypeMask' [ 0 12]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'base' [ 0]
'gfx::Rect::x' [ 0 5 11]
'gfx::Rect::y' [ 0 5 11]
'intmax_t' [ 0]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'gfx::PointF::PointF' [ 0 5 13]
'std::__1::addressof<char>' [ 0 5 10]
'gfx::BlendDecomposedTransforms' [ 0 5]
'__int32_t' [ 0]
'SkMScalarToDouble' [ 0]
'uint_fast32_t' [ 0]
'std::__1::chrono' [ 0 5 10]
'gfx::Transform::Blend' [ 0 5 16]
'gfx::Vector3dF::set_y' [ 0 5 16]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'int64_t' [ 0]
'gfx::Point3F::Point3F' [ 0 5 14]
'gfx::(anonymous namespace)::ApproximatelyOne' [ 0 5 28]
'gfx::Point' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'__uint8_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'logging::LogMessageVoidify' [ 0 9]
'SkMatrix::setTypeMask::operator()' [ 0 10 23]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'__FILE' [ 0]
'gfx::(anonymous namespace)::BuildSkewMatrix' [ 0 5 28]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'decltype(nullptr)' [ 0]
'gfx::BoxF::origin' [ 0 5 11]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'SkIRect::MakeXYWH' [ 0 9]
'gfx::DecomposedTransform::DecomposedTransform' [ 0 5 26]
'SkAlpha' [ 0]
'long int' [ 0]
'sk_sp<SkPathEffect>' [ 0]
'SkIRect' [ 0]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'long double' [ 0]
'SkMatrix44::isTranslate' [ 0 12]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'gfx::Vector3dF::Vector3dF' [ 0 5 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'SkVector' [ 0]
'gfx::Transform::Transform' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'gfx::Transform::IsBackFaceVisible' [ 0 5 16]
'std::__1::streamoff' [ 0 5 10]
'va_list' [ 0]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'gfx::Transform::RotateAboutZAxis' [ 0 5 16]
'gfx::(anonymous namespace)::BuildPerspectiveMatrix' [ 0 5 28]
'gfx::Transform::ApproximatelyEqual::translation_tolerance' [ 0 5 16 36]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'SkIRect::top' [ 0 9]
'gfx::Transform::ApplyPerspectiveDepth' [ 0 5 16]
'SkMatrix44::mapMScalars' [ 0 12]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::ostream' [ 0 5 10]
'SkMatrix44::postConcat' [ 0 12]
'gfx::Vector3dF::set_x' [ 0 5 16]
'gfx::Transform::matrix' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'gfx::Transform::Translate' [ 0 5 16]
'__int16_t' [ 0]
'SkMatrix44::set::operator()' [ 0 12 17]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gfx::DecomposeTransform' [ 0 5]
'gfx::Rect::bottom_right' [ 0 5 11]
'SkMatrix44::setRotateDegreesAbout' [ 0 12]
'std::__1::atomic<unsigned int>::atomic' [ 0 5 10 32]
'gfx::HarfBuzzUnitsToFloat' [ 0 5]
'__time_t' [ 0]
