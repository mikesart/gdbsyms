'gfx::Vector3dF::Scale' [ 0 5 16]
'gfx::Rect::set_width' [ 0 5 11]
'gfx::ClockwiseAngleBetweenVectorsInDegrees' [ 0 5]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'base::internal::NumericRepresentation' [ 0 6 16]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'logging' [ 0]
'base::internal::IsValueInRangeForNumericType<int, int>' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'base::internal::IsCompileTimeConstant<float>' [ 0 6 16]
'gfx::ToCeiledVector2d' [ 0 5]
'gfx::Vector2d::x' [ 0 5 15]
'gfx::Vector2d::y' [ 0 5 15]
'std::__1::max<double, std::__1::__less<double, double> >' [ 0 5 10]
'base::internal::ClampSub<int, int>' [ 0 6 16]
'gfx::Point::operator-=' [ 0 5 12]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::operator<<const int &, const int &, const int &, const int &>' [ 0 5 10]
'gfx::SizeF' [ 0 5]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'gfx::Matrix3F::set_column' [ 0 5 15]
'gfx::ToCeiledSize' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'gfx::RectF::Union' [ 0 5 12]
'base::internal::UnderlyingType<base::internal::ClampedNumeric<int> >' [ 0 6 16]
'gfx::Vector2d::Length' [ 0 5 15]
'gfx::Rect::SharesEdgeWith' [ 0 5 11]
'gfx::Insets::Insets' [ 0 5 13]
'gfx::ConvertPointToDIP' [ 0 5]
'gfx::RectF::Intersects' [ 0 5 12]
'gfx::Rect::bottom' [ 0 5 11]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'gfx::Size::SetSize' [ 0 5 11]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 69]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const int &, const int &>::__tuple_impl<0, 1, const int &, const int &, const int &, const int &>' [ 0 5 10 83]
'std::__1::true_type' [ 0 5 10]
'gfx::PointF::operator-=' [ 0 5 13]
'gfx::UnionBoxes' [ 0 5]
'std::__1::false_type' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'unsigned char' [ 0]
'gfx::ScaleRect' [ 0 5]
'base::internal::ClampedAddOp<int, int, void>::Do<int>' [ 0 6 16 46]
'__va_list_tag' [ 0]
'base::internal::SaturateFastOp<int, float, void>::Do' [ 0 6 16 50]
'logging::CheckOpResult::message' [ 0 9 24]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'acos' [ 0]
'std::__1::__less<double, double>::operator()' [ 0 5 10 34]
'std::__1::allocator<void>' [ 0 5 10]
'gfx::ToCeiledInt' [ 0 5]
'(anonymous namespace)::Determinant3x3<const float>' [ 0 23]
'gfx::RectF::size' [ 0 5 12]
'gfx::RectF::RectF' [ 0 5 12]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'gfx::Vector3dF::y' [ 0 5 16]
'gfx::Vector3dF::z' [ 0 5 16]
'unsigned short' [ 0]
'gfx::InsetsF::left' [ 0 5 14]
'gfx::Matrix3F::Inverse' [ 0 5 15]
'gfx::Matrix3F' [ 0 5]
'std::__1::max<float>' [ 0 5 10]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'std::__1::min<int>' [ 0 5 10]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'std::__1::__tuple_less<1>::operator()<std::__1::tuple<const float &, const float &>, std::__1::tuple<const float &, const float &> >' [ 0 5 10 27]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::numeric_limits<int>' [ 0 5 10]
'gfx::Insets::Scale' [ 0 5 13]
'std::__1::__tuple_leaf<1, const int &, false>::__tuple_leaf<const int &, void>' [ 0 5 10 47]
'logging::LogSeverity' [ 0 9]
'gfx::ConvertSizeToPixel' [ 0 5]
'gfx::Rect::SplitVertically' [ 0 5 11]
'base::internal::RangeCheck' [ 0 6 16]
'size_t' [ 0]
'gfx::BoxF' [ 0 5]
'gfx::MatrixProduct' [ 0 5]
'base::internal::CheckedMulOp<int, int, void>' [ 0 6 16]
'gfx::Quaternion::Lerp' [ 0 5 17]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'ptrdiff_t' [ 0]
'gfx::QuadF::operator+=' [ 0 5 12]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'gfx::DotProduct' [ 0 5]
'gfx::BoxF::Union' [ 0 5 11]
'gfx::Size::ToString' [ 0 5 11]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::__tuple_types<const int &, const int &>' [ 0 5 10]
'base::internal::ClampAdd<int, int>' [ 0 6 16]
'gfx::RectF::set_width' [ 0 5 12]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'base::internal::CheckOnFailure' [ 0 6 16]
'std::__1::min<float, std::__1::__less<float, float> >' [ 0 5 10]
'gfx::Vector2dF::Vector2dF' [ 0 5 16]
'gfx::Size::GetArea' [ 0 5 11]
'gfx::Quaternion::w' [ 0 5 17]
'gfx::Matrix3F::Ones' [ 0 5 15]
'gfx::Quaternion::y' [ 0 5 17]
'gfx::Quaternion::z' [ 0 5 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::tuple<const float &, const float &>' [ 0 5 10]
'int_least64_t' [ 0]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::max' [ 0 6 16 69]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::CheckedNumericState<int>' [ 0 6 16 75]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'gfx::PointF::ToString' [ 0 5 13]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const int &, const int &>' [ 0 5 10]
'gfx::Vector3dF' [ 0 5]
'gfx::Rect::Intersect' [ 0 5 11]
'std::__1::__tuple_leaf<1, const float &, false>::__tuple_leaf<const float &, void>' [ 0 5 10 49]
'logging::MakeCheckOpValueString<double>' [ 0 9]
'std::__1::distance<char *>' [ 0 5 10]
'gfx::Point3F' [ 0 5]
'gfx::Vector3dF::GetNormalized' [ 0 5 16]
'gfx::Point3F::SetPoint' [ 0 5 14]
'base::internal::CheckedNumeric<int>::Wrapper<int>::is_valid' [ 0 6 16 37 51]
'double' [ 0]
'std::__1::allocator<char>' [ 0 5 10]
'gfx::AdjustAlongAxis' [ 0 5]
'std::__1::__second_tag' [ 0 5 10]
'gfx::Point::SetToMin' [ 0 5 12]
'gfx::Size::set_height' [ 0 5 11]
'gfx::ToFlooredInt' [ 0 5]
'gfx::CubicBezier::CubicBezier' [ 0 5 18]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'base::internal::CheckedNumeric<int>::IsValid<int>' [ 0 6 16 37]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'gfx::Rect::operator-=' [ 0 5 11]
'gfx::Vector2d::IsZero' [ 0 5 15]
'gfx::operator==' [ 0 5]
'tm' [ 0]
'std::__1::remove_reference<const float &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'gfx::Rect::Contains' [ 0 5 11]
'gfx::Point::x' [ 0 5 12]
'gfx::Point::y' [ 0 5 12]
'gfx::SizeF::clamp' [ 0 5 12]
'std::__1::once_flag' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'int8_t' [ 0]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'gfx::operator/' [ 0 5]
'gfx::Vector2dF::Add' [ 0 5 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'(anonymous namespace)' [ 0]
'gfx::ScaleToRoundedPoint' [ 0 5]
'std::__1::__less<double, double>' [ 0 5 10]
'gfx::SizeF::SetToMax' [ 0 5 12]
'std::__1::chrono' [ 0 5 10]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'gfx::Vector2d::Add' [ 0 5 15]
'gfx::ToRoundedInt' [ 0 5]
'base::internal::ClampedNumeric<int>::ClampedNumeric<int>' [ 0 6 16 37]
'gfx::RectF::Inset' [ 0 5 12]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'logging::MakeCheckOpString<double, double>' [ 0 9]
'gfx::Point' [ 0 5]
'uint_least64_t' [ 0]
'gfx::ToCeiledPoint' [ 0 5]
'std::__1::__tuple_less<1>' [ 0 5 10]
'gfx::ScalePoint' [ 0 5]
'base::internal::ClampedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::__tuple_leaf<0, const int &, false>::__tuple_leaf<const int &, void>' [ 0 5 10 47]
'std::__1::make_unsigned<int>' [ 0 5 10]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::lowest' [ 0 6 16 69]
'gfx::Vector2dF::IsZero' [ 0 5 16]
'gfx::Vector2dF::Subtract' [ 0 5 16]
'std::__1::make_unsigned<unsigned int>' [ 0 5 10]
'gfx::BoxF::height' [ 0 5 11]
'gfx::Size::set_width' [ 0 5 11]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'wctrans_t' [ 0]
'std::__1::tie<const float, const float>' [ 0 5 10]
'gfx::Rect::right' [ 0 5 11]
'gfx::RectF::Subtract' [ 0 5 12]
'base::internal::CommonMin<int, int>' [ 0 6 16]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'gfx::IsExpressibleAsInt' [ 0 5]
'gfx::QuadF::operator-=' [ 0 5 12]
'gfx::Point::Point' [ 0 5 12]
'gfx::Rect::Rect' [ 0 5 11]
'div_t' [ 0]
'gfx::RectF::ManhattanInternalDistance::kEpsilon' [ 0 5 12 39]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'gfx::WithinEpsilon' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'gfx::Rect::ClampToCenteredSize' [ 0 5 11]
'std::__1::integral_constant<unsigned long, 2>' [ 0 5 10]
'gfx::Quaternion::Quaternion' [ 0 5 17]
'logging::CheckLEImpl<double, double>' [ 0 9]
'base' [ 0]
'gfx::Point::operator<' [ 0 5 12]
'std::__1::__pointer_type_imp' [ 0 5 10]
'gfx::SizeF::set_width' [ 0 5 12]
'gfx::QuadF' [ 0 5]
'base::internal::CommonMaxOrMin<int, int>' [ 0 6 16]
'gfx::ToEnclosingRect' [ 0 5]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 75]
'std::__1::literals' [ 0 5 10]
'std::__1::__tuple_leaf<1, const int &, false>::get' [ 0 5 10 47]
'base::internal::ClampedNumeric<int>::MathOp<ClampedAddOp, int, int>' [ 0 6 16 37]
'gfx::RectF::Intersect' [ 0 5 12]
'gfx::Matrix3F::get_row' [ 0 5 15]
'__uint64_t' [ 0]
'gfx::Vector3dF::Cross' [ 0 5 16]
'fpos_t' [ 0]
'gfx::Vector3dF::Vector3dF' [ 0 5 16]
'gfx::Quaternion::ToString' [ 0 5 17]
'std::__1::__tuple_less<2>' [ 0 5 10]
'std::__1::make_signed<unsigned int>' [ 0 5 10]
'gfx::Matrix3F::IsEqual' [ 0 5 15]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::get<0, const int &, const int &>' [ 0 5 10]
'base::internal::StrictNumeric<int>::StrictNumeric<int>' [ 0 6 16 36]
'std::__1::__tuple_leaf<0, const int &, false>' [ 0 5 10]
'gfx::CubicBezier::Solve' [ 0 5 18]
'base::internal::ClampedNumeric<int>' [ 0 6 16]
'gfx::BoxF::ExpandTo' [ 0 5 11]
'std::__1::get<1, const float &, const float &>' [ 0 5 10]
'gfx::Size::SetToMin' [ 0 5 11]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::__tuple_leaf<1, const float &, false>::get' [ 0 5 10 49]
'std::__1::__tuple_leaf<1, const float &, false>' [ 0 5 10]
'gfx::SizeF::height' [ 0 5 12]
'gfx::Rect::CenterPoint' [ 0 5 11]
'gfx::SizeF::GetArea' [ 0 5 12]
'(anonymous namespace)::kEpsilon' [ 0 23]
'uint_least32_t' [ 0]
'base::internal::ClampSub<int, base::internal::ClampedNumeric<int>>' [ 0 6 16]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'_G_fpos64_t' [ 0]
'base::internal::ClampedAddOp<int, int, void>' [ 0 6 16]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'gfx::Vector2d' [ 0 5]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'logging::CheckGEImpl<double, double>' [ 0 9]
'gfx::PointF' [ 0 5]
'gfx::Rect::SetByBounds' [ 0 5 11]
'long unsigned int' [ 0]
'gfx::Rect' [ 0 5]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'gfx::PointF::operator<' [ 0 5 13]
'gfx::PointF::SetToMin' [ 0 5 13]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'base::internal::CheckedMulOp<int, int, void>::Do<int>' [ 0 6 16 46]
'base::internal::ArithmeticOrUnderlyingEnum<float, false>' [ 0 6 16]
'gfx::ConvertInsetsToDIP' [ 0 5]
'std::__1::float_denorm_style' [ 0 5 10]
'ceil' [ 0]
'gfx::ConvertPointToPixel' [ 0 5]
'int_least16_t' [ 0]
'std::__1::tie<const int, const int>' [ 0 5 10]
'gfx::Rect::set_height' [ 0 5 11]
'std::__1::float_round_style' [ 0 5 10]
'logging::MakeCheckOpString<float, float>' [ 0 9]
'gfx::SubtractRects' [ 0 5]
'gfx::ConvertInsetsToPixel' [ 0 5]
'base::internal::ClampedSubOp<int, int, void>' [ 0 6 16]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'gfx::ScaleToFlooredPoint' [ 0 5]
'gfx::CubicBezier::GetDefaultEpsilon' [ 0 5 18]
'gfx::AxisTransform2d' [ 0 5]
'base::internal::ClampMathOp<ClampedSubOp, int, int>' [ 0 6 16]
'gfx::RectF::InsetsFrom' [ 0 5 12]
'gfx::CubicBezier::GetX1' [ 0 5 18]
'gfx::CubicBezier::GetX2' [ 0 5 18]
'gfx::RectF::CenterPoint' [ 0 5 12]
'logging::LOG_DCHECK' [ 0 9]
'gfx::Quaternion' [ 0 5]
'base::internal::CheckedSubOp<int, int, void>' [ 0 6 16]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'std::__1::__less<char *, char *>' [ 0 5 10]
'size_type' [ 0]
'base::internal::CommonMax<int, int>' [ 0 6 16]
'gfx::SizeF::width' [ 0 5 12]
'gfx::operator+' [ 0 5]
'base::internal::SafeUnsignedAbs<int>' [ 0 6 16]
'base::internal::CheckedAddOp<int, int, void>' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'base::internal::CheckedSubFastOp<int, int>::Do<int>' [ 0 6 16 44]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'gfx::SizeF::SizeF' [ 0 5 12]
'gfx::Rect::width' [ 0 5 11]
'bool' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'gfx::Rect::ApproximatelyEqual' [ 0 5 11]
'base::internal::ClampedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'gfx::BoxF::x' [ 0 5 11]
'gfx::BoxF::y' [ 0 5 11]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'base::internal::SaturateFastOp<int, int, void>' [ 0 6 16]
'gfx::Insets' [ 0 5]
'base::internal::CheckedNumeric<int>::ValueOrDie<int, base::internal::CheckOnFailure>' [ 0 6 16 37]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'gfx::Insets::left' [ 0 5 13]
'clock_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'gfx::SaturatedClampRange' [ 0 5]
'gfx::QuadF::operator=' [ 0 5 12]
'gfx::CrossProduct' [ 0 5]
'gfx::ScrollOffset::ToString' [ 0 5 19]
'gfx::CubicBezier::SlopeWithEpsilon' [ 0 5 18]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::min<double, std::__1::__less<double, double> >' [ 0 5 10]
'std::__1::get<1, const int &, const int &>' [ 0 5 10]
'gfx::Matrix3F::MatrixToArrayCoords' [ 0 5 15]
'gfx::RectF::ToString' [ 0 5 12]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'uint_least8_t' [ 0]
'gfx::AngleBetweenVectorsInDegrees' [ 0 5]
'gfx::CubicBezier::SampleCurveX' [ 0 5 18]
'gfx::CubicBezier::SampleCurveY' [ 0 5 18]
'gfx::CubicBezier::GetY1' [ 0 5 18]
'gfx::CubicBezier::GetY2' [ 0 5 18]
'gfx::Rect::AddWouldOverflow' [ 0 5 11]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'floor' [ 0]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'int64_t' [ 0]
'std::__1::min<double>' [ 0 5 10]
'logging::CheckOpResult' [ 0 9]
'long double' [ 0]
'gfx::Size::IsEmpty' [ 0 5 11]
'long long int' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::__tuple_leaf<1, const int &, false>' [ 0 5 10]
'gfx' [ 0]
'gfx::SizeF::IsEmpty' [ 0 5 12]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'gfx::Insets::right' [ 0 5 13]
'gfx::ToRoundedPoint' [ 0 5]
'std::__1::tuple<const float &, const float &>::tuple<true, false>' [ 0 5 10 47]
'std::__1::move<int &>' [ 0 5 10]
'gfx::BoxF::bottom' [ 0 5 11]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'std::__1::__tuple_less<2>::operator()<std::__1::tuple<const int &, const int &>, std::__1::tuple<const int &, const int &> >' [ 0 5 10 27]
'gfx::AxisTransform2d::ToString' [ 0 5 22]
'gfx::Rect::ManhattanDistanceToPoint' [ 0 5 11]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'base::internal::UnderlyingType<float>' [ 0 6 16]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gfx::operator!=' [ 0 5]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'gfx::RectF::width' [ 0 5 12]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'gfx::InsetsF::ToString' [ 0 5 14]
'int_fast8_t' [ 0]
'gfx::PointF::Scale' [ 0 5 13]
'__uint16_t' [ 0]
'gfx::RectF::Contains' [ 0 5 12]
'__vtbl_ptr_type' [ 0]
'gfx::SizeF::Enlarge' [ 0 5 12]
'gfx::ToFlooredPoint' [ 0 5]
'gfx::CubicBezier::SampleCurveDerivativeX' [ 0 5 18]
'gfx::Rect::InsetsFrom' [ 0 5 11]
'gfx::Vector2dF::ToString' [ 0 5 16]
'base::kPiDouble' [ 0 6]
'sqrt' [ 0]
'gfx::RectF' [ 0 5]
'std::__1' [ 0 5]
'float' [ 0]
'wint_t' [ 0]
'gfx::Matrix3F::IsNear' [ 0 5 15]
'ldiv_t' [ 0]
'gfx::Quaternion::Slerp' [ 0 5 17]
'gfx::kBezierEpsilon' [ 0 5]
'gfx::RectF::bottom' [ 0 5 12]
'gfx::Point3F::ToString' [ 0 5 14]
'gfx::InsetsF::top' [ 0 5 14]
'gfx::Point3F::x' [ 0 5 14]
'gfx::Point3F::y' [ 0 5 14]
'gfx::Point3F::z' [ 0 5 14]
'gfx::ToFlooredVector2d' [ 0 5]
'base::internal::StrictNumeric<int>' [ 0 6 16]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'gfx::Matrix3F::Matrix3F' [ 0 5 15]
'std::__1::__tuple_types<const float &, const float &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'logging::MakeCheckOpValueString<float>' [ 0 9]
'gfx::Vector2dF::LengthSquared' [ 0 5 16]
'logging::LogMessage' [ 0 9]
'gfx::SizeF::SetSize' [ 0 5 12]
'gfx::ToNearestRect' [ 0 5]
'gfx::ScaleToFlooredSize' [ 0 5]
'int32_t' [ 0]
'va_list' [ 0]
'gfx::Rect::Subtract' [ 0 5 11]
'std::nullptr_t' [ 0 5]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'gfx::BoxF::width' [ 0 5 11]
'gfx::Rect::IsEmpty' [ 0 5 11]
'gfx::ScaleToCeiledPoint' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'gfx::PointF::operator+=' [ 0 5 13]
'gfx::Matrix3F::Identity' [ 0 5 15]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'gfx::RectF::operator+=' [ 0 5 12]
'gfx::RectF::ManhattanInternalDistance' [ 0 5 12]
'std::__1::__less<float, float>' [ 0 5 10]
'gfx::Quaternion::x' [ 0 5 17]
'signed char' [ 0]
'gfx::Vector2d::ToString' [ 0 5 15]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'uint8_t' [ 0]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'std::__1::__distance<char *>' [ 0 5 10]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, int>' [ 0 6 16]
'__gnuc_va_list' [ 0]
'gfx::Size::GetCheckedArea' [ 0 5 11]
'gfx::PointIsInTriangle' [ 0 5]
'uintmax_t' [ 0]
'gfx::Insets::ToString' [ 0 5 13]
'gfx::Rect::AdjustToFit' [ 0 5 11]
'std::__1::__tuple_leaf<0, const float &, false>::__tuple_leaf<const float &, void>' [ 0 5 10 49]
'gfx::ScaleVector3d' [ 0 5]
'gfx::ToRoundedVector2d' [ 0 5]
'gfx::Insets::top' [ 0 5 13]
'gfx::Vector3dF::Subtract' [ 0 5 16]
'gfx::Rect::height' [ 0 5 11]
'std::__1::operator<<const float &, const float &, const float &, const float &>' [ 0 5 10]
'gfx::InsetsF::right' [ 0 5 14]
'gfx::Vector3dF::x' [ 0 5 16]
'gfx::Vector3dF::Length' [ 0 5 16]
'gfx::Rect::Union' [ 0 5 11]
'gfx::CubicBezier' [ 0 5]
'std::__1::swap<float>' [ 0 5 10]
'std::__1::remove_reference<int &>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, int>' [ 0 6 16]
'logging::LogMessage::stream' [ 0 9 21]
'__int16_t' [ 0]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'base::internal::CheckedNumeric<int>' [ 0 6 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 218]
'std::__1::conditional<false, std::__1::tuple<const int &, const int &>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<float &>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'gfx::Vector2d::Subtract' [ 0 5 15]
'std::__1::enable_if<true, void>' [ 0 5 10]
'gfx::QuadF::Scale' [ 0 5 12]
'std::__1::__tuple_less<1>::operator()<std::__1::tuple<const int &, const int &>, std::__1::tuple<const int &, const int &> >' [ 0 5 10 27]
'gfx::BoxF::front' [ 0 5 11]
'gfx::Insets::Offset' [ 0 5 13]
'gfx::Rect::GetClampedValue' [ 0 5 11]
'std::__1::max<double>' [ 0 5 10]
'gfx::BoxF::depth' [ 0 5 11]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'gfx::QuadF::IsCounterClockwise' [ 0 5 12]
'short' [ 0]
'gfx::Matrix3F::set' [ 0 5 15]
'gfx::Matrix3F::Determinant' [ 0 5 15]
'gfx::Matrix3F::get_column' [ 0 5 15]
'gfx::ToEnclosedRect' [ 0 5]
'gfx::RadToDeg' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'base::internal::ClampMathOp<ClampedAddOp, int, int>' [ 0 6 16]
'base::internal::CheckedMulFastOp<int, int>' [ 0 6 16]
'int_fast64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'gfx::RectF::Offset' [ 0 5 12]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'int16_t' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'gfx::RectF::IsEmpty' [ 0 5 12]
'gfx::Rect::size' [ 0 5 11]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'gfx::BoxF::ToString' [ 0 5 11]
'std::__1::tuple<const int &, const int &>::tuple<true, false>' [ 0 5 10 43]
'wchar_t' [ 0]
'std::__1::string' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'gfx::RectF::x' [ 0 5 12]
'gfx::RectF::y' [ 0 5 12]
'uint_fast32_t' [ 0]
'logging::CheckLEImpl<float, float>' [ 0 9]
'gfx::Rect::x' [ 0 5 11]
'gfx::IsNearestRectWithinDistance' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'(anonymous namespace)::Determinant3x3<float>' [ 0 23]
'gfx::Point::SetToMax' [ 0 5 12]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'gfx::Size::Size' [ 0 5 11]
'gfx::RectF::SplitVertically' [ 0 5 12]
'gfx::SizeF::set_height' [ 0 5 12]
'gfx::BoxF::IsEmpty' [ 0 5 11]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'gfx::RectF::operator-=' [ 0 5 12]
'base::internal' [ 0 6]
'gfx::Rect::SetRect' [ 0 5 11]
'gfx::RectF::ManhattanDistanceToPoint' [ 0 5 12]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'base::internal::ConditionalNegate<unsigned int>' [ 0 6 16]
'gfx::RectF::height' [ 0 5 12]
'base::internal::CheckedAddOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'mbstate_t' [ 0]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::forward<const int &>' [ 0 5 10]
'std::__1::move<float &>' [ 0 5 10]
'gfx::Rect::ToString' [ 0 5 11]
'std::__1::min<float>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'base::internal::ClampedNumeric<int>::operator int<int>' [ 0 6 16 37]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'gfx::BoxF::origin' [ 0 5 11]
'__compar_fn_t' [ 0]
'uintptr_t' [ 0]
'gfx::Vector2dF::y' [ 0 5 16]
'gfx::RectF::right' [ 0 5 12]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'base::internal::CheckedNumeric<int>::operator*=<int>' [ 0 6 16 37]
'gfx::PointF::x' [ 0 5 13]
'gfx::PointF::y' [ 0 5 13]
'gfx::RectF::SharesEdgeWith' [ 0 5 12]
'gfx::CubicBezier::InitGradients' [ 0 5 18]
'base::internal::SaturateFastOp<int, float, void>' [ 0 6 16]
'unsigned int' [ 0]
'gfx::QuadF::Contains' [ 0 5 12]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'base::internal::SaturateFastOp<int, int, void>::Do' [ 0 6 16 48]
'int_fast32_t' [ 0]
'int_least8_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'gfx::Matrix3F::FromOuterProduct' [ 0 5 15]
'gfx::Point3F::Point3F' [ 0 5 14]
'gfx::Rect::ManhattanInternalDistance' [ 0 5 11]
'gfx::InsetsF::bottom' [ 0 5 14]
'gfx::Vector3dF::ToString' [ 0 5 16]
'uint64_t' [ 0]
'gfx::RectF::origin' [ 0 5 12]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::conditional<false, std::__1::tuple<const float &, const float &>, std::__1::__nat>' [ 0 5 10]
'int' [ 0]
'std::__1::max<char *>' [ 0 5 10]
'FILE' [ 0]
'gfx::Vector2d::Vector2d' [ 0 5 15]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'gfx::QuadF::IsRectilinear' [ 0 5 12]
'std::__1::locale' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'gfx::Matrix3F::Transpose' [ 0 5 15]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const float &, const float &>::__tuple_impl<0, 1, const float &, const float &, const float &, const float &>' [ 0 5 10 87]
'std::__1::remove_reference<const int &>' [ 0 5 10]
'__clock_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'gfx::ConvertSizeToDIP' [ 0 5]
'base::internal::CheckedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'gfx::ScaleVector2d' [ 0 5]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'gfx::Matrix3F::Trace' [ 0 5 15]
'base::internal::CheckedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::__libcpp_allocate' [ 0 5 10]
'gfx::CubicBezier::InitCoefficients' [ 0 5 18]
'base::internal::saturated_cast<int, SaturationDefaultLimits, int>' [ 0 6 16]
'gfx::Vector2dF' [ 0 5]
'gfx::Quaternion::Normalized' [ 0 5 17]
'std::__1::__tuple_less<2>::operator()<std::__1::tuple<const float &, const float &>, std::__1::tuple<const float &, const float &> >' [ 0 5 10 27]
'__int8_t' [ 0]
'gfx::Size::height' [ 0 5 11]
'lldiv_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'__uint32_t' [ 0]
'gfx::Rect::Inset' [ 0 5 11]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'__int64_t' [ 0]
'gfx::ScaleToCeiledSize' [ 0 5]
'gfx::Size::SetToMax' [ 0 5 11]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'base::internal::CheckedMulFastOp<int, int>::Do<int>' [ 0 6 16 44]
'base::internal::CheckedNumeric<int>::MathOp<CheckedMulOp, int>' [ 0 6 16 37]
'std::__1::__tuple_types<>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 209]
'gfx::ToRoundedSize' [ 0 5]
'gfx::CubicBezier::InitRange' [ 0 5 18]
'gfx::(anonymous namespace)' [ 0 5]
'gfx::ScaleSize' [ 0 5]
'__intmax_t' [ 0]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'base::internal::saturated_cast<int, SaturationDefaultLimits, float>' [ 0 6 16]
'gfx::InsetsF' [ 0 5]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'uint_fast16_t' [ 0]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 224]
'gfx::PointF::SetPoint' [ 0 5 13]
'uint32_t' [ 0]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'gfx::ConvertRectToPixel' [ 0 5]
'gfx::PointF::SetToMax' [ 0 5 13]
'int_fast16_t' [ 0]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'decltype(nullptr)' [ 0]
'gfx::Insets::bottom' [ 0 5 13]
'gfx::Size::width' [ 0 5 11]
'gfx::Vector2dF::x' [ 0 5 16]
'gfx::QuadF::ToString' [ 0 5 12]
'gfx::ToFlooredSize' [ 0 5]
'__time_t' [ 0]
'base::internal::StrictNumeric<int>::operator int<int, nullptr>' [ 0 6 16 36]
'base::internal::CheckedSubFastOp<int, int>' [ 0 6 16]
'gfx::(anonymous namespace)::kEpsilon' [ 0 5 28]
'gfx::ConvertRectToDIP' [ 0 5]
'gfx::BoundingRect' [ 0 5]
'gfx::SizeF::SetToMin' [ 0 5 12]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, float>' [ 0 6 16]
'gfx::BoxF::right' [ 0 5 11]
'gfx::Matrix3F::SolveEigenproblem' [ 0 5 15]
'base::internal::CheckedAddFastOp<int, int>' [ 0 6 16]
'gfx::Vector3dF::Add' [ 0 5 16]
'gfx::RectF::set_height' [ 0 5 12]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const float &, const float &>' [ 0 5 10]
'__mbstate_t' [ 0]
'time_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'gfx::Rect::origin' [ 0 5 11]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'gfx::RectF::operator<' [ 0 5 12]
'gfx::Rect::Intersects' [ 0 5 11]
'gfx::Vector2dF::Length' [ 0 5 16]
'std::__1::__tuple_indices<0, 1>' [ 0 5 10]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'gfx::Matrix3F::~Matrix3F' [ 0 5 15]
'gfx::Rect::y' [ 0 5 11]
'intmax_t' [ 0]
'gfx::ToFlooredRectDeprecated' [ 0 5]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'gfx::PointF::PointF' [ 0 5 13]
'wctype_t' [ 0]
'gfx::CubicBezier::SampleCurveDerivativeY' [ 0 5 18]
'gfx::BoxF::z' [ 0 5 11]
'abs' [ 0]
'__int32_t' [ 0]
'std::__1::__apply_cv<unsigned int, int, false, false>' [ 0 5 10]
'gfx::InsetsF::InsetsF' [ 0 5 14]
'base::internal::ClampedNumeric<int>::MathOp<ClampedSubOp, int, int>' [ 0 6 16 37]
'gfx::Vector2dF::Scale' [ 0 5 16]
'(anonymous namespace)::MatrixCoordinates' [ 0 23]
'gfx::Quaternion::Length' [ 0 5 17]
'base::internal::ClampMathOp<ClampedSubOp, int, base::internal::ClampedNumeric<int> >' [ 0 6 16]
'std::__1::__less<float, float>::operator()' [ 0 5 10 32]
'gfx::operator*' [ 0 5]
'std::__1::__tuple_leaf<0, const float &, false>' [ 0 5 10]
'gfx::operator-' [ 0 5]
'std::__1::max<int>' [ 0 5 10]
'gfx::Point::SetPoint' [ 0 5 12]
'std::__1::max<float, std::__1::__less<float, float> >' [ 0 5 10]
'gfx::Rect::Offset' [ 0 5 11]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'__uint8_t' [ 0]
'base::internal::strict_cast<int, int>' [ 0 6 16]
'char' [ 0]
'gfx::Matrix3F::Zeros' [ 0 5 15]
'gfx::RectF::ClampToCenteredSize' [ 0 5 12]
'long int' [ 0]
'base::internal::SaturationDefaultLimits<int>::NaN' [ 0 6 16 46]
'gfx::CubicBezier::SolveCurveX' [ 0 5 18]
'__FILE' [ 0]
'gfx::CubicBezier::Slope' [ 0 5 18]
'gfx::Vector3dF::LengthSquared' [ 0 5 16]
'gfx::Quaternion::operator+' [ 0 5 17]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'base::internal::IsCompileTimeConstant<int>' [ 0 6 16]
'logging::LogMessageVoidify' [ 0 9]
'uint_fast64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'uint16_t' [ 0]
'std::__1::forward<const float &>' [ 0 5 10]
'double_t' [ 0]
'gfx::Rect::operator<' [ 0 5 11]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<int>' [ 0 6 16 75]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 75]
'std::__1::addressof<char>' [ 0 5 10]
'gfx::IntersectRects' [ 0 5]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'base::internal::CheckedAddFastOp<int, int>::Do<int>' [ 0 6 16 44]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'base::internal::CheckedNumeric<int>::CheckedNumeric<int>' [ 0 6 16 37]
'std::__1::__less<int, int>' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std::__1::__apply_cv<unsigned int, unsigned int, false, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'gfx::Rect::operator+=' [ 0 5 11]
'gfx::RectF::AdjustToFit' [ 0 5 12]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'base::internal::ClampedNumeric<int>::MathOp<ClampedSubOp, int, base::internal::ClampedNumeric<int> >' [ 0 6 16 37]
'std::__1::streamoff' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::max<int, std::__1::__less<int, int> >' [ 0 5 10]
'std::__1::swap<int>' [ 0 5 10]
'gfx::Matrix3F::ToString' [ 0 5 15]
'gfx::CubicBezier::SolveWithEpsilon' [ 0 5 18]
'std::__1::get<0, const float &, const float &>' [ 0 5 10]
'gfx::SizeF::Scale' [ 0 5 12]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'gfx::UnionRects' [ 0 5]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const int &, false>::get' [ 0 5 10 47]
'gfx::Vector3dF::IsZero' [ 0 5 16]
'gfx::Vector2d::LengthSquared' [ 0 5 15]
'std::__1::ostream' [ 0 5 10]
'base::internal::ClampedNumeric<int>::Wrapper<base::internal::ClampedNumeric<int> >::value' [ 0 6 16 37 84]
'base::kPiFloat' [ 0 6]
'gfx::RectF::SetRect' [ 0 5 12]
'gfx::Point::operator+=' [ 0 5 12]
'std::__1::__tuple_leaf<0, const float &, false>::get' [ 0 5 10 49]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'gfx::SizeF::ToString' [ 0 5 12]
'gfx::RectF::IsExpressibleAsRect' [ 0 5 12]
'gfx::ScaleToRoundedSize' [ 0 5]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'gfx::ScrollOffset' [ 0 5]
'gfx::Size::Enlarge' [ 0 5 11]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::tuple<const int &, const int &>' [ 0 5 10]
'gfx::Point::ToString' [ 0 5 12]
