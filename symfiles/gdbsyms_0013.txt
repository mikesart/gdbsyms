'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 120]
'std::__1::allocator<gfx::AnimationContainerElement *>::allocate' [ 0 5 10 55]
'gfx::(anonymous namespace)::BlendColorComponents' [ 0 5 28]
'std::__1::remove_reference<const std::__1::allocator<gfx::MultiAnimation::Part> &>' [ 0 5 10]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::allocate' [ 0 5 10 77]
'std::__1::max<double, std::__1::__less<double, double> >' [ 0 5 10]
'base::internal::BindStateBase' [ 0 6 16]
'pthread_mutex_t' [ 0]
'gfx::AnimationContainer::Start' [ 0 5 25]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::__construct_at_end<std::__1::move_iterator<gfx::AnimationContainerElement **> >' [ 0 5 10 117]
'gfx::Animation::~Animation' [ 0 5 16]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'gfx::SlideAnimation::GetDuration' [ 0 5 21]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 69]
'base::internal::CommonMin<unsigned char, int>' [ 0 6 16]
'std::__1::true_type' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::allocate' [ 0 5 10 108]
'std::__1::false_type' [ 0 5 10]
'unsigned char' [ 0]
'__va_list_tag' [ 0]
'base::subtle::Atomic32' [ 0 6 14]
'gfx::Tween::RectValueBetween' [ 0 5 12]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'base::internal::ArithmeticOrUnderlyingEnum<double, false>' [ 0 6 16]
'std::__1::__less<double, double>::operator()' [ 0 5 10 34]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::remove_const<gfx::MultiAnimation::Part>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'gfx::LinearAnimation::AnimateToState' [ 0 5 22]
'std::__1::__temp_value<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__addr' [ 0 5 10 114]
'timeval' [ 0]
'std::__1::__atomic_base<unsigned int, false>::operator unsigned int' [ 0 5 10 46]
'std::__1::numeric_limits<int>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>::RunImpl<void (gfx::AnimationContainer::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > &, 0>::is_method' [ 0 6 16 159 301]
'gfx::AnimationContainer::Run' [ 0 5 25]
'logging::LogSeverity' [ 0 9]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::__wrap_iter<gfx::AnimationContainerElement **>' [ 0 5 10 64]
'size_t' [ 0]
'gfx::TotalTime' [ 0 5]
'gfx::AnimationContainer' [ 0 5]
'base::internal::CommonMax<unsigned char, int>' [ 0 6 16]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::make_unsigned<int>' [ 0 5 10]
'std::__1::allocator<gfx::AnimationContainerElement *>' [ 0 5 10]
'base::internal::saturated_cast<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::~vector' [ 0 5 10 108]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::KeyValueCompare::KeyValueCompare' [ 0 6 16 193 210]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'gfx::kDefaultDurationMs' [ 0 5]
'std::__1::__wrap_iter<gfx::AnimationContainerElement **>::__wrap_iter' [ 0 5 10 58]
'base::RepeatingCallback<void ()>::~RepeatingCallback' [ 0 6 34]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10 84]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, true>' [ 0 5 10]
'std::__1::__promote<double, int, void>' [ 0 5 10]
'base::internal::saturated_cast_impl<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'gfx::ThrobAnimation::ThrobAnimation' [ 0 5 21]
'std::__1::__pointer_type_imp::__pointer_type<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part>, true>' [ 0 5 10 30]
'logging::MakeCheckOpValueString<double>' [ 0 9]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, double>' [ 0 6 16]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::Impl::Impl' [ 0 6 16 193 199]
'gfx::AnimationContainerElement' [ 0 5]
'std::__1::allocator<char>' [ 0 5 10]
'logging' [ 0]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::__second_tag' [ 0 5 10]
'gfx::MultiAnimation::MultiAnimation' [ 0 5 21]
'gfx::ThrobAnimation::StartThrobbing' [ 0 5 21]
'gfx::Tween::ColorValueBetween' [ 0 5 12]
'std::__1::forward<const std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'U8CPU' [ 0]
'tm' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::nullptr_t' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *>, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::destroy<gfx::AnimationContainerElement *>' [ 0 5 10 84]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__alloc' [ 0 5 10 115]
'gfx::SizeF::clamp' [ 0 5 12]
'gfx::Animation::Animation' [ 0 5 16]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__destruct_at_end' [ 0 5 10 101]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'gfx::Animation' [ 0 5]
'uint_least64_t' [ 0]
'std::__1::allocator<gfx::AnimationContainerElement *>::construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10 55]
'SkScalar' [ 0]
'std::__1::move_iterator<gfx::AnimationContainerElement **>::base' [ 0 5 10 60]
'std::__1::remove_reference<const std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::__destruct_at_end' [ 0 5 10 117]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::lowest' [ 0 6 16 69]
'base::AsserterBase::~AsserterBase' [ 0 6 20]
'std::__1::make_unsigned<unsigned int>' [ 0 5 10]
'base::internal::UnderlyingType<double>' [ 0 6 16]
'std::__1::operator-<gfx::AnimationContainerElement *const *, gfx::AnimationContainerElement *const *>' [ 0 5 10]
'gfx::Point::Point' [ 0 5 12]
'gfx::Rect::Rect' [ 0 5 11]
'div_t' [ 0]
'std::__1::forward<void (gfx::AnimationContainer::*const &)()>' [ 0 5 10]
'std::__1::remove_const<gfx::AnimationContainerElement *>' [ 0 5 10]
'base::internal::UnretainedWrapper<gfx::AnimationContainer>::UnretainedWrapper' [ 0 6 16 60]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__annotate_shrink' [ 0 5 10 108]
'gfx::Animation::is_animating' [ 0 5 16]
'gfx::ThrobAnimation::Step' [ 0 5 21]
'gfx::Animation::ShouldRenderRichAnimation' [ 0 5 16]
'std::__1::__compressed_pair_elem<gfx::AnimationContainerElement **, 0, false>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, bool>::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, bool, false>' [ 0 5 10 80]
'base' [ 0]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::pair<base::TimeDelta, unsigned long>::pair<base::TimeDelta &, unsigned long &, false>' [ 0 5 10 48]
'base::SequenceChecker::SequenceChecker' [ 0 6 23]
'base::Timer::Start<gfx::AnimationContainer>' [ 0 6 13]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::deallocate' [ 0 5 10 77]
'__pthread_list_t' [ 0]
'std::__1::__wrap_iter<gfx::AnimationContainerElement **>::operator+=' [ 0 5 10 58]
'SkColorSetARGB' [ 0]
'fpos_t' [ 0]
'base::RepeatingTimer::RepeatingTimer' [ 0 6 22]
'std::__1::memory_order' [ 0 5 10]
'int_least16_t' [ 0]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::key_comp' [ 0 6 16 193]
'scoped_refptr<gfx::AnimationContainer>::Release' [ 0 40]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::erase' [ 0 6 16 193]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'__pthread_internal_list' [ 0]
'std::__1::forward<gfx::AnimationContainerElement *const &>' [ 0 5 10]
'base::TimeDelta::operator<' [ 0 6 17]
'gfx::SizeF::height' [ 0 5 12]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::max_size' [ 0 5 10 77]
'uint_least32_t' [ 0]
'scoped_refptr<gfx::AnimationContainer>::~scoped_refptr' [ 0 40]
'SkRect' [ 0]
'base::internal::SafeUnsignedAbs<unsigned char>' [ 0 6 16]
'std::__1::min<double, std::__1::__less<double, double> >' [ 0 5 10]
'long unsigned int' [ 0]
'base::internal::DstRangeRelationToSrcRangeImpl<int, double, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 225]
'base::TimeDelta::FromDouble' [ 0 6 17]
'base::TimeDelta::FromProduct' [ 0 6 17]
'std::__1::__advance<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'base::TimeDelta::operator>' [ 0 6 17]
'std::__1::forward<const std::__1::allocator<gfx::MultiAnimation::Part> &>' [ 0 5 10]
'std::__1::move<gfx::AnimationContainerElement *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *const &>' [ 0 5 10 84]
'std::__1::operator!=<gfx::AnimationContainerElement *const *>' [ 0 5 10]
'nextafter<double, int>' [ 0]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::float_round_style' [ 0 5 10]
'base::internal::saturated_cast<int, SaturationDefaultLimits, float>' [ 0 6 16]
'gfx::Animation::AnimationStarted' [ 0 5 16]
'gfx::MultiAnimation::SetStartTime' [ 0 5 21]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::cbegin' [ 0 6 16 193]
'std::__1::pointer_traits<gfx::MultiAnimation::Part *>' [ 0 5 10]
'gfx::(anonymous namespace)::FloatToColorByte' [ 0 5 28]
'base::TimeDelta::FromMicroseconds' [ 0 6 17]
'gfx::Animation::ScrollAnimationsEnabledBySystem' [ 0 5 16]
'logging::LOG_DCHECK' [ 0 9]
'gfx::SlideAnimation' [ 0 5]
'std::__1::__less<char *, char *>' [ 0 5 10]
'size_type' [ 0]
'std::__1::enable_if<true, void>' [ 0 5 10]
'base::internal::SafeUnsignedAbs<int>' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::iterator_traits<gfx::AnimationContainerElement *const *>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'gfx::Tween::ClampedFloatValueBetween' [ 0 5 12]
'std::__1::remove_reference<void (gfx::AnimationContainer::*&)()>' [ 0 5 10]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__end_cap' [ 0 5 10 115]
'gfx::SlideAnimation::GetSlideDuration' [ 0 5 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::AnimationContainerElement *> &, void>' [ 0 5 10 98]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::~flat_tree' [ 0 6 16 193]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'std::__1::__compressed_pair<gfx::MultiAnimation::Part *, std::__1::allocator<gfx::MultiAnimation::Part> >' [ 0 5 10]
'base::internal::CheckOnFailure' [ 0 6 16]
'gfx::Point::y' [ 0 5 12]
'base::internal::UnretainedWrapper<gfx::AnimationContainer>::get' [ 0 6 16 60]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::advance<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'base::Location' [ 0 6]
'gfx::ThrobAnimation::~ThrobAnimation' [ 0 5 21]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'gfx::SlideAnimation::GetCurrentValue' [ 0 5 21]
'std::__1::min<unsigned long>' [ 0 5 10]
'long double' [ 0]
'long long int' [ 0]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, true>' [ 0 5 10]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'std::__1::forward<std::__1::__wrap_iter<gfx::AnimationContainerElement **> &>' [ 0 5 10]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'gfx::Tween::FloatValueBetween' [ 0 5 12]
'std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::~vector' [ 0 5 10 94]
'base::internal::UnderlyingType<float>' [ 0 6 16]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>::RunImpl<void (gfx::AnimationContainer::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > &, 0>::is_weak_call' [ 0 6 16 159 301]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'logging::MakeCheckOpString<double, int>' [ 0 9]
'logging::LogMessage' [ 0 9]
'gfx::AnimationContainer::GetMinIntervalAndCount' [ 0 5 25]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__annotate_new' [ 0 5 10 108]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__construct_at_end<gfx::AnimationContainerElement **>' [ 0 5 10 108]
'std::__1::remove_reference<base::TimeDelta &>' [ 0 5 10]
'int_least8_t' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::begin' [ 0 5 10 108]
'std::__1::allocator<gfx::MultiAnimation::Part>::allocate' [ 0 5 10 48]
'std::__1::numeric_limits<unsigned char>' [ 0 5 10]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::streamoff' [ 0 5 10]
'float' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::data' [ 0 5 10 108]
'ldiv_t' [ 0]
'std::__1::forward<void (gfx::AnimationContainer::*&)()>' [ 0 5 10]
'std::__1::integer_sequence<unsigned long, 0>' [ 0 5 10]
'wctype_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::max_size' [ 0 5 10 84]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::max_size' [ 0 5 10 94]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::~__split_buffer' [ 0 5 10 117]
'base::DCheckAsserter::DCheckAsserter' [ 0 6 22]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::lowest' [ 0 6 16 70]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::end' [ 0 6 16 193]
'gfx::AnimationContainer::Stop' [ 0 5 25]
'gfx::Tween::TransformValueBetween' [ 0 5 12]
'base::TimeDelta::FromMilliseconds' [ 0 6 17]
'gfx::Tween::LinearIntValueBetween' [ 0 5 12]
'gfx::LinearAnimation::LinearAnimation' [ 0 5 22]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__swap_out_circular_buffer' [ 0 5 10 108]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> &, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, false>' [ 0 5 10 145]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'std::__1::__less<float, float>' [ 0 5 10]
'gfx::(anonymous namespace)' [ 0 5]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >' [ 0 5 10]
'uint8_t' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__move_range' [ 0 5 10 108]
'__gnuc_va_list' [ 0]
'base::internal::IsValueInRangeFastOp<unsigned char, int, void>' [ 0 6 16]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::__less<float, float>::operator()' [ 0 5 10 32]
'uint_fast64_t' [ 0]
'base::internal::FunctorTraits<void (gfx::AnimationContainer::*)(), void>::Invoke<void (gfx::AnimationContainer::*)(), gfx::AnimationContainer *>' [ 0 6 16 74]
'std::__1::distance<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'scoped_refptr<gfx::AnimationContainer>::get' [ 0 40]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::__construct_range_forward<gfx::MultiAnimation::Part>' [ 0 5 10 77]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'base::subtle::RefCountedBase::~RefCountedBase' [ 0 6 14 30]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, float>' [ 0 6 16]
'base::TimeDelta::operator==' [ 0 6 17]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::base' [ 0 5 10 64]
'std::__1::forward<const std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > &>' [ 0 5 10]
'gfx::SlideAnimation::IsShowing' [ 0 5 21]
'base::DefaultRefCountedTraits<gfx::AnimationContainer>::Destruct' [ 0 6 56]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'std::__1::forward<const base::internal::UnretainedWrapper<gfx::AnimationContainer> &>' [ 0 5 10]
'std::__1::make_signed<int>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, bool>' [ 0 5 10]
'timespec' [ 0]
'__pthread_mutex_s' [ 0]
'std::__1::min<double>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'std::__1::remove_reference<void (gfx::AnimationContainer::*const &)()>' [ 0 5 10]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::__wrap_iter' [ 0 5 10 64]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'std::__1::__libcpp_numeric_limits<unsigned char, true>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::lower_bound<gfx::AnimationContainerElement *>' [ 0 6 16 193]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'SkColorSetARGB::operator()' [ 0 16]
'base::SequenceChecker' [ 0 6]
'std::__1::move_backward<gfx::AnimationContainerElement **, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::get<0, base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'base::subtle::AdoptRefTag' [ 0 6 14]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, bool>::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **> &, bool, false>' [ 0 5 10 80]
'uint_fast32_t' [ 0]
'base::internal::ConditionalNegate<int>' [ 0 6 16]
'wctrans_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'SkMatrix' [ 0]
'gfx::ThrobAnimation::SetSlideDuration' [ 0 5 21]
'gfx::ThrobAnimation::ResetForSlide' [ 0 5 21]
'signed char' [ 0]
'std::__1::pointer_traits<gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::MultiAnimation::Part>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::MultiAnimation::Part> &, void>' [ 0 5 10 91]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::forward<gfx::AnimationContainer *>' [ 0 5 10]
'std::__1::__to_raw_pointer<gfx::MultiAnimation::Part>' [ 0 5 10]
'std::__1::min<float, std::__1::__less<float, float> >' [ 0 5 10]
'gfx::ToRoundedInt' [ 0 5]
'mbstate_t' [ 0]
'std::__1::forward<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::vector' [ 0 5 10 94]
'__compar_fn_t' [ 0]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned char, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'gfx::SlideAnimation::Reset' [ 0 5 21]
'gfx::SlideAnimation::AnimateToState' [ 0 5 21]
'std::__1::lower_bound<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, gfx::AnimationContainerElement *, base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::KeyValueCompare>' [ 0 5 10]
'std::__1::__const_pointer<gfx::MultiAnimation::Part, gfx::MultiAnimation::Part *, std::__1::allocator<gfx::MultiAnimation::Part>, true>' [ 0 5 10]
'std::__1::remove_reference<const base::internal::UnretainedWrapper<gfx::AnimationContainer> &>' [ 0 5 10]
'InvokeFuncStorage' [ 0]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::operator*' [ 0 5 10 64]
'base::time_internal::TimeBase<base::TimeTicks>::TimeBase' [ 0 6 21 48]
'std::__1::enable_if<true, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'std::__1::swap<gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'gfx::ThrobAnimation' [ 0 5]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 224]
'base::time_internal::TimeBase<base::TimeTicks>::operator-' [ 0 6 21 48]
'gfx::LinearAnimation::SetDuration' [ 0 5 22]
'int' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__annotate_delete' [ 0 5 10 108]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'std::__1::__unwrap_iter<gfx::AnimationContainerElement **>' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::destroy<gfx::MultiAnimation::Part>' [ 0 5 10 77]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'gfx::kDefaultThrobDurationMS' [ 0 5]
'std::__1::__pointer_type<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<void (AnimationContainer::*)()>::is_nullable, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *> &, 1, false>::__get' [ 0 5 10 101]
'gfx::Size::height' [ 0 5 11]
'uint_fast16_t' [ 0]
'std::__1::forward<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> &>' [ 0 5 10]
'pow<double, int>' [ 0]
'std::__1::__libcpp_allocate' [ 0 5 10]
'base::DefaultRefCountedTraits<gfx::AnimationContainer>' [ 0 6]
'gfx::Vector2dF' [ 0 5]
'SkNO_RETURN_HINT' [ 0]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'base::ThreadCollisionWarner::~ThreadCollisionWarner' [ 0 6 29]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >::~RefCounted' [ 0 6 100]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned char, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 234]
'pthread_t' [ 0]
'base::TimeDelta::operator=' [ 0 6 17]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10 84]
'std::__1::__tuple_types<>' [ 0 5 10]
'std::__1::allocator<gfx::MultiAnimation::Part>::deallocate' [ 0 5 10 48]
'__int8_t' [ 0]
'std::__1::__temp_value<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::~__temp_value' [ 0 5 10 114]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::capacity' [ 0 5 10 117]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::__max_size' [ 0 5 10 77]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::end' [ 0 5 10 108]
'gfx::AnimationContainer::AnimationContainer' [ 0 5 25]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::select_on_container_copy_construction' [ 0 5 10 84]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'gfx::Animation::GetTimerInterval' [ 0 5 16]
'gfx::Animation::rich_animation_rendering_mode_' [ 0 5 16]
'base::internal::Unwrap<const base::internal::UnretainedWrapper<gfx::AnimationContainer> &>' [ 0 6 16]
'decltype(nullptr)' [ 0]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'std::__1::move_iterator<gfx::AnimationContainerElement **>::operator*' [ 0 5 10 60]
'gfx::Size::width' [ 0 5 11]
'std::__1::make_unsigned<unsigned char>' [ 0 5 10]
'std::__1::conditional<true, gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> &>' [ 0 5 10]
'std::__1::forward<base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'std::__1::__wrap_iter<gfx::AnimationContainerElement **>::operator*' [ 0 5 10 58]
'base::internal::CommonMax<int, unsigned char>' [ 0 6 16]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *> &, 1, false>' [ 0 5 10]
'std::__1::operator!=<gfx::AnimationContainerElement **, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__construct_at_end<gfx::MultiAnimation::Part *>' [ 0 5 10 94]
'base::internal::SaturateFastOp<int, float, void>' [ 0 6 16]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'gfx::MultiAnimation::GetPart' [ 0 5 21]
'SkPoint' [ 0]
'__mbstate_t' [ 0]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__wrap_iter<gfx::AnimationContainerElement **>' [ 0 5 10]
'gfx::ThrobAnimation::Hide' [ 0 5 21]
'std::__1::__promote_imp<double, int, void, true>' [ 0 5 10]
'unsigned int' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'ceil' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::empty' [ 0 5 10 108]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'SkIRect' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'__intmax_t' [ 0]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::as_const' [ 0 6 16 193]
'std::__1::__compressed_pair<gfx::MultiAnimation::Part *, std::__1::allocator<gfx::MultiAnimation::Part> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::MultiAnimation::Part> &>' [ 0 5 10 107]
'logging::CheckGEImpl<double, int>' [ 0 9]
'base::subtle::RefCountedBase::RefCountedBase' [ 0 6 14 30]
'gfx::SlideAnimation::SetSlideDuration' [ 0 5 21]
'std::__1::iterator_traits<gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::capacity' [ 0 5 10 115]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'gfx::Point' [ 0 5]
'__uint8_t' [ 0]
'std::__1::allocator<gfx::AnimationContainerElement *>::deallocate' [ 0 5 10 55]
'gfx::Animation::set_delegate' [ 0 5 16]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >::AddRef' [ 0 6 100]
'base::TimeDelta::Max' [ 0 6 17]
'gfx::SlideAnimation::SetDampeningValue' [ 0 5 21]
'std::__1::make_pair<base::TimeDelta &, unsigned long &>' [ 0 5 10]
'__FILE' [ 0]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>::max' [ 0 6 16 77]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::data' [ 0 5 10 94]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::float_denorm_style' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::MultiAnimation::Part *>::__nat, gfx::MultiAnimation::Part>' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__make_iter' [ 0 5 10 108]
'std::__1::addressof<char>' [ 0 5 10]
'gfx::Animation::start_time' [ 0 5 16]
'gfx::LinearAnimation::SetCurrentValue' [ 0 5 22]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'gfx::Transform::Transform' [ 0 5 16]
'double' [ 0]
'uintmax_t' [ 0]
'base::TimeTicks' [ 0 6]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__end_cap' [ 0 5 10 101]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *const &>' [ 0 5 10 84]
'std::__1::__throw_length_error' [ 0 5 10]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'std::__1' [ 0 5]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::~__vector_base' [ 0 5 10 115]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'gfx::Tween::SizeValueBetween' [ 0 5 12]
'gfx::Tween::DoubleValueBetween' [ 0 5 12]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >::DeleteInternal<gfx::AnimationContainer>' [ 0 6 100]
'std::__1::ostream' [ 0 5 10]
'gfx::Tween::CalculateValue' [ 0 5 12]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::MultiAnimation::Part>, 1, true>' [ 0 5 10]
'gfx::LinearAnimation::AnimationStarted' [ 0 5 22]
'base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>::operator()' [ 0 6 16 75]
'std::__1::remove_reference<gfx::AnimationContainerElement *const &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'gfx::Rect::height' [ 0 5 11]
'bool' [ 0]
'__time_t' [ 0]
'gfx::AnimationContainer::last_tick_time' [ 0 5 25]
'std::__1::__compressed_pair_elem<gfx::MultiAnimation::Part *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 73]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::capacity' [ 0 5 10 101]
'gfx::Animation::AnimationStopped' [ 0 5 16]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'base::internal::DstRangeRelationToSrcRangeImpl<int, double, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::emplace_key_args<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *const &>' [ 0 6 16 193]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'gfx::LinearAnimation::GetCurrentValue' [ 0 5 22]
'std::__1::__apply_cv<unsigned char, unsigned char, false, false>' [ 0 5 10]
'gfx::Transform' [ 0 5]
'gfx::SizeF' [ 0 5]
'gfx::SlideAnimation::SlideAnimation' [ 0 5 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'gfx::Animation::CurrentValueBetween' [ 0 5 16]
'std::__1::move_iterator<gfx::AnimationContainerElement **>' [ 0 5 10]
'base::flat_set<gfx::AnimationContainerElement *>' [ 0 6]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >::RefCounted' [ 0 6 100]
'base::FlatContainerDupes' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>::Run' [ 0 6 16 159]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'base::internal::SaturateFastOp<int, double, void>' [ 0 6 16]
'base::internal::SaturationDefaultLimits<int>::NaN' [ 0 6 16 46]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::Adjust<int, nullptr>' [ 0 6 16 70]
'SkSize' [ 0]
'base::internal::SaturateFastOp<int, double, void>::Do' [ 0 6 16 51]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'gfx::AnimationContainer::~AnimationContainer' [ 0 5 25]
'logging::CheckOpResult::message' [ 0 9 24]
'base::internal::IsValueNegative<unsigned char, nullptr>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'base::RepeatingCallback<void ()>' [ 0 6]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__destruct_at_end' [ 0 5 10 115]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::size' [ 0 5 10 94]
'std::__1::remove_reference<gfx::AnimationContainer *&>' [ 0 5 10]
'unsigned short' [ 0]
'base::AtomicRefCount' [ 0 6]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'base::internal::IsCompileTimeConstant<int>' [ 0 6 16]
'gfx::ThrobAnimation::Reset' [ 0 5 21]
'char' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::select_on_container_copy_construction' [ 0 5 10 77]
'gfx::MultiAnimation' [ 0 5]
'base::internal::RangeCheck' [ 0 6 16]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::operator==<gfx::AnimationContainerElement *const *, gfx::AnimationContainerElement *const *>' [ 0 5 10]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::clear' [ 0 5 10 101]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::max_size' [ 0 5 10 108]
'SkIVector' [ 0]
'base::internal::SaturationDefaultLimits<unsigned char>' [ 0 6 16]
'gfx::Tween::IntValueBetween' [ 0 5 12]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::__atomic_base<unsigned int, false>::load' [ 0 5 10 46]
'SkMScalar' [ 0]
'base::internal::SaturateFastOp<unsigned char, int, void>::Do' [ 0 6 16 58]
'base::Unretained<gfx::AnimationContainer>' [ 0 6]
'scoped_refptr<gfx::AnimationContainer>::operator=' [ 0 40]
'std::__1::remove_reference<gfx::AnimationContainerElement **&>' [ 0 5 10]
'int_least64_t' [ 0]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>::max' [ 0 6 16 69]
'base::TimeTicks::TimeTicks' [ 0 6 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::operator-<gfx::AnimationContainerElement **, gfx::AnimationContainerElement **>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<unsigned char, SaturationDefaultLimits, int>' [ 0 6 16]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::erase<gfx::AnimationContainerElement *>' [ 0 6 16 193]
'scoped_refptr<gfx::AnimationContainer>::swap' [ 0 40]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>' [ 0 6 16]
'uint64_t' [ 0]
'gfx::(anonymous namespace)::TimeDeltaDivide' [ 0 5 28]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::move<gfx::AnimationContainerElement **, gfx::AnimationContainerElement **>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::Impl::~Impl' [ 0 6 16 193 199]
'scoped_refptr<gfx::AnimationContainer>' [ 0]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >' [ 0 5 10]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::find<gfx::AnimationContainerElement *>' [ 0 6 16 193]
'std::__1::__lazy_enable_if<true, std::__1::__promote<double, int, void> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::operator+=' [ 0 5 10 64]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::begin' [ 0 6 16 193]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::clear' [ 0 5 10 115]
'std::__1::allocator<gfx::AnimationContainerElement *>::construct<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *const &>' [ 0 5 10 55]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 6]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > >' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__recommend' [ 0 5 10 108]
'std::__1::once_flag' [ 0 5 10]
'base::internal::IsNull<void (gfx::AnimationContainer::*)()>' [ 0 6 16]
'std::__1::__apply_cv<unsigned int, unsigned int, false, false>' [ 0 5 10]
'SkMatrix44' [ 0]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::move<gfx::AnimationContainerElement **&>' [ 0 5 10]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::chrono' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'base::RepeatingTimer' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<bool>' [ 0 5 10]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::empty' [ 0 5 10 94]
'gfx::LinearAnimation::Step' [ 0 5 22]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::deallocate' [ 0 5 10 84]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::count<gfx::AnimationContainerElement *>' [ 0 6 16 193]
'base::ThreadCollisionWarner' [ 0 6]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::AnimationContainerElement **>::__nat, gfx::AnimationContainerElement *>' [ 0 5 10]
'SkColor' [ 0]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>::Run::num_bound_args' [ 0 6 16 159 164]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::equal_range<gfx::AnimationContainerElement *>' [ 0 6 16 193]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::capacity' [ 0 5 10 94]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'std::__1::__apply_cv<int, int, false, false>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::emplace_back<gfx::AnimationContainerElement *const &>' [ 0 5 10 117]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::unsafe_emplace<gfx::AnimationContainerElement *const &>' [ 0 6 16 193]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'std::__1::__size_type<std::__1::allocator<gfx::MultiAnimation::Part>, long, true>' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::vector' [ 0 5 10 108]
'base::internal::DstRangeRelationToSrcRangeImpl<int, float, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__alloc' [ 0 5 10 101]
'clock_t' [ 0]
'std::__1::literals' [ 0 5 10]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >::Release' [ 0 6 100]
'std::__1::forward<base::TimeDelta &>' [ 0 5 10]
'__uint64_t' [ 0]
'gfx::ToFlooredInt' [ 0 5]
'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10 121]
'FILE' [ 0]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::make_signed<unsigned int>' [ 0 5 10]
'base::internal::SaturateFastOp<int, float, void>::Do' [ 0 6 16 50]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::Impl::get_key_comp' [ 0 6 16 193 199]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'gfx::AnimationContainerElement::AnimationContainerElement' [ 0 5 32]
'gfx::LinearAnimation::AnimationStopped' [ 0 5 22]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >::BindState<void (gfx::AnimationContainer::*&)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 6 16 125]
'std::__1::operator!=<gfx::AnimationContainerElement *const *, gfx::AnimationContainerElement **>' [ 0 5 10]
'base::AsserterBase' [ 0 6]
'_G_fpos64_t' [ 0]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'gfx::Vector2d' [ 0 5]
'base::internal::NarrowingRange<int, float, SaturationDefaultLimits>' [ 0 6 16]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'base::internal::NarrowingRange<unsigned char, int, SaturationDefaultLimits>::Adjust<unsigned char, nullptr>' [ 0 6 16 77]
'std::__1::__compressed_pair_elem<gfx::AnimationContainerElement **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 79]
'gfx::Rect' [ 0 5]
'std::__1::__lower_bound<base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::KeyValueCompare &, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, gfx::AnimationContainerElement *>' [ 0 5 10]
'base::internal::IsValueInRangeFastOp<unsigned char, int, void>::Do' [ 0 6 16 64]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'base::internal::ArithmeticOrUnderlyingEnum<float, false>' [ 0 6 16]
'__syscall_slong_t' [ 0]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::flat_tree' [ 0 6 16 193]
'base::internal::IsCompileTimeConstant<double>' [ 0 6 16]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'base::internal::as_unsigned<int>' [ 0 6 16]
'std::__1::__move<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10]
'logging::CheckLEImpl<double, int>' [ 0 9]
'gfx::Animation::ShouldRenderRichAnimationImpl' [ 0 5 16]
'base::subtle::RefCountedBase::AddRefImpl' [ 0 6 14 30]
'base::internal::IsValueInRangeForNumericType<unsigned char, int>' [ 0 6 16]
'__uint32_t' [ 0]
'time_t' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::cbegin' [ 0 5 10 108]
'base::TimeDelta::FromMillisecondsD' [ 0 6 17]
'gfx::SizeF::SizeF' [ 0 5 12]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::__split_buffer' [ 0 5 10 117]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__construct_range_forward<gfx::AnimationContainerElement *>' [ 0 5 10 84]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'gfx::Animation::SetContainer' [ 0 5 16]
'std::__1::min<float>' [ 0 5 10]
'base::internal::SaturationDefaultLimits<unsigned char>::Underflow' [ 0 6 16 56]
'std::__1::__distance<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__construct_backward<gfx::AnimationContainerElement *>' [ 0 5 10 84]
'floor' [ 0]
'std::__1::__temp_value<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::get' [ 0 5 10 114]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'gfx::CalculateInterval' [ 0 5]
'uint_least8_t' [ 0]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<gfx::AnimationContainer> > >' [ 0 5 10]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::insert' [ 0 6 16 193]
'base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >::Destroy' [ 0 6 16 125]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> &, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> &, false>' [ 0 5 10 145]
'int64_t' [ 0]
'std::__1::__wrap_iter<gfx::AnimationContainerElement **>::base' [ 0 5 10 58]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'gfx' [ 0]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<gfx::AnimationContainerElement *>, gfx::AnimationContainerElement **, true>' [ 0 5 10]
'gfx::Animation::delegate' [ 0 5 16]
'std::__1::__temp_value<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__temp_value<gfx::AnimationContainerElement *const &>' [ 0 5 10 114]
'std::__1::__const_void_pointer<gfx::MultiAnimation::Part *, std::__1::allocator<gfx::MultiAnimation::Part>, false>' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> >::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> , false, false>' [ 0 5 10 78]
'base::internal::SaturationDefaultLimits<unsigned char>::Overflow' [ 0 6 16 56]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (gfx::AnimationContainer::*const &)(), gfx::AnimationContainer *>' [ 0 6 16 43]
'base::SequenceChecker::~SequenceChecker' [ 0 6 23]
'gfx::LinearAnimation' [ 0 5]
'base::time_internal::TimeBase<base::TimeTicks>::operator<=' [ 0 6 21 48]
'int_fast8_t' [ 0]
'std::__1::remove_reference<unsigned long &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::clear' [ 0 5 10 117]
'__uint16_t' [ 0]
'base::TimeDelta' [ 0 6]
'gfx::MultiAnimation::~MultiAnimation' [ 0 5 21]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'base::subtle::RefCountedBase::Release' [ 0 6 14 30]
'gfx::Animation::Start' [ 0 5 16]
'wint_t' [ 0]
'gfx::Animation::SetStartTime' [ 0 5 16]
'gfx::MultiAnimation::GetDefaultTimerInterval' [ 0 5 21]
'std::__1::remove_reference<base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'base::subtle::RefCountedBase' [ 0 6 14]
'gfx::SizeF::width' [ 0 5 12]
'gfx::LinearAnimation::ShouldSendCanceledFromStop' [ 0 5 22]
'std::__1::__pointer_type<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::KeyValueCompare::operator()<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 6 16 193 210]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::next<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'std::__1::forward<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, false>::store' [ 0 5 10 46]
'std::__1::remove_reference<gfx::AnimationContainerElement *&>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::atomic<int>' [ 0 5 10]
'int32_t' [ 0]
'std::__1::remove_reference<gfx::AnimationContainerElement *>' [ 0 5 10]
'std::__1::__apply_cv<unsigned int, int, false, false>' [ 0 5 10]
'short' [ 0]
'gfx::Size::Size' [ 0 5 11]
'base::internal::ConditionalNegate<unsigned int>' [ 0 6 16]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'gfx::Animation::container' [ 0 5 16]
'base::internal::Invoker<base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >, void ()>::RunImpl<void (gfx::AnimationContainer::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> > &, 0>' [ 0 6 16 159]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, std::__1::__wrap_iter<gfx::AnimationContainerElement **> >, std::__1::__nat>' [ 0 5 10]
'base::SequenceCheckerImpl' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'std::__1::aligned_storage<8, 8>' [ 0 5 10]
'std::__1::__vector_base<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__vector_base' [ 0 5 10 115]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>' [ 0 5 10]
'base::TimeDelta::Min' [ 0 6 17]
'gfx::Animation::timer_interval' [ 0 5 16]
'gfx::Rect::width' [ 0 5 11]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::empty' [ 0 6 16 193]
'std::__1::conditional<true, gfx::AnimationContainerElement *&&, gfx::AnimationContainerElement *&>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 6 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::advance<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'gfx::Point::x' [ 0 5 12]
'std::__1::forward<std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::__const_void_pointer<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *>, false>' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::erase' [ 0 5 10 108]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *> &, void>' [ 0 5 10 101]
'gfx::SlideAnimation::~SlideAnimation' [ 0 5 21]
'base::internal::IsCompileTimeConstant<float>' [ 0 6 16]
'base::time_internal::TimeBase<base::TimeTicks>::operator>=' [ 0 6 21 48]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::__end_cap' [ 0 5 10 117]
'std::__1::move_iterator<gfx::AnimationContainerElement **>::move_iterator' [ 0 5 10 60]
'std::__1::max<double>' [ 0 5 10]
'base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::allocate' [ 0 5 10 84]
'std::__1::remove_reference<gfx::AnimationContainer *>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::allocate' [ 0 5 10 94]
'int_fast64_t' [ 0]
'__intptr_t' [ 0]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::emplace<gfx::AnimationContainerElement *const &>' [ 0 5 10 108]
'gfx::LinearAnimation::kDefaultFrameRate' [ 0 5 22]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'int16_t' [ 0]
'__suseconds_t' [ 0]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, double>' [ 0 6 16]
'std::__1::enable_if<true, std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::next<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__destroy<gfx::AnimationContainerElement *>' [ 0 5 10 84]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::string' [ 0 5 10]
'std::__1::pair<base::TimeDelta, unsigned long>' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::PlatformThreadRef' [ 0 6]
'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> &>::second' [ 0 5 10 121]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'gfx::ThrobAnimation::Show' [ 0 5 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::__const_pointer<gfx::AnimationContainerElement *, gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *>, true>' [ 0 5 10]
'base::internal' [ 0 6]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::size' [ 0 5 10 108]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::~__vector_base' [ 0 5 10 101]
'std::__1::index_sequence<0UL>' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::capacity' [ 0 5 10 108]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'SkISize' [ 0]
'base::subtle::RefCountedBase::AddRef' [ 0 6 14 30]
'gfx::SlideAnimation::Hide' [ 0 5 21]
'int8_t' [ 0]
'base::time_internal' [ 0 6]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'std::__1::allocator_traits<std::__1::allocator<gfx::MultiAnimation::Part> >::__destroy<gfx::MultiAnimation::Part>' [ 0 5 10 77]
'uintptr_t' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'SkIPoint' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'scoped_refptr<gfx::AnimationContainer>::operator->' [ 0 40]
'int_fast32_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'base::Lock' [ 0 6]
'wchar_t' [ 0]
'base::internal::SaturateFastOp<unsigned char, int, void>' [ 0 6 16]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'base::RefCounted<gfx::AnimationContainer, base::DefaultRefCountedTraits<gfx::AnimationContainer> >' [ 0 6]
'base::RepeatingCallback<void ()>::RepeatingCallback' [ 0 6 34]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<gfx::AnimationContainer>, false>::__tuple_leaf<base::internal::UnretainedWrapper<gfx::AnimationContainer>, void>' [ 0 5 10 94]
'std::__1::locale' [ 0 5 10]
'base::subtle' [ 0 6]
'std::__1::addressof<std::__1::aligned_storage<8, 8>::type>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__max_size' [ 0 5 10 84]
'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'__clock_t' [ 0]
'std::__1::remove_reference<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::__distance<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'base::internal::CommonMaxOrMin<unsigned char, int>' [ 0 6 16]
'std::__1::move_iterator<gfx::AnimationContainerElement **>::operator++' [ 0 5 10 60]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::AnimationContainerElement *>, 1, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<gfx::AnimationContainerElement *>, long, true>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10]
'std::__1::operator-<gfx::AnimationContainerElement *const *, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::vector<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >::__destruct_at_end' [ 0 5 10 108]
'base::Time' [ 0 6]
'double_t' [ 0]
'scoped_refptr<gfx::AnimationContainer>::AddRef' [ 0 40]
'__int64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::remove_reference<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'gfx::Tween' [ 0 5]
'base::internal::UnretainedWrapper<gfx::AnimationContainer>' [ 0 6 16]
'base::ThreadCollisionWarner::ThreadCollisionWarner' [ 0 6 29]
'base::internal::FunctorTraits<void (gfx::AnimationContainer::*)(), void>' [ 0 6 16]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::allocator<gfx::MultiAnimation::Part>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'base::internal::NarrowingRange<int, double, SaturationDefaultLimits>::max' [ 0 6 16 70]
'uint32_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'int_fast16_t' [ 0]
'gfx::LinearAnimation::End' [ 0 5 22]
'std::__1::__temp_value<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> >' [ 0 5 10]
'base::RepeatingTimer::~RepeatingTimer' [ 0 6 22]
'std::__1::operator==<gfx::AnimationContainerElement *const *, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::swap<gfx::AnimationContainer *>' [ 0 5 10]
'std::__1::__vector_base<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__vector_base' [ 0 5 10 101]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::forward<bool>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::AnimationContainerElement **, std::__1::allocator<gfx::AnimationContainerElement *> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::AnimationContainerElement *> &>' [ 0 5 10 120]
'gfx::AnimationContainer::SetMinTimerInterval' [ 0 5 25]
'std::__1::conditional<true, std::__1::pair<base::TimeDelta, unsigned long>, std::__1::__nat>' [ 0 5 10]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::KeyValueCompare::extract_if_value_type' [ 0 6 16 193 210]
'std::__1::__less<double, double>' [ 0 5 10]
'gfx::MultiAnimation::Step' [ 0 5 21]
'gfx::SlideAnimation::Show' [ 0 5 21]
'std::__1::enable_if<true, std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'SkMatrix44::SkMatrix44' [ 0 12]
'__vtbl_ptr_type' [ 0]
'std::__1::__advance<std::__1::__wrap_iter<gfx::AnimationContainerElement *const *> >' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::forward<unsigned long &>' [ 0 5 10]
'std::__1::move<gfx::AnimationContainer *&>' [ 0 5 10]
'gfx::Rect::GetClampedValue' [ 0 5 11]
'gfx::Rect::x' [ 0 5 11]
'gfx::Rect::y' [ 0 5 11]
'intmax_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<gfx::AnimationContainerElement *> >::__construct_forward<gfx::AnimationContainerElement *>' [ 0 5 10 84]
'__int32_t' [ 0]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::__annotate_new' [ 0 5 10 94]
'std::__1::vector<gfx::MultiAnimation::Part, std::__1::allocator<gfx::MultiAnimation::Part> >::operator[]' [ 0 5 10 94]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >::const_cast_it' [ 0 6 16 193]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'gfx::Animation::Stop' [ 0 5 16]
'std::__1::__to_raw_pointer<gfx::AnimationContainerElement *>' [ 0 5 10]
'std::__1::operator==<gfx::AnimationContainerElement **, gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::operator!=<gfx::AnimationContainerElement **>' [ 0 5 10]
'std::__1::less<void>' [ 0 5 10]
'gfx::AnimationContainerElement::~AnimationContainerElement' [ 0 5 32]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<gfx::AnimationContainer> >::__tuple_impl<0, base::internal::UnretainedWrapper<gfx::AnimationContainer> , base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 5 10 115]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<gfx::AnimationContainer> >::Unwrap' [ 0 6 85]
'gfx::Rect::AddWouldOverflow' [ 0 5 11]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, float>' [ 0 6 16]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::__wrap_iter<gfx::AnimationContainerElement *const *>::operator++' [ 0 5 10 64]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<gfx::AnimationContainerElement **> &>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, std::__1::__wrap_iter<gfx::AnimationContainerElement **> >::pair<std::__1::__wrap_iter<gfx::AnimationContainerElement **>, std::__1::__wrap_iter<gfx::AnimationContainerElement **>, false>' [ 0 5 10 133]
'std::__1::__compressed_pair_elem<gfx::MultiAnimation::Part *, 0, false>' [ 0 5 10]
'logging::CheckOpResult' [ 0 9]
'gfx::LinearAnimation::~LinearAnimation' [ 0 5 22]
'uint16_t' [ 0]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'long int' [ 0]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<gfx::AnimationContainer> >, std::__1::__nat>' [ 0 5 10]
'gfx::MultiAnimation::GetCurrentValue' [ 0 5 21]
'std::__1::less<void>::operator()<gfx::AnimationContainerElement *const &, gfx::AnimationContainerElement *const &>' [ 0 5 10 22]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'SkVector' [ 0]
'base::internal::saturated_cast<int, SaturationDefaultLimits, double>' [ 0 6 16]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'scoped_refptr<gfx::AnimationContainer>::scoped_refptr' [ 0 40]
'std::__1::__move_backward<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *>' [ 0 5 10]
'va_list' [ 0]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'std::__1::__split_buffer<gfx::AnimationContainerElement *, std::__1::allocator<gfx::AnimationContainerElement *> &>::__alloc' [ 0 5 10 117]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<gfx::AnimationContainer>, false>' [ 0 5 10]
'base::internal::BindState<void (gfx::AnimationContainer::*)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >::~BindState' [ 0 6 16 125]
'std::__1::forward<gfx::AnimationContainerElement *>' [ 0 5 10]
'gfx::kDefaultTimerInterval' [ 0 5]
'base::BindRepeating<void (gfx::AnimationContainer::*&)(), base::internal::UnretainedWrapper<gfx::AnimationContainer> >' [ 0 6]
'gfx::Animation::ShouldSendCanceledFromStop' [ 0 5 16]
'base::internal::flat_tree<gfx::AnimationContainerElement *, gfx::AnimationContainerElement *, base::internal::GetKeyFromValueIdentity<gfx::AnimationContainerElement *>, std::__1::less<void> >' [ 0 6 16]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'__int16_t' [ 0]
'base::AsserterBase::AsserterBase' [ 0 6 20]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'std::__1::distance<std::__1::__wrap_iter<gfx::AnimationContainerElement **> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::char_traits<char>' [ 0 5 10]
