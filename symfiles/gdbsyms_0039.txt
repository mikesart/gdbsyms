'std::__1::__compressed_pair<crypto::Encryptor::Counter *, std::__1::default_delete<crypto::Encryptor::Counter> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st>, false>' [ 0 5 10 30]
'crypto::Encryptor' [ 0 8]
'std::__1::remove_reference<std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> > &>' [ 0 5 10]
'std::__1::make_unique<crypto::(anonymous namespace)::SecureHashSHA256, const crypto::(anonymous namespace)::SecureHashSHA256 &>' [ 0 5 10]
'AnnotateBarrierInit' [ 0]
'crypto::p224::Negate' [ 0 8 14]
'(anonymous namespace)' [ 0]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >' [ 0 5 10]
'std::__1::__wrap_iter<char *>' [ 0 5 10]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::unique_ptr<true, void>' [ 0 5 10 93]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::__compressed_pair_elem<crypto::SecureHash *, 0, false>::__compressed_pair_elem<crypto::(anonymous namespace)::SecureHashSHA256 *, void>' [ 0 5 10 66]
'crypto::SignatureVerifier::Reset' [ 0 8 27]
'pthread_mutex_t' [ 0]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::__end_cap' [ 0 5 10 79]
'crypto::ECSignatureCreatorImpl::~ECSignatureCreatorImpl' [ 0 8 32]
'base::ThreadCheckerImpl' [ 0 6]
'crypto::ScopedSECItem' [ 0 8]
'std::__1::__pointer_type<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10]
'bssl::internal::Deleter<evp_pkey_st>' [ 0 6 16]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'crypto::HMAC' [ 0 8]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SignatureCreator>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::SignatureCreator>, void>' [ 0 5 10 95]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10]
'std::__1::add_lvalue_reference<crypto::ECSignatureCreatorImpl>' [ 0 5 10]
'std::__1::default_delete<crypto::SignatureCreator>' [ 0 5 10]
'base::FilePath::empty' [ 0 6 16]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::unique_ptr' [ 0 5 10 101]
'PLArena' [ 0]
'logging::CheckEQImpl<unsigned int, unsigned long>' [ 0 9]
'bssl::internal::StackAllocated<env_md_ctx_st, int, &EVP_MD_CTX_init, &EVP_MD_CTX_cleanup>::get' [ 0 6 16 91]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector' [ 0 5 10 70]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'std::__1::__compressed_pair_elem<crypto::SymmetricKey *, 0, false>::__compressed_pair_elem<crypto::SymmetricKey *&, void>' [ 0 5 10 68]
'std::__1::__const_pointer<unsigned char, unsigned char *, std::__1::allocator<unsigned char>, true>' [ 0 5 10]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >::~unique_ptr' [ 0 5 10 70]
'std::__1::true_type' [ 0 5 10]
'std::__1::false_type' [ 0 5 10]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::~unique_ptr' [ 0 5 10 101]
'std::__1::remove_reference<crypto::ECPrivateKey *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10]
'unsigned char' [ 0]
'std::__1::unique_ptr<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >::unique_ptr<true, void>' [ 0 5 10 76]
'index_type' [ 0]
'__va_list_tag' [ 0]
'AnnotatePublishMemoryRange' [ 0]
'AnnotateCondVarWait' [ 0]
'intptr_t' [ 0]
'crypto::PRTimeToBaseTime' [ 0 8]
'crypto::Encryptor::Counter::GetLengthInBytes' [ 0 8 19 28]
'crypto::Aead::~Aead' [ 0 8 14]
'bssl::ScopedEVP_MD_CTX' [ 0 6]
'std::__1::allocator<void>' [ 0 5 10]
'crypto::(anonymous namespace)::SecureHashSHA256::Update' [ 0 8 31 49]
'std::__1::unique_ptr<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >::reset' [ 0 5 10 105]
'std::__1::forward<PLArenaPool *&>' [ 0 5 10]
'std::__1::__compressed_pair<evp_pkey_st *, bssl::internal::Deleter<evp_pkey_st> >::__compressed_pair<evp_pkey_st *, true>' [ 0 5 10 83]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'std::__1::forward<crypto::ECPrivateKey *>' [ 0 5 10]
'crypto::P224EncryptedKeyExchange::GetKey' [ 0 8 34]
'crypto::GenerateRSAKeyPairNSS' [ 0 8]
'PK11SlotInfo' [ 0]
'std::__1::__add_lvalue_reference_impl<SECItemStr, true>' [ 0 5 10]
'AnnotateThreadName' [ 0]
'base::HostToNet64' [ 0 6]
'std::__1::vector<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<CERTSubjectPublicKeyInfoStr *, 0, false>::__compressed_pair_elem<CERTSubjectPublicKeyInfoStr *&, void>' [ 0 5 10 75]
'base::ThreadChecker::ThreadChecker' [ 0 6 21]
'std::__1::__compressed_pair_elem<crypto::RSAPrivateKey *, 0, false>::__compressed_pair_elem<crypto::RSAPrivateKey *&, void>' [ 0 5 10 69]
'AnnotatePCQDestroy' [ 0]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >' [ 0 5 10]
'logging::LogSeverity' [ 0 9]
'size_t' [ 0]
'crypto::ImportNSSKeyFromPrivateKeyInfo' [ 0 8]
'SECItemType' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::assign' [ 0 5 10 70]
'base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSSInitSingleton>::New' [ 0 6 16 90]
'std::__1::__unique_if<crypto::(anonymous namespace)::SecureHashSHA256>' [ 0 5 10]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::length' [ 0 5 10 87]
'std::__1::remove_reference<rsa_st *&>' [ 0 5 10]
'crypto::(anonymous namespace)::PKCS11PasswordFunc' [ 0 8 31]
'crypto::SignatureVerifier::VerifyUpdate' [ 0 8 27]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::add_lvalue_reference<crypto::SignatureCreator>' [ 0 5 10]
'crypto::ECSignatureCreator::SetFactoryForTesting' [ 0 8 28]
'crypto::(anonymous namespace)::GetDefaultConfigDirectory' [ 0 8 31]
'std::__1::__size_type<std::__1::allocator<base::OnceCallback<void ()> >, long, true>' [ 0 5 10]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >' [ 0 5 10]
'crypto::ECSignatureCreatorImpl' [ 0 8]
'base::LazyInstance<crypto::(anonymous namespace)::NSSInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSSInitSingleton> >::Pointer' [ 0 6 160]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >::~unique_ptr' [ 0 5 10 89]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::swap' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned char *>::__nat, unsigned char>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::SymmetricKey *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'crypto::SignatureVerifier' [ 0 8]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::release' [ 0 5 10 95]
'bssl::UniquePtr<EVP_PKEY>' [ 0 6]
'logging::CheckGTImpl<unsigned long, unsigned long>' [ 0 9]
'bssl::internal::StackAllocated<cbb_st, void, &CBB_zero, &CBB_cleanup>::get' [ 0 6 16 71]
'crypto::(anonymous namespace)::g_nspr_singleton' [ 0 8 31]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'int_fast32_t' [ 0]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >::operator bool' [ 0 5 10 70]
'std::__1::__advance<const unsigned char *>' [ 0 5 10]
'SECKEYPublicKeyStr' [ 0]
'SECItem' [ 0]
'CK_OBJECT_HANDLE' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<base::OnceCallback<void ()> *, 0, false>' [ 0 5 10]
'crypto::ECPrivateKey::Copy' [ 0 8 22]
'logging::GetVlogLevel<29>' [ 0 9]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 77]
'(anonymous namespace)::kB' [ 0 23]
'std::__1::unique_ptr<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >::reset' [ 0 5 10 76]
'std::__1::__compressed_pair_elem<ec_key_st *, 0, false>::__compressed_pair_elem<ec_key_st *&, void>' [ 0 5 10 57]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::allocator<char>' [ 0 5 10]
'SECMODModuleList' [ 0]
'std::__1::__second_tag' [ 0 5 10]
'crypto::kSHA256HashLength' [ 0 8]
'(anonymous namespace)::kM' [ 0 23]
'(anonymous namespace)::kN' [ 0 23]
'std::__1::__pointer_type_imp::__pointer_type<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0>, false>' [ 0 5 10 30]
'(anonymous namespace)::kP' [ 0 23]
'base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSPRInitSingleton>' [ 0 6 16]
'std::__1::__compressed_pair<evp_pkey_st *, bssl::internal::Deleter<evp_pkey_st> >' [ 0 5 10]
'crypto::ECSignatureCreator::ECSignatureCreator' [ 0 8 28]
'crypto::(anonymous namespace)::OpenSSLErrorCallback' [ 0 8 31]
'std::__1::unique_ptr<PK11SlotInfoStr, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >' [ 0 5 10]
'crypto::ECSignatureCreatorImpl::Sign' [ 0 8 32]
'tm' [ 0]
'std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::nullptr_t' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<SECItemStr *, 0, false>::__compressed_pair_elem<SECItemStr *&, void>' [ 0 5 10 58]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >::unique_ptr<true, void>' [ 0 5 10 70]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::reset' [ 0 5 10 92]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'logging::MakeCheckOpValueString<crypto::P224EncryptedKeyExchange::State>' [ 0 9]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'SECMODListLock' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::~unique_ptr' [ 0 5 10 93]
'AnnotateRWLockCreate' [ 0]
'crypto::SignatureCreator::Create' [ 0 8 26]
'crypto::ECPrivateKey::ExportPrivateKey' [ 0 8 22]
'std::__1::__pointer_type_imp::__pointer_type<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey>, false>' [ 0 5 10 30]
'crypto::SignatureVerifier::VerifyFinal' [ 0 8 27]
'crypto::Encryptor::Counter::Counter' [ 0 8 19 28]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> &>::second' [ 0 5 10 84]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'std::__1::forward<char *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::(anonymous namespace)::PublicKeyInfoDeleter, 1, true>' [ 0 5 10]
'uint_least64_t' [ 0]
'std::__1::__vector_base<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> > >::__vector_base' [ 0 5 10 106]
'crypto::(anonymous namespace)::ScopedPublicKeyInfo' [ 0 8 31]
'std::__1::__compressed_pair<crypto::ECSignatureCreatorImpl *, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10]
'std::__1::__pointer_type<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>, void, void>' [ 0 5 10 89]
'std::__1::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >::unique_ptr<true, void>' [ 0 5 10 113]
'std::__1::__compressed_pair_elem<PK11SlotInfoStr *, 0, false>::__compressed_pair_elem<PK11SlotInfoStr *&, void>' [ 0 5 10 63]
'std::__1::__pointer_type_imp::__pointer_type<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey>, false>' [ 0 5 10 30]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 70]
'std::__1::__compressed_pair_elem<ecdsa_sig_st *, 0, false>' [ 0 5 10]
'std::__1::__fill_n<unsigned char *, unsigned long, unsigned char>' [ 0 5 10]
'std::__1::__compressed_pair_elem<rsa_st *, 0, false>::__compressed_pair_elem<rsa_st *&, void>' [ 0 5 10 54]
'std::__1::forward<std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 77]
'(anonymous namespace)::kZero63ModP' [ 0 23]
'std::__1::__compressed_pair<bignum_st *, bssl::internal::Deleter<bignum_st> >::__compressed_pair<bignum_st *&, true>' [ 0 5 10 79]
'std::__1::__add_lvalue_reference_impl<PK11SlotInfoStr, true>' [ 0 5 10]
'SECMODModuleID' [ 0]
'crypto::ECSignatureCreatorImpl::ECSignatureCreatorImpl' [ 0 8 32]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::begin' [ 0 5 10 87]
'div_t' [ 0]
'crypto::p224::FieldElement' [ 0 8 14]
'crypto::RSAPrivateKey::ExportPrivateKey' [ 0 8 23]
'std::__1::copy<unsigned char *, unsigned char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::ECSignatureCreator>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::ECSignatureCreatorImpl>, void>' [ 0 5 10 97]
'SECMODModuleStr' [ 0]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::reset' [ 0 5 10 74]
'AnnotateExpectRace' [ 0]
'base' [ 0]
'bssl::internal::Deleter<rsa_st>::operator()' [ 0 6 16 33]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::__compressed_pair_elem<SECKEYPrivateKeyStr *, 0, false>' [ 0 5 10]
'crypto::SignatureVerifier::VerifyContext::VerifyContext' [ 0 8 27 42]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::ECPrivateKey>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::ECPrivateKey>, void>' [ 0 5 10 91]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'crypto::AutoSECMODListReadLock::~AutoSECMODListReadLock' [ 0 8 32]
'std::__1::remove_reference<bignum_st *&>' [ 0 5 10]
'fpos_t' [ 0]
'std::__1::forward<crypto::SignatureCreator *&>' [ 0 5 10]
'std::__1::pointer_traits<base::OnceCallback<void ()> *>' [ 0 5 10]
'std::__1::memory_order' [ 0 5 10]
'crypto::Aead::Aead' [ 0 8 14]
'SECKEYKEAParams' [ 0]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::operator=' [ 0 5 10 74]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 65]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__alloc' [ 0 5 10 77]
'base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSSInitSingleton>' [ 0 6 16]
'std::__1::__compressed_pair<crypto::ECSignatureCreatorImpl *, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >::__compressed_pair<crypto::ECSignatureCreatorImpl *&, true>' [ 0 5 10 122]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::__pointer_type_imp::__pointer_type<bignum_st, bssl::internal::Deleter<bignum_st>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SecureHash>, 1, true>' [ 0 5 10]
'__pthread_internal_list' [ 0]
'bssl::internal::DeleterImpl<bignum_st, void>::Free' [ 0 6 16 46]
'SECMODModule' [ 0]
'crypto::P224EncryptedKeyExchange::error' [ 0 8 34]
'bssl::internal::DeleterImpl<ecdsa_sig_st, void>' [ 0 6 16]
'uint_least32_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext>, false>' [ 0 5 10 30]
'crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1>::operator()' [ 0 8 57]
'bssl::internal::Deleter<ec_key_st>' [ 0 6 16]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::default_delete<unsigned char []>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<SECItemStr *, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::__compressed_pair<SECItemStr *&, true>' [ 0 5 10 101]
'std::__1::add_lvalue_reference<crypto::Encryptor::Counter>' [ 0 5 10]
'crypto::(anonymous namespace)::ToOpenSSLDigest' [ 0 8 31]
'crypto::SignatureVerifier::VerifyInit' [ 0 8 27]
'crypto::Encryptor::Counter::Increment' [ 0 8 19 28]
'std::__1::forward<crypto::ECPrivateKey *&>' [ 0 5 10]
'long unsigned int' [ 0]
'std::__1::__compressed_pair<evp_pkey_st *, bssl::internal::Deleter<evp_pkey_st> >::__compressed_pair<evp_pkey_st *&, true>' [ 0 5 10 83]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::unique_ptr<true, void>' [ 0 5 10 74]
'base::internal::LockImpl' [ 0 6 16]
'bssl::internal::DeleterImpl<evp_pkey_st, void>' [ 0 6 16]
'std::__1::forward<SECKEYPrivateKeyStr *&>' [ 0 5 10]
'SECKEYRSAPublicKeyStr' [ 0]
'crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot>' [ 0 8]
'crypto::HKDF::~HKDF' [ 0 8 14]
'std::__1::remove_reference<SECItemStr *>' [ 0 5 10]
'std::__1::__pointer_type<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10]
'crypto::RSAPrivateKey::ExportPublicKey' [ 0 8 23]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'logging::CheckLEImpl' [ 0 9]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >::~unique_ptr' [ 0 5 10 64]
'crypto::AutoSECMODListReadLock' [ 0 8]
'std::__1::forward<crypto::SecureHash *>' [ 0 5 10]
'std::__1::default_delete<crypto::SignatureVerifier::VerifyContext>::operator()' [ 0 5 10 68]
'NSSRWLock' [ 0]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >' [ 0 5 10]
'std::__1::swap<unsigned char *>' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10]
'SECKEYPQGParamsStr' [ 0]
'std::__1::__less<char *, char *>' [ 0 5 10]
'std::__1::fill_n<std::__1::__wrap_iter<char *>, long, char>' [ 0 5 10]
'size_type' [ 0]
'std::__1::enable_if<true, void>' [ 0 5 10]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::__compressed_pair<PK11SlotInfoStr *, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::RSAPrivateKey *, 0, false>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'crypto::p224::Point' [ 0 8 14]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'std::__1::__add_lvalue_reference_impl<crypto::SecureHash, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SECKEYPrivateKeyStr *, 0, false>::__compressed_pair_elem<SECKEYPrivateKeyStr *&, void>' [ 0 5 10 67]
'std::__1::__fill_n<std::__1::__wrap_iter<char *>, long, char>' [ 0 5 10]
'crypto::SecureHash::~SecureHash' [ 0 8 20]
'std::__1::default_delete<crypto::SecureHash>::operator()' [ 0 5 10 46]
'std::__1::forward<rsa_st *&>' [ 0 5 10]
'std::__1::add_lvalue_reference<unsigned char>' [ 0 5 10]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'crypto::Encryptor::Counter::Write' [ 0 8 19 28]
'std::__1::__compressed_pair_elem<crypto::SignatureCreator *, 0, false>::__compressed_pair_elem<crypto::SignatureCreator *, void>' [ 0 5 10 72]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::reset' [ 0 5 10 93]
'std::__1::__compressed_pair<crypto::Encryptor::Counter *, std::__1::default_delete<crypto::Encryptor::Counter> >::__compressed_pair<crypto::Encryptor::Counter *, true>' [ 0 5 10 114]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::reset' [ 0 5 10 133]
'base::LazyInstance<crypto::(anonymous namespace)::NSSInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSSInitSingleton> >' [ 0 6]
'std::__1::__compressed_pair_elem<evp_pkey_st *, 0, false>::__compressed_pair_elem<evp_pkey_st *&, void>' [ 0 5 10 59]
'(anonymous namespace)::AddJacobian' [ 0 23]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 70]
'std::__1::__compressed_pair<PLArenaPool *, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >' [ 0 5 10]
'std::__1::remove_reference<crypto::SymmetricKey *&>' [ 0 5 10]
'crypto::ScopedPLArenaPool' [ 0 8]
'std::__1::default_delete<crypto::Encryptor::Counter>::operator()' [ 0 5 10 54]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >::reset' [ 0 5 10 64]
'logging::LogMessageVoidify' [ 0 9]
'EVP_CIPHER_CTX' [ 0]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::unique_ptr<true, void>' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<bssl::internal::Deleter<ec_key_st>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::SecureHash *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SignatureVerifier::VerifyContext>, 1, true>' [ 0 5 10]
'std::__1::forward<SECKEYPrivateKeyStr *>' [ 0 5 10]
'logging::MakeCheckOpString<crypto::P224EncryptedKeyExchange::State, crypto::P224EncryptedKeyExchange::State>' [ 0 9]
'crypto::BaseTimeToPRTime' [ 0 8]
'crypto::EnsureNSSInit' [ 0 8]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SignatureVerifier::VerifyContext *, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::__compressed_pair<crypto::SignatureVerifier::VerifyContext *, true>' [ 0 5 10 142]
'logging::CheckOpResult' [ 0 9]
'long double' [ 0]
'env_md_ctx_st' [ 0]
'std::__1::__compressed_pair_elem<bssl::internal::Deleter<ecdsa_sig_st>, 1, true>' [ 0 5 10]
'RunningOnValgrind' [ 0]
'std::__1::add_lvalue_reference<crypto::ECSignatureCreator>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSPRInitSingleton>::New' [ 0 6 16 91]
'bssl::internal::Deleter<ecdsa_sig_st>::operator()' [ 0 6 16 39]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'std::__1::__pointer_type<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::front' [ 0 5 10 70]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::allocator<unsigned char> &>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::RSAPrivateKey *, std::__1::default_delete<crypto::RSAPrivateKey> >::__compressed_pair<crypto::RSAPrivateKey *, std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10 104]
'std::__1::add_lvalue_reference<crypto::SymmetricKey>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SymmetricKey>, 1, true>' [ 0 5 10]
'crypto::SymmetricKey::Import' [ 0 8 22]
'crypto::ECSignatureCreator::~ECSignatureCreator' [ 0 8 28]
'std::__1::allocator<unsigned char>::construct<unsigned char>' [ 0 5 10 36]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'ECPointEncoding' [ 0]
'std::__1::add_lvalue_reference<crypto::(anonymous namespace)::SecureHashSHA256>' [ 0 5 10]
'AnnotateRWLockReleased' [ 0]
'logging::LogMessage' [ 0 9]
'bssl::internal::DeleterImpl<bignum_st, void>' [ 0 6 16]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::SignatureCreator *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<bssl::internal::Deleter<rsa_st>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<PK11SlotInfoStr, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >' [ 0 5 10]
'int_least8_t' [ 0]
'std::__1::remove_const<unsigned char>' [ 0 5 10]
'std::__1::__convert_to_integral' [ 0 5 10]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::__add_lvalue_reference_impl<bignum_st, true>' [ 0 5 10]
'std::__1::__wrap_iter<char *>::operator*' [ 0 5 10 31]
'std::__1::__pointer_type<ec_key_st, bssl::internal::Deleter<ec_key_st> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::assign<unsigned char *>' [ 0 5 10 70]
'logging::CheckLTImpl<unsigned long, unsigned int>' [ 0 9]
'SECAlgorithmID' [ 0]
'SECKEYFortezzaPublicKey' [ 0]
'std::__1::atomic<long>' [ 0 5 10]
'ldiv_t' [ 0]
'std::__1::__compressed_pair<crypto::SecureHash *, std::__1::default_delete<crypto::SecureHash> >' [ 0 5 10]
'crypto::SignatureCreator' [ 0 8]
'wctype_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey>, false>' [ 0 5 10 30]
'std::__1::conditional<false, std::__1::pointer_traits<base::OnceCallback<void ()> *>::__nat, base::OnceCallback<void ()> >' [ 0 5 10]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::~unique_ptr' [ 0 5 10 92]
'std::__1::default_delete<crypto::ECPrivateKey>::operator()' [ 0 5 10 48]
'cbs_st' [ 0]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >::unique_ptr<true, void>' [ 0 5 10 64]
'bssl::internal::Deleter<ecdsa_sig_st>' [ 0 6 16]
'std::__1::move<std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> > &>' [ 0 5 10]
'crypto::Encryptor::~Encryptor' [ 0 8 19]
'std::__1::__unwrap_iter<unsigned char *>' [ 0 5 10]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::__compressed_pair<ec_key_st *, bssl::internal::Deleter<ec_key_st> >::__compressed_pair<ec_key_st *&, true>' [ 0 5 10 79]
'PK11RSAGenParams' [ 0]
'(anonymous namespace)::Contract' [ 0 23]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >' [ 0 5 10]
'base::BasePathKey' [ 0 6]
'std::__1::__compressed_pair_elem<bignum_st *, 0, false>::__compressed_pair_elem<bignum_st *&, void>' [ 0 5 10 57]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SymmetricKey>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::SymmetricKey>, void>' [ 0 5 10 91]
'base::subtle::Acquire_Load' [ 0 6 14]
'SECKEYPublicKey' [ 0]
'std::__1::default_delete<crypto::SignatureVerifier::VerifyContext>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >::unique_ptr<true, void>' [ 0 5 10 147]
'std::__1::enable_if<true, unsigned char *>' [ 0 5 10]
'DSA' [ 0]
'std::__1::__compressed_pair_elem<crypto::ECSignatureCreator *, 0, false>::__compressed_pair_elem<crypto::ECSignatureCreatorImpl *, void>' [ 0 5 10 74]
'uint8_t' [ 0]
'crypto::ScopedOpenSSLSafeSizeBuffer<32>::~ScopedOpenSSLSafeSizeBuffer' [ 0 8 41]
'crypto::RSAPrivateKey::RSAPrivateKey' [ 0 8 23]
'base::internal::BindStateBase' [ 0 6 16]
'AnnotateBarrierDestroy' [ 0]
'__gnuc_va_list' [ 0]
'crypto::Encryptor::CryptCTR' [ 0 8 19]
'std::__1::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >::reset' [ 0 5 10 113]
'crypto::RSAPrivateKey::Copy' [ 0 8 23]
'std::__1::__add_lvalue_reference_impl<crypto::(anonymous namespace)::SecureHashSHA256, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<CERTSubjectPublicKeyInfoStr *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::unique_ptr' [ 0 5 10 95]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'uint_fast64_t' [ 0]
'std::__1::add_lvalue_reference<char>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'base::StringPiece' [ 0 6]
'crypto::ECPrivateKey::CreateFromEncryptedPrivateKeyInfo' [ 0 8 22]
'logging::CheckEQImpl<crypto::SymmetricKey::Algorithm, crypto::SymmetricKey::Algorithm>' [ 0 9]
'std::__1::remove_reference<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep &>' [ 0 5 10]
'std::__1::remove_reference<crypto::RSAPrivateKey *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char>' [ 0 5 10 65]
'int_fast8_t' [ 0]
'std::__1::forward<ec_key_st *&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<PK11SlotInfoStr, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot>, false>' [ 0 5 10 30]
'std::__1::__pointer_type<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> > >' [ 0 5 10]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::get' [ 0 5 10 92]
'EVP_AEAD_CTX' [ 0]
'std::__1::remove_reference<crypto::(anonymous namespace)::SecureHashSHA256 *&>' [ 0 5 10]
'std::__1::remove_reference<crypto::SignatureCreator *>' [ 0 5 10]
'bssl::internal::StackAllocated<env_md_ctx_st, int, &EVP_MD_CTX_init, &EVP_MD_CTX_cleanup>' [ 0 6 16]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::add_lvalue_reference<PK11SlotInfoStr>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::ECPrivateKey *, 0, false>::__compressed_pair_elem<crypto::ECPrivateKey *&, void>' [ 0 5 10 68]
'base::data<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 6]
'std::__1::__compressed_pair<base::OnceCallback<void ()> *, std::__1::allocator<base::OnceCallback<void ()> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 112]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'crypto::P224EncryptedKeyExchange::Init' [ 0 8 34]
'(anonymous namespace)::DoubleJacobian' [ 0 23]
'std::__1::allocator_traits<std::__1::allocator<base::OnceCallback<void ()> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 65]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >::get' [ 0 5 10 70]
'std::__1::__compressed_pair<crypto::RSAPrivateKey *, std::__1::default_delete<crypto::RSAPrivateKey> >::__compressed_pair<crypto::RSAPrivateKey *&, true>' [ 0 5 10 104]
'PRIntn' [ 0]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::__alloc' [ 0 5 10 79]
'std::__1::__compressed_pair_elem<crypto::Encryptor::Counter *, 0, false>::__compressed_pair_elem<crypto::Encryptor::Counter *, void>' [ 0 5 10 74]
'std::__1::move<unsigned char *&>' [ 0 5 10]
'logging::CheckEQImpl<unsigned long, unsigned int>' [ 0 9]
'crypto::ECPrivateKey::Create' [ 0 8 22]
'std::__1::__swap_allocator<std::__1::allocator<char> >' [ 0 5 10]
'__pthread_mutex_s' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::~vector' [ 0 5 10 70]
'std::__1::forward<PK11SlotInfoStr *&>' [ 0 5 10]
'std::__1::fill_n<unsigned char *, unsigned long, unsigned char>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<base::OnceCallback<void ()> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 75]
'std::__1::remove_reference<PK11SlotInfoStr *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'std::__1::remove_reference<crypto::ECSignatureCreatorImpl *&>' [ 0 5 10]
'SECKEYDHPublicKeyStr' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >' [ 0 5 10]
'AnnotateIgnoreWritesEnd' [ 0]
'std::__1::__compressed_pair<PLArenaPool *, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::__compressed_pair<PLArenaPool *&, true>' [ 0 5 10 101]
'std::__1::__compressed_pair<crypto::ECSignatureCreator *, std::__1::default_delete<crypto::ECSignatureCreator> >::__compressed_pair<crypto::ECSignatureCreatorImpl *, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10 114]
'(anonymous namespace)::LargeFieldElement' [ 0 23]
'AnnotateUnpublishMemoryRange' [ 0]
'EVP_MD' [ 0]
'base::subtle::AdoptRefTag' [ 0 6 14]
'crypto' [ 0]
'std::__1::__compressed_pair<SECKEYPrivateKeyStr *, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::__compressed_pair<SECKEYPrivateKeyStr *&, true>' [ 0 5 10 123]
'std::__1::remove_reference<crypto::SymmetricKey *>' [ 0 5 10]
'std::__1::remove_reference<evp_pkey_st *&>' [ 0 5 10]
'uint_fast32_t' [ 0]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::release' [ 0 5 10 93]
'crypto::(anonymous namespace)::SecureHashSHA256' [ 0 8 31]
'wctrans_t' [ 0]
'std::__1::remove_reference<CERTSubjectPublicKeyInfoStr *&>' [ 0 5 10]
'SECKEYECParams' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'PRBool' [ 0]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'crypto::RSAPrivateKey::key' [ 0 8 23]
'signed char' [ 0]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::unique_ptr<char *, true, void, void>' [ 0 5 10 67]
'base::LazyInstance<crypto::(anonymous namespace)::NSPRInitSingleton, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<crypto::(anonymous namespace)::NSPRInitSingleton> >' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'crypto::(anonymous namespace)' [ 0 8]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::reset' [ 0 5 10 101]
'std::__1::__compressed_pair<ecdsa_sig_st *, bssl::internal::Deleter<ecdsa_sig_st> >::__compressed_pair<ecdsa_sig_st *&, true>' [ 0 5 10 85]
'std::__1::add_lvalue_reference<evp_pkey_st>' [ 0 5 10]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >' [ 0 5 10]
'std::__1::forward<const crypto::(anonymous namespace)::SecureHashSHA256 &>' [ 0 5 10]
'std::__1::remove_reference<crypto::ECSignatureCreatorImpl *>' [ 0 5 10]
'mbstate_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'bssl::internal' [ 0 6]
'(anonymous namespace)::Square' [ 0 23]
'std::__1::default_delete<crypto::ECPrivateKey>' [ 0 5 10]
'__compar_fn_t' [ 0]
'std::__1::copy<const unsigned char *, unsigned char *>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SymmetricKey *, std::__1::default_delete<crypto::SymmetricKey> >::__compressed_pair<crypto::SymmetricKey *, std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10 102]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::operator[]' [ 0 5 10 70]
'crypto::p224::Point::SetFromString' [ 0 8 14 21]
'std::__1::__compressed_pair_elem<SECItemStr *, 0, false>::__compressed_pair_elem<SECItemStr *, void>' [ 0 5 10 58]
'std::__1::__pointer_type<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<crypto::SymmetricKey, true>' [ 0 5 10]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::unique_ptr' [ 0 5 10 93]
'bssl::UniquePtr<RSA>' [ 0 6]
'unsigned int' [ 0]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::operator bool' [ 0 5 10 104]
'PRThreadType' [ 0]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::~unique_ptr' [ 0 5 10 93]
'crypto::(anonymous namespace)::ScopedCipherCTX::~ScopedCipherCTX' [ 0 8 31 48]
'crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0>::operator()' [ 0 8 56]
'AnnotateHappensBefore' [ 0]
'crypto::SymmetricKey' [ 0 8]
'std::__1::__compressed_pair_elem<rsa_st *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::operator bool' [ 0 5 10 92]
'bssl::internal::Deleter<ec_key_st>::operator()' [ 0 6 16 36]
'bssl::internal::Deleter<rsa_st>' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'crypto::P224EncryptedKeyExchange::SetXForTesting' [ 0 8 34]
'int' [ 0]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'crypto::GetPersistentNSSKeySlot' [ 0 8]
'crypto::SignatureCreator::Update' [ 0 8 26]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::ECSignatureCreatorImpl *, 0, false>::__compressed_pair_elem<crypto::ECSignatureCreatorImpl *&, void>' [ 0 5 10 78]
'std::__1::forward<SECItemStr *&>' [ 0 5 10]
'crypto::(anonymous namespace)::GetInitialConfigDirectory' [ 0 8 31]
'EVP_AEAD' [ 0]
'std::__1::__compressed_pair<crypto::SignatureVerifier::VerifyContext *, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'std::__1::__compressed_pair<SECKEYPublicKeyStr *, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >' [ 0 5 10]
'std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>::operator()' [ 0 5 10 75]
'std::__1::__size_type<std::__1::allocator<unsigned char>, long, true>' [ 0 5 10]
'(anonymous namespace)::Reduce' [ 0 23]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::__pointer_type<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10]
'std::__1::__compressed_pair<SECKEYPrivateKeyStr *, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::operator->' [ 0 5 10 95]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::operator bool' [ 0 5 10 111]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::Encryptor::Counter>, 1, true>' [ 0 5 10]
'uint_fast16_t' [ 0]
'crypto::(anonymous namespace)::g_factory_' [ 0 8 31]
'std::__1::__compressed_pair_elem<SECKEYPrivateKeyStr *, 0, false>::__compressed_pair_elem<SECKEYPrivateKeyStr *, void>' [ 0 5 10 67]
'std::__1::unique_ptr<crypto::ECSignatureCreator, std::__1::default_delete<crypto::ECSignatureCreator> >' [ 0 5 10]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >' [ 0 5 10]
'crypto::(anonymous namespace)::NSSInitSingleton' [ 0 8 31]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::operator->' [ 0 5 10 133]
'std::__1::__compressed_pair<crypto::SecureHash *, std::__1::default_delete<crypto::SecureHash> >::__compressed_pair<crypto::(anonymous namespace)::SecureHashSHA256 *, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10 98]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'crypto::Aead::Open' [ 0 8 14]
'crypto::SymmetricKey::GenerateRandomKey' [ 0 8 22]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char> &, 1, false>::__compressed_pair_elem<std::__1::allocator<unsigned char> &, void>' [ 0 5 10 82]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::unique_ptr<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >::~unique_ptr' [ 0 5 10 76]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SignatureCreator>, 1, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 70]
'std::__1::__unique_if<crypto::ECSignatureCreatorImpl>' [ 0 5 10]
'AnnotateHappensAfter' [ 0]
'std::__1::forward<crypto::SymmetricKey *&>' [ 0 5 10]
'pthread_t' [ 0]
'crypto::AutoSECMODListReadLock::AutoSECMODListReadLock' [ 0 8 32]
'std::__1::__compressed_pair_elem<crypto::(anonymous namespace)::SecureHashSHA256 *, 0, false>::__compressed_pair_elem<crypto::(anonymous namespace)::SecureHashSHA256 *&, void>' [ 0 5 10 95]
'crypto::Encryptor::Init' [ 0 8 19]
'crypto::ECPrivateKey::CreateFromPrivateKeyInfo' [ 0 8 22]
'std::__1::__pointer_type<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >' [ 0 5 10]
'std::__1::add_lvalue_reference<ec_key_st>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >::unique_ptr<true, void>' [ 0 5 10 105]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'crypto::ECSignatureCreatorImpl::DecodeSignature' [ 0 8 32]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::reset' [ 0 5 10 95]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'base::ThreadRestrictions' [ 0 6]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >::get' [ 0 5 10 64]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_new' [ 0 5 10 70]
'__int8_t' [ 0]
'crypto::p224::ScalarMult' [ 0 8 14]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::unique_ptr<true, void>' [ 0 5 10 111]
'crypto::kSHA256Length' [ 0 8]
'crypto::SignatureVerifier::~SignatureVerifier' [ 0 8 27]
'decltype(nullptr)' [ 0]
'crypto::SignatureVerifier::VerifyContext::~VerifyContext' [ 0 8 27 42]
'std::__1::__distance<const unsigned char *>' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::reset' [ 0 5 10 93]
'std::__1::unique_ptr<PK11SlotInfoStr, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >::unique_ptr<true, void>' [ 0 5 10 95]
'bssl::internal::DeleterImpl<ec_key_st, void>::Free' [ 0 6 16 46]
'std::__1::forward<SECKEYPublicKeyStr *&>' [ 0 5 10]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::~unique_ptr' [ 0 5 10 74]
'bssl::internal::StackAllocated<env_md_ctx_st, int, &EVP_MD_CTX_init, &EVP_MD_CTX_cleanup>::~StackAllocated' [ 0 6 16 91]
'std::__1::__compressed_pair<PK11SlotInfoStr *, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >::__compressed_pair<PK11SlotInfoStr *, true>' [ 0 5 10 104]
'logging::CheckEQImpl<crypto::P224EncryptedKeyExchange::State, crypto::P224EncryptedKeyExchange::State>' [ 0 9]
'std::__1::atomic_int' [ 0 5 10]
'(anonymous namespace)::Subtract' [ 0 23]
'std::__1::make_unique<crypto::(anonymous namespace)::SecureHashSHA256>' [ 0 5 10]
'crypto::Encryptor::Counter::~Counter' [ 0 8 19 28]
'std::__1::forward<crypto::(anonymous namespace)::SecureHashSHA256 *&>' [ 0 5 10]
'__mbstate_t' [ 0]
'crypto::(anonymous namespace)::GetNSSErrorMessage' [ 0 8 31]
'running_on_valgrind' [ 0]
'timespec' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'crypto::ScopedOpenSSLSafeSizeBuffer<32>::ScopedOpenSSLSafeSizeBuffer' [ 0 8 41]
'std::__1::remove_reference<std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<bssl::internal::Deleter<evp_pkey_st>, 1, true>' [ 0 5 10]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<bssl::internal::Deleter<bignum_st>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<crypto::SecureHash *>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::swap' [ 0 5 10 70]
'std::__1::__pointer_type<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::__construct_at_end' [ 0 5 10 79]
'crypto::ECPrivateKey::~ECPrivateKey' [ 0 8 22]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::__const_void_pointer<base::OnceCallback<void ()> *, std::__1::allocator<base::OnceCallback<void ()> >, false>' [ 0 5 10]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >::reset' [ 0 5 10 70]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::clear' [ 0 5 10 79]
'crypto::Encryptor::Encrypt' [ 0 8 19]
'std::__1::__pointer_type_imp::__pointer_type<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator>, false>' [ 0 5 10 30]
'SECKEYKEAParamsStr' [ 0]
'SECKEYPrivateKey' [ 0]
'SECKEYDSAPublicKey' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<const unsigned char *, unsigned char *>' [ 0 5 10 65]
'std::__1::remove_reference<std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::get' [ 0 5 10 104]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::get' [ 0 5 10 111]
'SECKEYECPublicKey' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_shrink' [ 0 5 10 70]
'crypto::P224EncryptedKeyExchange::CalculateHash' [ 0 8 34]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'__uint8_t' [ 0]
'std::__1::iterator_traits<unsigned char *>' [ 0 5 10]
'crypto::(anonymous namespace)::ScopedCipherCTX' [ 0 8 31]
'base::Time::FromInternalValue' [ 0 6 12]
'cbb_st' [ 0]
'(anonymous namespace)::kZero31ModP' [ 0 23]
'std::__1::default_delete<char []>::operator()<char>' [ 0 5 10 35]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'__FILE' [ 0]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::unique_ptr<true, void>' [ 0 5 10 92]
'PRUword' [ 0]
'std::__1::__compressed_pair_elem<crypto::ECPrivateKey *, 0, false>::__compressed_pair_elem<crypto::ECPrivateKey *, void>' [ 0 5 10 68]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::~unique_ptr' [ 0 5 10 85]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__vector_base' [ 0 5 10 77]
'std::__1::add_lvalue_reference<SECItemStr>' [ 0 5 10]
'base::LazyInstanceTraitsBase<crypto::(anonymous namespace)::NSPRInitSingleton>' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<unsigned char *>' [ 0 5 10 70]
'std::__1::float_denorm_style' [ 0 5 10]
'AnnotateBarrierWaitAfter' [ 0]
'AnnotateIgnoreReadsBegin' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char>, 1, true>' [ 0 5 10]
'std::__1::distance<const unsigned char *>' [ 0 5 10]
'CK_BYTE' [ 0]
'base::Time::Time' [ 0 6 12]
'crypto::SecureHash::SecureHash' [ 0 8 20]
'std::__1::addressof<char>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SymmetricKey *, std::__1::default_delete<crypto::SymmetricKey> >::__compressed_pair<crypto::SymmetricKey *&, true>' [ 0 5 10 102]
'crypto::(anonymous namespace)::PublicKeyInfoDeleter' [ 0 8 31]
'std::__1::__compressed_pair<rsa_st *, bssl::internal::Deleter<rsa_st> >' [ 0 5 10]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'crypto::(anonymous namespace)::NSSInitSingleton::InitDefaultRootCerts' [ 0 8 31 49]
'std::__1::forward<crypto::SymmetricKey *>' [ 0 5 10]
'std::__1::__compressed_pair<bignum_st *, bssl::internal::Deleter<bignum_st> >' [ 0 5 10]
'std::__1::__pointer_type<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'double' [ 0]
'uintmax_t' [ 0]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >::__compressed_pair<unsigned char *&, true>' [ 0 5 10 91]
'crypto::ScopedSECKEYPrivateKey' [ 0 8]
'std::__1::__compressed_pair<crypto::ECPrivateKey *, std::__1::default_delete<crypto::ECPrivateKey> >::__compressed_pair<crypto::ECPrivateKey *, true>' [ 0 5 10 102]
'logging::CheckLEImpl<unsigned long, unsigned long>' [ 0 9]
'base::Location' [ 0 6]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'crypto::ScopedOpenSSLSafeSizeBuffer<64>::safe_buffer' [ 0 8 41]
'crypto::Aead' [ 0 8]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'PRInt32' [ 0]
'std::__1::__compressed_pair_elem<SECItemStr *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<char *&, void>' [ 0 5 10 52]
'crypto::ScopedOpenSSLSafeSizeBuffer<32>' [ 0 8]
'std::__1::ostream' [ 0 5 10]
'bssl::internal::DeleterImpl<evp_pkey_st, void>::Free' [ 0 6 16 48]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::RSAPrivateKey>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::RSAPrivateKey>, void>' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot>, 1, true>' [ 0 5 10]
'float' [ 0]
'crypto::SymmetricKey::key' [ 0 8 22]
'AnnotateEnableRaceDetection' [ 0]
'crypto::HMAC::Sign' [ 0 8 14]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'EVP_MD_CTX' [ 0]
'std::__1::__compressed_pair<ec_key_st *, bssl::internal::Deleter<ec_key_st> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 70]
'std::__1::allocator<unsigned char>::deallocate' [ 0 5 10 36]
'__time_t' [ 0]
'std::__1::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >::release' [ 0 5 10 147]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'crypto::ECPrivateKey::ExportPublicKey' [ 0 8 22]
'logging' [ 0]
'std::__1::__pointer_type<rsa_st, bssl::internal::Deleter<rsa_st> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::__pointer_type_imp::__pointer_type<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<crypto::RSAPrivateKey *, std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10]
'crypto::OpenSSLErrStackTracer::~OpenSSLErrStackTracer' [ 0 8 31]
'std::__1::fill<std::__1::__wrap_iter<char *>, char>' [ 0 5 10]
'std::__1::forward<const unsigned char &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10]
'PRLock' [ 0]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::__destruct_at_end' [ 0 5 10 79]
'bssl::internal::StackAllocated<cbb_st, void, &CBB_zero, &CBB_cleanup>::~StackAllocated' [ 0 6 16 71]
'std::__1::unique_ptr<ec_key_st, bssl::internal::Deleter<ec_key_st> >' [ 0 5 10]
'std::__1::advance<const unsigned char *>' [ 0 5 10]
'std::__1::forward<bignum_st *&>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'std::__1::__vector_base<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> > >' [ 0 5 10]
'crypto::ScopedOpenSSLSafeSizeBuffer<64>::~ScopedOpenSSLSafeSizeBuffer' [ 0 8 41]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::RSAPrivateKey>, 1, true>' [ 0 5 10]
'(anonymous namespace)::kBottom28Bits' [ 0 23]
'crypto::P224EncryptedKeyExchange::GetUnverifiedKey' [ 0 8 34]
'EVP_PKEY' [ 0]
'base::StringPiece16' [ 0 6]
'std::__1::remove_reference<crypto::(anonymous namespace)::SecureHashSHA256 *>' [ 0 5 10]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::~__split_buffer' [ 0 5 10 79]
'std::__1::remove_reference<evp_pkey_st *>' [ 0 5 10]
'base::Time' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::~unique_ptr' [ 0 5 10 67]
'(anonymous namespace)::Get224Bits' [ 0 23]
'std::__1::__pointer_type<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::get' [ 0 5 10 67]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::unique_ptr<true, void>' [ 0 5 10 93]
'crypto::p224::Point::ToString::zeros' [ 0 8 14 21 31]
'base::time_internal::TimeBase<base::Time>::TimeBase' [ 0 6 21 43]
'crypto::RandBytes' [ 0 8]
'PRInt64' [ 0]
'crypto::ECPrivateKey' [ 0 8]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::unique_ptr<unsigned char *, true, void, void>' [ 0 5 10 85]
'__pthread_list_t' [ 0]
'std::__1::default_delete<crypto::SignatureCreator>::operator()' [ 0 5 10 52]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::reserve' [ 0 5 10 70]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::get' [ 0 5 10 92]
'std::__1::__pointer_type<unsigned char, std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'logging::CheckOpResult::message' [ 0 9 24]
'crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0>' [ 0 8]
'PRTime' [ 0]
'std::__1::__compressed_pair_elem<crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey>, 1, true>' [ 0 5 10]
'base::Lock' [ 0 6]
'base::LazyInstance<crypto::(anonymous namespace)::NSPRInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSPRInitSingleton> >' [ 0 6]
'std::__1::__compressed_pair_elem<crypto::SignatureCreator *, 0, false>::__compressed_pair_elem<crypto::SignatureCreator *&, void>' [ 0 5 10 72]
'std::__1::add_lvalue_reference<bignum_st>' [ 0 5 10]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10]
'GetRunningOnValgrind' [ 0]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >' [ 0 5 10]
'crypto::Aead::NonceLength' [ 0 8 14]
'std::__1::__pointer_type<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>' [ 0 5 10]
'unsigned short' [ 0]
'bssl::internal::Deleter<evp_pkey_st>::operator()' [ 0 6 16 38]
'std::__1::__compressed_pair<SECItemStr *, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::__compressed_pair<SECItemStr *, true>' [ 0 5 10 101]
'crypto::(anonymous namespace)::GetCipherForKey' [ 0 8 31]
'base::AtomicRefCount' [ 0 6]
'crypto::HMAC::DigestLength' [ 0 8 14]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator[]' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::destroy<unsigned char>' [ 0 5 10 65]
'AnnotateBenignRace' [ 0]
'crypto::(anonymous namespace)::PublicKeyInfoDeleter::operator()' [ 0 8 31 53]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::release' [ 0 5 10 101]
'crypto::p224::ScalarBaseMult' [ 0 8 14]
'bssl::internal::SpanBase<const unsigned char>' [ 0 6 16]
'crypto::SymmetricKey::~SymmetricKey' [ 0 8 22]
'crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey>' [ 0 8]
'std::__1::move<std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> > &>' [ 0 5 10]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'std::__1::__compressed_pair_elem<crypto::SecureHash *, 0, false>::__compressed_pair_elem<crypto::SecureHash *, void>' [ 0 5 10 66]
'crypto::ScopedPK11Slot' [ 0 8]
'std::__1::forward<crypto::ECSignatureCreatorImpl *>' [ 0 5 10]
'crypto::HMAC::~HMAC' [ 0 8 14]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::reset' [ 0 5 10 67]
'AnnotateIgnoreSyncEnd' [ 0]
'std::__1::__pointer_type<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator+=' [ 0 5 10 87]
'SECKEYKEAPublicKeyStr' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::~unique_ptr' [ 0 5 10 95]
'std::__1::__compressed_pair_elem<crypto::SignatureVerifier::VerifyContext *, 0, false>::__compressed_pair_elem<crypto::SignatureVerifier::VerifyContext *, void>' [ 0 5 10 88]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::__pointer_type<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >' [ 0 5 10]
'std::__1::default_delete<crypto::ECSignatureCreator>' [ 0 5 10]
'crypto::ScopedOpenSSLSafeSizeBuffer<64>' [ 0 8]
'DH' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey>, false>' [ 0 5 10 30]
'std::__1::remove_reference<char *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<crypto::ECPrivateKey, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'crypto::Aead::Seal' [ 0 8 14]
'__uint64_t' [ 0]
'int_least64_t' [ 0]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<PK11SlotInfoStr *, 0, false>::__compressed_pair_elem<PK11SlotInfoStr *, void>' [ 0 5 10 63]
'std::__1::__compressed_pair<rsa_st *, bssl::internal::Deleter<rsa_st> >::__compressed_pair<rsa_st *&, true>' [ 0 5 10 73]
'std::__1::vector<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> > >::vector' [ 0 5 10 99]
'std::__1::__add_lvalue_reference_impl<crypto::RSAPrivateKey, true>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::ECPrivateKey *, std::__1::default_delete<crypto::ECPrivateKey> >::__compressed_pair<crypto::ECPrivateKey *&, true>' [ 0 5 10 102]
'__suseconds_t' [ 0]
'logging::LOG_ERROR' [ 0 9]
'std::__1::remove_reference<PLArenaPool *&>' [ 0 5 10]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::operator bool' [ 0 5 10 74]
'std::__1::__compressed_pair_elem<crypto::RSAPrivateKey *, 0, false>::__compressed_pair_elem<crypto::RSAPrivateKey *, void>' [ 0 5 10 69]
'CK_ULONG' [ 0]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__end_cap' [ 0 5 10 77]
'std::__1::forward<crypto::Encryptor::Counter *>' [ 0 5 10]
'crypto::ScopedSECKEYPublicKey' [ 0 8]
'std::__1::__compressed_pair_elem<char *, 0, false>' [ 0 5 10]
'_SECStatus' [ 0]
'std::__1::add_lvalue_reference<ecdsa_sig_st>' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECSignatureCreator, std::__1::default_delete<crypto::ECSignatureCreator> >::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl>, void, void>' [ 0 5 10 105]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >::unique_ptr<true, void>' [ 0 5 10 89]
'crypto::(anonymous namespace)::SecureHashSHA256::Finish' [ 0 8 31 49]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10]
'base::HostToNet32' [ 0 6]
'std::__1::__pointer_type_imp::__pointer_type<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey>, false>' [ 0 5 10 30]
'bssl' [ 0]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'SECMODModuleListStr' [ 0]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> &>::__compressed_pair<nullptr_t, std::__1::allocator<unsigned char> &>' [ 0 5 10 84]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'evp_pkey_st' [ 0]
'base::FilePath::clear' [ 0 6 16]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SignatureCreator *, std::__1::default_delete<crypto::SignatureCreator> >::__compressed_pair<crypto::SignatureCreator *&, true>' [ 0 5 10 110]
'std::__1::__add_lvalue_reference_impl<crypto::ECSignatureCreator, true>' [ 0 5 10]
'std::__1::once_flag' [ 0 5 10]
'int8_t' [ 0]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1>, false>' [ 0 5 10 30]
'std::__1::default_delete<crypto::SecureHash>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<crypto::ECSignatureCreator, std::__1::default_delete<crypto::ECSignatureCreator>, false>' [ 0 5 10 30]
'std::__1::chrono' [ 0 5 10]
'PK11RSAGenParamsStr' [ 0]
'bssl::internal::DeleterImpl<ecdsa_sig_st, void>::Free' [ 0 6 16 49]
'std::__1::default_delete<crypto::SymmetricKey>' [ 0 5 10]
'crypto::ECPrivateKey::ECPrivateKey' [ 0 8 22]
'std::__1::__compressed_pair_elem<evp_pkey_st *, 0, false>' [ 0 5 10]
'crypto::HMAC::VerifyTruncated' [ 0 8 14]
'std::__1::__to_raw_pointer<unsigned char>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::(anonymous namespace)::SecureHashSHA256 *, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10]
'logging::CheckNEImpl' [ 0 9]
'logging::CheckEQImpl' [ 0 9]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::__compressed_pair<crypto::SymmetricKey *, std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10]
'crypto::(anonymous namespace)::ScopedCipherCTX::get' [ 0 8 31 48]
'std::__1::__compressed_pair_elem<PLArenaPool *, 0, false>::__compressed_pair_elem<PLArenaPool *&, void>' [ 0 5 10 59]
'crypto::FindNSSKeyFromPublicKeyInfoInSlot' [ 0 8]
'std::__1::__add_lvalue_reference_impl<unsigned char, true>' [ 0 5 10]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'va_list' [ 0]
'std::__1::swap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep>' [ 0 5 10]
'base::time_internal::TimeBase<base::Time>::ToInternalValue' [ 0 6 21 43]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::operator[]' [ 0 5 10 67]
'std::__1::remove_reference<crypto::ECPrivateKey *>' [ 0 5 10]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'std::__1::allocator<unsigned char>::allocate' [ 0 5 10 36]
'base::OnceCallback<void ()>' [ 0 6]
'AnnotateCondVarSignal' [ 0]
'std::__1::default_delete<crypto::SymmetricKey>::operator()' [ 0 5 10 48]
'std::__1::__add_lvalue_reference_impl<char, true>' [ 0 5 10]
'bssl::internal::DeleterImpl<rsa_st, void>::Free' [ 0 6 16 43]
'std::__1::__wrap_iter<char *>::base' [ 0 5 10 31]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end' [ 0 5 10 70]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::ECSignatureCreator>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >::operator->' [ 0 5 10 105]
'base::ThreadChecker' [ 0 6]
'crypto::HMAC::HMAC' [ 0 8 14]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::allocator<unsigned char>, true>' [ 0 5 10 30]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::release' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<evp_pkey_st *, 0, false>::__compressed_pair_elem<evp_pkey_st *, void>' [ 0 5 10 59]
'std::__1::literals' [ 0 5 10]
'std::__1::default_delete<crypto::ECSignatureCreatorImpl>::operator()' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::ECSignatureCreatorImpl>, 1, true>' [ 0 5 10]
'std::__1::forward<crypto::SignatureCreator *>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'crypto::Encryptor::Crypt' [ 0 8 19]
'std::__1::__compressed_pair<SECKEYPublicKeyStr *, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::__compressed_pair<SECKEYPublicKeyStr *&, true>' [ 0 5 10 120]
'crypto::EnsureNSPRInit' [ 0 8]
'crypto::SHA256HashString' [ 0 8]
'std::__1::__compressed_pair_elem<crypto::Encryptor::Counter *, 0, false>' [ 0 5 10]
'crypto::Encryptor::SetCounter' [ 0 8 19]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::unique_ptr<true, void>' [ 0 5 10 101]
'crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey>::operator()' [ 0 8 68]
'std::__1::remove_reference<SECKEYPrivateKeyStr *>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'crypto::ECPrivateKey::ExportEncryptedPrivateKey' [ 0 8 22]
'crypto::SymmetricKey::DeriveKeyFromPassword' [ 0 8 22]
'std::__1::__pointer_type_imp::__pointer_type<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st>, false>' [ 0 5 10 30]
'bssl::internal::StackAllocated<env_md_ctx_st, int, &EVP_MD_CTX_init, &EVP_MD_CTX_cleanup>::StackAllocated' [ 0 6 16 91]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'logging::CheckEQImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 70]
'crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1>' [ 0 8]
'EVP_PKEY_CTX' [ 0]
'crypto::ECPrivateKey::ExportRawPublicKey' [ 0 8 22]
'std::__1::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >::release' [ 0 5 10 113]
'_G_fpos64_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 65]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'base::span<const unsigned char, 18446744073709551615>' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'AES_KEY' [ 0]
'intmax_t' [ 0]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::unique_ptr<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::reset' [ 0 5 10 114]
'CERTSubjectPublicKeyInfo' [ 0]
'crypto::SignatureCreator::~SignatureCreator' [ 0 8 26]
'std::__1::unique_ptr<crypto::SignatureCreator, std::__1::default_delete<crypto::SignatureCreator> >::operator->' [ 0 5 10 101]
'std::__1::__compressed_pair<crypto::SignatureCreator *, std::__1::default_delete<crypto::SignatureCreator> >::__compressed_pair<crypto::SignatureCreator *, true>' [ 0 5 10 110]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'ecdsa_sig_st' [ 0]
'EVP_PKEY_ASN1_METHOD' [ 0]
'std::__1::forward<std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >' [ 0 5 10]
'base::LazyInstance<crypto::(anonymous namespace)::NSSInitSingleton, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<crypto::(anonymous namespace)::NSSInitSingleton> >' [ 0 6]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >::__compressed_pair<char *&, true>' [ 0 5 10 73]
'__syscall_slong_t' [ 0]
'bssl::internal::DeleterImpl<ec_key_st, void>' [ 0 6 16]
'std::__1::forward<std::__1::allocator<unsigned char> &>' [ 0 5 10]
'int_least16_t' [ 0]
'crypto::p224' [ 0 8]
'base::span<const unsigned char, 18446744073709551615>::size' [ 0 6 55]
'crypto::SecureHash::Create' [ 0 8 20]
'bssl::internal::Deleter<bignum_st>' [ 0 6 16]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::reset' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<crypto::SignatureVerifier::VerifyContext *, 0, false>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'AnnotateIgnoreWritesBegin' [ 0]
'crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey>' [ 0 8]
'crypto::RSAPrivateKey::CreateFromPrivateKeyInfo' [ 0 8 23]
'std::__1::__add_lvalue_reference_impl<ec_key_st, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<PLArenaPool *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>' [ 0 5 10]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::reset' [ 0 5 10 92]
'sha256_state_st' [ 0]
'__uint32_t' [ 0]
'crypto::EnsureOpenSSLInit' [ 0 8]
'time_t' [ 0]
'base::span<const unsigned char, 18446744073709551615>::data' [ 0 6 55]
'crypto::FindNSSKeyFromPublicKeyInfo' [ 0 8]
'SECKEYPQGParams' [ 0]
'bool' [ 0]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >::get' [ 0 5 10 70]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::add_lvalue_reference<CERTSubjectPublicKeyInfoStr>' [ 0 5 10]
'crypto::(anonymous namespace)::NSPRInitSingleton::NSPRInitSingleton' [ 0 8 31 50]
'crypto::(anonymous namespace)::SecureHashSHA256::GetHashLength' [ 0 8 31 49]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'crypto::SignatureCreator::Final' [ 0 8 26]
'std::__1::remove_reference<SECKEYPrivateKeyStr *&>' [ 0 5 10]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'std::__1::add_lvalue_reference<SECKEYPrivateKeyStr>' [ 0 5 10]
'clock_t' [ 0]
'bssl::UniquePtr<ECDSA_SIG>' [ 0 6]
'(anonymous namespace)::Add' [ 0 23]
'crypto::OpenSSLErrStackTracer' [ 0 8]
'std::__1::__compressed_pair_elem<crypto::ECPrivateKey *, 0, false>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::size' [ 0 5 10 70]
'crypto::ScopedOpenSSLSafeSizeBuffer<64>::ScopedOpenSSLSafeSizeBuffer' [ 0 8 41]
'std::__1::unique_ptr<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >::operator->' [ 0 5 10 76]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>' [ 0 5 10]
'std::__1::remove_reference<SECItemStr *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SECKEYPublicKeyStr *, 0, false>' [ 0 5 10]
'crypto::Encryptor::Decrypt' [ 0 8 19]
'std::__1::add_lvalue_reference<crypto::ECPrivateKey>' [ 0 5 10]
'bssl::UniquePtr<BIGNUM>' [ 0 6]
'crypto::(anonymous namespace)::g_nss_singleton' [ 0 8 31]
'std::__1::remove_reference<crypto::Encryptor::Counter *>' [ 0 5 10]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::reset' [ 0 5 10 111]
'crypto::ECSignatureCreator::Create' [ 0 8 28]
'uint_least8_t' [ 0]
'ECDSA_SIG' [ 0]
'std::__1::__advance<unsigned char *>' [ 0 5 10]
'std::__1::locale' [ 0 5 10]
'std::__1::__const_pointer<base::OnceCallback<void ()>, base::OnceCallback<void ()> *, std::__1::allocator<base::OnceCallback<void ()> >, true>' [ 0 5 10]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::forward<PK11SlotInfoStr *>' [ 0 5 10]
'int64_t' [ 0]
'SECKEYDSAPublicKeyStr' [ 0]
'std::__1::unique_ptr<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >' [ 0 5 10]
'base::FilePath::value' [ 0 6 16]
'std::__1::forward<crypto::RSAPrivateKey *&>' [ 0 5 10]
'std::__1::unique_ptr<crypto::RSAPrivateKey, std::__1::default_delete<crypto::RSAPrivateKey> >::unique_ptr<true, void>' [ 0 5 10 95]
'base::NetToHost64' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'SECKEYRSAPublicKey' [ 0]
'std::__1::__compressed_pair_elem<ecdsa_sig_st *, 0, false>::__compressed_pair_elem<ecdsa_sig_st *&, void>' [ 0 5 10 60]
'std::__1::__pointer_type<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> > &>' [ 0 5 10]
'(anonymous namespace)::Mul' [ 0 23]
'logging::CheckGTImpl<unsigned long, unsigned int>' [ 0 9]
'crypto::SignatureCreator::SignatureCreator' [ 0 8 26]
'std::__1::__compressed_pair<crypto::ECPrivateKey *, std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::unique_ptr<crypto::Encryptor::Counter, std::__1::default_delete<crypto::Encryptor::Counter> >::~unique_ptr' [ 0 5 10 105]
'std::__1::__compressed_pair<crypto::SignatureCreator *, std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<ecdsa_sig_st *, bssl::internal::Deleter<ecdsa_sig_st> >' [ 0 5 10]
'crypto::HKDF' [ 0 8]
'std::__1::forward<crypto::(anonymous namespace)::SecureHashSHA256 *>' [ 0 5 10]
'std::__1::remove_reference<ecdsa_sig_st *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<CERTSubjectPublicKeyInfoStr, true>' [ 0 5 10]
'(anonymous namespace)::IsZero' [ 0 23]
'std::__1::__compressed_pair<CERTSubjectPublicKeyInfoStr *, crypto::(anonymous namespace)::PublicKeyInfoDeleter>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::ECSignatureCreator *, 0, false>' [ 0 5 10]
'std::__1::__copy<unsigned char, unsigned char>' [ 0 5 10]
'std::__1::add_lvalue_reference<crypto::SignatureVerifier::VerifyContext>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SECKEYPublicKeyStr *, 0, false>::__compressed_pair_elem<SECKEYPublicKeyStr *&, void>' [ 0 5 10 66]
'std::__1::pointer_traits<unsigned char *>' [ 0 5 10]
'std::__1::advance<unsigned char *>' [ 0 5 10]
'__uint16_t' [ 0]
'base::TimeDelta' [ 0 6]
'crypto::(anonymous namespace)::NSSInitSingleton::GetPersistentNSSKeySlot' [ 0 8 31 49]
'std::__1::__compressed_pair<crypto::SecureHash *, std::__1::default_delete<crypto::SecureHash> >::__compressed_pair<crypto::SecureHash *, true>' [ 0 5 10 98]
'bssl::UniquePtr<EC_KEY>' [ 0 6]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::reset' [ 0 5 10 85]
'std::__1' [ 0 5]
'base::LazyInstance<crypto::(anonymous namespace)::NSPRInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSPRInitSingleton> >::Get' [ 0 6 162]
'wint_t' [ 0]
'char' [ 0]
'std::__1::default_delete<crypto::RSAPrivateKey>' [ 0 5 10]
'std::__1::__pointer_type<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >' [ 0 5 10]
'std::__1::atomic<int>' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::operator->' [ 0 5 10 93]
'crypto::OpenSoftwareNSSDB' [ 0 8]
'std::__1::remove_reference<std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'aes_key_st' [ 0]
'PLArenaPool' [ 0]
'crypto::(anonymous namespace)::SecureHashSHA256::SecureHashSHA256' [ 0 8 31 49]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::assign<const unsigned char *>' [ 0 5 10 70]
'std::__1::__compressed_pair_elem<ec_key_st *, 0, false>' [ 0 5 10]
'int32_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::default_delete<char []>, false>' [ 0 5 10 30]
'std::__1::add_lvalue_reference<PLArenaPool>' [ 0 5 10]
'std::__1::__wrap_iter<char *>::operator++' [ 0 5 10 31]
'std::__1::__add_lvalue_reference_impl<evp_pkey_st, true>' [ 0 5 10]
'short' [ 0]
'CERTSubjectPublicKeyInfoStr' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'std::__1::default_delete<char []>' [ 0 5 10]
'SECKEYDHPublicKey' [ 0]
'base::ByteSwap' [ 0 6]
'std::__1::remove_reference<PK11SlotInfoStr *&>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<crypto::Encryptor::Counter, true>' [ 0 5 10]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >::reset' [ 0 5 10 70]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__destroy<unsigned char>' [ 0 5 10 65]
'std::__1::make_unique<crypto::ECSignatureCreatorImpl, crypto::ECPrivateKey *&>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::ECSignatureCreatorImpl *, 0, false>' [ 0 5 10]
'PRThreadPriority' [ 0]
'std::__1::__compressed_pair_elem<PK11SlotInfoStr *, 0, false>' [ 0 5 10]
'AnnotateNewMemory' [ 0]
'std::__1::forward<ecdsa_sig_st *&>' [ 0 5 10]
'crypto::ECPrivateKey::key' [ 0 8 22]
'std::__1::__copy<const unsigned char, unsigned char>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::end' [ 0 5 10 87]
'std::__1::unique_ptr<SECItemStr, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >::~unique_ptr' [ 0 5 10 92]
'std::__1::unique_ptr<ecdsa_sig_st, bssl::internal::Deleter<ecdsa_sig_st> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ec_key_st, bssl::internal::Deleter<ec_key_st>, false>' [ 0 5 10 30]
'logging::CheckGEImpl<crypto::P224EncryptedKeyExchange::State, crypto::P224EncryptedKeyExchange::State>' [ 0 9]
'crypto::(anonymous namespace)::SecureHashSHA256::Clone' [ 0 8 31 49]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 77]
'std::__1::iterator_traits<const unsigned char *>' [ 0 5 10]
'crypto::SecureHash' [ 0 8]
'std::__1::unique_ptr<CERTSubjectPublicKeyInfoStr, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::~unique_ptr' [ 0 5 10 104]
'bignum_st' [ 0]
'std::__1::__add_lvalue_reference_impl<SECKEYPublicKeyStr, true>' [ 0 5 10]
'crypto::P224EncryptedKeyExchange::ProcessMessage' [ 0 8 34]
'std::__1::add_lvalue_reference<crypto::RSAPrivateKey>' [ 0 5 10]
'SHA256_CTX' [ 0]
'BIGNUM' [ 0]
'std::__1::remove_reference<ec_key_st *&>' [ 0 5 10]
'std::__1::forward<crypto::SignatureVerifier::VerifyContext *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >::~unique_ptr' [ 0 5 10 147]
'std::__1::__compressed_pair_elem<std::__1::default_delete<unsigned char []>, 1, true>' [ 0 5 10]
'AnnotateTraceMemory' [ 0]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::operator->' [ 0 5 10 111]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >' [ 0 5 10]
'crypto::(anonymous namespace)::ScopedCipherCTX::ScopedCipherCTX' [ 0 8 31 48]
'std::__1::__pointer_type<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >' [ 0 5 10]
'std::__1::__pointer_type<char, std::__1::default_delete<char []> >' [ 0 5 10]
'logging::LOG_FATAL' [ 0 9]
'std::__1::forward<crypto::RSAPrivateKey *>' [ 0 5 10]
'AnnotatePCQGet' [ 0]
'__clock_t' [ 0]
'std::__1::__pointer_type<bignum_st, bssl::internal::Deleter<bignum_st> >' [ 0 5 10]
'std::__1::unique_ptr<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::unique_ptr<true, void>' [ 0 5 10 114]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::__split_buffer' [ 0 5 10 79]
'SECKEYKEAPublicKey' [ 0]
'base::LazyInstance<crypto::(anonymous namespace)::NSSInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSSInitSingleton> >::Get' [ 0 6 160]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_backward<unsigned char>' [ 0 5 10 65]
'crypto::HKDF::HKDF' [ 0 8 14]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::operator bool' [ 0 5 10 133]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::get' [ 0 5 10 85]
'std::__1::move<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep &>' [ 0 5 10]
'base::SequenceToken' [ 0 6]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> &>' [ 0 5 10]
'(anonymous namespace)::Put224Bits' [ 0 23]
'std::__1::ios_base::width' [ 0 5 10 20]
'int_fast64_t' [ 0]
'base::TaskToken' [ 0 6]
'crypto::RSAPrivateKey' [ 0 8]
'CBB' [ 0]
'crypto::ECSignatureCreator' [ 0 8]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'int16_t' [ 0]
'std::__1::remove_reference<const unsigned char &>' [ 0 5 10]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::distance<unsigned char *>' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::__add_lvalue_reference_impl<crypto::ECSignatureCreatorImpl, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<char []>, 1, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'std::__1::add_lvalue_reference<SECKEYPublicKeyStr>' [ 0 5 10]
'CBS' [ 0]
'base::LazyInstance<crypto::(anonymous namespace)::NSPRInitSingleton, base::internal::LeakyLazyInstanceTraits<crypto::(anonymous namespace)::NSPRInitSingleton> >::Pointer' [ 0 6 162]
'std::__1::__add_lvalue_reference_impl<crypto::SignatureCreator, true>' [ 0 5 10]
'std::__1::default_delete<crypto::ECSignatureCreatorImpl>' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::OnceCallback<void ()> >, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<SECItemStr *, crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1> >' [ 0 5 10]
'base::PlatformThreadRef' [ 0 6]
'std::__1::forward<std::__1::default_delete<crypto::RSAPrivateKey> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECSignatureCreatorImpl, std::__1::default_delete<crypto::ECSignatureCreatorImpl> >::~unique_ptr' [ 0 5 10 113]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<const unsigned char *>' [ 0 5 10 70]
'std::__1::__compressed_pair_elem<crypto::SymmetricKey *, 0, false>::__compressed_pair_elem<crypto::SymmetricKey *, void>' [ 0 5 10 68]
'std::__1::__add_lvalue_reference_impl<PLArenaPool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::unique_ptr<true, void>' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<crypto::(anonymous namespace)::SecureHashSHA256 *, 0, false>' [ 0 5 10]
'base::STLClearObject<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >' [ 0 6]
'std::__1::__pointer_type_imp::__pointer_type<base::OnceCallback<void ()>, std::__1::allocator<base::OnceCallback<void ()> >, true>' [ 0 5 10 30]
'bssl::internal::Deleter<bignum_st>::operator()' [ 0 6 16 36]
'std::__1::__pointer_type_imp::__pointer_type<rsa_st, bssl::internal::Deleter<rsa_st>, false>' [ 0 5 10 30]
'std::__1::__fill<std::__1::__wrap_iter<char *>, char>' [ 0 5 10]
'std::__1::__compressed_pair<PK11SlotInfoStr *, crypto::NSSDestroyer<PK11SlotInfoStr, &PK11_FreeSlot> >::__compressed_pair<PK11SlotInfoStr *&, true>' [ 0 5 10 104]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 70]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'std::__1::__pointer_type<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >' [ 0 5 10]
'std::__1::default_delete<crypto::RSAPrivateKey>::operator()' [ 0 5 10 49]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char> &, 1, false>::__get' [ 0 5 10 82]
'crypto::p224::Add' [ 0 8 14]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'base::time_internal' [ 0 6]
'base::FilePath' [ 0 6]
'base::LazyInstanceTraitsBase<crypto::(anonymous namespace)::NSSInitSingleton>::New' [ 0 6 79]
'(anonymous namespace)::ReduceLarge' [ 0 23]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'AnnotateRWLockAcquired' [ 0]
'uintptr_t' [ 0]
'base::LazyInstanceTraitsBase<crypto::(anonymous namespace)::NSSInitSingleton>' [ 0 6]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >::operator->' [ 0 5 10 89]
'crypto::(anonymous namespace)::MakeIDFromSPKI' [ 0 8 31]
'base::subtle::GetOrCreateLazyPointer<crypto::(anonymous namespace)::NSSInitSingleton>' [ 0 6 14]
'crypto::SymmetricKey::SymmetricKey' [ 0 8 22]
'EVP_CIPHER' [ 0]
'std::__1::__split_buffer<unsigned char, std::__1::allocator<unsigned char> &>::capacity' [ 0 5 10 79]
'std::__1::unique_ptr<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >' [ 0 5 10]
'AnnotateCondVarSignalAll' [ 0]
'std::__1::__const_void_pointer<unsigned char *, std::__1::allocator<unsigned char>, false>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::RSAPrivateKey *, std::__1::default_delete<crypto::RSAPrivateKey> >::__compressed_pair<crypto::RSAPrivateKey *, true>' [ 0 5 10 104]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'KeyType' [ 0]
'std::__1::forward<unsigned char *&>' [ 0 5 10]
'crypto::p224::Point::ToString' [ 0 8 14 21]
'AnnotateIgnoreSyncBegin' [ 0]
'AnnotatePCQPut' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char>' [ 0 5 10 65]
'crypto::Aead::KeyLength' [ 0 8 14]
'wchar_t' [ 0]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<unsigned char *&, void>' [ 0 5 10 61]
'uint64_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_delete' [ 0 5 10 70]
'std::__1::allocator<base::OnceCallback<void ()> >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10]
'FILE' [ 0]
'std::__1::unique_ptr<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash> >::reset' [ 0 5 10 89]
'timeval' [ 0]
'std::__1::__compressed_pair<CERTSubjectPublicKeyInfoStr *, crypto::(anonymous namespace)::PublicKeyInfoDeleter>::__compressed_pair<CERTSubjectPublicKeyInfoStr *&, true>' [ 0 5 10 113]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__recommend' [ 0 5 10 70]
'AnnotateMutexIsNotPHB' [ 0]
'base::subtle' [ 0 6]
'std::__1::unique_ptr<rsa_st, bssl::internal::Deleter<rsa_st> >::operator bool' [ 0 5 10 64]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >::~unique_ptr' [ 0 5 10 70]
'SECKEYECPublicKeyStr' [ 0]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::resize' [ 0 5 10 70]
'crypto::(anonymous namespace)::NSSInitSingleton::NSSInitSingleton' [ 0 8 31 49]
'std::__1::forward<SECItemStr *>' [ 0 5 10]
'std::__1::unique_ptr<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::operator bool' [ 0 5 10 114]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'SECKEYFortezzaPublicKeyStr' [ 0]
'base::internal' [ 0 6]
'std::__1::remove_reference<crypto::SignatureCreator *&>' [ 0 5 10]
'base::subtle::GetOrCreateLazyPointer<crypto::(anonymous namespace)::NSPRInitSingleton>' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'logging::MakeCheckOpValueString<crypto::SymmetricKey::Algorithm>' [ 0 9]
'std::__1::unique_ptr<PLArenaPool, crypto::NSSDestroyer1<PLArenaPool, &PORT_FreeArena, 0> >::operator bool' [ 0 5 10 92]
'crypto::P224EncryptedKeyExchange::GetNextMessage' [ 0 8 34]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'AnnotateNoOp' [ 0]
'std::__1::unique_ptr<SECKEYPublicKeyStr, crypto::NSSDestroyer<SECKEYPublicKeyStr, &SECKEY_DestroyPublicKey> >::~unique_ptr' [ 0 5 10 111]
'std::__1::forward<evp_pkey_st *>' [ 0 5 10]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::unique_ptr<true, void>' [ 0 5 10 133]
'lldiv_t' [ 0]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'double_t' [ 0]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>' [ 0 5 10]
'crypto::(anonymous namespace)::NSPRInitSingleton' [ 0 8 31]
'__int64_t' [ 0]
'AnnotateBarrierWaitBefore' [ 0]
'crypto::P224EncryptedKeyExchange::P224EncryptedKeyExchange' [ 0 8 34]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'crypto::SignatureVerifier::SignatureVerifier' [ 0 8 27]
'crypto::(anonymous namespace)::CrashOnNSSInitFailure' [ 0 8 31]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::ECPrivateKey>, 1, true>' [ 0 5 10]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<crypto::NSSDestroyer1<SECItemStr, &SECITEM_FreeItem, 1>, 1, true>' [ 0 5 10]
'std::__1::allocator<unsigned char>' [ 0 5 10]
'std::__1::__wrap_iter<char *>::__wrap_iter' [ 0 5 10 31]
'crypto::ClearOpenSSLERRStack' [ 0 8]
'crypto::(anonymous namespace)::NSSInitSingleton::LoadModule' [ 0 8 31 49]
'std::__1::remove_reference<crypto::SignatureVerifier::VerifyContext *>' [ 0 5 10]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >::unique_ptr<true, void>' [ 0 5 10 70]
'(anonymous namespace)::CopyConditional' [ 0 23]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >' [ 0 5 10]
'crypto::P224EncryptedKeyExchange' [ 0 8]
'bssl::internal::StackAllocated<cbb_st, void, &CBB_zero, &CBB_cleanup>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char> &, 1, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SignatureCreator *, std::__1::default_delete<crypto::SignatureCreator> >::__compressed_pair<crypto::SignatureCreator *, std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10 110]
'std::__1::add_lvalue_reference<crypto::SecureHash>' [ 0 5 10]
'uint32_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'crypto::p224::kBasePoint' [ 0 8 14]
'int_fast16_t' [ 0]
'base::LazyInstanceTraitsBase<crypto::(anonymous namespace)::NSPRInitSingleton>::New' [ 0 6 80]
'std::__1::remove_reference<unsigned char *&>' [ 0 5 10]
'evp_aead_ctx_st' [ 0]
'crypto::(anonymous namespace)::SecureHashSHA256::~SecureHashSHA256' [ 0 8 31 49]
'crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey>::operator()' [ 0 8 70]
'std::__1::forward<CERTSubjectPublicKeyInfoStr *&>' [ 0 5 10]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<crypto::SecureHash, std::__1::default_delete<crypto::SecureHash>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__max_size' [ 0 5 10 65]
'bssl::internal::StackAllocated<cbb_st, void, &CBB_zero, &CBB_cleanup>::StackAllocated' [ 0 6 16 71]
'std::__1::__add_lvalue_reference_impl<crypto::SignatureVerifier::VerifyContext, true>' [ 0 5 10]
'std::__1::unique_ptr<crypto::SymmetricKey, std::__1::default_delete<crypto::SymmetricKey> >::operator->' [ 0 5 10 93]
'std::__1::operator-<char *, char *>' [ 0 5 10]
'bssl::ScopedCBB' [ 0 6]
'AnnotateFlushState' [ 0]
'std::__1::forward<crypto::ECSignatureCreatorImpl *&>' [ 0 5 10]
'crypto::ScopedOpenSSLSafeSizeBuffer<32>::safe_buffer' [ 0 8 41]
'__intmax_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'__vtbl_ptr_type' [ 0]
'std::__1::unique_ptr<bignum_st, bssl::internal::Deleter<bignum_st> >::operator bool' [ 0 5 10 70]
'std::__1::__distance<char *>' [ 0 5 10]
'EC_KEY' [ 0]
'crypto::CheckNSSVersion' [ 0 8]
'SECItemStr' [ 0]
'std::__1::forward<std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10]
'bssl::internal::DeleterImpl<rsa_st, void>' [ 0 6 16]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::~__vector_base' [ 0 5 10 77]
'CRYPTO_refcount_t' [ 0]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::release' [ 0 5 10 74]
'std::__1::__unwrap_iter<const unsigned char *>' [ 0 5 10]
'__int32_t' [ 0]
'std::__1::allocator<unsigned char>::construct<unsigned char, const unsigned char &>' [ 0 5 10 36]
'AnnotateBenignRaceSized' [ 0]
'crypto::OpenSSLErrStackTracer::OpenSSLErrStackTracer' [ 0 8 31]
'AnnotateRWLockDestroy' [ 0]
'std::__1::unique_ptr<SECKEYPrivateKeyStr, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::~unique_ptr' [ 0 5 10 114]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<unsigned char>' [ 0 5 10 65]
'crypto::SignatureCreator::Sign' [ 0 8 26]
'std::__1::__compressed_pair<SECKEYPrivateKeyStr *, crypto::NSSDestroyer<SECKEYPrivateKeyStr, &SECKEY_DestroyPrivateKey> >::__compressed_pair<SECKEYPrivateKeyStr *, true>' [ 0 5 10 123]
'std::__1::default_delete<unsigned char []>::operator()<unsigned char>' [ 0 5 10 44]
'std::__1::add_lvalue_reference<rsa_st>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::ECPrivateKey *, std::__1::default_delete<crypto::ECPrivateKey> >::__compressed_pair<crypto::ECPrivateKey *, std::__1::default_delete<crypto::ECPrivateKey> >' [ 0 5 10 102]
'CK_VERSION' [ 0]
'evp_cipher_ctx_st' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'SECAlgorithmIDStr' [ 0]
'crypto::HMAC::Init' [ 0 8 14]
'logging::GetVlogLevel<25>' [ 0 9]
'crypto::(anonymous namespace)::ToOpenSSLDigestType' [ 0 8 31]
'std::__1::unique_ptr<evp_pkey_st, bssl::internal::Deleter<evp_pkey_st> >::get' [ 0 5 10 74]
'crypto::SecureMemEqual' [ 0 8]
'std::__1::__add_lvalue_reference_impl<SECKEYPrivateKeyStr, true>' [ 0 5 10]
'crypto::RSAPrivateKey::CreateFromKey' [ 0 8 23]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::__compressed_pair<base::OnceCallback<void ()> *, std::__1::allocator<base::OnceCallback<void ()> > >' [ 0 5 10]
'std::__1::remove_reference<const crypto::(anonymous namespace)::SecureHashSHA256 &>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::__compressed_pair_elem<std::__1::default_delete<crypto::SecureHash>, 1, true>::__compressed_pair_elem<std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256>, void>' [ 0 5 10 89]
'std::__1::unique_ptr<crypto::ECPrivateKey, std::__1::default_delete<crypto::ECPrivateKey> >::unique_ptr' [ 0 5 10 93]
'std::__1::min<unsigned long>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<rsa_st, true>' [ 0 5 10]
'uint16_t' [ 0]
'crypto::Encryptor::Encryptor' [ 0 8 19]
'long int' [ 0]
'std::__1::remove_reference<crypto::RSAPrivateKey *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<crypto::SignatureCreator> >' [ 0 5 10]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'std::__1::__compressed_pair<crypto::SymmetricKey *, std::__1::default_delete<crypto::SymmetricKey> >::__compressed_pair<crypto::SymmetricKey *, true>' [ 0 5 10 102]
'AnnotatePCQCreate' [ 0]
'std::__1::default_delete<crypto::Encryptor::Counter>' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'bssl::Span<const unsigned char>' [ 0 6]
'std::__1::forward<evp_pkey_st *&>' [ 0 5 10]
'RSA' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::data' [ 0 5 10 70]
'std::__1::default_delete<unsigned char []>' [ 0 5 10]
'std::__1::unique_ptr<crypto::(anonymous namespace)::SecureHashSHA256, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >::reset' [ 0 5 10 147]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<ecdsa_sig_st, true>' [ 0 5 10]
'std::__1::streamoff' [ 0 5 10]
'base::string16' [ 0 6]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'SECStatus' [ 0]
'logging::MakeCheckOpString<crypto::SymmetricKey::Algorithm, crypto::SymmetricKey::Algorithm>' [ 0 9]
'PK11PreSlotInfo' [ 0]
'std::__1::__compressed_pair_elem<bignum_st *, 0, false>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__append' [ 0 5 10 70]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__swap_out_circular_buffer' [ 0 5 10 70]
'std::__1::unique_ptr<crypto::SignatureVerifier::VerifyContext, std::__1::default_delete<crypto::SignatureVerifier::VerifyContext> >::~unique_ptr' [ 0 5 10 133]
'std::__1::remove_reference<SECKEYPublicKeyStr *&>' [ 0 5 10]
'(anonymous namespace)::Invert' [ 0 23]
'std::__1::__distance<unsigned char *>' [ 0 5 10]
'std::__1::__pointer_type<crypto::ECSignatureCreator, std::__1::default_delete<crypto::ECSignatureCreator> >' [ 0 5 10]
'crypto::RSAPrivateKey::~RSAPrivateKey' [ 0 8 23]
'AnnotateFlushExpectedRaces' [ 0]
'std::__1::__compressed_pair<crypto::ECSignatureCreator *, std::__1::default_delete<crypto::ECSignatureCreator> >' [ 0 5 10]
'long long int' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'crypto::RSAPrivateKey::Create' [ 0 8 23]
'__int16_t' [ 0]
'(anonymous namespace)::ScalarMult' [ 0 23]
'PRUint32' [ 0]
'base::NetToHost32' [ 0 6]
'crypto::HMAC::Verify' [ 0 8 14]
'std::__1::char_traits<char>' [ 0 5 10]
'crypto::Aead::Init' [ 0 8 14]
'std::__1::__compressed_pair<crypto::(anonymous namespace)::SecureHashSHA256 *, std::__1::default_delete<crypto::(anonymous namespace)::SecureHashSHA256> >::__compressed_pair<crypto::(anonymous namespace)::SecureHashSHA256 *&, true>' [ 0 5 10 156]
