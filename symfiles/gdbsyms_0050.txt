'sk_make_sp<cc::MatrixPaintFilter, const SkMatrix &, const SkFilterQuality &, sk_sp<cc::PaintFilter> >' [ 0]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'base::ListValue' [ 0 6]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'cc::ServicePaintTypefaceTransferCacheEntry::ServicePaintTypefaceTransferCacheEntry' [ 0 4 44]
'std::__1::pointer_traits<cc::ImageProvider::ScopedDecodedDrawImage *>' [ 0 5 10]
'SkRRect::isEmpty' [ 0 9]
'base::span<unsigned char, 18446744073709551615>::span' [ 0 6 49]
'logging::MakeCheckOpValueString<cc::FilterOperation::FilterType>' [ 0 9]
'base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>::get' [ 0 6 16 56]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'cc::FilterOperations' [ 0 4]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::capacity' [ 0 5 10 87]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::AddRef' [ 0 6 108]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<SkPaint *>, true>' [ 0 5 10]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >::Release' [ 0 6 112]
'std::__1::__compressed_pair<Frame *, std::__1::allocator<Frame> >' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::emplace_back<int &>' [ 0 5 10 135]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::clear' [ 0 5 10 136]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::clear' [ 0 5 10 143]
'std::__1::forward<const base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::__alloc' [ 0 5 10 144]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::__end_cap' [ 0 5 10 101]
'cc::SetMatrixOp::Deserialize' [ 0 4 17]
'std::__1::pointer_traits<SkPaint *>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::capacity' [ 0 5 10 70]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<int, cc::PaintImage::DecodingMode> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 97]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::deallocate' [ 0 5 10 68]
'std::__1::__compressed_pair_elem<sk_sp<cc::PaintFilter> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 70]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::allocator<unsigned char>, true>' [ 0 5 10 30]
'trace_event_internal::AddTraceEvent<base::trace_event::TracedValue>' [ 0 22]
'std::__1::conditional<false, std::__1::pointer_traits<cc::FilterOperation *>::__nat, cc::FilterOperation>' [ 0 5 10]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 85]
'cc::PaintFlagsPaintFilter' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::__max_size' [ 0 5 10 61]
'std::__1::remove_reference<cc::ImageProvider *&>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__append' [ 0 5 10 139]
'std::__1::remove_reference<const cc::PaintTypeface &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__construct<unsigned long, const unsigned long &>' [ 0 5 10 65]
'base::internal::OptionalBase<SkNoDrawCanvas>' [ 0 6 16]
'cc::PaintOpBuffer::OffsetIterator::end' [ 0 4 19 35]
'cc::EqualsFunction' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &, 1, false>' [ 0 5 10]
'SkRefCntBase::unref' [ 0 14]
'std::__1::ostringstream' [ 0 5 10]
'cc::ClientTransferCacheEntry::~ClientTransferCacheEntry' [ 0 4 30]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (cc::SkiaPaintCanvas::*const &)(), cc::SkiaPaintCanvas *>' [ 0 6 16 43]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >::construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, int &>' [ 0 5 10 69]
'std::__1::__const_void_pointer<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, false>' [ 0 5 10]
'cc::FilterOperation::MapRect' [ 0 4 21]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__annotate_new' [ 0 5 10 139]
'cc::PaintShader::IsOpaque' [ 0 4 17]
'std::__1::forward<sk_sp<const cc::PaintOpBuffer> &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> > >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'sk_sp<SkTextBlob>::get' [ 0 19]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::clear' [ 0 5 10 160]
'cc::(anonymous namespace)::DataWriter::WriteData' [ 0 4 27 39]
'sk_64_mul' [ 0]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 77]
'cc::ServiceRawMemoryTransferCacheEntry' [ 0 4]
'cc::PaintOpWriter::WriteSimple<SkISize>' [ 0 4 19]
'sk_sp<SkMaskFilter>::operator=' [ 0 21]
'std::__1::forward<std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10]
'base::Optional<cc::RecordPaintCanvas>' [ 0 6]
'cc::ClipRRectOp::IsValid' [ 0 4 17]
'std::__1::__const_pointer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, true>' [ 0 5 10]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::__end_cap' [ 0 5 10 87]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::get' [ 0 5 10 258]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::capacity' [ 0 5 10 94]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__recommend' [ 0 5 10 130]
'tm' [ 0]
'cc::PaintOpReader::SetInvalid' [ 0 4 19]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__annotate_shrink' [ 0 5 10 58]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'cc::RecordPaintCanvas::clipRRect' [ 0 4 23]
'std::__1::__compressed_pair<cc::ServiceRawMemoryTransferCacheEntry *, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >::__compressed_pair<cc::ServiceRawMemoryTransferCacheEntry *&, true>' [ 0 5 10 138]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__construct_backward<gfx::Rect *>' [ 0 5 10 65]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::push_back' [ 0 5 10 130]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 206]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::reserve' [ 0 5 10 66]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__construct<std::__1::pair<cc::DrawImage, gfx::Rect>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 93]
'std::__1::swap<cc::RTree<unsigned long>::Branch<unsigned long> *>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10 86]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'std::__1::forward<char *&>' [ 0 5 10]
'uint_least64_t' [ 0]
'std::__1::remove_reference<const SkRect *&>' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, true>' [ 0 5 10]
'SkMulDiv255Round' [ 0]
'cc::FilterOperation::amount' [ 0 4 21]
'cc::RTree<unsigned long>::Search' [ 0 4 26]
'sk_sp<SkDrawLooper>::get' [ 0 21]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::pop_back' [ 0 5 10 58]
'SkImageInfo::colorType' [ 0 13]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::__construct<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10 140]
'logging::MakeCheckOpString<unsigned char, int>' [ 0 9]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned long *>::__nat, unsigned long>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__end_cap' [ 0 5 10 146]
'SkSafeUnref<SkDrawLooper>' [ 0]
'sk_sp<cc::PaintFilter>::operator=<cc::ComposePaintFilter, void>' [ 0 24]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__recommend' [ 0 5 10 86]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::__destroy<sk_sp<SkImageFilter> >' [ 0 5 10 73]
'gfx::Rect::IsEmpty' [ 0 5 11]
'std::__1::operator!=<SkPaint *>' [ 0 5 10]
'std::__1::move_backward<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::data' [ 0 5 10 151]
'cc::PaintOpWriter::WriteSimple<SkFilterQuality>' [ 0 4 19]
'std::__1::vector<float, std::__1::allocator<float> >::__construct_at_end' [ 0 5 10 54]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__end_cap' [ 0 5 10 148]
'SkFloat2Bits' [ 0]
'cc::DropShadowPaintFilter::SnapshotWithImagesInternal' [ 0 4 27]
'std::__1::distance<const unsigned int *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, int &>' [ 0 5 10 98]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::~unique_ptr' [ 0 5 10 54]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__vector_base' [ 0 5 10 73]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SkRecorder, std::__1::default_delete<SkRecorder>, false>' [ 0 5 10 30]
'cc::PaintFlags::HasShader' [ 0 4 16]
'cc::Rasterizer<cc::ClipRectOp, false>::RasterWithFlags' [ 0 4 39]
'cc::DrawLineOp::DrawLineOp' [ 0 4 16]
'cc::PaintOpReader::ReadFlattenable<SkColorFilter>' [ 0 4 19]
'std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'SkIRect::intersectNoEmptyCheck' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::construct<cc::FilterOperation, const cc::FilterOperation &>' [ 0 5 10 71]
'cc::MorphologyPaintFilter::~MorphologyPaintFilter' [ 0 4 27]
'cc::TransferCacheSerializeHelper::~TransferCacheSerializeHelper' [ 0 4 34]
'cc::(anonymous namespace)::kMaxKernelSize' [ 0 4 27]
'base::Optional<SkMatrix>' [ 0 6]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::assign<gfx::Rect *>' [ 0 5 10 62]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'cc::MorphologyPaintFilter::MorphologyPaintFilter' [ 0 4 27]
'cc::DrawImageOp::~DrawImageOp' [ 0 4 17]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::unique_ptr<true, void>' [ 0 5 10 83]
'cc::(anonymous namespace)::ActsLikeClear' [ 0 4 27]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::capacity' [ 0 5 10 73]
'cc::RasterColorSpace' [ 0 4]
'std::__1::__vector_base<float, std::__1::allocator<float> >::clear' [ 0 5 10 61]
'base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::Destroy' [ 0 6 16 198]
'std::__1::forward<cc::TransferCacheEntryType &>' [ 0 5 10]
'base::span<const unsigned char, 18446744073709551615>::span' [ 0 6 55]
'cc::PaintImage::GetSupportedDecodeSize' [ 0 4 16]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >' [ 0 5 10]
'cc::PaintFont::PaintFont' [ 0 4 15]
'std::__1::next<std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'cc::ClientRawMemoryTransferCacheEntry::Id' [ 0 4 39]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector<const unsigned char *>' [ 0 5 10 70]
'trace_event_internal::kGlobalScope' [ 0 22]
'std::__1::forward<const bool &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::destroy<unsigned int>' [ 0 5 10 64]
'cc::DiscardableImageMap::Generate::trace_event_unique_atomic425' [ 0 4 25 35]
'base::internal::DstRangeRelationToSrcRangeImpl<long, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 210]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::__split_buffer' [ 0 5 10 139]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >::allocate' [ 0 5 10 69]
'cc::BlurPaintFilter::SnapshotWithImagesInternal' [ 0 4 21]
'cc::SimpleDeserialize<cc::SetMatrixOp>' [ 0 4]
'cc::SkiaPaintCanvas::drawIRect' [ 0 4 21]
'cc::PaintOpBuffer::operator!=' [ 0 4 19]
'gfx::PointF' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPaint> &, 1, false>' [ 0 5 10]
'std::__1::__atomic_base<int, false>::__atomic_base' [ 0 5 10 37]
'base::internal::CheckedSubFastOp<int, int>::Do<int>' [ 0 6 16 44]
'base::Optional<cc::RecordPaintCanvas>::reset' [ 0 6 39]
'std::__1::remove_reference<const SkIPoint &>' [ 0 5 10]
'sk_sp<cc::TurbulencePaintFilter>::sk_sp' [ 0 34]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::vector' [ 0 5 10 92]
'std::__1::remove_reference<cc::PaintImage>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::__construct_backward<Frame *>' [ 0 5 10 57]
'std::__1::remove_reference<const SkImageFilter::CropRect &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, long, true>' [ 0 5 10]
'cc::TransferCacheSerializeHelper::TransferCacheSerializeHelper' [ 0 4 34]
'std::__1::__wrap_iter<sk_sp<cc::PaintFilter> *>::operator*' [ 0 5 10 49]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::allocate' [ 0 5 10 73]
'cc::DrawColorOp::IsValid' [ 0 4 17]
'SkTMin<float>' [ 0]
'cc::PaintOpBuffer::numSlowPaths' [ 0 4 19]
'cc::MorphologyPaintFilter::radius_x' [ 0 4 27]
'std::__1::pointer_traits<sk_sp<SkImageFilter> *>' [ 0 5 10]
'std::__1::remove_reference<const SkBlendMode &>' [ 0 5 10]
'trace_event_internal::TraceID::TraceID' [ 0 22 31]
'std::__1::streamsize' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__emplace_back_slow_path<int &>' [ 0 5 10 135]
'SkSafeRef<cc::PaintOpBuffer>' [ 0]
'SkRefCntBase::~SkRefCntBase' [ 0 14]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__swap_out_circular_buffer' [ 0 5 10 151]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >::__compressed_pair<nullptr_t, const std::__1::allocator<unsigned char> &>' [ 0 5 10 83]
'std::__1::min<unsigned long>' [ 0 5 10]
'base::Optional<SkMatrix>::operator=<const SkMatrix &>' [ 0 6 26]
'long long int' [ 0]
'cc::DisplacementMapEffectPaintFilter::DisplacementMapEffectPaintFilter' [ 0 4 38]
'std::__1::__compressed_pair<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot *, std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []> >' [ 0 5 10]
'std::__1::enable_if<true, float *>' [ 0 5 10]
'sk_sp<cc::MergePaintFilter>::sk_sp' [ 0 29]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadSimple<unsigned char>' [ 0 4 44]
'SkFontConfigInterface::FontIdentity::~FontIdentity' [ 0 23 37]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'sk_sp<SkFontConfigInterface>::operator->' [ 0 30]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>::Do<unsigned long>' [ 0 6 16 66]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &, 1, false>::__get' [ 0 5 10 117]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::push_back' [ 0 5 10 78]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__construct_node<const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10 232]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::reserve' [ 0 5 10 85]
'sk_sp<SkFontMgr>::operator->' [ 0 18]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::data' [ 0 5 10 62]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::__destroy<cc::FrameMetadata>' [ 0 5 10 69]
'base::Optional<unsigned int>::operator bool' [ 0 6 30]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>' [ 0 6 16]
'std::__1::__compressed_pair<SkPaint *, std::__1::allocator<SkPaint> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 71]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::size' [ 0 5 10 82]
'std::__1::move<std::__1::pair<int, cc::PaintImage::DecodingMode> *&>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::ValueOrDefault<unsigned long, unsigned int>' [ 0 6 16 47]
'cc::PaintFlags::getShader' [ 0 4 16]
'wctype_t' [ 0]
'sk_sp<cc::LightingDistantPaintFilter>::~sk_sp' [ 0 39]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__alloc' [ 0 5 10 71]
'base::AtomicRefCount::IsZero' [ 0 6 22]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::max_size' [ 0 5 10 71]
'std::__1::make_unique<cc::SkiaPaintImageGenerator, const sk_sp<cc::PaintImageGenerator> &, unsigned long &>' [ 0 5 10]
'base::internal::OptionalBase<gfx::ColorSpace>::OptionalBase' [ 0 6 16 47]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >' [ 0 5 10]
'cc::PaintOpBuffer::PlaybackFoldingIterator::alpha' [ 0 4 19 44]
'std::__1::__to_raw_pointer<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'cc::FilterOperations::Clear' [ 0 4 22]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::operator[]' [ 0 5 10 70]
'std::__1::__less<float, float>' [ 0 5 10]
'SkNoDrawCanvas::onDrawBitmapNine' [ 0 16]
'std::__1::__wrap_iter<const cc::PaintOp *const *>' [ 0 5 10]
'std::__1::random_access_iterator_tag' [ 0 5 10]
'SkRect::contains' [ 0 8]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > > >, std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> >' [ 0 5 10]
'sk_sp<cc::ArithmeticPaintFilter>::sk_sp' [ 0 34]
'cc::PaintFlags::setShader' [ 0 4 16]
'cc::PaintImage::GetNextId' [ 0 4 16]
'SkImageInfo::Make' [ 0 13]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__annotate_new' [ 0 5 10 135]
'std::__1::forward<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'cc::SkiaPaintCanvas::saveLayer' [ 0 4 21]
'cc::FilterOperation::CreateSepiaFilter' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::deallocate' [ 0 5 10 140]
'cc::PaintOpBuffer::ShrinkToFit' [ 0 4 19]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::vector' [ 0 5 10 136]
'base::Optional<SkNoDrawCanvas>::operator bool' [ 0 6 32]
'std::__1::remove_reference<Frame &>' [ 0 5 10]
'std::__1::allocator<cc::PaintTypeface>::destroy' [ 0 5 10 40]
'cc::MagnifierPaintFilter::src_rect' [ 0 4 26]
'std::__1::move_if_noexcept<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10]
'SkPathRef::computeBounds' [ 0 11]
'std::__1::forward<SkClipOp &>' [ 0 5 10]
'std::__1::__const_void_pointer<unsigned long *, std::__1::allocator<unsigned long>, false>' [ 0 5 10]
'std::__1::__wrap_iter<SkPaint *>::__wrap_iter' [ 0 5 10 34]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::destroy<sk_sp<cc::PaintFilter> >' [ 0 5 10 75]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> **>' [ 0 5 10]
'base::internal::OptionalBase<unsigned int>::CopyAssign<unsigned int>' [ 0 6 16 44]
'std::__1::pointer_traits<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> > >' [ 0 5 10]
'cc::Rasterizer<cc::ClipPathOp, false>::RasterWithFlags' [ 0 4 39]
'cc::(anonymous namespace)::DiscardableImageGenerator::TakeAnimatedImagesMetadata' [ 0 4 27 54]
'base::internal::OptionalStorage<cc::PaintFlags, false, false>::OptionalStorage' [ 0 6 16 63]
'std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator+=' [ 0 5 10 80]
'sk_sp<SkColorSpace>' [ 0]
'std::__1::conditional<false, const cc::ImageProvider::ScopedDecodedDrawImage &, cc::ImageProvider::ScopedDecodedDrawImage &&>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__alloc' [ 0 5 10 146]
'cc::PaintFilter::type' [ 0 4 17]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'sk_sp<const SkImage>::operator=' [ 0 22]
'std::__1::__const_pointer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >, true>' [ 0 5 10]
'std::__1::__size_type<base::StackAllocator<const cc::PaintOp *, 3>, long, true>' [ 0 5 10]
'std::__1::__unwrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::allocator<cc::ImageProvider::ScopedDecodedDrawImage>::destroy' [ 0 5 10 64]
'cc::Rasterizer<cc::SaveLayerAlphaOp, false>::RasterWithFlags' [ 0 4 45]
'cc::PaintOpWriter::GetImageSize' [ 0 4 19]
'std::__1::unique_ptr<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot [], std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []> >' [ 0 5 10]
'cc::RestoreOp::Serialize' [ 0 4 15]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >' [ 0 5 10]
'std::__1::remove_reference<const SkImageFilter::CropRect *>' [ 0 5 10]
'cc::PaintTypeface::PaintTypeface' [ 0 4 19]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::~TransferCacheEntryBase' [ 0 4 102]
'std::__1::default_delete<SkCanvas>::operator()' [ 0 5 10 36]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>, 1, true>' [ 0 5 10]
'cc::(anonymous namespace)::kHasNoDiscardableImages' [ 0 4 27]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__move_assign' [ 0 5 10 70]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'cc::PaintOpBuffer::push<cc::ClipRectOp, const SkRect &, SkClipOp &, bool &>' [ 0 4 19]
'std::__1::__alloc_traits_difference_type<base::StackAllocator<const cc::PaintOp *, 3>, const cc::PaintOp **, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'SkSafeUnref<SkColorFilter>' [ 0]
'std::__1::forward<sk_sp<cc::PaintFilter> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::trace_event::TracedValue *, 0, false>::__compressed_pair_elem<base::trace_event::TracedValue *, void>' [ 0 5 10 78]
'std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> , false, false>' [ 0 5 10 81]
'base::internal::OptionalBase<cc::PaintOpBuffer::Iterator>::FreeIfNeeded' [ 0 6 16 59]
'base::internal::OptionalStorage<SkNoDrawCanvas, false, false>::~OptionalStorage' [ 0 6 16 63]
'base::OnceCallback<void ()>::operator=' [ 0 6 29]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> &>::second' [ 0 5 10 80]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::__destruct_at_end' [ 0 5 10 65]
'std::__1::allocator<Frame>::construct<Frame, const Frame &>' [ 0 5 10 28]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__construct<cc::RTree<unsigned long>::Branch<unsigned long>, unsigned long, const gfx::Rect &>' [ 0 5 10 100]
'cc::ImagePaintFilter::image' [ 0 4 22]
'cc::(anonymous namespace)::PaintTrackingCanvas::PaintTrackingCanvas' [ 0 4 27 48]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::max_size' [ 0 5 10 125]
'SkRect::isEmpty' [ 0 8]
'std::__1::copy<const float *, float *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__construct_backward<cc::FilterOperation *>' [ 0 5 10 71]
'cc::RTree<unsigned long>::BuildRecursive' [ 0 4 26]
'std::__1::make_unique<cc::ServicePathTransferCacheEntry>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>::__get' [ 0 5 10 74]
'std::__1::__compressed_pair_elem<std::__1::allocator<const cc::DrawImage *> &, 1, false>::__get' [ 0 5 10 90]
'std::__1::remove_reference<sk_sp<SkImageFilter> &>' [ 0 5 10]
'base::Unretained<cc::SimpleBufferSerializer>' [ 0 6]
'std::__1::__pointer_type<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'std::__1::move<sk_sp<SkImageFilter> &>' [ 0 5 10]
'std::__1::forward<cc::ServiceTransferCacheEntry *>' [ 0 5 10]
'cc::AlphaThresholdPaintFilter' [ 0 4]
'__builtin_va_list' [ 0]
'cc::Rasterizer<cc::ClipPathOp, false>::Raster' [ 0 4 39]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::as_const' [ 0 6 16 183]
'std::__1::__compressed_pair_elem<cc::ServiceRawMemoryTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceRawMemoryTransferCacheEntry *&, void>' [ 0 5 10 86]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &, 1, false>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::allocate' [ 0 5 10 65]
'std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator->' [ 0 5 10 80]
'base::StackContainer<std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >, 1>' [ 0 6]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<unsigned int>' [ 0 6 16 85]
'gfx::Size::height' [ 0 5 11]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::construct<sk_sp<SkImageFilter>, const sk_sp<SkImageFilter> &>' [ 0 5 10 73]
'std::__1::unique_ptr<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >::~unique_ptr' [ 0 5 10 139]
'std::__1::remove_reference<std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sk_sp<SkImageFilter> > &>' [ 0 5 10]
'operator!=<cc::PaintOpBuffer, cc::PaintOpBuffer>' [ 0]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::capacity' [ 0 5 10 99]
'cc::MagnifierPaintFilter::SerializedSize' [ 0 4 26]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::vector' [ 0 5 10 143]
'base::internal::OptionalBase<cc::RecordPaintCanvas>::FreeIfNeeded' [ 0 6 16 53]
'cc::FilterOperation::CreateOpacityFilter' [ 0 4 21]
'cc::PaintImage::operator==' [ 0 4 16]
'cc::PaintOpReader::ReadSimple<SkRect>' [ 0 4 19]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::end' [ 0 5 10 82]
'cc::LightingDistantPaintFilter::SerializedSize' [ 0 4 32]
'cc::ThreadsafeMatrix::ThreadsafeMatrix' [ 0 4 22]
'std::__1::__const_void_pointer<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> **, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>, false>' [ 0 5 10]
'base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>::UnretainedWrapper' [ 0 6 16 63]
'base::ListValue::~ListValue' [ 0 6 17]
'std::__1::allocator<cc::PaintTypeface>::construct<cc::PaintTypeface, const cc::PaintTypeface &>' [ 0 5 10 40]
'base::Bind<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 6]
'cc::UpdateTypeAndSkip<cc::AnnotateOp>' [ 0 4]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__end_cap' [ 0 5 10 146]
'std::__1::forward<const std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > &>' [ 0 5 10]
'cc::RecordPaintCanvas::restoreToCount' [ 0 4 23]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []>, 1, true>' [ 0 5 10]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>' [ 0 6]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::~__vector_base' [ 0 5 10 158]
'base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob>' [ 0 6]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::Impl::Impl' [ 0 6 16 183 189]
'cc::MathUtil::RoundUpInternal<unsigned long>' [ 0 4 14]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__max_size' [ 0 5 10 102]
'std::__1::__unwrap_iter<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'std::__1::remove_reference<cc::SkiaPaintImageGenerator *&>' [ 0 5 10]
'std::__1::remove_reference<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'base::internal::OptionalBase<cc::DecodeStashingImageProvider>::~OptionalBase' [ 0 6 16 63]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::data' [ 0 5 10 86]
'cc::SaveLayerOp::Serialize' [ 0 4 17]
'std::__1::move<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *&>' [ 0 5 10]
'base::internal::OptionalStorage<gfx::SizeF, true, true>::OptionalStorage' [ 0 6 16 57]
'cc::MathUtil::UncheckedRoundUp<unsigned long>' [ 0 4 14]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::deallocate' [ 0 5 10 57]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::construct<std::__1::pair<cc::DrawImage, gfx::Rect>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 93]
'cc::PaintOpReader::ReadSimple<SkPoint3>' [ 0 4 19]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<cc::ServiceShaderTransferCacheEntry, true>' [ 0 5 10]
'cc::RecordPaintFilter::record_bounds' [ 0 4 23]
'std::__1::forward<base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'sk_sp<SkShader>::operator bool' [ 0 17]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__annotate_shrink' [ 0 5 10 130]
'std::__1::__compressed_pair<SkPaint *, std::__1::allocator<SkPaint> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 152]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned long> *>::__nat, std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10 150]
'base::RepeatingCallback<void (SkCanvas *, unsigned int)>::Run' [ 0 6 58]
'base::internal::ClampedNumeric<int>::MathOp<ClampedSubOp, int, int>' [ 0 6 16 37]
'sk_sp<SkPathRef>::operator->' [ 0 18]
'SkPathRef::validate' [ 0 11]
'cc::PaintFlags::getTextEncoding' [ 0 4 16]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, true>' [ 0 5 10]
'cc::ScaleOp::Serialize' [ 0 4 13]
'cc::(anonymous namespace)::IsValidPaintShaderScalingBehavior' [ 0 4 27]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'std::__1::remove_reference<scoped_refptr<cc::PaintTextBlob> &>' [ 0 5 10]
'SkNoDrawCanvas::onDrawAnnotation' [ 0 16]
'std::__1::__pointer_type_imp::__pointer_type<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >, true>' [ 0 5 10 30]
'cc::AnnotateOp::AreEqual' [ 0 4 16]
'std::__1::__const_pointer<cc::RTree<unsigned long>::Branch<unsigned long>, cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >, true>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'SkRect::MakeIWH' [ 0 8]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::allocate' [ 0 5 10 140]
'SkDescriptorMapOperators' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, SkFunctionWrapper<void, void, &sk_free>, false>' [ 0 5 10 30]
'cc::SaveOp::IsValid' [ 0 4 12]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10 100]
'std::__1::__wrap_iter<const float *>::operator*' [ 0 5 10 38]
'std::__1::__unique_if<cc::ServiceImageTransferCacheEntry>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::operator[]' [ 0 5 10 139]
'std::__1::__pointer_type<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::~__split_buffer' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> >, 1, true>' [ 0 5 10]
'std::__1::move<cc::PaintOpBuffer &>' [ 0 5 10]
'base::internal::OptionalBase<cc::DecodeStashingImageProvider>::FreeIfNeeded' [ 0 6 16 63]
'logging::CheckGTImpl<base::TimeDelta, base::TimeDelta>' [ 0 9]
'base::TimeTicks' [ 0 6]
'cc::ServicePaintTypefaceTransferCacheEntry::CachedSize' [ 0 4 44]
'std::__1::default_delete<SkRecorder>' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<base::internal::CheckedNumeric<int> >::is_valid' [ 0 6 16 38 85]
'SkMatrix::mapVectors' [ 0 10]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPath>::~TransferCacheEntryBase' [ 0 4 94]
'std::__1::ostream' [ 0 5 10]
'cc::PaintFlags::HasDiscardableImages' [ 0 4 16]
'gfx::Rect::OffsetFromOrigin' [ 0 5 11]
'cc::ClientPaintTypefaceTransferCacheEntry::ClientPaintTypefaceTransferCacheEntry' [ 0 4 43]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__end_cap' [ 0 5 10 150]
'std::__1::move<gfx::ColorSpace &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__destruct_at_end' [ 0 5 10 68]
'base::nullopt_t' [ 0 6]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kShader>' [ 0 4]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__annotate_delete' [ 0 5 10 58]
'base::internal::OptionalStorageBase<cc::PaintFlags, false>::Init<const cc::PaintFlags &>' [ 0 6 16 60]
'base::internal::IsValueInRangeForNumericType<int, int>' [ 0 6 16]
'base::Optional<cc::PaintOpBuffer::OffsetIterator>::Optional' [ 0 6 51]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__find_equal<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10 232]
'cc::PaintOp::kUnsetRect' [ 0 4 13]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__end_cap' [ 0 5 10 85]
'cc::(anonymous namespace)::kMaxShaderColorsSupported' [ 0 4 27]
'gfx::SizeF' [ 0 5]
'SkImageFilter::CropRect::CropRect' [ 0 15 25]
'base::StackAllocator<gfx::Rect, 1>::Source::Source' [ 0 6 36 44]
'cc::PaintOpReader::ReadAndValidateOpHeader' [ 0 4 19]
'SkSafeRef<SkPathEffect>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<sk_sp<SkImageFilter> > &, 1, false>' [ 0 5 10]
'cc::LightingSpotPaintFilter::kconstant' [ 0 4 29]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source::stack_buffer' [ 0 6 49 57]
'std::__1::__advance<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::remove_reference<SkBlendMode &>' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::~unique_ptr' [ 0 5 10 67]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::begin' [ 0 5 10 62]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::~vector' [ 0 5 10 68]
'sk_make_sp<cc::LightingDistantPaintFilter, const cc::PaintFilter::LightingType &, const SkPoint3 &, const unsigned int &, const float &, const float &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'sk_sp<cc::PaintImageGenerator>::sk_sp' [ 0 32]
'std::__1::default_delete<base::DictionaryValue>' [ 0 5 10]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::operator bool' [ 0 5 10 54]
'std::__1::forward<const cc::PaintFilter::LightingType &>' [ 0 5 10]
'cc::RTree<unsigned long>::GetBounds' [ 0 4 26]
'sk_sp<cc::LightingDistantPaintFilter>::release' [ 0 39]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'base::StackAllocator<float, 3>::allocate' [ 0 6 32]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__destroy<unsigned long>' [ 0 5 10 65]
'sk_sp<cc::MatrixConvolutionPaintFilter>::release' [ 0 41]
'sk_sp<cc::XfermodePaintFilter>::~sk_sp' [ 0 32]
'sk_make_sp<cc::DisplacementMapEffectPaintFilter, const SkDisplacementMapEffect::ChannelSelectorType &, const SkDisplacementMapEffect::ChannelSelectorType &, const float &, sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::LightingPointPaintFilter::kconstant' [ 0 4 30]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::size' [ 0 5 10 143]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::allocate' [ 0 5 10 89]
'std::__1::__pointer_type_imp::__pointer_type<char, base::AlignedFreeDeleter, false>' [ 0 5 10 30]
'cc::(anonymous namespace)::kMaxFamilyNameSize' [ 0 4 27]
'cc::PaintFont::SetTextEncoding' [ 0 4 15]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'std::__1::forward<cc::SimpleBufferSerializer *>' [ 0 5 10]
'cc::FilterOperation::set_amount' [ 0 4 21]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__alloc' [ 0 5 10 148]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::capacity' [ 0 5 10 143]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__alloc' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<float> >::__max_size' [ 0 5 10 57]
'std::__1::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1> &, 1, false>' [ 0 5 10]
'base::internal::RangeCheck' [ 0 6 16]
'cc::ClientImageTransferCacheEntry::Id' [ 0 4 35]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::second' [ 0 5 10 267]
'std::__1::__to_raw_pointer<std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'cc::PaintFont::SetAutohinted' [ 0 4 15]
'cc::PaintOpBuffer::Iterator::operator!=' [ 0 4 19 29]
'sk_sp<const SkPicture>' [ 0]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::__destruct_at_end' [ 0 5 10 61]
'SkTMax<int>' [ 0]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::size' [ 0 5 10 70]
'cc::Rasterizer<cc::DrawLineOp, true>' [ 0 4]
'sk_sp<cc::PaintOpBuffer>::release' [ 0 26]
'cc::PaintOpWithFlags::RasterWithFlags' [ 0 4 22]
'SkSafeRef<cc::PaintShader>' [ 0]
'SkIRect::bottom' [ 0 9]
'std::__1::vector<float, base::StackAllocator<float, 3> >::push_back' [ 0 5 10 58]
'cc::(anonymous namespace)::MakeSrcRect' [ 0 4 27]
'base::subtle::AdoptRefIfNeeded<cc::PaintTextBlob>' [ 0 6 14]
'SkFontStyle::SkFontStyle' [ 0 13]
'std::__1::__move<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'cc::ServiceImageTransferCacheEntry::Deserialize::operator void (*)(const void *, void *)' [ 0 4 36 49]
'std::__1::move<std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'sk_sp<SkColorFilter>' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3>, 1, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::reserve' [ 0 5 10 133]
'base::Optional<SkMatrix>::operator bool' [ 0 6 26]
'std::__1::forward<const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &>' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::~__split_buffer' [ 0 5 10 94]
'std::__1::__const_pointer<float, float *, std::__1::allocator<float>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long>, 1, true>' [ 0 5 10]
'cc::RTree<unsigned long>::Reset' [ 0 4 26]
'std::__1::forward<const cc::PaintOpBuffer *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::end' [ 0 5 10 151]
'trace_event_internal::TraceID::raw_id' [ 0 22 31]
'cc::PaintOpWriter::WriteSimple<SkBlurImageFilter::TileMode>' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<base::trace_event::ConvertableToTraceFormat, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *>, 0, false>' [ 0 5 10]
'cc::PaintFilter::TypeToString' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::allocate' [ 0 5 10 65]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__alloc' [ 0 5 10 93]
'cc::g_analyze_op_functions' [ 0 4]
'cc::DisplayItemList::push<cc::DrawTextBlobOp, scoped_refptr<cc::PaintTextBlob>, float &, float &, const cc::PaintFlags &>' [ 0 4 21]
'std::__1::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >::release' [ 0 5 10 107]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::__destruct_at_end' [ 0 5 10 67]
'cc::TransferCacheDeserializeHelper::GetEntryAs<cc::ServiceImageTransferCacheEntry>' [ 0 4 36]
'cc::PaintOpBuffer::Iterator::operator*' [ 0 4 19 29]
'SkPoint3' [ 0]
'cc::(anonymous namespace)::DiscardableImageGenerator::DiscardableImageGenerator' [ 0 4 27 54]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>::allocate' [ 0 5 10 69]
'cc::PaintOpBuffer::push<cc::CustomDataOp, unsigned int &>' [ 0 4 19]
'cc::LightingPointPaintFilter' [ 0 4]
'cc::(anonymous namespace)::GetHueRotateMatrix' [ 0 4 27]
'std::__1::remove_reference<unsigned long *&>' [ 0 5 10]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::clear' [ 0 5 10 79]
'SkIPoint' [ 0]
'std::__1::allocator<unsigned int>' [ 0 5 10]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::__alloc' [ 0 5 10 67]
'std::__1::vector<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *>, std::__1::allocator<std::__1::__hash_node<const SkDescriptor *, void *> > >' [ 0 5 10]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'base::internal::ClampedNumeric<int>::ClampedNumeric<int>' [ 0 6 16 37]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::vector' [ 0 5 10 54]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'base::Optional<cc::PaintFlags>' [ 0 6]
'std::__1::__pointer_type<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'cc::operator void (*)(const cc::PaintOp *, SkCanvas *, const cc::PlaybackParams &)' [ 0 4]
'std::__1::forward<cc::PaintCanvas::AnnotationType &>' [ 0 5 10]
'cc::SkiaPaintCanvas::save' [ 0 4 21]
'cc::FilterOperation::CreateAlphaThresholdFilter' [ 0 4 21]
'std::__1::operator==<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::~vector' [ 0 5 10 78]
'std::__1::forward<cc::ServiceColorSpaceTransferCacheEntry *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::capacity' [ 0 5 10 150]
'sk_sp<SkShader>::get' [ 0 17]
'SkDescriptorSet' [ 0]
'base::internal::CommonMin<int, int>' [ 0 6 16]
'SkSize::height' [ 0 8]
'std::__1::__compressed_pair<WireTypeface *, std::__1::allocator<WireTypeface> >' [ 0 5 10]
'sk_sp<cc::BlurPaintFilter>::sk_sp' [ 0 28]
'sk_float_isfinite' [ 0]
'cc::(anonymous namespace)::SizeCounter::WriteSimple<unsigned int>' [ 0 4 27 40]
'cc::FilterOperation::operator=' [ 0 4 21]
'cc::PaintRecorder::beginRecording' [ 0 4 19]
'cc::PaintOpWriter::WriteSimple<SkPoint3>' [ 0 4 19]
'std::__1::remove_const<cc::FrameMetadata>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::__hash_map_pointer_types<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *, std::__1::__hash_key_value_types<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >, true>' [ 0 5 10]
'SkNoDrawCanvas::onDrawOval' [ 0 16]
'cc::VoidFunction' [ 0 4]
'std::__1::remove_reference<const base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::~TransferCacheEntryBase' [ 0 4 98]
'__uint64_t' [ 0]
'SkSafeRef<cc::PaintImageGenerator>' [ 0]
'SkAtomic<unsigned char, sk_memory_order_relaxed>' [ 0]
'cc::MatrixConvolutionPaintFilter::operator==' [ 0 4 34]
'std::__1::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::remove_reference<sk_sp<SkColorSpace> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<Frame *, 0, false>' [ 0 5 10]
'base::StackVector<cc::ImageProvider::ScopedDecodedDrawImage, 1>::~StackVector' [ 0 6 65]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__end_cap' [ 0 5 10 89]
'sk_sp<cc::PaintFilter>::sk_sp<cc::DropShadowPaintFilter, void>' [ 0 24]
'std::__1::vector<float, base::StackAllocator<float, 3> >::~vector' [ 0 5 10 58]
'std::__1::conditional<true, const cc::DiscardableImageMap::AnimatedImageMetadata &, cc::DiscardableImageMap::AnimatedImageMetadata &&>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__alloc' [ 0 5 10 140]
'__intptr_t' [ 0]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> >::second' [ 0 5 10 98]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::construct<sk_sp<cc::PaintFilter>>' [ 0 5 10 46]
'gfx::Vector2d' [ 0 5]
'cc::RTree<cc::DrawImage>::Node<cc::DrawImage>::~Node' [ 0 4 26 47]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__alloc' [ 0 5 10 143]
'std::__1::conditional<false, std::__1::pointer_traits<cc::FrameMetadata *>::__nat, cc::FrameMetadata>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >' [ 0 5 10]
'SkData::size' [ 0 8]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__construct_backward<std::__1::pair<cc::DrawImage, gfx::Rect> *>' [ 0 5 10 93]
'std::__1::__size_type<std::__1::allocator<cc::PaintTypeface>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::construct<SkPaint, SkPaint>' [ 0 5 10 59]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry>, false>' [ 0 5 10 30]
'std::__1::__to_raw_pointer<unsigned int>' [ 0 5 10]
'SkImage::uniqueID' [ 0 9]
'cc::PaintOp::GetType' [ 0 4 13]
'cc::XfermodePaintFilter::foreground' [ 0 4 25]
'cc::Rasterizer<cc::AnnotateOp, false>' [ 0 4]
'sk_sp<cc::PaintFilter>::reset' [ 0 24]
'cc::SaveLayerOp::IsValid' [ 0 4 17]
'std::__1::iterator<std::__1::random_access_iterator_tag, SkPaint, long, SkPaint *, SkPaint &>' [ 0 5 10]
'cc::Rasterizer<cc::DrawImageOp, true>::Raster' [ 0 4 39]
'time_t' [ 0]
'base::internal::OptionalStorageBase<unsigned long, true>::Init<unsigned long>' [ 0 6 16 58]
'sk_sp<SkTypeface>::operator->' [ 0 19]
'cc::PaintTextBlob::~PaintTextBlob' [ 0 4 19]
'bool' [ 0]
'base::internal::ClampSub<int, int>' [ 0 6 16]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::clear' [ 0 5 10 133]
'std::__1::__equal_to<gfx::Rect, gfx::Rect>::operator()' [ 0 5 10 44]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::push_back' [ 0 5 10 86]
'clock_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::vector' [ 0 5 10 151]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::ClipPathOp>' [ 0 4 19]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::clear' [ 0 5 10 140]
'std::__1::pointer_traits<std::__1::pair<cc::DrawImage, gfx::Rect> *>' [ 0 5 10]
'cc::PaintOpWriter::WriteArray' [ 0 4 19]
'base::StackContainer<std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >, 1>' [ 0 6]
'std::__1::__compressed_pair_elem<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, 0, false>' [ 0 5 10]
'operator<<<char, std::__1::char_traits<char>, cc::PaintImageGenerator>' [ 0]
'cc::LightingSpotPaintFilter::SerializedSize' [ 0 4 29]
'sk_make_sp<cc::ComposePaintFilter, sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> >' [ 0]
'cc::ServiceColorSpaceTransferCacheEntry::Deserialize' [ 0 4 41]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::capacity' [ 0 5 10 139]
'cc::ArithmeticPaintFilter::ArithmeticPaintFilter' [ 0 4 27]
'std::__1::allocator<const cc::DrawImage *>' [ 0 5 10]
'cc::TranslateOp::Raster' [ 0 4 17]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::begin' [ 0 5 10 58]
'std::__1::remove_reference<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'cc::(anonymous namespace)::GetSaturateMatrix' [ 0 4 27]
'cc::DrawOvalOp::Deserialize' [ 0 4 16]
'SkSafeUnref<cc::MatrixPaintFilter>' [ 0]
'std::__1::__advance<const float *>' [ 0 5 10]
'sk_sp<SkString::Rec>' [ 0]
'std::__1::remove_reference<std::__1::pair<unsigned long, unsigned long> *&>' [ 0 5 10]
'std::__1::remove_reference<const SkFilterQuality &>' [ 0 5 10]
'logging::CheckGTImpl<unsigned long, unsigned int>' [ 0 9]
'sk_make_sp<cc::MorphologyPaintFilter, const cc::MorphologyPaintFilter::MorphType &, const int &, const int &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::__wrap_iter<const cc::FrameMetadata *>' [ 0 5 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::TakeDecodingModeMap' [ 0 4 27 54]
'SkCanvas::clear' [ 0 10]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::capacity' [ 0 5 10 75]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__annotate_new' [ 0 5 10 58]
'std::__1::vector<float, base::StackAllocator<float, 3> >::reserve' [ 0 5 10 58]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::data' [ 0 5 10 133]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>, false>' [ 0 5 10 30]
'std::__1::get<0, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'SkScalarIsFinite' [ 0]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__annotate_delete' [ 0 5 10 82]
'cc::ServiceColorSpaceTransferCacheEntry::~ServiceColorSpaceTransferCacheEntry' [ 0 4 41]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::__nat, std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'cc::ClientPathTransferCacheEntry' [ 0 4]
'std::__1::__size_type<std::__1::allocator<unsigned int>, long, true>' [ 0 5 10]
'sk_sp<cc::OffsetPaintFilter>::sk_sp' [ 0 30]
'std::__1::__compressed_pair_elem<cc::RTree<unsigned long>::Branch<unsigned long> *, 0, false>' [ 0 5 10]
'cc::Rasterizer<cc::TranslateOp, false>' [ 0 4]
'std::__1::remove_reference<const sk_sp<SkImageFilter> &>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::operator=' [ 0 5 10 70]
'std::__1::move<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'base::StackContainer<std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >, 1>::StackContainer' [ 0 6 91]
'cc::(anonymous namespace)::SizeCounter::WriteSimple<unsigned char>' [ 0 4 27 40]
'sk_sp<SkImageFilter>::reset' [ 0 22]
'cc::PaintOp::AdditionalBytesUsed' [ 0 4 13]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPaint>, 1, true>' [ 0 5 10]
'base::internal::OptionalBase<gfx::ColorSpace>::operator=' [ 0 6 16 47]
'base::internal::OptionalStorage<unsigned int, true, true>::OptionalStorage' [ 0 6 16 59]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &, void>' [ 0 5 10 123]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>::UnretainedWrapper' [ 0 6 16 56]
'int32_t' [ 0]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__split_buffer' [ 0 5 10 160]
'short' [ 0]
'sk_sp<cc::PaintFilter>::sk_sp<cc::ImagePaintFilter, void>' [ 0 24]
'std::__1::remove_reference<sk_sp<SkData> &>' [ 0 5 10]
'base::StackContainer<std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >, 2>::operator->' [ 0 6 117]
'SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>' [ 0]
'sk_sp<cc::TilePaintFilter>::~sk_sp' [ 0 28]
'std::__1::__pointer_type_imp::__pointer_type<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::~vector' [ 0 5 10 139]
'cc::(anonymous namespace)::DataWriter::WriteSimple<int>' [ 0 4 27 39]
'std::__1::__tree_node_base<void *>::__parent_unsafe' [ 0 5 10 36]
'cc::(anonymous namespace)::PaintTrackingCanvas::~PaintTrackingCanvas' [ 0 4 27 48]
'std::__1::forward<void (cc::SkiaPaintCanvas::*const &)()>' [ 0 5 10]
'std::__1::forward<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::deallocate' [ 0 5 10 143]
'std::__1::__compressed_pair<unsigned long, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >' [ 0 5 10]
'std::__1::pair<int, cc::PaintImage::DecodingMode>::pair<int, cc::PaintImage::DecodingMode, false>' [ 0 5 10 51]
'SkMatrix::setIdentity' [ 0 10]
'base::internal::IsValueInRangeFastOp<int, long, void>::Do' [ 0 6 16 55]
'SkSafeUnref<SkTextBlob>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >, true>' [ 0 5 10 30]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>::fits' [ 0 11 20 57]
'cc::DrawLineOp::~DrawLineOp' [ 0 4 16]
'cc::DisplayItemList::push<cc::TranslateOp, float &, float &>' [ 0 4 21]
'std::__1::swap<SkPaint *>' [ 0 5 10]
'sk_sp<cc::DropShadowPaintFilter>::~sk_sp' [ 0 34]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__end_cap' [ 0 5 10 77]
'cc::DisplayItemList::GetColorIfSolidInRect' [ 0 4 21]
'std::__1::distance<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__tree' [ 0 5 10 232]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10 106]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>::second' [ 0 5 10 76]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::operator=' [ 0 5 10 82]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, std::__1::allocator<sk_sp<cc::PaintFilter> > >' [ 0 5 10]
'std::__1::pointer_traits<const SkDescriptor **>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'cc::SimpleDeserialize<cc::CustomDataOp>' [ 0 4]
'cc::PaintOpBuffer::push<cc::SetMatrixOp, const SkMatrix &>' [ 0 4 19]
'cc::DisplacementMapEffectPaintFilter::displacement' [ 0 4 38]
'std::__1::move<sk_sp<SkImageFilter> *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::destroy<cc::PaintTypeface>' [ 0 5 10 69]
'cc::(anonymous namespace)::TypefaceCtx::TypefaceCtx' [ 0 4 27 40]
'std::__1::conditional<false, std::__1::pointer_traits<sk_sp<SkImageFilter> *>::__nat, sk_sp<SkImageFilter> >' [ 0 5 10]
'std::__1::__const_pointer<gfx::Rect, gfx::Rect *, std::__1::allocator<gfx::Rect>, true>' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::__split_buffer' [ 0 5 10 101]
'cc::RTree<cc::DrawImage>::SearchRefsRecursive' [ 0 4 26]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__destroy<cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10 98]
'cc::RecordPaintCanvas::getSaveCount' [ 0 4 23]
'cc::ArithmeticPaintFilter::foreground' [ 0 4 27]
'SkRect::MakeEmpty' [ 0 8]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::OffsetIterator, true>::OptionalStorageBase' [ 0 6 16 78]
'cc::ComposePaintFilter::operator==' [ 0 4 24]
'base::internal::OptionalStorage<unsigned int, true, true>::OptionalStorageBase' [ 0 6 16 59]
'std::__1::allocator<cc::FilterOperation>::allocate' [ 0 5 10 42]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__annotate_delete' [ 0 5 10 86]
'std::__1::remove_reference<const int &>' [ 0 5 10]
'base::internal::CheckOnFailure' [ 0 6 16]
'std::__1::equal<std::__1::__wrap_iter<const float *>, std::__1::__wrap_iter<const float *>, bool (*)(float, float)>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, 0, false>' [ 0 5 10]
'cc::PaintFont::typeface' [ 0 4 15]
'cc::Rasterizer<cc::DrawImageOp, true>::RasterWithFlags' [ 0 4 39]
'cc::SaveOp::Serialize' [ 0 4 12]
'cc::PaintImageGenerator::~PaintImageGenerator' [ 0 4 25]
'std::__1::add_lvalue_reference<cc::ServicePathTransferCacheEntry>' [ 0 5 10]
'cc::SimpleSerialize<cc::RestoreOp>' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>, void>' [ 0 5 10 100]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__end_cap' [ 0 5 10 99]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::~__vector_base' [ 0 5 10 85]
'std::__1::forward<const unsigned int &>' [ 0 5 10]
'std::__1::__unique_if<cc::ServiceRawMemoryTransferCacheEntry>' [ 0 5 10]
'int_fast32_t' [ 0]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__destruct_at_end' [ 0 5 10 158]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::allocate' [ 0 5 10 64]
'cc::RecordPaintCanvas::clipPath' [ 0 4 23]
'cc::DropShadowPaintFilter' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &, 1, false>::__get' [ 0 5 10 117]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<long>' [ 0 6 16 75]
'cc::ClientPathTransferCacheEntry::ClientPathTransferCacheEntry' [ 0 4 34]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>::RunImpl<void (cc::SkiaPaintCanvas::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > &, 0>' [ 0 6 16 151]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__annotate_delete' [ 0 5 10 139]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::rbegin' [ 0 5 10 58]
'cc::DrawRectOp::Deserialize' [ 0 4 16]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >' [ 0 5 10]
'std::__1::locale' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>, true>' [ 0 5 10 30]
'std::__1::__wrap_iter<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'sk_sp<SkMaskFilter>::operator bool' [ 0 21]
'cc::DisplayItemList::EmitTraceSnapshot::trace_event_unique_atomic99' [ 0 4 21 40]
'cc::PaintOpBuffer::Playback' [ 0 4 19]
'cc::PaintOpBuffer::Iterator::operator++' [ 0 4 19 29]
'std::__1::forward<const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::ReleaseImpl' [ 0 6 14 40]
'base::internal::ArithmeticOrUnderlyingEnum<unsigned long, false>' [ 0 6 16]
'cc::RTree<unsigned long>::SearchRecursive' [ 0 4 26]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::OffsetIterator, true>::Init<const cc::PaintOpBuffer *&, const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > *&>' [ 0 6 16 78]
'base::internal::saturated_cast<int, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::forward<sk_sp<SkColorFilter> >' [ 0 5 10]
'cc::Rasterizer<cc::SaveLayerAlphaOp, false>' [ 0 4]
'std::__1::remove_reference<unsigned int *&>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::max_size' [ 0 5 10 97]
'std::__1::__vector_base<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::ValueOrDie<unsigned long, base::internal::CheckOnFailure>' [ 0 6 16 47]
'cc::ConcatOp::Raster' [ 0 4 14]
'cc::PaintOpBuffer::~PaintOpBuffer' [ 0 4 19]
'base::char16' [ 0 6]
'cc::MorphologyPaintFilter::radius_y' [ 0 4 27]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::begin' [ 0 5 10 151]
'std::__1::swap<sk_sp<SkImageFilter> *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'sk_make_sp<cc::PaintOpBuffer, cc::PaintOpBuffer>' [ 0]
'cc::DiscardableImageMap::AnimatedImageMetadata::~AnimatedImageMetadata' [ 0 4 25 48]
'cc::(anonymous namespace)::DataWriter::DataWriter' [ 0 4 27 39]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::max_size' [ 0 5 10 139]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'SkBitmap::pixmap' [ 0 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::__max_size' [ 0 5 10 59]
'cc::(anonymous namespace)::DiscardableImageGenerator::TakeImageIdToRectsMap' [ 0 4 27 54]
'cc::LightingSpotPaintFilter::location' [ 0 4 29]
'std::__1::__compressed_pair_elem<std::__1::allocator<const cc::DrawImage *>, 1, true>' [ 0 5 10]
'std::__1::operator!=<const cc::FilterOperation *>' [ 0 5 10]
'cc::MathUtil' [ 0 4]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >' [ 0 5 10]
'std::__1::pair<int, base::StackVector<gfx::Rect, 1> >::~pair' [ 0 5 10 55]
'std::__1::__promote_imp<float, void, void, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::shrink_to_fit' [ 0 5 10 151]
'std::__1::move<base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> > &>' [ 0 5 10]
'base::BindRepeating<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 6]
'std::__1::default_delete<base::ListValue>' [ 0 5 10]
'std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::clear' [ 0 5 10 101]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__end_cap' [ 0 5 10 79]
'SkImageGenerator::onCanGenerateTexture' [ 0 18]
'std::__1::__size_type<base::StackAllocator<float, 3>, long, true>' [ 0 5 10]
'SkTransferFunctionBehavior' [ 0]
'gfx::Rect::x' [ 0 5 11]
'gfx::Rect::y' [ 0 5 11]
'cc::ClientRawMemoryTransferCacheEntry::SerializedSize' [ 0 4 39]
'cc::TilePaintFilter::operator==' [ 0 4 21]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::~__vector_base' [ 0 5 10 92]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::~__split_buffer' [ 0 5 10 148]
'cc::PaintOp::IsValidPath' [ 0 4 13]
'std::__1::forward<unsigned int &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__max_size' [ 0 5 10 93]
'std::__1::pointer_traits<unsigned int *>' [ 0 5 10]
'SkSafeUnref<cc::MagnifierPaintFilter>' [ 0]
'cc::PaintOpWithFlags::PaintOpWithFlags' [ 0 4 22]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'std::__1::remove_reference<cc::ServiceRawMemoryTransferCacheEntry *&>' [ 0 5 10]
'sk_sp<SkImage>::~sk_sp' [ 0 16]
'std::__1::__compressed_pair_elem<unsigned long *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'base::Optional<cc::PaintOpBuffer::Iterator>' [ 0 6]
'cc::PaintOpReader::ReadSimple<SkIPoint>' [ 0 4 19]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kImage>::~TransferCacheEntryBase' [ 0 4 95]
'std::__1::__pointer_type_imp::__pointer_type<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot, std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []>, false>' [ 0 5 10 30]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::assign<const unsigned int *>' [ 0 5 10 68]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare::operator()<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, int>' [ 0 6 16 191 208]
'cc::PaintOpBuffer::Iterator::operator->' [ 0 4 19 29]
'cc::PaintImage::kInvalidId' [ 0 4 16]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__vector_base' [ 0 5 10 77]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::Rect> &>' [ 0 5 10 76]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::__const_pointer<unsigned char, unsigned char *, std::__1::allocator<unsigned char>, true>' [ 0 5 10]
'std::__1::__distance<const float *>' [ 0 5 10]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__destruct_at_end' [ 0 5 10 54]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__wrap_iter<const cc::FilterOperation *>::base' [ 0 5 10 52]
'cc::DisplayItemList::EmitTraceSnapshot::trace_event_unique_atomic105' [ 0 4 21 40]
'std::__1::remove_reference<const unsigned int &>' [ 0 5 10]
'sk_sp<cc::PaintImageGenerator>' [ 0]
'base::internal::OptionalBase<unsigned int>::OptionalBase<const unsigned int &>' [ 0 6 16 44]
'cc::ClientColorSpaceTransferCacheEntry::ClientColorSpaceTransferCacheEntry' [ 0 4 40]
'cc::LightingDistantPaintFilter::kconstant' [ 0 4 32]
'cc::DisplayItemList::push<cc::ClipPathOp, const SkPath &, SkClipOp &, bool &>' [ 0 4 21]
'cc::DisplayItemList::push<cc::ScaleOp, float &, float &>' [ 0 4 21]
'std::__1::reverse_iterator<std::__1::__wrap_iter<SkPaint *> >::operator++' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__split_buffer' [ 0 5 10 148]
'std::__1::underlying_type<cc::PaintImage::DecodingMode>' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::clear' [ 0 5 10 94]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kShader>::~TransferCacheEntryBase' [ 0 4 96]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPath>::TransferCacheEntryBase' [ 0 4 94]
'std::__1::__compressed_pair<cc::ServiceRawMemoryTransferCacheEntry *, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10]
'__time_t' [ 0]
'cc::PaintFlags' [ 0 4]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawTextBlobOp>' [ 0 4 19]
'base::AlignedFreeDeleter' [ 0 6]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>, false>' [ 0 5 10]
'std::__1::move_if_noexcept<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::max_size' [ 0 5 10 59]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, long, true>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__annotate_shrink' [ 0 5 10 135]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, true>' [ 0 5 10 30]
'sk_sp<const cc::PaintOpBuffer>::~sk_sp' [ 0 32]
'SkBitmap::installPixels' [ 0 10]
'base::internal::OptionalStorage<cc::ScopedRasterFlags, false, false>::~OptionalStorage' [ 0 6 16 70]
'sk_sp<cc::AlphaThresholdPaintFilter>::release' [ 0 38]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::char_traits<char>' [ 0 5 10]
'trace_event_internal::ScopedTracer::~ScopedTracer' [ 0 22 36]
'SkPathRef::validate::operator()' [ 0 11 21]
'std::__1::copy<cc::FilterOperation *, cc::FilterOperation *>' [ 0 5 10]
'SkSafeRef<const cc::PaintShader>' [ 0]
'SkPath::pathRefIsValid' [ 0 8]
'std::__1::forward<cc::ServiceRawMemoryTransferCacheEntry *>' [ 0 5 10]
'cc::Rasterizer<cc::NoopOp, false>::Raster' [ 0 4 35]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__alloc' [ 0 5 10 96]
'std::__1::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 137]
'std::__1::__advance<gfx::Rect *>' [ 0 5 10]
'std::__1::remove_reference<const SkDropShadowImageFilter::ShadowMode &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceColorSpaceTransferCacheEntry *, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >::__compressed_pair<cc::ServiceColorSpaceTransferCacheEntry *&, true>' [ 0 5 10 140]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<SkImageGenerator *, std::__1::default_delete<SkImageGenerator> >::__compressed_pair<cc::SkiaPaintImageGenerator *, std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10 94]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >' [ 0 5 10]
'SkRect::roundOut::operator()' [ 0 8 18]
'std::__1::__compressed_pair_elem<const cc::DrawImage **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::second' [ 0 5 10 144]
'cc::RotateOp' [ 0 4]
'SkBitmap::drawsNothing' [ 0 10]
'std::__1::__pointer_type<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'base::StackVector<const cc::PaintOp *, 3>::~StackVector' [ 0 6 43]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::emplace<int, cc::PaintImage::DecodingMode>' [ 0 5 10 143]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::end' [ 0 6 16 191]
'base::Optional<cc::RecordPaintCanvas>::Optional' [ 0 6 39]
'std::__1::remove_reference<sk_sp<SkPicture> &>' [ 0 5 10]
'cc::PaintFlags::getLooper' [ 0 4 16]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__swap_out_circular_buffer' [ 0 5 10 139]
'cc::g_has_paint_flags' [ 0 4]
'cc::PaintOpTypeToString' [ 0 4]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::destroy' [ 0 5 10 71]
'std::__1::pair<int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10]
'SkSafeRef<SkColorFilter>' [ 0]
'std::__1::swap<float *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkRecorder>, 1, true>' [ 0 5 10]
'scoped_refptr<cc::PaintTextBlob>::operator*' [ 0 34]
'sk_sp<SkDrawLooper>::~sk_sp' [ 0 21]
'std::__1::copy<std::__1::__wrap_iter<const gfx::Rect *>, gfx::Rect *>' [ 0 5 10]
'cc::FilterOperation::set_shape' [ 0 4 21]
'base::Optional<SkImageFilter::CropRect>::operator->' [ 0 6 41]
'std::__1::remove_reference<cc::ServiceColorSpaceTransferCacheEntry *&>' [ 0 5 10]
'sk_sp<cc::MatrixPaintFilter>::release' [ 0 30]
'std::__1::default_delete<SkMiniRecorder>' [ 0 5 10]
'base::internal::OptionalBase<cc::ScopedRasterFlags>::~OptionalBase' [ 0 6 16 53]
'cc::SkiaPaintCanvas::isClipRect' [ 0 4 21]
'std::__1::__to_raw_pointer<sk_sp<cc::PaintFilter> >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator+=' [ 0 5 10 76]
'std::__1::pointer_traits<WireTypeface *>' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >, void>' [ 0 5 10 190]
'base::internal::NumericRepresentation' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<float>, 1, true>' [ 0 5 10]
'cc::ImageProvider::ScopedDecodedDrawImage::needs_unlock' [ 0 4 19 43]
'cc::ClientImageTransferCacheEntry' [ 0 4]
'std::__1::__wrap_iter<const cc::PaintOp **>::base' [ 0 5 10 45]
'std::__1::add_lvalue_reference<cc::ServicePaintTypefaceTransferCacheEntry>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::construct<unsigned long, const unsigned long &>' [ 0 5 10 65]
'cc::DrawLineOp::Serialize' [ 0 4 16]
'std::__1::conditional<true, std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, std::__1::__hash_node<const SkDescriptor *, void *> *>' [ 0 5 10]
'cc::RecordPaintCanvas::saveLayer' [ 0 4 23]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned char *>::__nat, unsigned char>' [ 0 5 10]
'std::__1::remove_reference<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'cc::LightingDistantPaintFilter::operator==' [ 0 4 32]
'SkImageInfo::operator=' [ 0 13]
'sk_sp<cc::PaintOpBuffer>' [ 0]
'base::Pickle::size' [ 0 6 14]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::clear' [ 0 5 10 65]
'cc::DrawPathOp::AreEqual' [ 0 4 16]
'std::__1::remove_reference<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'cc::PaintFlags::setAntiAlias' [ 0 4 16]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__alloc' [ 0 5 10 61]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::key_comp' [ 0 6 16 183]
'cc::PaintShader::GetRasterizationTileRect::kMaxTileArea' [ 0 4 17 43]
'std::__1::__compressed_pair_elem<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot *, 0, false>' [ 0 5 10]
'sk_sp<SkFontConfigInterface>::~sk_sp' [ 0 30]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__destruct_at_end' [ 0 5 10 85]
'cc::DecodedDrawImage::scale_adjustment' [ 0 4 22]
'std::__1::allocator<char>' [ 0 5 10]
'SkNoDrawCanvas::~SkNoDrawCanvas' [ 0 16]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::deallocate' [ 0 5 10 69]
'cc::ClampAmountForFilterType' [ 0 4]
'cc::SaveLayerOp::HasNonAAPaint' [ 0 4 17]
'std::__1::__const_void_pointer<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *>, false>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::SaveOp>' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, 1, true>::__compressed_pair_elem<const std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > &, void>' [ 0 5 10 118]
'cc::PaintOpReader::ReadSimple<SkShader::TileMode>' [ 0 4 19]
'std::__1::__compressed_pair_elem<unsigned long *, 0, false>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::vector' [ 0 5 10 70]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'SkPath::isInverseFillType' [ 0 8]
'cc::ServiceTransferCacheEntry::~ServiceTransferCacheEntry' [ 0 4 31]
'gfx::SizeF::clamp' [ 0 5 12]
'std::__1::remove_reference<char *&>' [ 0 5 10]
'cc::PaintOp::CountSlowPaths' [ 0 4 13]
'cc::PaintOpBuffer::operator==' [ 0 4 19]
'std::__1::__compressed_pair_elem<cc::ServiceImageTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceImageTransferCacheEntry *&, void>' [ 0 5 10 82]
'std::__1::remove_reference<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &, void>' [ 0 5 10 110]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, int>' [ 0 6 16]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__destruct_at_end' [ 0 5 10 139]
'std::__1::__unwrap_iter<unsigned int *>' [ 0 5 10]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__swap_out_circular_buffer' [ 0 5 10 58]
'std::__1::__compressed_pair<base::ListValue *, std::__1::default_delete<base::ListValue> >::__compressed_pair<base::ListValue *&, true>' [ 0 5 10 92]
'std::__1::default_delete<cc::ServiceTransferCacheEntry>' [ 0 5 10]
'SkMatrix::dirtyMatrixTypeCache' [ 0 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::emplace_back<int &>' [ 0 5 10 135]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__construct_at_end' [ 0 5 10 148]
'cc::TurbulencePaintFilter::TurbulencePaintFilter' [ 0 4 27]
'std::__1::__unordered_map_equal<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<unsigned char, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 70]
'base::internal::OptionalStorage<gfx::Rect, true, true>' [ 0 6 16]
'cc::(anonymous namespace)::CheckIfSolidShape<SkRRect>' [ 0 4 27]
'std::__1::remove_reference<const std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1>, 1, false>::__compressed_pair_elem<const base::StackAllocator<gfx::Rect, 1> &, void>' [ 0 5 10 80]
'std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator->' [ 0 5 10 76]
'std::__1::iterator_traits<const base::Value *>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 75]
'base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 6 16]
'SkDeserialPictureProc' [ 0]
'std::__1::remove_reference<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'cc::PaintTextBlob' [ 0 4]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::allocate' [ 0 5 10 71]
'std::__1::unique_ptr<unsigned char, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'cc::OffsetPaintFilter::operator==' [ 0 4 23]
'SkRect::Make' [ 0 8]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::capacity' [ 0 5 10 96]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::deallocate' [ 0 5 10 66]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::destroy<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10 140]
'scoped_refptr<cc::DisplayItemList>::Release' [ 0 36]
'cc::PaintOpWriter::WriteSimple<SkShader::TileMode>' [ 0 4 19]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__swap_out_circular_buffer' [ 0 5 10 136]
'sk_sp<SkMaskFilter>::reset' [ 0 21]
'cc::(anonymous namespace)::kMaxRectsSize' [ 0 4 27]
'base::Optional<cc::ScopedRasterFlags>::emplace<const cc::PaintFlags *&, cc::ImageProvider *&, const SkMatrix &, unsigned int>' [ 0 6 39]
'std::__1::__wrap_iter<const cc::FrameMetadata *>::operator++' [ 0 5 10 50]
'std::__1::__add_lvalue_reference_impl<char, true>' [ 0 5 10]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>::__tree_end_node' [ 0 5 10 65]
'std::__1::allocator<const cc::PaintOp *>::allocate' [ 0 5 10 42]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::allocator<cc::FilterOperation>::construct<cc::FilterOperation, const cc::FilterOperation &>' [ 0 5 10 42]
'base::internal::OptionalStorage<gfx::ColorSpace, false, false>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::deallocate' [ 0 5 10 102]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__end_cap' [ 0 5 10 77]
'sk_sp<cc::MorphologyPaintFilter>::release' [ 0 34]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::__split_buffer' [ 0 5 10 144]
'base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> >::flat_map' [ 0 6 74]
'cc::DecodedDrawImage::is_scale_adjustment_identity' [ 0 4 22]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawIRectOp>' [ 0 4 19]
'base::internal::CheckOnFailure::HandleFailure<unsigned long>' [ 0 6 16 32]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__annotate_shrink' [ 0 5 10 143]
'base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 6 16 117]
'std::__1::remove_reference<std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> > &>' [ 0 5 10]
'cc::PaintOpWriter' [ 0 4]
'cc::DrawRecordOp::AdditionalBytesUsed' [ 0 4 18]
'cc::PaintOpReader::ReadSimple<cc::PaintShader::ScalingBehavior>' [ 0 4 19]
'std::__1::allocator<float>::construct<float, float>' [ 0 5 10 28]
'std::__1::__temp_value<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__temp_value<int, cc::PaintImage::DecodingMode>' [ 0 5 10 149]
'std::__1::remove_reference<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10]
'cc::DrawDRRectOp::Deserialize' [ 0 4 18]
'cc::PaintOpWriter::WriteSimple<SkMatrix>' [ 0 4 19]
'base::internal::CheckedNumeric<long>::Wrapper<base::internal::CheckedNumeric<long> >::value' [ 0 6 16 38 86]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::clear' [ 0 5 10 135]
'SkNVRefCnt<SkData>::unref' [ 0 20]
'logging::CheckEQImpl<const cc::PaintOpBuffer *, const cc::PaintOpBuffer *>' [ 0 9]
'cc::DrawRecordOp::HasNonAAPaint' [ 0 4 18]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::~vector' [ 0 5 10 136]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::__to_raw_pointer<const cc::DrawImage *>' [ 0 5 10]
'std::__1::move<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__push_back_slow_path<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 130]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__max_size' [ 0 5 10 71]
'base::Optional<SkMatrix>::emplace<>' [ 0 6 26]
'base::Optional<cc::DecodeStashingImageProvider>::Optional' [ 0 6 49]
'cc::PaintOpReader::ReadTurbulencePaintFilter' [ 0 4 19]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::cbegin' [ 0 5 10 86]
'cc::AnnotateOp::IsValid' [ 0 4 16]
'sk_sp<SkDrawLooper>::release' [ 0 21]
'cc::SolidColorAnalyzer::DetermineIfSolidColor::Frame::Frame' [ 0 4 24 47 54]
'cc::RecordPaintCanvas' [ 0 4]
'std::__1::__size_type<std::__1::allocator<cc::FrameMetadata>, long, true>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::clear' [ 0 5 10 150]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::~TransferCacheEntryBase' [ 0 4 100]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> **>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>' [ 0 5 10]
'SkRect::sort' [ 0 8]
'cc::SaveOp::AreEqual' [ 0 4 12]
'std::__1::unordered_map<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> >, SkDescriptorMapOperators, SkDescriptorMapOperators, std::__1::allocator<std::__1::pair<const SkDescriptor *const, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > > >' [ 0 5 10]
'SkPathEffect::GetFlattenableType' [ 0 14]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>' [ 0 6]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::capacity' [ 0 5 10 135]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::__construct<sk_sp<SkImageFilter>, const sk_sp<SkImageFilter> &>' [ 0 5 10 73]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >::~RefCountedThreadSafe' [ 0 6 112]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::__destroy<Frame>' [ 0 5 10 57]
'std::__1::remove_reference<unsigned int &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::destroy<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10 98]
'cc::PaintOpReader::ReadSimple<SkMatrix>' [ 0 4 19]
'std::__1::__compressed_pair<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> > &>::__compressed_pair<nullptr_t, std::__1::allocator<sk_sp<SkImageFilter> > &>' [ 0 5 10 99]
'std::__1::forward<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'cc::RecordPaintCanvas::RecordPaintCanvas' [ 0 4 23]
'SkImageGenerator::~SkImageGenerator' [ 0 18]
'sk_sp<SkShader>::release' [ 0 17]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__compressed_pair<nullptr_t, const std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10 149]
'SkRect::roundOut' [ 0 8]
'SkMatrix::setTypeMask::operator()' [ 0 10 23]
'cc::ServicePaintTypefaceTransferCacheEntry' [ 0 4]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::~__vector_base' [ 0 5 10 85]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::Iterator, true>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &, 1, false>::__get' [ 0 5 10 123]
'cc::UpdateTypeAndSkip<cc::ClipPathOp>' [ 0 4]
'SkSafeUnref<cc::BlurPaintFilter>' [ 0]
'logging::MakeCheckOpValueString<cc::DisplayItemList::UsageHint>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::max_size' [ 0 5 10 69]
'cc::PaintOpWriter::WriteSimple<int>' [ 0 4 19]
'std::__1::__compressed_pair<cc::ServicePathTransferCacheEntry *, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >::__compressed_pair<cc::ServicePathTransferCacheEntry *&, true>' [ 0 5 10 128]
'cc::MergePaintFilter::operator==' [ 0 4 22]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::clear' [ 0 5 10 146]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::capacity' [ 0 5 10 75]
'cc::RTree<unsigned long>::RTree' [ 0 4 26]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::reserve' [ 0 5 10 139]
'std::__1::__hash_node_types<std::__1::__hash_node<const SkDescriptor *, void *> *, std::__1::__hash_node<const SkDescriptor *, void *> >' [ 0 5 10]
'int_least8_t' [ 0]
'sk_sp<SkColorFilter>::operator=' [ 0 22]
'std::__1::remove_reference<cc::ServicePaintTypefaceTransferCacheEntry *&>' [ 0 5 10]
'std::__1::__to_raw_pointer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, true>' [ 0 5 10]
'cc::LightingPointPaintFilter::lighting_type' [ 0 4 30]
'cc::ConcatOp::ConcatOp' [ 0 4 14]
'base::internal::OptionalStorageBase<unsigned int, true>::Init<const unsigned int &>' [ 0 6 16 57]
'cc::PaintOp::IsDrawOp' [ 0 4 13]
'std::__1::__wrap_iter<const gfx::Rect *>::__wrap_iter' [ 0 5 10 42]
'cc::DrawLineOp' [ 0 4]
'base::OnceCallback<void ()>::~OnceCallback' [ 0 6 29]
'sk_sp<cc::ImagePaintFilter>::sk_sp' [ 0 29]
'base::subtle::AdoptRefIfNeeded<cc::DisplayItemList>' [ 0 6 14]
'cc::SkiaPaintCanvas::translate' [ 0 4 21]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::begin' [ 0 5 10 143]
'std::__1::__compressed_pair_elem<cc::PaintTypeface *, 0, false>' [ 0 5 10]
'cc::SkiaPaintCanvas::drawImage' [ 0 4 21]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__construct<sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> >' [ 0 5 10 78]
'operator==<SkPixelRef>' [ 0]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 6]
'cc::Rasterizer<cc::DrawRRectOp, true>' [ 0 4]
'std::__1::__add_lvalue_reference_impl<cc::ServiceRawMemoryTransferCacheEntry, true>' [ 0 5 10]
'base::internal::OptionalBase<cc::PaintFlags>::FreeIfNeeded' [ 0 6 16 46]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >' [ 0 5 10]
'cc::PlaybackParams::operator=' [ 0 4 20]
'cc::LightingDistantPaintFilter::SnapshotWithImagesInternal' [ 0 4 32]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10 164]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>::__compressed_pair<nullptr_t, std::__1::allocator<unsigned int> &>' [ 0 5 10 82]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kColorSpace>' [ 0 4]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::clear' [ 0 5 10 87]
'cc::RecordPaintCanvas::scale' [ 0 4 23]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::move<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__destroy<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'cc::FilterOperations::Blend' [ 0 4 22]
'sktfitsin::Private::SkTInRange_Cast<int, long>' [ 0 11 20]
'std::__1::min<float>' [ 0 5 10]
'base::internal::OptionalBase<cc::ScopedRasterFlags>::FreeIfNeeded' [ 0 6 16 53]
'SkImageInfo::computeMinByteSize' [ 0 13]
'std::__1::__compressed_pair<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *> &>' [ 0 5 10]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::__compressed_pair<nullptr_t, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10 106]
'cc::ServiceImageTransferCacheEntry::image' [ 0 4 36]
'std::__1::__less<float, float>::operator()' [ 0 5 10 32]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::AnnotateOp>' [ 0 4 19]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 67]
'sk_sp<cc::PaintOpBuffer>::operator bool' [ 0 26]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::__construct_backward<float *>' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<float> >::deallocate' [ 0 5 10 57]
'SkColorSpaceTransferFn' [ 0]
'std::__1::forward<std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<float, 0, false>' [ 0 5 10]
'U16CPU' [ 0]
'std::__1::remove_reference<std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10]
'sktfitsin' [ 0]
'std::__1::atomic<SkPath::Convexity>' [ 0 5 10]
'gfx::Rect::SetRect' [ 0 5 11]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__move_assign' [ 0 5 10 136]
'std::__1::forward<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>::get' [ 0 6 16 63]
'cc::FilterOperation::CreateContrastFilter' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::max_size' [ 0 5 10 100]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__move_assign' [ 0 5 10 70]
'cc::ComposePaintFilter::outer' [ 0 4 24]
'cc::PaintShader::CreateSkShader' [ 0 4 17]
'cc::PaintImage::content_id' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<Frame> >' [ 0 5 10]
'SkRefCntBase' [ 0]
'std::__1::less<void>::operator()<int &, int &>' [ 0 5 10 22]
'SkImageGenerator::uniqueID' [ 0 18]
'SkRefCntBase::internal_dispose_restore_refcnt_to_1::operator()' [ 0 14 52]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::__rebind_pointer<void *, std::__1::__tree_node_base<void *> >' [ 0 5 10]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__vector_base' [ 0 5 10 96]
'cc::PaintFlagsPaintFilter::~PaintFlagsPaintFilter' [ 0 4 27]
'cc::(anonymous namespace)::SizeCounter::WriteSimple<int>' [ 0 4 27 40]
'cc::Rasterizer<cc::RotateOp, false>::Raster' [ 0 4 37]
'std::__1::remove_reference<cc::SkiaPaintCanvas *>' [ 0 5 10]
'SkPaint::getImageFilter' [ 0 9]
'cc::PaintOpBuffer::push<cc::DrawColorOp, unsigned int &, SkBlendMode>' [ 0 4 19]
'std::__1::forward<const SkPoint3 &>' [ 0 5 10]
'std::__1::__wrap_iter<const cc::FrameMetadata *>::base' [ 0 5 10 50]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::clear' [ 0 5 10 135]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::begin' [ 0 5 10 86]
'SkPixmap::colorType' [ 0 10]
'SkNoDrawCanvas::onDrawShadowRec' [ 0 16]
'cc::CustomDataOp::AreEqual' [ 0 4 18]
'base::internal::OptionalBase<unsigned int>::FreeIfNeeded' [ 0 6 16 44]
'wctrans_t' [ 0]
'cc::SkiaPaintCanvas::clipPath' [ 0 4 21]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__destruct_at_end' [ 0 5 10 69]
'std::__1::remove_reference<cc::DisplayItemList::UsageHint>' [ 0 5 10]
'cc::ScopedRasterFlags::DecodeRecordShader' [ 0 4 23]
'sk_make_sp<cc::BlurPaintFilter, float, float, SkBlurImageFilter::TileMode, sk_sp<cc::PaintFilter> >' [ 0]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'cc::PaintOpReader::valid' [ 0 4 19]
'cc::CreateNoOpFilter' [ 0 4]
'cc::PaintOpReader::ReadBlurPaintFilter' [ 0 4 19]
'cc::DiscardableImageMap::AnimatedImageMetadata::AnimatedImageMetadata' [ 0 4 25 48]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10 98]
'sk_sp<SkColorSpace>::get' [ 0 21]
'std::__1::allocator_traits<std::__1::allocator<const SkDescriptor *> >' [ 0 5 10]
'cc::PaintShader::MakeRadialGradient' [ 0 4 17]
'base::internal::ReversedAdapter<std::__1::vector<SkPaint, std::__1::allocator<SkPaint> > >::ReversedAdapter' [ 0 6 16 92]
'cc::ColorFilterPaintFilter::operator==' [ 0 4 28]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::__alloc' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::__construct_backward<cc::PaintTypeface *>' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::__construct<sk_sp<SkImageFilter>, sk_sp<SkImageFilter> >' [ 0 5 10 73]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::capacity' [ 0 5 10 130]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>' [ 0 5 10]
'cc::DrawTextBlobOp::RasterWithFlags' [ 0 4 20]
'std::__1::conditional<true, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::__nat>' [ 0 5 10]
'cc::(anonymous namespace)::SizeCounter::SizeCounter' [ 0 4 27 40]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::capacity' [ 0 5 10 137]
'std::__1::remove_reference<base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &, 1, false>' [ 0 5 10]
'cc::RecordPaintCanvas::saveLayerAlpha' [ 0 4 23]
'base::Optional<cc::RecordPaintCanvas>::operator->' [ 0 6 39]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__construct<cc::FilterOperation, cc::FilterOperation &>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<cc::ServicePathTransferCacheEntry *>' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>::__tree_const_iterator' [ 0 5 10 188]
'cc::DecodedDrawImage::src_rect_offset' [ 0 4 22]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >' [ 0 5 10]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::max_size' [ 0 5 10 78]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::OffsetPaintFilter, void>' [ 0 24]
'cc::Rasterizer<cc::SaveLayerAlphaOp, false>::Raster' [ 0 4 45]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::destroy<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'cc::PaintOpReader::ReadRecordPaintFilter' [ 0 4 19]
'std::__1::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >::~unique_ptr' [ 0 5 10 131]
'std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>::__tree_iterator' [ 0 5 10 182]
'cc::(anonymous namespace)::MapRectInternal' [ 0 4 27]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'cc::DrawIRectOp::RasterWithFlags' [ 0 4 17]
'std::__1::conditional<true, const Frame &, Frame &&>' [ 0 5 10]
'SkPath::IsInverseFillType' [ 0 8]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>' [ 0 5 10]
'SkPixmap::computeByteSize' [ 0 10]
'logging::CheckEQImpl<cc::PaintShader::Type, cc::PaintShader::Type>' [ 0 9]
'std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>::operator()' [ 0 5 10 66]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, 1, true>' [ 0 5 10]
'std::__1::remove_reference<const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10]
'cc::PaintOpReader::Read' [ 0 4 19]
'cc::RecordPaintCanvas::drawTextBlob' [ 0 4 23]
'std::__1::forward<void (cc::SkiaPaintCanvas::*)()>' [ 0 5 10]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::__destruct_at_end' [ 0 5 10 95]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::__end_cap' [ 0 5 10 75]
'cc::SkiaPaintCanvas::FlushAfterDrawIfNeeded' [ 0 4 21]
'SkColorSetARGB::operator()' [ 0 16]
'std::__1::remove_reference<const cc::FilterOperation &>' [ 0 5 10]
'cc::Rasterizer<cc::DrawColorOp, false>' [ 0 4]
'base::internal::UnderlyingType<unsigned int>' [ 0 6 16]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__split_buffer' [ 0 5 10 77]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__destruct_at_end' [ 0 5 10 148]
'sk_sp<cc::XfermodePaintFilter>' [ 0]
'cc::DiscardableImageMap::GetDiscardableImagesInRect' [ 0 4 25]
'sk_sp<cc::MergePaintFilter>::~sk_sp' [ 0 29]
'cc::AlphaThresholdPaintFilter::AlphaThresholdPaintFilter' [ 0 4 31]
'std::__1::vector<float, std::__1::allocator<float> >::__append' [ 0 5 10 54]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::unique_ptr' [ 0 5 10 113]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'SkSafeUnref<cc::DisplacementMapEffectPaintFilter>' [ 0]
'base::StackVector<gfx::Rect, 1>::StackVector' [ 0 6 33]
'SkCanvas::didSetMatrix' [ 0 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::ArithmeticPaintFilter, void>' [ 0 24]
'sk_make_sp<cc::MagnifierPaintFilter, const SkRect &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::MatrixConvolutionPaintFilter::SerializedSize' [ 0 4 34]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::default_delete<base::Value>, false>' [ 0 5 10 30]
'cc::ArithmeticPaintFilter::enforce_pm_color' [ 0 4 27]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::max_size' [ 0 5 10 75]
'std::__1::underlying_type<cc::PaintShader::Type>' [ 0 5 10]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *>' [ 0 5 10]
'cc::DrawColorOp' [ 0 4]
'std::__1::forward<gfx::ColorSpace>' [ 0 5 10]
'std::__1::remove_reference<base::StackAllocator<float, 3> &>' [ 0 5 10]
'scoped_refptr<cc::DisplayItemList>::~scoped_refptr' [ 0 36]
'SkSafeRef<const SkImage>' [ 0]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServicePathTransferCacheEntry *, void>' [ 0 5 10 77]
'cc::SkiaPaintCanvas::drawBitmap' [ 0 4 21]
'base::subtle::Acquire_Load' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >, 1, false>' [ 0 5 10]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::reserve' [ 0 5 10 130]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__vector_base' [ 0 5 10 77]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'base::Optional<cc::ScopedRasterFlags>::emplace<cc::PaintFlags *, cc::ImageProvider *&, const SkMatrix &, unsigned int>' [ 0 6 39]
'std::__1::__temp_value<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'std::__1::__temp_value<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::get' [ 0 5 10 157]
'cc::PaintOpWriter::WriteSimple<cc::PaintFilter::LightingType>' [ 0 4 19]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>' [ 0 5 10]
'sk_sp<SkPathEffect>' [ 0]
'cc::MorphologyPaintFilter::morph_type' [ 0 4 27]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::construct<const cc::PaintOp *, const cc::PaintOp *>' [ 0 5 10 75]
'SkMatrix::getSkewX' [ 0 10]
'SkMatrix::getSkewY' [ 0 10]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__construct_backward<cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10 100]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__move_assign_alloc' [ 0 5 10 158]
'base::internal::OptionalBase<cc::PaintOpBuffer::OffsetIterator>' [ 0 6 16]
'cc::PaintOpBuffer::OffsetIterator::operator++' [ 0 4 19 35]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::capacity' [ 0 5 10 142]
'double' [ 0]
'std::__1::remove_reference<cc::PaintFlags &>' [ 0 5 10]
'cc::PaintFilter::filter_bounds' [ 0 4 17]
'std::__1::remove_reference<sk_sp<SkImage> &>' [ 0 5 10]
'base::MakeRefCounted<cc::DisplayItemList, cc::DisplayItemList::UsageHint>' [ 0 6]
'cc::DrawIRectOp' [ 0 4]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__move_assign_alloc' [ 0 5 10 150]
'base::span<unsigned char, 18446744073709551615>::size' [ 0 6 49]
'cc::RTree<cc::DrawImage>::Reset' [ 0 4 26]
'std::__1::forward<base::ListValue *&>' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::vector' [ 0 5 10 54]
'cc::PaintImage::width' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<cc::ImageProvider::ScopedDecodedDrawImage *>::__nat, cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__destroy<unsigned int>' [ 0 5 10 64]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::emplace_back<int, cc::PaintImage::CompletionState, const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &, int, unsigned int>' [ 0 5 10 136]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__vector_base' [ 0 5 10 158]
'gfx::Rect::height' [ 0 5 11]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 70]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::end' [ 0 5 10 89]
'cc::PaintOpReader::ReadSimple<SkPoint>' [ 0 4 19]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'sk_sp<SkTextBlob>::operator->' [ 0 19]
'cc::ArithmeticPaintFilter::~ArithmeticPaintFilter' [ 0 4 27]
'cc::LightingPointPaintFilter::input' [ 0 4 30]
'cc::(anonymous namespace)::DataWriter::WriteSimple<unsigned char>' [ 0 4 27 39]
'cc::PaintFont::SetEmbeddedBitmapText' [ 0 4 15]
'sk_sp<const SkPicture>::sk_sp<SkPicture, void>' [ 0 24]
'isfinite<float>' [ 0]
'logging::CheckGEImpl<unsigned long, unsigned long>' [ 0 9]
'SkIRect::intersectNoEmptyCheck::operator()' [ 0 9 32]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10 267]
'SkNoDrawCanvas::onDrawImageNine' [ 0 16]
'std::__1::remove_reference<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceShaderTransferCacheEntry *, void>' [ 0 5 10 77]
'cc::FilterOperations::MapRect::operator()' [ 0 4 22 31]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkImageGenerator>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::SkiaPaintImageGenerator>, void>' [ 0 5 10 87]
'std::__1::forward<unsigned int>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__destroy<gfx::Rect>' [ 0 5 10 61]
'std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &, void>' [ 0 5 10 116]
'std::__1::pair<cc::TransferCacheEntryType, unsigned int>::pair<cc::TransferCacheEntryType &, unsigned int &, false>' [ 0 5 10 58]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::data' [ 0 5 10 85]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::get' [ 0 5 10 67]
'std::__1::swap<std::__1::pair<cc::DrawImage, gfx::Rect> *>' [ 0 5 10]
'base::Optional<cc::ScopedRasterFlags>::operator->' [ 0 6 39]
'SkSize' [ 0]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::capacity' [ 0 5 10 93]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'base::Optional<cc::PaintOpBuffer::Iterator>::emplace<const cc::PaintOpBuffer *&>' [ 0 6 45]
'std::__1::remove_reference<const cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10]
'cc::ClientPathTransferCacheEntry::Serialize' [ 0 4 34]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kImage>::Type' [ 0 4 95]
'std::__1::__atomic_base<SkPath::Convexity, false>' [ 0 5 10]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__insert_unique' [ 0 5 10 232]
'cc::DisplayItemList::push<cc::DrawRectOp, const SkRect &, const cc::PaintFlags &>' [ 0 4 21]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::__construct<const cc::PaintOp *, const cc::PaintOp *const &>' [ 0 5 10 75]
'cc::PaintOpReader::ReadMatrixConvolutionPaintFilter' [ 0 4 19]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::construct<float, float>' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation>, 1, true>' [ 0 5 10]
'unsigned short' [ 0]
'cc::PaintOpBuffer::PlaybackFoldingIterator::FindNextOp' [ 0 4 19 44]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__make_iter' [ 0 5 10 58]
'base::internal::ArithmeticOrUnderlyingEnum<long, false>' [ 0 6 16]
'std::__1::move<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > &>' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::assign<cc::FilterOperation *>' [ 0 5 10 82]
'cc::PaintOpBuffer::OffsetIterator::operator->' [ 0 4 19 35]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::~vector' [ 0 5 10 135]
'cc::g_raster_functions' [ 0 4]
'std::__1::__advance<const unsigned int *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::TracedValue>, 1, true>::__compressed_pair_elem<std::__1::default_delete<base::trace_event::TracedValue>, void>' [ 0 5 10 101]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::allocate' [ 0 5 10 46]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServiceTransferCacheEntry *, true>' [ 0 5 10 120]
'SkFontStyle::width' [ 0 13]
'std::__1::__pointer_type<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >' [ 0 5 10]
'std::__1::__copy<std::__1::__wrap_iter<const gfx::Rect *>, gfx::Rect *>' [ 0 5 10]
'__uintmax_t' [ 0]
'base::internal::CheckedNumeric<unsigned long>::operator+=<unsigned long>' [ 0 6 16 47]
'SkMatrix::get' [ 0 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >::allocate' [ 0 5 10 73]
'sk_sp<cc::MatrixConvolutionPaintFilter>::~sk_sp' [ 0 41]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation> &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation> &, void>' [ 0 5 10 88]
'cc::CustomDataOp' [ 0 4]
'cc::ClientColorSpaceTransferCacheEntry' [ 0 4]
'std::__1::__move_backward<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'logging::MakeCheckOpString<cc::DisplayItemList::UsageHint, cc::DisplayItemList::UsageHint>' [ 0 9]
'cc::ClientColorSpaceTransferCacheEntry::Serialize' [ 0 4 40]
'SkSafeUnref<cc::ImagePaintFilter>' [ 0]
'std::__1::__compressed_pair<SkMiniRecorder *, std::__1::default_delete<SkMiniRecorder> >' [ 0 5 10]
'std::__1::operator!=<const cc::FrameMetadata *>' [ 0 5 10]
'base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList>::Destruct' [ 0 6 62]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'cc::ClipPathOp::Deserialize' [ 0 4 16]
'std::__1::conditional<false, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >' [ 0 5 10]
'cc::LightingSpotPaintFilter::shininess' [ 0 4 29]
'std::__1::vector<float, std::__1::allocator<float> >::~vector' [ 0 5 10 54]
'cc::SkiaPaintImageGenerator::onGetYUV8Planes' [ 0 4 29]
'cc::ServicePathTransferCacheEntry::CachedSize' [ 0 4 35]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::max_size' [ 0 5 10 93]
'std::__1::__compressed_pair<cc::ServiceShaderTransferCacheEntry *, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >::__compressed_pair<cc::ServiceShaderTransferCacheEntry *&, true>' [ 0 5 10 132]
'base::internal::ReversedAdapter<std::__1::vector<SkPaint, std::__1::allocator<SkPaint> > >' [ 0 6 16]
'base::internal::CheckedNumeric<int>::IsValid<int>' [ 0 6 16 37]
'std::__1::forward<const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10]
'sk_float_saturate2int' [ 0]
'cc::PaintFont::SetLcdRenderText' [ 0 4 15]
'cc::(anonymous namespace)::DiscardableImageGenerator::~DiscardableImageGenerator' [ 0 4 27 54]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__destroy<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10 106]
'std::__1::__wrap_iter<SkPaint *>::operator*' [ 0 5 10 34]
'cc::Rasterizer<cc::DrawPathOp, true>' [ 0 4]
'std::__1::once_flag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >, 1, true>' [ 0 5 10]
'SkMatrix44' [ 0]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'cc::DrawImage' [ 0 4]
'sk_make_sp<cc::LightingPointPaintFilter, const cc::PaintFilter::LightingType &, const SkPoint3 &, const unsigned int &, const float &, const float &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::ServiceShaderTransferCacheEntry::raster_color_space_id' [ 0 4 37]
'base::internal::CommonMaxOrMin<int, int>' [ 0 6 16]
'base::internal::OptionalStorage<cc::DecodeStashingImageProvider, false, false>' [ 0 6 16]
'cc::RTree<cc::DrawImage>::Build<std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >, (lambda at ../../cc/paint/discardable_image_map.cc:440:7), (lambda at ../../cc/paint/discardable_image_map.cc:442:7)>' [ 0 4 26]
'cc::MergePaintFilter::~MergePaintFilter' [ 0 4 22]
'std::__1::pair<std::__1::__tree_const_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>' [ 0 5 10]
'SK_AlphaTRANSPARENT' [ 0]
'cc::PaintOpReader::ReadLightingDistantPaintFilter' [ 0 4 19]
'cc::MagnifierPaintFilter::~MagnifierPaintFilter' [ 0 4 26]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::size' [ 0 5 10 86]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &, void>' [ 0 5 10 115]
'sk_sp<const SkImage>::operator bool' [ 0 22]
'std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator++' [ 0 5 10 78]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::release' [ 0 5 10 113]
'gfx::Size::set_width' [ 0 5 11]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__swap_out_circular_buffer' [ 0 5 10 143]
'SkSafeUnref<SkFlattenable>' [ 0]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__swap_out_circular_buffer' [ 0 5 10 62]
'cc::RotateOp::IsValid' [ 0 4 14]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kRawMemory>' [ 0 4]
'std::__1::__tree_is_left_child<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'cc::ClientPaintTypefaceTransferCacheEntry::~ClientPaintTypefaceTransferCacheEntry' [ 0 4 43]
'cc::PaintFlags::getFilterQuality' [ 0 4 16]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__destruct_at_end' [ 0 5 10 77]
'base::span<const unsigned char, 18446744073709551615>::size' [ 0 6 55]
'scoped_refptr<cc::DisplayItemList>::AddRef' [ 0 36]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadSimple<unsigned int>' [ 0 4 44]
'logging::CheckEQImpl<float, float>' [ 0 9]
'SkYUVColorSpace' [ 0]
'cc::PaintOpReader::ReadMorphologyPaintFilter' [ 0 4 19]
'cc::PaintImage::Decode' [ 0 4 16]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> &>::second' [ 0 5 10 99]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char>, 1, true>' [ 0 5 10]
'std::__1::make_unique<cc::ServicePaintTypefaceTransferCacheEntry>' [ 0 5 10]
'base::Optional<unsigned int>::operator*' [ 0 6 30]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::deallocate' [ 0 5 10 59]
'std::__1::__compressed_pair_elem<SkDescriptorMapOperators, 1, true>' [ 0 5 10]
'cc::RecordPaintFilter::SerializedSize' [ 0 4 23]
'scoped_refptr<cc::PaintTextBlob>::operator->' [ 0 34]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::destroy<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 97]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedAddOp, unsigned long>' [ 0 6 16 47]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::equal_range<int>' [ 0 6 16 191]
'cc::PaintImage::repetition_count' [ 0 4 16]
'std::__1::remove_reference<const std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct_backward<float>' [ 0 5 10 57]
'sk_sp<SkDrawLooper>' [ 0]
'cc::(anonymous namespace)::DiscardableImageGenerator::AddImageFromFlags' [ 0 4 27 54]
'std::__1::conditional<true, std::__1::pair<int, cc::PaintImage::DecodingMode> &&, std::__1::pair<int, cc::PaintImage::DecodingMode> &>' [ 0 5 10]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__destruct_at_end' [ 0 5 10 86]
'scoped_refptr<cc::PaintTextBlob>::~scoped_refptr' [ 0 34]
'std::__1::vector<float, std::__1::allocator<float> >::operator[]' [ 0 5 10 54]
'base::internal::CopyConstructible<false>' [ 0 6 16]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'SkNVRefCnt<SkPathRef>' [ 0]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10 77]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'cc::PaintOpReader::ReadXfermodePaintFilter' [ 0 4 19]
'cc::ScopedRasterFlags::AdjustStrokeIfNeeded' [ 0 4 23]
'cc::SaveLayerAlphaOp::Deserialize' [ 0 4 22]
'sk_sp<cc::PaintFilter>::sk_sp<cc::LightingPointPaintFilter, void>' [ 0 24]
'cc::FilterOperation::drop_shadow_offset' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::deallocate' [ 0 5 10 93]
'SkBool8' [ 0]
'sk_sp<cc::PaintOpBuffer>::operator->' [ 0 26]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::get' [ 0 5 10 113]
'base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::RepeatingCallback' [ 0 6 101]
'SkColor4f' [ 0]
'std::__1::iterator_traits<gfx::Rect *>' [ 0 5 10]
'cc::PaintShader::SetColorsAndPositions' [ 0 4 17]
'cc::RecordPaintCanvas::translate' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'cc::RecordPaintCanvas::drawImage' [ 0 4 23]
'cc::PaintShader::MakeSweepGradient' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<SkPaint, std::__1::allocator<SkPaint>, true>' [ 0 5 10 30]
'base::trace_event::ConvertableToTraceFormat::ToString' [ 0 6 19 45]
'cc::DrawRectOp' [ 0 4]
'cc::UpdateTypeAndSkip<cc::DrawRRectOp>' [ 0 4]
'std::__1::forward<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, true>' [ 0 5 10 30]
'base::Optional<cc::PaintFlags>::emplace<const cc::PaintFlags &>' [ 0 6 32]
'std::__1::move<std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10]
'cc::PaintOpReader::ReadSimple<unsigned long>' [ 0 4 19]
'cc::PaintFilter' [ 0 4]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__recommend' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__max_size' [ 0 5 10 100]
'cc::DisplayItemList::DisplayItemList' [ 0 4 21]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::destroy' [ 0 5 10 232]
'std::__1::__const_void_pointer<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3>, false>' [ 0 5 10]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::clear' [ 0 5 10 77]
'std::__1::move<cc::PaintTextBlob *&>' [ 0 5 10]
'base::internal::OptionalStorageBase<SkNoDrawCanvas, false>::OptionalStorageBase' [ 0 6 16 60]
'base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>' [ 0 6 16]
'base::internal::FunctorTraits<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), void>::Invoke<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), cc::SimpleBufferSerializer *, const cc::PaintOp *, const cc::PaintOp::SerializeOptions &>' [ 0 6 16 144]
'base::internal::OptionalStorage<gfx::Rect, true, true>::OptionalStorage' [ 0 6 16 56]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'base::flat_map<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >, std::__1::less<void> >' [ 0 6]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::second' [ 0 5 10 153]
'std::__1::__wrap_iter<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'logging::MakeCheckOpString<base::TimeDelta, base::TimeDelta>' [ 0 9]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::capacity' [ 0 5 10 125]
'std::__1::__const_void_pointer<gfx::Rect *, base::StackAllocator<gfx::Rect, 1>, false>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__push_back_slow_path<sk_sp<cc::PaintFilter> >' [ 0 5 10 92]
'std::__1::__unwrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10]
'cc::RTree<unsigned long>::AllocateNodeAtLevel' [ 0 4 26]
'std::__1::operator!=<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::MathOp<CheckedMulOp, int, base::internal::CheckedNumeric<long> >' [ 0 6 16 38]
'gfx::operator==' [ 0 5]
'gfx' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::max_size' [ 0 5 10 65]
'cc::PaintOpBuffer::push<cc::SaveLayerOp, const SkRect *&, const cc::PaintFlags *&>' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__max_size' [ 0 5 10 106]
'long long unsigned int' [ 0]
'std::__1::__compressed_pair<base::ListValue *, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>' [ 0 5 10]
'sk_sp<SkRecord>' [ 0]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >::__compressed_pair<nullptr_t, const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10 91]
'sk_sp<const cc::PaintOpBuffer>::release' [ 0 32]
'cc::MatrixConvolutionPaintFilter::MatrixConvolutionPaintFilter' [ 0 4 34]
'cc::PaintOpBuffer::Reset' [ 0 4 19]
'SkRect::height' [ 0 8]
'std::__1::remove_reference<float *&>' [ 0 5 10]
'sktfitsin::Private::underlying_type<int, false>' [ 0 11 20]
'std::__1::vector<float, std::__1::allocator<float> >::__annotate_shrink' [ 0 5 10 54]
'cc::FilterOperations::operator=' [ 0 4 22]
'base::internal::OptionalStorage<SkNoDrawCanvas, false, false>::OptionalStorage' [ 0 6 16 63]
'std::__1::forward<const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > &>' [ 0 5 10]
'cc::DisplayItemList::GenerateDiscardableImagesMetadata' [ 0 4 21]
'cc::RasterWithFlagsFunction' [ 0 4]
'std::__1' [ 0 5]
'std::__1::pointer_traits<cc::PaintTypeface *>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::SetMatrixOp>' [ 0 4 19]
'cc::ClientImageTransferCacheEntry::SerializedSize' [ 0 4 35]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__recommend' [ 0 5 10 151]
'std::__1::__add_lvalue_reference_impl<SkImageGenerator, true>' [ 0 5 10]
'std::__1::forward<cc::ServiceImageTransferCacheEntry *>' [ 0 5 10]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<long>' [ 0 6 16 76]
'base::internal::CheckedNumeric<long>::CheckedNumeric<int>' [ 0 6 16 38]
'cc::MagnifierPaintFilter::SnapshotWithImagesInternal' [ 0 4 26]
'gfx::Size::Size' [ 0 5 11]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::__nat, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'SkRect::MakeWH' [ 0 8]
'base::StackAllocator<gfx::Rect, 1>::deallocate' [ 0 6 36]
'sktfitsin::Private::SkTInRange_Cast<unsigned char, int>' [ 0 11 20]
'std::__1::move<std::__1::pair<cc::DrawImage, gfx::Rect> *&>' [ 0 5 10]
'std::__1::remove_reference<cc::DiscardableImageMap::AnimatedImageMetadata *&>' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__end_cap' [ 0 5 10 73]
'cc::Rasterizer<cc::ScaleOp, false>' [ 0 4]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::TurbulencePaintFilter, void>' [ 0 24]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kImage>::operator=' [ 0 4 95]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 148]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>::second' [ 0 5 10 84]
'SkTo<unsigned char, int>::operator()' [ 0 26]
'std::__1::__size_type<std::__1::allocator<sk_sp<SkImageFilter> >, long, true>' [ 0 5 10]
'cc::PaintOpReader::ReadFlattenable<SkDrawLooper>' [ 0 4 19]
'sk_sp<cc::ImagePaintFilter>::~sk_sp' [ 0 29]
'sk_sp<SkImageFilter>::operator=' [ 0 22]
'std::__1::__compressed_pair<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 98]
'std::__1::swap<cc::DisplayItemList *>' [ 0 5 10]
'cc::Rasterizer<cc::ClipRectOp, false>::Raster' [ 0 4 39]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 77]
'SkSafeUnref<SkData>' [ 0]
'SkColorFilter::GetFlattenableType' [ 0 15]
'cc::Rasterizer<cc::SaveOp, false>::RasterWithFlags' [ 0 4 35]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 60]
'cc::ColorFilterPaintFilter::ColorFilterPaintFilter' [ 0 4 28]
'std::__1::accumulate<std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >, gfx::Rect, (lambda at ../../cc/paint/filter_operations.cc:70:26)>' [ 0 5 10]
'cc::PaintFilter::set_has_animated_images' [ 0 4 17]
'cc::OffsetPaintFilter::SnapshotWithImagesInternal' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 106]
'std::__1::addressof<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__push_back_slow_path<const gfx::Rect &>' [ 0 5 10 62]
'sk_sp<SkTypeface>::~sk_sp' [ 0 19]
'cc::DisplayItemList::Raster' [ 0 4 21]
'base::RepeatingCallback<void ()>::operator=' [ 0 6 34]
'cc::ClientPaintTypefaceTransferCacheEntry::SerializedSize' [ 0 4 43]
'sk_sp<SkTypeface>' [ 0]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::__destruct_at_end' [ 0 5 10 144]
'std::__1::conditional<true, std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__nat>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::remove_reference<const base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'cc::DrawPathOp::CountSlowPaths' [ 0 4 16]
'cc::PaintImage::kDefaultFrameIndex' [ 0 4 16]
'cc::FilterOperation::CreateBlurFilter' [ 0 4 21]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >, std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *>, true>' [ 0 5 10]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__construct_at_end<cc::FrameMetadata *>' [ 0 5 10 78]
'cc::(anonymous namespace)::DiscardableImageGenerator::ImageGatheringProvider::ImageGatheringProvider' [ 0 4 27 54 78]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>, false>' [ 0 5 10 30]
'cc::DisplayItemList::push<cc::DrawRRectOp, const SkRRect &, const cc::PaintFlags &>' [ 0 4 21]
'std::__1::remove_reference<cc::PaintOpBuffer &>' [ 0 5 10]
'cc::TranslateOp::Deserialize' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::destroy<sk_sp<SkImageFilter> >' [ 0 5 10 73]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::__construct<Frame, cc::PaintOpBuffer::CompositeIterator, const SkMatrix &, int>' [ 0 5 10 57]
'std::__1::move<unsigned int &>' [ 0 5 10]
'cc::FilterOperations::Append' [ 0 4 22]
'base::internal::IsValueInRangeFastOp<int, long, void>' [ 0 6 16]
'std::__1::allocator<unsigned long>' [ 0 5 10]
'cc::PaintShader::GetRasterizationTileRect' [ 0 4 17]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::vector' [ 0 5 10 78]
'sk_sp<cc::PaintFilter>' [ 0]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__make_iter' [ 0 5 10 62]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kPath>' [ 0 4]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare::extract_if_value_type' [ 0 6 16 191 208]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 164]
'cc::g_equals_operator' [ 0 4]
'base::StackAllocator<float, 3>' [ 0 6]
'std::__1::forward<SkRect>' [ 0 5 10]
'SkTextBlob::bounds' [ 0 12]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, void>' [ 0 5 10 78]
'cc::DrawImage::filter_quality' [ 0 4 15]
'std::__1::advance<gfx::Rect *>' [ 0 5 10]
'cc::DrawImageRectOp::DrawImageRectOp' [ 0 4 21]
'base::internal::PassingTraits<SkCanvas *, true>' [ 0 6 16]
'cc::PaintOpBuffer::CompositeIterator::operator++' [ 0 4 19 38]
'base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::Destroy' [ 0 6 16 117]
'std::__1::__compressed_pair<char *, base::AlignedFreeDeleter>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10]
'cc::DrawRectOp::Serialize' [ 0 4 16]
'sktfitsin::Private::SkTInRange_LE_MaxD<int, unsigned long>::fits' [ 0 11 20 60]
'cc::(anonymous namespace)::Snapshot' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::allocate' [ 0 5 10 75]
'cc::PaintOpWriter::WriteSimple<unsigned int>' [ 0 4 19]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::data' [ 0 5 10 139]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::capacity' [ 0 5 10 79]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::push_back' [ 0 5 10 66]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__destruct_at_end' [ 0 5 10 62]
'std::__1::vector<float, std::__1::allocator<float> >::empty' [ 0 5 10 54]
'cc::PaintOpBuffer::push<cc::DrawImageOp, const cc::PaintImage &, float &, float &, const cc::PaintFlags *&>' [ 0 4 19]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector' [ 0 5 10 70]
'SkSafeUnref<cc::TilePaintFilter>' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__max_size' [ 0 5 10 97]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__swap_out_circular_buffer' [ 0 5 10 139]
'cc::DiscardableImageMap' [ 0 4]
'cc::FilterOperation::CreateSaturateFilter' [ 0 4 21]
'scoped_refptr<cc::PaintTextBlob>' [ 0]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__alloc' [ 0 5 10 142]
'std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::base' [ 0 5 10 80]
'std::__1::__pointer_type<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot, std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__annotate_new' [ 0 5 10 151]
'cc::PaintShader' [ 0 4]
'std::__1::__compressed_pair<unsigned long, SkDescriptorMapOperators>' [ 0 5 10]
'base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::~RepeatingCallback' [ 0 6 101]
'logging::MakeCheckOpString<const cc::PaintOpBuffer *, const cc::PaintOpBuffer *>' [ 0 9]
'cc::PaintTextBlob::ToSkTextBlob' [ 0 4 19]
'std::__1::move<cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10]
'std::__1::remove_reference<base::internal::OptionalBase<gfx::ColorSpace> &>' [ 0 5 10]
'cc::DrawRRectOp::AreEqual' [ 0 4 17]
'cc::PaintOp::kMaxSkip' [ 0 4 13]
'SkTMin<int>' [ 0]
'std::__1::forward<const SkDropShadowImageFilter::ShadowMode &>' [ 0 5 10]
'std::__1::__pointer_type<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >' [ 0 5 10]
'cc::PaintImage::completion_state' [ 0 4 16]
'std::__1::forward<cc::DisplayItemList *>' [ 0 5 10]
'cc::ClipPathOp::CountSlowPaths' [ 0 4 16]
'cc::PaintOp::IsValidOrUnsetRect' [ 0 4 13]
'cc::RTree<unsigned long>::Build<std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >, (lambda at ../../cc/paint/display_item_list.cc:71:18), (lambda at ../../cc/paint/display_item_list.cc:74:18)>' [ 0 4 26]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::clear' [ 0 5 10 77]
'cc::ConcatOp::Deserialize' [ 0 4 14]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::~vector' [ 0 5 10 86]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::destroy<unsigned long>' [ 0 5 10 65]
'base::internal::OptionalStorage<cc::RecordPaintCanvas, false, false>::OptionalStorage' [ 0 6 16 70]
'cc::DrawRecordOp::Raster' [ 0 4 18]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__swap_out_circular_buffer' [ 0 5 10 58]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::deallocate' [ 0 5 10 71]
'cc::ClipPathOp::Raster' [ 0 4 16]
'cc::(anonymous namespace)::IsFullQuad<SkRect>' [ 0 4 27]
'sk_sp<SkFlattenable>::release' [ 0 22]
'std::__1::forward<bool>' [ 0 5 10]
'cc::ClipRRectOp::Serialize' [ 0 4 17]
'std::__1::__to_raw_pointer<cc::FilterOperation>' [ 0 5 10]
'SkAutoCanvasRestore::SkAutoCanvasRestore' [ 0 21]
'SkPath::getBounds' [ 0 8]
'std::__1::remove_reference<base::trace_event::TracedValue *>' [ 0 5 10]
'std::__1::allocator<gfx::Rect>::allocate' [ 0 5 10 32]
'base::internal::CopyAssignable<false>' [ 0 6 16]
'cc::ColorFilterPaintFilter::~ColorFilterPaintFilter' [ 0 4 28]
'cc::PaintImage::PaintImage' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<float> >::__destroy<float>' [ 0 5 10 57]
'base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::~BindState' [ 0 6 16 198]
'SkPathRef::points' [ 0 11]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 148]
'SkTDArray<float>' [ 0]
'std::__1::__const_pointer<SkPaint, SkPaint *, std::__1::allocator<SkPaint>, true>' [ 0 5 10]
'cc::(anonymous namespace)::SizeCounter' [ 0 4 27]
'base::internal::OptionalBase<unsigned int>::OptionalBase<unsigned int>' [ 0 6 16 44]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >' [ 0 5 10]
'SkTMax<float>' [ 0]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__end_cap' [ 0 5 10 132]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::__destruct_at_end' [ 0 5 10 145]
'std::__1::__pointer_type<SkMiniRecorder, std::__1::default_delete<SkMiniRecorder> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<float, 3> &, 1, false>::__compressed_pair_elem<base::StackAllocator<float, 3> &, void>' [ 0 5 10 78]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::capacity' [ 0 5 10 86]
'base::internal::PassingTraits<unsigned int, true>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> >, true>' [ 0 5 10 30]
'base::internal::OptionalBase<unsigned long>::OptionalBase' [ 0 6 16 45]
'cc::PaintOp::AreEqualEvenIfNaN' [ 0 4 13]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>::second' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry>, false>' [ 0 5 10 30]
'base::internal::OptionalStorageBase<cc::DecodeStashingImageProvider, false>' [ 0 6 16]
'std::__1::pointer_traits<float *>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__append' [ 0 5 10 139]
'cc::SkiaPaintImageGenerator' [ 0 4]
'cc::PaintImageGenerator::GetSupportedDecodeSize' [ 0 4 25]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::size' [ 0 5 10 54]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'long int' [ 0]
'std::__1::__compressed_pair_elem<SkImageGenerator *, 0, false>' [ 0 5 10]
'SkNoDrawCanvas::onDrawDRRect' [ 0 16]
'cc::ClientColorSpaceTransferCacheEntry::Id' [ 0 4 40]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::capacity' [ 0 5 10 140]
'std::__1::operator-<const gfx::Rect *, const gfx::Rect *>' [ 0 5 10]
'base::Optional<cc::ScopedRasterFlags>' [ 0 6]
'va_list' [ 0]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__alloc' [ 0 5 10 92]
'std::__1::conditional<true, const cc::PaintTypeface &, cc::PaintTypeface &&>' [ 0 5 10]
'std::__1::allocator<unsigned long>::deallocate' [ 0 5 10 36]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::second' [ 0 5 10 147]
'SkSafeUnref<cc::RecordPaintFilter>' [ 0]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::Unwrap' [ 0 6 88]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::operator->' [ 0 5 10 258]
'std::__1::remove_reference<void (cc::SkiaPaintCanvas::*const &)()>' [ 0 5 10]
'cc::FilterOperations::ToString' [ 0 4 22]
'cc::FilterOperation::type' [ 0 4 21]
'sk_sp<cc::PaintShader>::~sk_sp' [ 0 24]
'std::__1::make_unique<cc::ServiceRawMemoryTransferCacheEntry>' [ 0 5 10]
'std::__1::conditional<true, const sk_sp<cc::PaintFilter> &, sk_sp<cc::PaintFilter> &&>' [ 0 5 10]
'base::internal::OptionalBase<SkMatrix>::OptionalBase' [ 0 6 16 40]
'cc::FilterOperation::FilterOperation' [ 0 4 21]
'std::__1::__const_void_pointer<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, false>' [ 0 5 10]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >' [ 0 5 10]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::clear' [ 0 5 10 93]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__split_buffer' [ 0 5 10 148]
'SkCanvas::getLocalClipBounds' [ 0 10]
'cc::PaintOpWriter::WriteSimple<unsigned long>' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>::__nat, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'base::DictionaryValue' [ 0 6]
'sk_sp<cc::PaintFilter>::sk_sp<cc::TilePaintFilter, void>' [ 0 24]
'SkSafeUnref<cc::OffsetPaintFilter>' [ 0]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'cc::SaveLayerOp::RasterWithFlags' [ 0 4 17]
'cc::DrawLineOp::IsValid' [ 0 4 16]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'sk_sp<cc::ComposePaintFilter>' [ 0]
'SkWeakRefCnt::weak_ref::operator()' [ 0 14 24]
'std::__1::__add_lvalue_reference_impl<base::Value, true>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kImage>::TransferCacheEntryBase' [ 0 4 94]
'logging::CheckEQImpl<unsigned int, unsigned long>' [ 0 9]
'std::__1::add_lvalue_reference<cc::ServiceColorSpaceTransferCacheEntry>' [ 0 5 10]
'SkPixmap::info' [ 0 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'cc::DrawRecordOp::IsValid' [ 0 4 18]
'std::__1::__pointer_type_imp::__pointer_type<WireTypeface, std::__1::allocator<WireTypeface>, true>' [ 0 5 10 30]
'cc::AlphaThresholdPaintFilter::SerializedSize' [ 0 4 31]
'logging::MakeCheckOpString<cc::PaintImage::AnimationType, cc::PaintImage::AnimationType>' [ 0 9]
'std::__1::pair<int, base::StackVector<gfx::Rect, 1> >::pair' [ 0 5 10 55]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::max_size' [ 0 5 10 89]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 138]
'std::__1::move<base::OnceCallback<void ()> &>' [ 0 5 10]
'__va_list_tag' [ 0]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__destruct_at_end' [ 0 5 10 58]
'base::internal::OptionalStorage<cc::PaintFlags, false, false>::~OptionalStorage' [ 0 6 16 63]
'SkIRect::MakeEmpty' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::construct<unsigned int>' [ 0 5 10 64]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::max_size' [ 0 5 10 54]
'std::__1::add_lvalue_reference<base::DictionaryValue>' [ 0 5 10]
'std::__1::swap<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'gfx::RectF::RectF' [ 0 5 12]
'cc::PaintFlags::SetInternalFlag' [ 0 4 16]
'std::__1::distance<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>::~Branch' [ 0 4 26 49]
'cc::(anonymous namespace)::g_next_image_content_id' [ 0 4 27]
'cc::TransferCacheSerializeHelper::CreateEntry' [ 0 4 34]
'SkSafeUnref<cc::PaintShader>' [ 0]
'std::__1::remove_reference<std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &, void>' [ 0 5 10 120]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__make_iter' [ 0 5 10 86]
'gfx::ColorSpace' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct<gfx::Rect, const gfx::Rect &>' [ 0 5 10 61]
'cc::DrawIRectOp::AreEqual' [ 0 4 17]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::max_size' [ 0 5 10 135]
'std::__1::vector<float, base::StackAllocator<float, 3> >' [ 0 5 10]
'cc::(anonymous namespace)::IsValidPaintShaderType' [ 0 4 27]
'std::__1::addressof<std::__1::aligned_storage<8, 4>::type>' [ 0 5 10]
'base::StackContainer<std::__1::vector<float, base::StackAllocator<float, 3> >, 3>::~StackContainer' [ 0 6 83]
'std::__1::__temp_value<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::~__temp_value' [ 0 5 10 157]
'cc::Rasterizer<cc::NoopOp, false>' [ 0 4]
'logging::CheckLEImpl' [ 0 9]
'sk_sp<SkImageFilter>::operator bool' [ 0 22]
'cc::PaintOpBuffer::PlaybackFoldingIterator::operator++' [ 0 4 19 44]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::ScaleOp>' [ 0 4 19]
'base::internal::UnderlyingType<long>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, 1, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry>, false>' [ 0 5 10 30]
'cc::PaintOpWithFlags::HasNonAAPaint' [ 0 4 22]
'cc::DrawRecordOp::AreEqual' [ 0 4 18]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::__split_buffer' [ 0 5 10 75]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__vector_base' [ 0 5 10 93]
'std::__1::forward<SkBlendMode &>' [ 0 5 10]
'cc::BlurPaintFilter::sigma_x' [ 0 4 21]
'cc::BlurPaintFilter::sigma_y' [ 0 4 21]
'cc::(anonymous namespace)::GetSaturatingBrightnessMatrix' [ 0 4 27]
'cc::PaintImage' [ 0 4]
'cc::TilePaintFilter::~TilePaintFilter' [ 0 4 21]
'base::subtle::RefCountedThreadSafeBase::RefCountedThreadSafeBase' [ 0 6 14 40]
'base::RepeatingCallback<void (SkCanvas *, unsigned int)>::operator=' [ 0 6 58]
'cc::ConcatOp::Serialize' [ 0 4 14]
'std::__1::remove_reference<cc::RTree<unsigned long>::Branch<unsigned long> *&>' [ 0 5 10]
'base::StackContainer<std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >, 1>::StackContainer' [ 0 6 155]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__count_unique<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10 232]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::Impl::~Impl' [ 0 6 16 191 197]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >::reset' [ 0 5 10 121]
'std::__1::remove_reference<const cc::PaintImage &>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::FilterOperation, std::__1::allocator<cc::FilterOperation>, true>' [ 0 5 10 30]
'base::StackContainer<std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >, 2>::container' [ 0 6 117]
'std::__1::advance<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'base::internal::OptionalBase<SkImageFilter::CropRect>::OptionalBase' [ 0 6 16 55]
'base::StackVector<const cc::PaintOp *, 3>::StackVector' [ 0 6 43]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >' [ 0 5 10]
'cc::ClipRectOp::IsValid' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'SkImage::width' [ 0 9]
'std::__1::vector<float, base::StackAllocator<float, 3> >::end' [ 0 5 10 58]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::deallocate' [ 0 5 10 98]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'std::__1::default_delete<SkCanvas>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::construct<sk_sp<cc::PaintFilter>, const sk_sp<cc::PaintFilter> &>' [ 0 5 10 78]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::~__split_buffer' [ 0 5 10 63]
'SkAutoTMalloc<unsigned char>' [ 0]
'sk_sp<cc::LightingSpotPaintFilter>::release' [ 0 36]
'cc::Rasterizer<cc::RestoreOp, false>::RasterWithFlags' [ 0 4 38]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'cc::SetMatrixOp::IsValid' [ 0 4 17]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>::__compressed_pair_elem<int, void>' [ 0 5 10 59]
'base::Optional<SkMatrix>::operator*' [ 0 6 26]
'std::__1::remove_reference<cc::DrawImage>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::resize' [ 0 5 10 68]
'std::__1::iterator_traits<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'cc::PaintOpBuffer::Iterator::begin' [ 0 4 19 29]
'cc::PaintFlags::IsSimpleOpacity' [ 0 4 16]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__annotate_new' [ 0 5 10 92]
'sk_sp<cc::RecordPaintFilter>::release' [ 0 30]
'base::OptionalOrNullptr<SkMatrix>' [ 0 6]
'cc::TurbulencePaintFilter::num_octaves' [ 0 4 27]
'std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::AnnotateOp, cc::PaintCanvas::AnnotationType &, const SkRect &, sk_sp<SkData> &>' [ 0 4 19]
'cc::UpdateTypeAndSkip<cc::DrawLineOp>' [ 0 4]
'std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::__wrap_iter<const float *>' [ 0 5 10]
'base' [ 0]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__recommend' [ 0 5 10 68]
'std::__1::conditional<false, std::__1::pointer_traits<cc::RTree<unsigned long>::Node<unsigned long> *>::__nat, cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10]
'sk_sp<SkImageFilter>::release' [ 0 22]
'cc::RTree<cc::DrawImage>::RTree' [ 0 4 26]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::reserve' [ 0 5 10 135]
'cc::AlphaThresholdPaintFilter::input' [ 0 4 31]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::pointer_to' [ 0 5 10 93]
'cc::LightingDistantPaintFilter::light_color' [ 0 4 32]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::clear' [ 0 5 10 130]
'SkData::operator delete' [ 0 8]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10 165]
'cc::ScaleOp::IsValid' [ 0 4 13]
'cc::PaintShader::MakePaintRecord' [ 0 4 17]
'sk_sp<SkFontConfigInterface>' [ 0]
'std::__1::remove_reference<const std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'base::StackAllocator<gfx::Rect, 1>::Source::stack_buffer' [ 0 6 36 44]
'sk_make_sp<cc::AlphaThresholdPaintFilter, const SkRegion &, const float &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::ClipPathOp::IsValid' [ 0 4 16]
'base::StackContainer<std::__1::vector<float, base::StackAllocator<float, 3> >, 3>::StackContainer' [ 0 6 83]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::reset' [ 0 5 10 111]
'std::__1::remove_reference<SkClipOp &>' [ 0 5 10]
'cc::SimpleDeserialize<cc::DrawColorOp>' [ 0 4]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::get_deleter' [ 0 5 10 258]
'std::__1::max<int, std::__1::__less<int, int> >' [ 0 5 10]
'cc::PaintOpBuffer::PlaybackFoldingIterator::PlaybackFoldingIterator' [ 0 4 19 44]
'base::internal::FunctorTraits<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), void>' [ 0 6 16]
'sk_sp<const cc::PaintOpBuffer>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__destroy<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10 98]
'cc::TransferCacheDeserializeHelper::GetEntryAs<cc::ServiceShaderTransferCacheEntry>' [ 0 4 36]
'cc::PaintFlags::getStrokeCap' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>, 1, true>' [ 0 5 10]
'SkNoDrawCanvas::onDrawAtlas' [ 0 16]
'std::__1::forward<cc::ServicePaintTypefaceTransferCacheEntry *&>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::data' [ 0 5 10 92]
'std::__1::__compressed_pair<base::trace_event::TracedValue *, std::__1::default_delete<base::trace_event::TracedValue> >::__compressed_pair<base::trace_event::TracedValue *, std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10 122]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>' [ 0 5 10 149]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>::__get' [ 0 5 10 78]
'std::__1::forward<SkPaint>' [ 0 5 10]
'SkAutoCanvasRestore::~SkAutoCanvasRestore' [ 0 21]
'scoped_refptr<cc::DisplayItemList>::swap' [ 0 36]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::CustomDataOp>' [ 0 4 19]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::second' [ 0 5 10 150]
'std::__1::forward<const base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'std::__1::remove_reference<base::internal::OptionalBase<unsigned long> &>' [ 0 5 10]
'sk_sp<SkMaskFilter>::~sk_sp' [ 0 21]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp<base::trace_event::TracedValue>' [ 0 22]
'cc::DisplayItemList' [ 0 4]
'cc::MergePaintFilter::SnapshotWithImagesInternal' [ 0 4 22]
'sk_sp<cc::XfermodePaintFilter>::release' [ 0 32]
'cc::ClipRectOp::Raster' [ 0 4 16]
'SkIRect::MakeSize' [ 0 9]
'std::__1::enable_if<true, double>' [ 0 5 10]
'std::__1::iterator_traits<const gfx::Rect *>' [ 0 5 10]
'SkSerialProcs' [ 0]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::get' [ 0 5 10 69]
'std::__1::operator<<cc::TransferCacheEntryType, unsigned int>' [ 0 5 10 24]
'cc::ServiceRawMemoryTransferCacheEntry::~ServiceRawMemoryTransferCacheEntry' [ 0 4 40]
'std::__1::__compressed_pair_elem<cc::FrameMetadata *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 65]
'std::__1::move_if_noexcept<cc::FilterOperation>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__alloc' [ 0 5 10 132]
'sk_sp<SkPixelRef>' [ 0]
'std::__1::swap<unsigned long *>' [ 0 5 10]
'base::internal::CheckedNumeric<long>::IsValid<long>' [ 0 6 16 38]
'std::__1::__const_void_pointer<gfx::Rect *, std::__1::allocator<gfx::Rect>, false>' [ 0 5 10]
'cc::(anonymous namespace)::CheckIfSolidShape<SkRect>' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::allocate' [ 0 5 10 69]
'std::__1::__pointer_type<SkPaint, std::__1::allocator<SkPaint> >' [ 0 5 10]
'std::__1::allocator<unsigned long>::construct<unsigned long, const unsigned long &>' [ 0 5 10 36]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::allocate' [ 0 5 10 57]
'cc::PaintImage::IsLazyGenerated' [ 0 4 16]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::push_back' [ 0 5 10 92]
'std::__1::__compressed_pair<base::DictionaryValue *, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>' [ 0]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPath>::Type' [ 0 4 93]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::second' [ 0 5 10 149]
'std::__1::__unique_if<cc::ServiceColorSpaceTransferCacheEntry>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__vector_base' [ 0 5 10 140]
'std::__1::__pointer_type<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__construct<gfx::Rect, gfx::Rect>' [ 0 5 10 65]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> **, 0, false>' [ 0 5 10]
'base::in_place_t' [ 0 6]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__make_iter' [ 0 5 10 78]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::end' [ 0 5 10 62]
'sk_ref_sp<cc::PaintShader>' [ 0]
'base::internal::CheckedSubOp<int, int, void>' [ 0 6 16]
'cc::ImageProvider::ScopedDecodedDrawImage::DestroyDecode' [ 0 4 19 43]
'cc::NoopOp::AreEqual' [ 0 4 12]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__max_size' [ 0 5 10 64]
'std::__1::forward<float &>' [ 0 5 10]
'trace_event_internal::ScopedTracer::ScopedTracer' [ 0 22 36]
'std::__1::move<const cc::PaintOp *&>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>' [ 0 5 10]
'cc::PaintOp::TypeHasFlags' [ 0 4 13]
'logging::LogMessage' [ 0 9]
'std::__1::__const_void_pointer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >, false>' [ 0 5 10]
'cc::PaintOpWriter::WriteSimple<cc::PaintShader::Type>' [ 0 4 19]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__alloc' [ 0 5 10 160]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::capacity' [ 0 5 10 143]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>::__get' [ 0 5 10 82]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::clear' [ 0 5 10 67]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>, long, true>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::capacity' [ 0 5 10 139]
'base::HashInts<int, int>' [ 0 6]
'cc::ServiceImageTransferCacheEntry::Deserialize::__invoke' [ 0 4 36 49]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadSimple<int>' [ 0 4 44]
'std::__1::forward<const base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> &>' [ 0 5 10]
'cc::PaintOp::IsPaintOpWithFlags' [ 0 4 13]
'std::__1::forward<unsigned char &>' [ 0 5 10]
'cc::PaintOpWriter::WriteData' [ 0 4 19]
'cc::SaveLayerOp::~SaveLayerOp' [ 0 4 17]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::const_cast_it' [ 0 6 16 191]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<const cc::PaintOp **, 0, false>' [ 0 5 10]
'base::StringPiece' [ 0 6]
'sk_sp<cc::PaintFilter>::sk_sp<cc::MatrixPaintFilter, void>' [ 0 24]
'std::__1::vector<float, std::__1::allocator<float> >::max_size' [ 0 5 10 54]
'std::__1::advance<cc::FilterOperation *>' [ 0 5 10]
'base::Optional<cc::PaintFlags>::Optional' [ 0 6 32]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::clear' [ 0 5 10 65]
'cc::ComposePaintFilter::~ComposePaintFilter' [ 0 4 24]
'std::__1::__wrap_iter<const unsigned int *>::base' [ 0 5 10 45]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::clear' [ 0 6 16 191]
'SkTypefaceCatalogerProc' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::base' [ 0 5 10 82]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::operator=' [ 0 5 10 62]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__annotate_new' [ 0 5 10 62]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'SkScalarsEqual::operator()' [ 0 16]
'cc::PaintOp::AreSkMatricesEqual' [ 0 4 13]
'base::subtle::RefCountedThreadSafeBase::AddRefImpl' [ 0 6 14 40]
'cc::PaintFlags::getBlendMode' [ 0 4 16]
'cc::PaintImage::FrameCount' [ 0 4 16]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> > >' [ 0 5 10]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::release' [ 0 5 10 69]
'std::__1::index_sequence<0UL>' [ 0 5 10]
'SkBlurImageFilter' [ 0]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__recommend' [ 0 5 10 143]
'cc::RecordPaintCanvas::flush' [ 0 4 23]
'std::__1::__pointer_type<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'cc::SimpleDeserialize<cc::RestoreOp>' [ 0 4]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::~__vector_base' [ 0 5 10 132]
'cc::ImagePaintFilter::SerializedSize' [ 0 4 22]
'std::__1::__wrap_iter<const gfx::Rect *>' [ 0 5 10]
'SkRect::MakeFromIRect' [ 0 8]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__construct_backward<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10 106]
'SkTextBlobBuilder::allocRunPosH' [ 0 19]
'std::__1::operator==<SkPaint *, SkPaint *>' [ 0 5 10]
'std::__1::__copy<cc::FilterOperation *, cc::FilterOperation *>' [ 0 5 10]
'std::__1::remove_reference<cc::RTree<unsigned long>::Branch<unsigned long> &>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::empty' [ 0 5 10 70]
'cc::PaintOpWriter::GetFlattenableSize' [ 0 4 19]
'SkFilterQuality' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'std::__1::add_lvalue_reference<unsigned char>' [ 0 5 10]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__emplace_back_slow_path<int, cc::PaintImage::CompletionState, const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &, int, unsigned int>' [ 0 5 10 136]
'cc::SaveLayerAlphaOp::Raster' [ 0 4 22]
'cc::XfermodePaintFilter::SerializedSize' [ 0 4 25]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> **, 0, false>' [ 0 5 10]
'SkBitmap::readPixels' [ 0 10]
'std::__1::forward<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 95]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::allocate' [ 0 5 10 78]
'cc::DisplayItemList::push<cc::DrawImageRectOp, const cc::PaintImage &, const SkRect &, const SkRect &, const cc::PaintFlags *&, cc::PaintCanvas::SrcRectConstraint &>' [ 0 4 21]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::StackAllocator' [ 0 6 49]
'sk_sp<cc::AlphaThresholdPaintFilter>' [ 0]
'std::__1::remove_reference<std::__1::pair<cc::DrawImage, gfx::Rect> *&>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::max_size' [ 0 5 10 62]
'std::__1::copy<const unsigned int *, unsigned int *>' [ 0 5 10]
'sk_sp<const SkImage>::release' [ 0 22]
'std::__1::remove_reference<const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::__const_pointer<sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, true>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10]
'cc::DrawImageRectOp' [ 0 4]
'cc::PaintFilter::GetSkFilter' [ 0 4 17]
'round' [ 0]
'cc::RTree<cc::DrawImage>::AllocateNodeAtLevel' [ 0 4 26]
'cc::ImageProvider::ImageProvider' [ 0 4 19]
'cc::ClientPaintTypefaceTransferCacheEntry' [ 0 4]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const cc::FilterOperation *>, true>' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::SaveOp>' [ 0 4 19]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'std::__1::remove_reference<gfx::Rect &>' [ 0 5 10]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::__alloc' [ 0 5 10 67]
'std::__1::__pointer_type_imp::__pointer_type<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator>, false>' [ 0 5 10 30]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned int, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'SkImageFilter::CropRect::rect' [ 0 15 25]
'cc::ComposePaintFilter::SnapshotWithImagesInternal' [ 0 4 24]
'cc::UpdateTypeAndSkip<cc::DrawTextBlobOp>' [ 0 4]
'base::Optional<unsigned int>::Optional' [ 0 6 30]
'std::__1::forward<cc::ServicePathTransferCacheEntry *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__annotate_delete' [ 0 5 10 151]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadSimple<SkFontStyle::Slant>' [ 0 4 44]
'SkStrikeServer' [ 0]
'base::internal::OptionalStorage<SkNoDrawCanvas, false, false>' [ 0 6 16]
'uint_fast16_t' [ 0]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__max_size' [ 0 5 10 78]
'cc::DisplayItemList::push<cc::DrawColorOp, unsigned int &, SkBlendMode &>' [ 0 4 21]
'cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>::Branch' [ 0 4 26 49]
'SkNoDrawCanvas::onDrawArc' [ 0 16]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::value' [ 0 6 16 47 71]
'std::__1::conditional<false, std::__1::pointer_traits<cc::RTree<unsigned long>::Branch<unsigned long> *>::__nat, cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10]
'sk_make_sp<cc::TilePaintFilter, const SkRect &, const SkRect &, sk_sp<cc::PaintFilter> >' [ 0]
'sk_sp<cc::DisplacementMapEffectPaintFilter>::~sk_sp' [ 0 45]
'std::__1::remove_reference<const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 102]
'trace_event_internal::kZeroNumArgs' [ 0 22]
'std::__1::forward<const SkImageFilter::CropRect &>' [ 0 5 10]
'std::__1::__pointer_type<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10]
'cc::PaintTextBlobBuilder::AllocRunPos' [ 0 4 26]
'base::internal::CheckedMulFastOp<int, long>::Do<long>' [ 0 6 16 45]
'std::__1::conditional<false, std::__1::pointer_traits<float *>::__nat, float>' [ 0 5 10]
'std::__1::__copy<gfx::Rect, gfx::Rect>' [ 0 5 10]
'cc::PaintOpWriter::WriteSimple<SkPoint>' [ 0 4 19]
'gfx::Point::Point' [ 0 5 12]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::__compressed_pair<SkCanvas *, std::__1::default_delete<SkCanvas> >::__compressed_pair<SkCanvas *&, true>' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> > &>' [ 0 5 10]
'__int8_t' [ 0]
'std::__1::__add_lvalue_reference_impl<SkRecorder, true>' [ 0 5 10]
'cc::PaintImage::operator bool' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServicePathTransferCacheEntry>, void>' [ 0 5 10 100]
'std::__1::__distance<const unsigned char *>' [ 0 5 10]
'SkNoDrawCanvas::onDrawText' [ 0 16]
'cc::(anonymous namespace)::PaintTrackingCanvas::willRestore' [ 0 4 27 48]
'std::__1::swap<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *>' [ 0 5 10]
'base::subtle::NoBarrier_Load' [ 0 6 14]
'std::__1::atomic_int' [ 0 5 10]
'sk_sp<cc::PaintShader>::operator bool' [ 0 24]
'base::Optional<unsigned int>' [ 0 6]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'base::internal::OptionalBase<SkNoDrawCanvas>::OptionalBase' [ 0 6 16 46]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> &>::second' [ 0 5 10 72]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare::operator()<std::__1::pair<int, cc::PaintImage::DecodingMode>, int>' [ 0 6 16 183 200]
'std::__1::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3> &, 1, false>' [ 0 5 10]
'cc::PaintShader::paint_record' [ 0 4 17]
'base::TimeDelta' [ 0 6]
'std::__1::forward<std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::size' [ 0 5 10 66]
'sk_sp<SkShader>::sk_sp' [ 0 17]
'std::__1::conditional<true, std::__1::pointer_traits<void *>::__nat, void>' [ 0 5 10]
'std::__1::__const_pointer<cc::DiscardableImageMap::AnimatedImageMetadata, cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, true>' [ 0 5 10]
'base::internal::CheckedNumeric<int>::ValueOrDie<int, base::internal::CheckOnFailure>' [ 0 6 16 37]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__make_iter' [ 0 5 10 89]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__construct<cc::RTree<unsigned long>::Branch<unsigned long>>' [ 0 5 10 100]
'std::__1::remove_reference<base::StackVector<gfx::Rect, 1> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::deallocate' [ 0 5 10 100]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, void>' [ 0 5 10 77]
'std::__1::__compressed_pair<SkRecorder *, std::__1::default_delete<SkRecorder> >' [ 0 5 10]
'cc::ServicePathTransferCacheEntry::ServicePathTransferCacheEntry' [ 0 4 35]
'cc::SaveOp::Raster' [ 0 4 12]
'cc::operator void (*)(cc::PaintOp *)' [ 0 4]
'std::__1::equal<std::__1::__wrap_iter<const unsigned int *>, std::__1::__wrap_iter<const unsigned int *> >' [ 0 5 10]
'sk_sp<cc::XfermodePaintFilter>::sk_sp' [ 0 32]
'cc::SimpleSerialize<cc::DrawColorOp>' [ 0 4]
'SkImageInfo::makeColorSpace' [ 0 13]
'std::__1::__temp_value<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__temp_value<int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 157]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::size' [ 0 5 10 70]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_shrink' [ 0 5 10 70]
'sk_sp<cc::PaintShader>::operator*' [ 0 24]
'cc::DiscardableImageMap::GetRectsForImage::kEmptyRects' [ 0 4 25 43]
'base::AtomicSequenceNumber' [ 0 6]
'base::internal::OptionalBase<gfx::ColorSpace>::CopyAssign<gfx::ColorSpace>' [ 0 6 16 47]
'std::__1::forward<cc::PaintImage::DecodingMode>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__alloc' [ 0 5 10 148]
'base::Optional<cc::PaintOpBuffer::OffsetIterator>' [ 0 6]
'cc::SimpleDeserialize<cc::ClipRRectOp>' [ 0 4]
'sk_sp<cc::PaintShader>::operator=' [ 0 24]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__vector_base' [ 0 5 10 85]
'std::__1::conditional<false, std::__1::pointer_traits<WireTypeface *>::__nat, WireTypeface>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>::RunImpl<void (cc::SkiaPaintCanvas::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > &, 0>::is_weak_call' [ 0 6 16 151 285]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::remove_reference<SkDropShadowImageFilter::ShadowMode>' [ 0 5 10]
'SkSafeUnref<cc::LightingSpotPaintFilter>' [ 0]
'std::__1::forward<const float &>' [ 0 5 10]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::CheckedNumericState<long>' [ 0 6 16 75]
'std::__1::__const_pointer<const cc::PaintOp *, const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3>, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, long>' [ 0 6 16]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__destruct_at_end' [ 0 5 10 152]
'float_t' [ 0]
'sk_sp<cc::BlurPaintFilter>' [ 0]
'cc::PaintTextBlobBuilder::AllocRunPosH' [ 0 4 26]
'SkUnichar' [ 0]
'base::Optional<SkMatrix>::Optional' [ 0 6 26]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::~vector' [ 0 5 10 58]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10 106]
'std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> , false, false>' [ 0 5 10 74]
'std::__1::__to_raw_pointer<unsigned long>' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__make_iter' [ 0 5 10 82]
'cc::PaintTypeface::~PaintTypeface' [ 0 4 19]
'SkAtomic<SkPath::Convexity, sk_memory_order_relaxed>' [ 0]
'base::internal::BigEnoughPromotion<long, long, true, true>' [ 0 6 16]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'sktfitsin::Private::underlying_type<long, false>' [ 0 11 20]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >' [ 0 5 10]
'base::StackAllocator<const cc::PaintOp *, 3>::deallocate' [ 0 6 46]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPaint> &, 1, false>::__get' [ 0 5 10 76]
'base::Optional<SkImageFilter::CropRect>::value' [ 0 6 41]
'__libcpp_isfinite<float>' [ 0]
'base::internal::OptionalBase<cc::DecodeStashingImageProvider>::OptionalBase' [ 0 6 16 63]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::__tuple_impl<0, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> , base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10 118]
'cc::PaintShader::GetSkShader' [ 0 4 17]
'SkNoDrawCanvas::onDrawTextOnPath' [ 0 16]
'SkPath::isConvex' [ 0 8]
'SkRefCnt::~SkRefCnt' [ 0 10]
'cc::TurbulencePaintFilter::tile_size' [ 0 4 27]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__construct<cc::ImageProvider::ScopedDecodedDrawImage, cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 97]
'SkTHashSet<unsigned int, SkGoodHash>' [ 0]
'cc::DrawImageOp' [ 0 4]
'cc::ClientImageTransferCacheEntry::ClientImageTransferCacheEntry' [ 0 4 35]
'sk_sp<cc::PaintFilter>::sk_sp<cc::XfermodePaintFilter, void>' [ 0 24]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::construct<cc::RTree<unsigned long>::Branch<unsigned long>, unsigned long, const gfx::Rect &>' [ 0 5 10 100]
'cc::(anonymous namespace)::IsSolidColor' [ 0 4 27]
'logging' [ 0]
'cc::PaintImageGenerator::GetContentIdForFrame' [ 0 4 25]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__end_cap' [ 0 5 10 93]
'std::__1::__const_pointer<gfx::Rect, gfx::Rect *, base::StackAllocator<gfx::Rect, 1>, true>' [ 0 5 10]
'gfx::Vector2d::y' [ 0 5 15]
'cc::PaintOpWriter::EnsureBytes' [ 0 4 19]
'base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>' [ 0 6 16]
'gfx::Transform' [ 0 5]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator+=' [ 0 5 10 82]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::~__split_buffer' [ 0 5 10 75]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, long, true>' [ 0 5 10]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__push_back_slow_path<sk_sp<SkImageFilter> >' [ 0 5 10 85]
'std::__1::__pointer_type<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot, std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned long, std::__1::allocator<unsigned long>, true>' [ 0 5 10 30]
'cc::TilePaintFilter::TilePaintFilter' [ 0 4 21]
'std::__1::forward<const cc::PaintFlags *&>' [ 0 5 10]
'gfx::Rect::origin' [ 0 5 11]
'std::__1::operator==<const cc::FilterOperation *, const cc::FilterOperation *>' [ 0 5 10]
'std::__1::__pointer_type<SkImageGenerator, std::__1::default_delete<SkImageGenerator> >' [ 0 5 10]
'std::__1::add_lvalue_reference<cc::SkiaPaintImageGenerator>' [ 0 5 10]
'sk_sp<SkStrikeClient::DiscardableHandleManager>' [ 0]
'cc::RecordPaintCanvas::drawLine' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::select_on_container_copy_construction' [ 0 5 10 61]
'cc::AnnotateOp::Deserialize' [ 0 4 16]
'std::__1::forward<const SkImageFilter::CropRect *>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::TransferCacheEntryBase' [ 0 4 100]
'base::RepeatingCallback<void ()>::Run' [ 0 6 34]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 91]
'std::__1::move<std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> > &>' [ 0 5 10]
'base::internal::OptionalStorageBase<SkNoDrawCanvas, false>::Init<int, int>' [ 0 6 16 60]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::Unwrap' [ 0 6 81]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'cc::PaintShader::MakeLinearGradient' [ 0 4 17]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<float> &>' [ 0 5 10]
'base::internal::PassingTraits<const cc::PaintOp *, true>' [ 0 6 16]
'cc::RecordPaintCanvas::drawRect' [ 0 4 23]
'std::__1::add_lvalue_reference<base::trace_event::TracedValue>' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServicePathTransferCacheEntry *, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10 120]
'base::OnceCallback<void ()>::OnceCallback' [ 0 6 29]
'std::__1::__second_tag' [ 0 5 10]
'cc::ScaleOp::AreEqual' [ 0 4 13]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 233]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::size' [ 0 5 10 78]
'std::__1::__unique_if<cc::ServicePathTransferCacheEntry>' [ 0 5 10]
'SkFloatBits_IsFinite' [ 0]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::__alloc' [ 0 5 10 134]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::capacity' [ 0 5 10 148]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::ListValue>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::__destruct_at_end' [ 0 5 10 134]
'std::__1::remove_reference<cc::PaintFlags *>' [ 0 5 10]
'std::__1::forward<const SkISize &>' [ 0 5 10]
'std::__1::remove_reference<const cc::DrawImage *>' [ 0 5 10]
'cc::SimpleSerialize<cc::TranslateOp>' [ 0 4]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>' [ 0 5 10 149]
'cc::PaintRecorder' [ 0 4]
'cc::FilterOperation::operator==' [ 0 4 21]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>::StackAllocator' [ 0 6 68]
'std::__1::equal<std::__1::__wrap_iter<const gfx::Rect *>, std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::MergePaintFilter, void>' [ 0 24]
'std::__1::operator==<const cc::FrameMetadata *, const cc::FrameMetadata *>' [ 0 5 10]
'std::__1::move<cc::DrawImage &>' [ 0 5 10]
'cc::PaintFlags::isAntiAlias' [ 0 4 16]
'cc::(anonymous namespace)::MakeParams' [ 0 4 27]
'std::__1::__wrap_iter<SkPaint *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::DictionaryValue>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *&, void>' [ 0 5 10 135]
'cc::MatrixConvolutionPaintFilter' [ 0 4]
'cc::PaintOpBuffer::Iterator::Iterator' [ 0 4 19 29]
'std::__1::next<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, std::__1::pair<int, cc::PaintImage::DecodingMode> *, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkMiniRecorder *, 0, false>' [ 0 5 10]
'sk_sp<cc::RecordPaintFilter>::sk_sp' [ 0 30]
'SkNoDrawCanvas::onDrawBitmapRect' [ 0 16]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__swap_out_circular_buffer' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<char *, 0, false>' [ 0 5 10]
'std::__1::pointer_traits<cc::RTree<unsigned long>::Branch<unsigned long> *>' [ 0 5 10]
'base::internal::OptionalBase<gfx::ColorSpace>::InitOrAssign<gfx::ColorSpace>' [ 0 6 16 47]
'SkNoDrawCanvas::onDrawPosTextH' [ 0 16]
'std::__1::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >::reset' [ 0 5 10 119]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_const_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::forward<const float *>' [ 0 5 10]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'sk_sp<cc::LightingPointPaintFilter>' [ 0]
'base::StackAllocator<const cc::PaintOp *, 3>' [ 0 6]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__make_iter' [ 0 5 10 58]
'std::__1::__const_void_pointer<cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata>, false>' [ 0 5 10]
'cc::ClipRRectOp::Raster' [ 0 4 17]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::end' [ 0 5 10 68]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::__wrap_iter' [ 0 5 10 86]
'cc::ClipRectOp::Serialize' [ 0 4 16]
'std::__1::operator-<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'cc::ComposePaintFilter::ComposePaintFilter' [ 0 4 24]
'cc::PaintOpBuffer::push<cc::DrawPathOp, const SkPath &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::deallocate' [ 0 5 10 97]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, true>' [ 0 5 10]
'std::__1::move<Frame &>' [ 0 5 10]
'cc::SimpleBufferSerializer::SimpleBufferSerializer' [ 0 4 28]
'cc::(anonymous namespace)::ComputeSurfaceProps' [ 0 4 27]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::max_size' [ 0 5 10 102]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::Type' [ 0 4 99]
'std::__1::__to_raw_pointer<cc::PaintTypeface>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'SkRefCntBase::ref' [ 0 14]
'cc::PaintOpBuffer::HasDiscardableImages' [ 0 4 19]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::capacity' [ 0 5 10 54]
'std::__1::move<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__destruct_at_end' [ 0 5 10 66]
'cc::(anonymous namespace)::PaintTrackingCanvas::willSave' [ 0 4 27 48]
'base::internal::OptionalBase<cc::PaintOpBuffer::OffsetIterator>::OptionalBase' [ 0 6 16 65]
'cc::PaintOpWriter::HeaderBytes' [ 0 4 19]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::~__vector_base' [ 0 5 10 93]
'std::__1::literals' [ 0 5 10]
'std::__1::default_delete<cc::SkiaPaintImageGenerator>' [ 0 5 10]
'std::__1::__compressed_pair<SkCanvas *, std::__1::default_delete<SkCanvas> >::__compressed_pair<SkCanvas *, true>' [ 0 5 10 78]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__recommend' [ 0 5 10 85]
'cc::ColorFilterPaintFilter::SerializedSize' [ 0 4 28]
'SkColor' [ 0]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::is_valid' [ 0 6 16 47 71]
'std::__1::aligned_storage<8, 4>' [ 0 5 10]
'cc::PaintFlags::getStrokeMiter' [ 0 4 16]
'std::__1::__compressed_pair_elem<cc::ImageProvider::ScopedDecodedDrawImage *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::release' [ 0 5 10 54]
'std::__1::allocator<float>::allocate' [ 0 5 10 28]
'cc::LightingSpotPaintFilter::operator==' [ 0 4 29]
'std::__1::move<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *&>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >::reset' [ 0 5 10 123]
'std::__1::__advance<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'_G_fpos64_t' [ 0]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::clear' [ 0 5 10 96]
'cc::DiscardableImageMap::TakeDecodingModeMap' [ 0 4 25]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::destroy<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10 100]
'std::__1::remove_reference<const std::__1::allocator<cc::FrameMetadata> &>' [ 0 5 10]
'std::__1::__const_void_pointer<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >, false>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::__destruct_at_end' [ 0 5 10 75]
'base::Optional<SkNoDrawCanvas>::operator->' [ 0 6 32]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::data' [ 0 5 10 130]
'std::__1::__pointer_type<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >' [ 0 5 10]
'sk_sp<SkColorFilter>::operator bool' [ 0 22]
'cc::SkiaPaintCanvas::drawTextBlob' [ 0 4 21]
'base::StackVector<sk_sp<cc::PaintFilter>, 2>' [ 0 6]
'std::__1::forward<bool &>' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__swap_out_circular_buffer' [ 0 5 10 78]
'base::internal::ClampedSubOp<int, int, void>' [ 0 6 16]
'std::__1::__const_pointer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, true>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >' [ 0 5 10]
'cc::Rasterizer<cc::RestoreOp, false>::Raster' [ 0 4 38]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::second' [ 0 5 10 153]
'SkRRect::getBounds' [ 0 9]
'std::__1::move<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<unsigned long>' [ 0 6 16 85]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__swap_out_circular_buffer' [ 0 5 10 125]
'std::__1::pointer_traits<const cc::DrawImage **>' [ 0 5 10]
'cc::SetMatrixOp' [ 0 4]
'std::__1::forward<const SkISize *>' [ 0 5 10]
'cc::DrawLineOp::AreEqual' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::destroy<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'std::__1::__pointer_type_imp::__pointer_type<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >, true>' [ 0 5 10 30]
'SkPathRef' [ 0]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::construct<float, const float &>' [ 0 5 10 61]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >' [ 0 5 10]
'cc::RTree<cc::DrawImage>::Node<cc::DrawImage>::Node' [ 0 4 26 47]
'SkRRect' [ 0]
'std::__1::allocator<const cc::PaintOp *>' [ 0 5 10]
'std::__1::pair<cc::DrawImage, gfx::Rect>::pair' [ 0 5 10 42]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned long> *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<cc::ServiceImageTransferCacheEntry *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<Frame>, 1, true>' [ 0 5 10]
'base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::~BindState' [ 0 6 16 117]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 146]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::clear' [ 0 5 10 91]
'std::__1::iterator_traits<const cc::FilterOperation *>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::construct<cc::ImageProvider::ScopedDecodedDrawImage, cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 97]
'cc::TurbulencePaintFilter::operator==' [ 0 4 27]
'sk_sp<SkColorFilter>::operator->' [ 0 22]
'cc::UpdateTypeAndSkip<cc::DrawRectOp>' [ 0 4]
'std::__1::__move<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'SkIRect::width64' [ 0 9]
'base::internal::CheckedNumeric<long>::MathOp<CheckedAddOp, base::internal::CheckedNumeric<int> >' [ 0 6 16 38]
'cc::Rasterizer<cc::RestoreOp, false>' [ 0 4]
'std::__1::operator!=<sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::max_size' [ 0 5 10 61]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::__destroy<const cc::PaintOp *>' [ 0 5 10 75]
'cc::TransferCacheSerializeHelper::FlushEntries' [ 0 4 34]
'sk_sp<cc::PaintFilter>::sk_sp<cc::RecordPaintFilter, void>' [ 0 24]
'base::internal::OptionalStorageBase<cc::DecodeStashingImageProvider, false>::~OptionalStorageBase' [ 0 6 16 77]
'std::__1::remove_reference<std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot, std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []>, false>' [ 0 5 10 30]
'cc::(anonymous namespace)::DataWriter::WriteSimple<unsigned int>' [ 0 4 27 39]
'std::__1::remove_reference<SkRegion &>' [ 0 5 10]
'cc::ClientRawMemoryTransferCacheEntry::~ClientRawMemoryTransferCacheEntry' [ 0 4 39]
'SK_ColorTRANSPARENT' [ 0]
'sk_sp<SkPicture>::get' [ 0 18]
'std::__1::__advance<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::reserve' [ 0 5 10 86]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'base::internal::StrictNumeric<unsigned long>::StrictNumeric<unsigned long>' [ 0 6 16 46]
'sk_sp<cc::MatrixPaintFilter>::~sk_sp' [ 0 30]
'base::internal::IsNull<void (cc::SkiaPaintCanvas::*)()>' [ 0 6 16]
'cc::DisplayItemList::Finalize::operator()' [ 0 4 21 31]
'SkNVRefCnt<SkData>' [ 0]
'std::__1::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >::~unique_ptr' [ 0 5 10 129]
'std::__1::__compressed_pair_elem<cc::FilterOperation *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 67]
'std::__1::__pointer_type<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >' [ 0 5 10]
'std::__1::operator!=<const float *>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::__split_buffer' [ 0 5 10 144]
'cc::ImagePaintFilter::dst_rect' [ 0 4 22]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::capacity' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>::__compressed_pair_elem<std::__1::allocator<float> &, void>' [ 0 5 10 74]
'cc::SkiaPaintCanvas::clipRect' [ 0 4 21]
'cc::DrawImageOp::HasNonAAPaint' [ 0 4 17]
'cc::g_type_to_size' [ 0 4]
'cc::DrawIRectOp::~DrawIRectOp' [ 0 4 17]
'std::__1::move_if_noexcept<sk_sp<SkImageFilter> >' [ 0 5 10]
'std::__1::move_if_noexcept<sk_sp<cc::PaintFilter> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'SkCanvas::didTranslate' [ 0 10]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__construct_at_end' [ 0 5 10 68]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::deallocate' [ 0 5 10 77]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__annotate_new' [ 0 5 10 70]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::max_size' [ 0 5 10 151]
'std::__1::allocator<SkPaint>::construct<SkPaint, const SkPaint &>' [ 0 5 10 30]
'std::__1::__add_lvalue_reference_impl<cc::ServiceColorSpaceTransferCacheEntry, true>' [ 0 5 10]
'base::internal::OptionalBase<gfx::ColorSpace>::MoveAssign<gfx::ColorSpace>' [ 0 6 16 47]
'sk_sp<SkMaskFilter>::release' [ 0 21]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__alloc' [ 0 5 10 158]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::construct<cc::DiscardableImageMap::AnimatedImageMetadata, const cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10 98]
'cc::PaintOpReader::ReadSimple<SkISize>' [ 0 4 19]
'cc::SimpleSerialize<cc::ScaleOp>' [ 0 4]
'base::internal::CheckedDivOp<long, long, void>' [ 0 6 16]
'std::__1::move_if_noexcept<gfx::Rect>' [ 0 5 10]
'std::__1::operator==<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append' [ 0 5 10 68]
'std::__1::__compressed_pair<SkImageGenerator *, std::__1::default_delete<SkImageGenerator> >' [ 0 5 10]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::second' [ 0 5 10 165]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'SkAlphaType' [ 0]
'cc::PaintOpWriter::WriteSimple<bool>' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::capacity' [ 0 5 10 132]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::destroy<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10 106]
'std::__1::remove_reference<int &>' [ 0 5 10]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::reset' [ 0 5 10 83]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::~vector' [ 0 5 10 92]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__recommend' [ 0 5 10 125]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, int, cc::PaintImage::DecodingMode>' [ 0 5 10 102]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::__alloc' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<base::Value *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >::release' [ 0 5 10 123]
'cc::PaintOpBuffer::total_op_count' [ 0 4 19]
'base::RepeatingCallback<void ()>::RepeatingCallback' [ 0 6 34]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_new' [ 0 5 10 133]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'cc::PaintFlags::setStrokeWidth' [ 0 4 16]
'std::__1::forward<base::StackAllocator<float, 3> &>' [ 0 5 10]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'std::__1::remove_reference<std::__1::pair<int, cc::PaintImage::DecodingMode> *&>' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__swap_out_circular_buffer' [ 0 5 10 66]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::max_size' [ 0 5 10 139]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &, 1, false>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__annotate_new' [ 0 5 10 135]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::allocate' [ 0 5 10 71]
'base::internal::OptionalStorageBase<unsigned long, true>::Init<const unsigned long &>' [ 0 6 16 58]
'std::__1::remove_reference<const unsigned char &>' [ 0 5 10]
'cc::PaintFont::~PaintFont' [ 0 4 15]
'std::__1::remove_reference<SkCanvas *&>' [ 0 5 10]
'sk_sp<SkColorSpace>::sk_sp' [ 0 21]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::unique_ptr<true, void>' [ 0 5 10 54]
'sk_sp<cc::MagnifierPaintFilter>' [ 0]
'cc::DecodedDrawImage::~DecodedDrawImage' [ 0 4 22]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 70]
'std::__1::remove_const<gfx::Rect>' [ 0 5 10]
'SkSize::set' [ 0 8]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__end_cap' [ 0 5 10 160]
'sk_make_sp<cc::DropShadowPaintFilter, float, float, float, float, unsigned int, SkDropShadowImageFilter::ShadowMode, sk_sp<cc::PaintFilter> >' [ 0]
'base::internal::OptionalBase<SkMatrix>' [ 0 6 16]
'std::__1::__compressed_pair_elem<cc::FrameMetadata *, 0, false>' [ 0 5 10]
'base::internal::CheckedMulFastOp<int, long>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__construct_backward<cc::DiscardableImageMap::AnimatedImageMetadata *>' [ 0 5 10 98]
'cc::TurbulencePaintFilter::base_frequency_y' [ 0 4 27]
'base::internal' [ 0 6]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10 92]
'cc::DisplayItemList::push<cc::DrawLineOp, float &, float &, float &, float &, const cc::PaintFlags &>' [ 0 4 21]
'std::__1::remove_reference<const cc::DrawImage *&>' [ 0 5 10]
'std::__1::__const_pointer<WireTypeface, WireTypeface *, std::__1::allocator<WireTypeface>, true>' [ 0 5 10]
'std::__1::default_delete<cc::ServiceImageTransferCacheEntry>::operator()' [ 0 5 10 62]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>, false>' [ 0 5 10 30]
'std::__1::move<const cc::DrawImage *&>' [ 0 5 10]
'std::__1::__throw_length_error' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned int *>::__nat, unsigned int>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::destroy<cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10 100]
'std::__1::pair<int, base::StackVector<gfx::Rect, 1> >::pair<int, base::StackVector<gfx::Rect, 1>, false>' [ 0 5 10 55]
'cc::LightingDistantPaintFilter::~LightingDistantPaintFilter' [ 0 4 32]
'base::Callback<size_t (const cc::PaintOp *, const PaintOp::SerializeOptions &)>' [ 0 6]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'cc::PaintOpBuffer::push<cc::SaveLayerAlphaOp, const SkRect *&, unsigned char &, bool &>' [ 0 4 19]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::clear' [ 0 5 10 152]
'cc::ServiceImageTransferCacheEntry::CachedSize' [ 0 4 36]
'std::__1::remove_reference<const std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const gfx::Rect *>, true>' [ 0 5 10]
'std::__1::allocator<sk_sp<SkImageFilter> >::allocate' [ 0 5 10 44]
'base::internal::OptionalStorage<gfx::ColorSpace, false, false>::~OptionalStorage' [ 0 6 16 64]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::~__vector_base' [ 0 5 10 75]
'cc::XfermodePaintFilter::SnapshotWithImagesInternal' [ 0 4 25]
'cc::PaintOpBufferSerializer::Serialize' [ 0 4 29]
'std::__1::__to_raw_pointer<cc::FrameMetadata>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, 0, false>' [ 0 5 10]
'gfx::Vector2d::Vector2d' [ 0 5 15]
'std::__1::forward<const std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>' [ 0 6 16]
'cc::operator void (*)(cc::PaintOpBuffer *, const cc::PaintOp *)' [ 0 4]
'std::__1::move<std::__1::unique_ptr<char, base::AlignedFreeDeleter> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, 1, true>' [ 0 5 10]
'cc::SimpleBufferSerializer::~SimpleBufferSerializer' [ 0 4 28]
'SkCanvas::didRestore' [ 0 10]
'std::__1::__compressed_pair<cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::~__split_buffer' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >, 1, true>' [ 0 5 10]
'std::__1::distance<const float *>' [ 0 5 10]
'cc::MatrixConvolutionPaintFilter::gain' [ 0 4 34]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__construct<sk_sp<cc::PaintFilter>, const sk_sp<cc::PaintFilter> &>' [ 0 5 10 78]
'cc::PaintShader::shader_type' [ 0 4 17]
'std::__1::move<std::__1::__compressed_pair<unsigned long, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'__cxx_global_var_init' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &, void>' [ 0 5 10 115]
'cc::ImagePaintFilter::~ImagePaintFilter' [ 0 4 22]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::emplace_back<cc::PaintOpBuffer::CompositeIterator, const SkMatrix &, int>' [ 0 5 10 54]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> >::__compressed_pair<nullptr_t, const std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10 95]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>' [ 0 5 10]
'std::__1::min<float, std::__1::__less<float, float> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'std::__1::__hash_node_types<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *, std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> >' [ 0 5 10]
'sk_sp<cc::ColorFilterPaintFilter>::release' [ 0 35]
'SkNVRefCnt<SkTextBlob>::unref' [ 0 24]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__end_cap' [ 0 5 10 137]
'std::__1::vector<float, base::StackAllocator<float, 3> >::vector' [ 0 5 10 58]
'uint32_t' [ 0]
'std::__1::__tree_key_value_types<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >::__get_ptr' [ 0 5 10 93]
'std::__1::allocator<unsigned int>::allocate' [ 0 5 10 35]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10 160]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 106]
'cc::SkiaPaintCanvas::drawRRect' [ 0 4 21]
'cc::ServiceImageTransferCacheEntry::operator=' [ 0 4 36]
'std::__1::vector<float, std::__1::allocator<float> >::size' [ 0 5 10 54]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::capacity' [ 0 5 10 92]
'std::__1::__pointer_type_imp::__pointer_type<const SkDescriptor *, std::__1::allocator<const SkDescriptor *>, true>' [ 0 5 10 30]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >' [ 0 5 10]
'std::__1::unique_ptr<SkImageGenerator, std::__1::default_delete<SkImageGenerator> >::reset' [ 0 5 10 85]
'std::__1::__compressed_pair_elem<std::__1::pair<cc::DrawImage, gfx::Rect> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 88]
'sk_sp<cc::PaintFilter>::~sk_sp' [ 0 24]
'cc::DrawImageOp::Deserialize' [ 0 4 17]
'scoped_refptr<cc::PaintTextBlob>::operator=' [ 0 34]
'std::__1::move<sk_sp<cc::PaintFilter> &>' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__construct<cc::FilterOperation, const cc::FilterOperation &>' [ 0 5 10 71]
'base::internal::PassingTraits<const cc::PaintOp::SerializeOptions &, false>' [ 0 6 16]
'scoped_refptr<cc::DisplayItemList>::get' [ 0 36]
'std::__1::allocator<unsigned char>::construct<unsigned char, const unsigned char &>' [ 0 5 10 36]
'std::__1::move_if_noexcept<cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__move_assign_alloc' [ 0 5 10 77]
'cc::PaintOpReader::ReadColorFilterPaintFilter' [ 0 4 19]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::SaveOp>' [ 0 4 19]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::~vector' [ 0 5 10 66]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end<const unsigned char *>' [ 0 5 10 70]
'SkTo<int, unsigned long>::operator()' [ 0 26]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::__end_cap' [ 0 5 10 145]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__swap_out_circular_buffer' [ 0 5 10 54]
'std::__1::remove_reference<scoped_refptr<cc::PaintTextBlob> >' [ 0 5 10]
'cc::LightingSpotPaintFilter::LightingSpotPaintFilter' [ 0 4 29]
'sk_sp<cc::ArithmeticPaintFilter>' [ 0]
'gfx::Point::SetPoint' [ 0 5 12]
'cc::DrawImageOp::RasterWithFlags' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >, true>' [ 0 5 10 30]
'base::internal::OptionalStorageBase<cc::RecordPaintCanvas, false>::Init<cc::DisplayItemList *, const SkRect &>' [ 0 6 16 67]
'cc::PaintOpWriter::~PaintOpWriter' [ 0 4 19]
'SkBitmap::isNull' [ 0 10]
'std::__1::iterator_traits<const float *>' [ 0 5 10]
'cc::ServiceTransferCacheEntry::SafeConvertToType' [ 0 4 31]
'SkFontStyle' [ 0]
'base::internal::flat_tree<std::__1::basic_string<char>, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, base::internal::GetKeyFromValuePairFirst<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::less<void> >' [ 0 6 16]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'cc::PaintImage::FrameKey::FrameKey' [ 0 4 16 26]
'base::StackVector<float, 3>::~StackVector' [ 0 6 29]
'SkCanvasVirtualEnforcer<SkCanvas>::~SkCanvasVirtualEnforcer' [ 0 35]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::__end_cap' [ 0 5 10 144]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> &>::second' [ 0 5 10 96]
'cc::PaintOpReader' [ 0 4]
'std::__1::distance<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::SkiaPaintImageGenerator *, std::__1::default_delete<cc::SkiaPaintImageGenerator> >::__compressed_pair<cc::SkiaPaintImageGenerator *&, true>' [ 0 5 10 116]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_delete' [ 0 5 10 68]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::operator=' [ 0 5 10 70]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__end_cap' [ 0 5 10 96]
'std::__1::__add_lvalue_reference_impl<cc::ServiceTransferCacheEntry, true>' [ 0 5 10]
'cc::DrawPathOp::Deserialize' [ 0 4 16]
'sk_sp<cc::PaintFilter>::operator bool' [ 0 24]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'std::__1::operator!=<std::__1::__wrap_iter<SkPaint *>, std::__1::__wrap_iter<SkPaint *> >' [ 0 5 10]
'base::StackVector<gfx::Rect, 1>::operator=' [ 0 6 33]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry>, void, void>' [ 0 5 10 111]
'cc::PaintFlags::getMaskFilter' [ 0 4 16]
'base::StackVector<const cc::PaintOp *, 3>' [ 0 6]
'base::internal::OptionalBase<SkImageFilter::CropRect>::FreeIfNeeded' [ 0 6 16 55]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::~__vector_base' [ 0 5 10 140]
'cc::RotateOp::Deserialize' [ 0 4 14]
'cc::SkiaPaintCanvas::drawLine' [ 0 4 21]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::operator[]' [ 0 5 10 62]
'__int16_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::deallocate' [ 0 5 10 64]
'SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>' [ 0]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::SaveLayerOp>' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__construct_backward<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *>' [ 0 5 10 100]
'cc::ClientPaintTypefaceTransferCacheEntry::Serialize' [ 0 4 43]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::capacity' [ 0 5 10 146]
'base::Optional<gfx::Rect>::operator=<gfx::Rect>' [ 0 6 27]
'base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> >::operator[]' [ 0 6 74]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__move_range' [ 0 5 10 151]
'std::__1::forward<std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10]
'cc::ClientColorSpaceTransferCacheEntry::SerializedSize' [ 0 4 40]
'cc::ClientTransferCacheEntry::ClientTransferCacheEntry' [ 0 4 30]
'cc::DisplayItemList::StartPaint' [ 0 4 21]
'base::internal::OptionalStorage<gfx::ColorSpace, false, false>::OptionalStorageBase' [ 0 6 16 64]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::__max_size' [ 0 5 10 69]
'cc::PaintFlags::getFillPath' [ 0 4 16]
'std::__1::__const_pointer<cc::ImageProvider::ScopedDecodedDrawImage, cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, true>' [ 0 5 10]
'std::__1::move<sk_sp<SkPicture> &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::SkiaPaintImageGenerator *, std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'cc::TranslateOp::IsValid' [ 0 4 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'cc::ClientTransferCacheEntryBase<TransferCacheEntryType::kColorSpace>' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::deallocate' [ 0 5 10 97]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__make_iter' [ 0 5 10 66]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__destruct_at_end' [ 0 5 10 71]
'cc::kAnimationNone' [ 0 4]
'std::__1::__const_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10]
'cc::PaintOpReader::ReadFlattenable<SkMaskFilter>' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>, 1, true>' [ 0 5 10]
'base::Value' [ 0 6]
'std::__1::allocator<cc::PaintTypeface>' [ 0 5 10]
'std::__1::allocator<SkPaint>::construct<SkPaint, SkPaint>' [ 0 5 10 30]
'std::__1::conditional<true, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &&>' [ 0 5 10]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> &>::__compressed_pair<nullptr_t, base::StackAllocator<float, 3> &>' [ 0 5 10 72]
'cc::DisplacementMapEffectPaintFilter::channel_x' [ 0 4 38]
'cc::DisplacementMapEffectPaintFilter::channel_y' [ 0 4 38]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::__construct<sk_sp<cc::PaintFilter>>' [ 0 5 10 75]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPath>::TransferCacheEntryBase' [ 0 4 93]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >' [ 0 5 10]
'base::Optional<cc::RecordPaintCanvas>::~Optional' [ 0 6 39]
'std::__1::__compressed_pair<cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata> >::__compressed_pair<nullptr_t, const std::__1::allocator<cc::FrameMetadata> &>' [ 0 5 10 91]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<int>' [ 0 6 16 76]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__emplace_back_slow_path<cc::DrawImage, const gfx::Rect &>' [ 0 5 10 139]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'SkWeakRefCnt::atomic_conditional_acquire_strong_ref' [ 0 14]
'SkAtomic<unsigned int, sk_memory_order_seq_cst>' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, long, true>' [ 0 5 10]
'std::__1::move<cc::ImageProvider::ScopedDecodedDrawImage &>' [ 0 5 10]
'cc::ClipRRectOp::ClipRRectOp' [ 0 4 17]
'cc::PaintImage::GetConservative' [ 0 4 16]
'cc::(anonymous namespace)::DiscardableImageGenerator::ComputePaintRect' [ 0 4 27 54]
'cc::ColorFilterPaintFilter::input' [ 0 4 28]
'base::Optional<cc::ScopedRasterFlags>::operator bool' [ 0 6 39]
'gfx::Rect::Inset' [ 0 5 11]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::capacity' [ 0 5 10 91]
'std::__1::remove_reference<const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10]
'sk_sp<cc::MatrixConvolutionPaintFilter>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3>, true>' [ 0 5 10 30]
'cc::PaintShader::MakeImage' [ 0 4 17]
'std::__1::forward<unsigned long>' [ 0 5 10]
'cc::ClientTransferCacheEntryBase<TransferCacheEntryType::kRawMemory>' [ 0 4]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::~vector' [ 0 5 10 85]
'std::__1::allocator<std::__1::pair<const SkDescriptor *const, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >' [ 0 5 10]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::deallocate' [ 0 5 10 86]
'std::__1::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &, 1, false>::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &, void>' [ 0 5 10 95]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::vector' [ 0 5 10 139]
'cc::CustomDataOp::Raster' [ 0 4 18]
'SkPathEffect::DashInfo::DashInfo' [ 0 14 24]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__emplace_back_slow_path<cc::DrawImage, const gfx::Rect &>' [ 0 5 10 125]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'cc::ArithmeticPaintFilter::operator==' [ 0 4 27]
'cc::(anonymous namespace)::DataWriter' [ 0 4 27]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::end' [ 0 6 16 183]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10 157]
'std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadSimple<unsigned long>' [ 0 4 44]
'cc::ServiceImageTransferCacheEntry::~ServiceImageTransferCacheEntry' [ 0 4 36]
'base::Optional<SkNoDrawCanvas>::emplace<int, int>' [ 0 6 32]
'base::internal::OptionalBase<unsigned long>::MoveAssign<unsigned long>' [ 0 6 16 45]
'base::span<const unsigned char, 18446744073709551615>' [ 0 6]
'std::__1::__compressed_pair_elem<base::trace_event::ConvertableToTraceFormat *, 0, false>' [ 0 5 10]
'cc::DrawImageRectOp::HasDiscardableImages' [ 0 4 21]
'base::StackContainer<std::__1::vector<float, base::StackAllocator<float, 3> >, 3>::container' [ 0 6 83]
'SkMatrix::getScaleX' [ 0 10]
'SkMatrix::getScaleY' [ 0 10]
'std::nullptr_t' [ 0 5]
'cc::SkiaPaintImageGenerator::onQueryYUV8' [ 0 4 29]
'cc::(anonymous namespace)::GetSepiaMatrix' [ 0 4 27]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__destruct_at_end' [ 0 5 10 93]
'cc::PaintOpBuffer::bytes_used' [ 0 4 19]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__destruct_at_end' [ 0 5 10 137]
'std::__1::__promote_imp<unsigned long, double, void, true>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'cc::PaintShader::GetSerializedSize' [ 0 4 17]
'base::AutoReset<bool>' [ 0 6]
'sk_sp<cc::MagnifierPaintFilter>::~sk_sp' [ 0 33]
'cc::PaintOp::HasDiscardableImages' [ 0 4 13]
'std::__1::forward<const cc::FilterOperation &>' [ 0 5 10]
'cc::BlurPaintFilter::BlurPaintFilter' [ 0 4 21]
'cc::RecordPaintCanvas::drawIRect' [ 0 4 23]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__end_cap' [ 0 5 10 140]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::capacity' [ 0 5 10 63]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::empty' [ 0 5 10 133]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::~unique_ptr' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::construct<cc::RTree<unsigned long>::Branch<unsigned long>>' [ 0 5 10 100]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::deallocate' [ 0 5 10 78]
'gfx::Rect::Rect' [ 0 5 11]
'div_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::~__split_buffer' [ 0 5 10 148]
'cc::OffsetPaintFilter::~OffsetPaintFilter' [ 0 4 23]
'std::__1::remove_reference<const cc::TurbulencePaintFilter::TurbulenceType &>' [ 0 5 10]
'std::__1::__size_type<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, long, true>' [ 0 5 10]
'std::__1::swap<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<float, 3> &, 1, false>' [ 0 5 10]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::data' [ 0 5 10 135]
'gfx::Rect::bottom' [ 0 5 11]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__alloc' [ 0 5 10 79]
'std::__1::__compressed_pair_elem<cc::ServiceImageTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::data' [ 0 5 10 125]
'std::__1::unique_ptr<SkImageGenerator, std::__1::default_delete<SkImageGenerator> >' [ 0 5 10]
'std::__1::__hash_table<const SkDescriptor *, SkDescriptorMapOperators, SkDescriptorMapOperators, std::__1::allocator<const SkDescriptor *> >' [ 0 5 10]
'cc::TilePaintFilter::dst' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::construct<cc::PaintTypeface, const cc::PaintTypeface &>' [ 0 5 10 69]
'std::__1::move<SkPaint *&>' [ 0 5 10]
'base::internal::OptionalBase<gfx::ColorSpace>' [ 0 6 16]
'cc::(anonymous namespace)::IsFullQuad<SkRRect>' [ 0 4 27]
'std::__1::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >::~unique_ptr' [ 0 5 10 119]
'gfx::SizeF::height' [ 0 5 12]
'cc::PaintOp::PaintOp' [ 0 4 13]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__move_assign' [ 0 5 10 143]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::construct<Frame, cc::PaintOpBuffer::CompositeIterator, const SkMatrix &, int>' [ 0 5 10 57]
'uint_least32_t' [ 0]
'cc::UpdateTypeAndSkip<cc::DrawImageOp>' [ 0 4]
'base::internal::PassingTraitsType<SkCanvas *>' [ 0 6 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'sk_make_sp<cc::PaintOpBuffer>' [ 0]
'std::__1::__compressed_pair<cc::ServiceColorSpaceTransferCacheEntry *, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>' [ 0 5 10]
'SkNoncopyable' [ 0]
'long unsigned int' [ 0]
'std::__1::remove_reference<base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::__destroy<SkPaint>' [ 0 5 10 59]
'base::internal::OptionalStorageBase<SkNoDrawCanvas, false>' [ 0 6 16]
'std::__1::__wrap_iter<SkPaint *>::operator--' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'cc::ArithmeticPaintFilter::SerializedSize' [ 0 4 27]
'std::__1::remove_reference<SkPaint>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::destroy<cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10 98]
'gfx::operator!=' [ 0 5]
'std::__1::__advance<std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'cc::FilterOperation::Blend' [ 0 4 21]
'std::__1::remove_reference<std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'std::__1::__compressed_pair<char *, base::AlignedFreeDeleter>::__compressed_pair<char *&, true>' [ 0 5 10 63]
'cc::(anonymous namespace)::ToSkPicture' [ 0 4 27]
'logging::CheckEQImpl<cc::TransferCacheEntryType, cc::TransferCacheEntryType>' [ 0 9]
'std::__1::enable_if<true, void>' [ 0 5 10]
'cc::(anonymous namespace)::GetInvertMatrix' [ 0 4 27]
'logging::MakeCheckOpString<float, float>' [ 0 9]
'cc::TransferCacheDeserializeHelper::GetTotalEntrySizes' [ 0 4 36]
'std::__1::__size_type<std::__1::allocator<gfx::Rect>, long, true>' [ 0 5 10]
'std::__1::__const_void_pointer<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation>, false>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::max_size' [ 0 5 10 92]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >::construct<std::__1::pair<cc::DrawImage, gfx::Rect>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 64]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::__const_void_pointer<base::Value *, std::__1::allocator<base::Value>, false>' [ 0 5 10]
'std::__1::__lower_bound<base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare &, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, int>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::move_iterator' [ 0 5 10 82]
'cc::PaintImage::DecodeFromGenerator' [ 0 4 16]
'std::__1::move<std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > &>' [ 0 5 10]
'cc::ConcatOp' [ 0 4]
'base::internal::CallbackBase::operator bool' [ 0 6 16 30]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>, long, true>' [ 0 5 10]
'SkImageInfo' [ 0]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>, void, void>' [ 0 5 10 111]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::clear' [ 0 5 10 86]
'SkMatrix::setTypeMask' [ 0 10]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<unsigned long, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'std::__1::allocator<cc::FilterOperation>::deallocate' [ 0 5 10 42]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10 96]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::capacity' [ 0 5 10 95]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >::DeleteInternal<cc::DisplayItemList>' [ 0 6 112]
'cc::ServiceTransferCacheEntry::operator=' [ 0 4 31]
'cc::(anonymous namespace)::SizeCounter::WriteData' [ 0 4 27 40]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::~__split_buffer' [ 0 5 10 63]
'std::__1::remove_reference<sk_sp<cc::PaintImageGenerator> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__construct<cc::RTree<unsigned long>::Node<unsigned long>, int &>' [ 0 5 10 98]
'cc::PaintOpReader::ReadMergePaintFilter' [ 0 4 19]
'SkRRect::getType' [ 0 9]
'base::StackContainer<std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >, 2>::~StackContainer' [ 0 6 117]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >' [ 0 5 10]
'cc::SaveOp::SaveOp' [ 0 4 12]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >::construct<std::__1::pair<cc::DrawImage, gfx::Rect>, const std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10 64]
'base::internal::OptionalStorageBase<cc::RecordPaintCanvas, false>::OptionalStorageBase' [ 0 6 16 67]
'base::StackAllocator<const cc::PaintOp *, 3>::Source::Source' [ 0 6 46 54]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__max_size' [ 0 5 10 65]
'cc::ServicePathTransferCacheEntry::path' [ 0 4 35]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> > >' [ 0 5 10]
'SkRefCntBase::ref::operator()' [ 0 14 19]
'std::__1::__add_lvalue_reference_impl<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot, true>' [ 0 5 10]
'std::__1::__pointer_type<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 123]
'std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>::operator()' [ 0 5 10 63]
'float' [ 0]
'cc::PaintOpReader::ReadSize' [ 0 4 19]
'std::__1::remove_reference<float &>' [ 0 5 10]
'cc::DrawDRRectOp::RasterWithFlags' [ 0 4 18]
'cc::PaintOpReader::ReadFlattenable<SkPathEffect>' [ 0 4 19]
'std::__1::forward<cc::SkiaPaintCanvas *>' [ 0 5 10]
'std::__1::allocator<cc::ImageProvider::ScopedDecodedDrawImage>::deallocate' [ 0 5 10 64]
'std::__1::__rebind_pointer<void *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric<unsigned long>' [ 0 6 16 47]
'std::__1::__pointer_type<unsigned char, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'base::kPiFloat' [ 0 6]
'cc::Rasterizer<cc::ConcatOp, false>::Raster' [ 0 4 37]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>, false>' [ 0 5 10 30]
'cc::SimpleBufferSerializer::SerializeToMemory' [ 0 4 28]
'std::__1::__to_raw_pointer<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'sk_sp<SkColorFilter>::get' [ 0 22]
'std::__1::move<base::internal::OptionalBase<unsigned long> &>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::data' [ 0 5 10 139]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__destruct_at_end' [ 0 5 10 148]
'base::internal::OptionalBase<gfx::ColorSpace>::~OptionalBase' [ 0 6 16 47]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'base::internal::OptionalStorage<cc::DecodeStashingImageProvider, false, false>::~OptionalStorage' [ 0 6 16 80]
'cc::DiscardableImageMap::Generate::operator()' [ 0 4 25 35]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::size' [ 0 5 10 125]
'std::__1::__pointer_type<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >' [ 0 5 10]
'base::internal::BindStateBase' [ 0 6 16]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, int>' [ 0 6 16]
'std::__1::move<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10]
'cc::DropShadowPaintFilter::operator==' [ 0 4 27]
'std::__1::remove_reference<const cc::PaintOp **&>' [ 0 5 10]
'std::__1::allocator<cc::FrameMetadata>' [ 0 5 10]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__destruct_at_end' [ 0 5 10 61]
'std::__1::move<std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> > &>' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::DrawColorOp, unsigned int &, SkBlendMode &>' [ 0 4 19]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__vector_base' [ 0 5 10 143]
'std::__1::forward<const cc::PaintOp *const &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<SkMiniRecorder, true>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > >' [ 0 5 10]
'cc::RecordPaintCanvas::drawColor' [ 0 4 23]
'std::__1::iterator_traits<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::move<sk_sp<SkImage> &>' [ 0 5 10]
'SkMatrix::Concat' [ 0 10]
'cc::SimpleDeserialize<cc::ClipRectOp>' [ 0 4]
'cc::FilterOperation::set_zoom_inset' [ 0 4 21]
'std::__1::remove_reference<const std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::max_size' [ 0 5 10 98]
'std::__1::__wrap_iter<const gfx::Rect *>::operator*' [ 0 5 10 42]
'cc::XfermodePaintFilter::XfermodePaintFilter' [ 0 4 25]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >' [ 0 5 10]
'cc::Rasterizer<cc::DrawRRectOp, true>::RasterWithFlags' [ 0 4 39]
'timespec' [ 0]
'SkSafeUnref<cc::ArithmeticPaintFilter>' [ 0]
'sk_sp<cc::PaintFilter>::sk_sp<cc::BlurPaintFilter, void>' [ 0 24]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__push_back_slow_path<const float &>' [ 0 5 10 58]
'std::__1::remove_reference<cc::ServicePathTransferCacheEntry *&>' [ 0 5 10]
'std::__1::remove_reference<cc::SkiaPaintImageGenerator *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::vector' [ 0 5 10 135]
'std::__1::__unique_if<base::trace_event::TracedValue>' [ 0 5 10]
'cc::ClipPathOp::HasNonAAPaint' [ 0 4 16]
'cc::ImagePaintFilter' [ 0 4]
'std::__1::__pointer_type<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10]
'cc::PaintShader::IsValid' [ 0 4 17]
'cc::DisplayItemList::~DisplayItemList' [ 0 4 21]
'std::__1::addressof<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'SkIRect::intersect' [ 0 9]
'std::__1::atomic_load_explicit<SkPath::Convexity>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServicePaintTypefaceTransferCacheEntry *, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &, 1, false>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::capacity' [ 0 5 10 152]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::ConcatOp>' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &, 1, false>' [ 0 5 10]
'cc::PaintTypeface::type' [ 0 4 19]
'isnan' [ 0]
'std::__1::remove_reference<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 5 10]
'cc::PaintOpWriter::WriteSimple<cc::PaintShader::ScalingBehavior>' [ 0 4 19]
'std::__1::__const_pointer<cc::FrameMetadata, cc::FrameMetadata *, std::__1::allocator<cc::FrameMetadata>, true>' [ 0 5 10]
'cc::RecordPaintCanvas::drawRRect' [ 0 4 23]
'std::__1::aligned_storage<72, 8>' [ 0 5 10]
'cc::FilterOperation::AsValueInto' [ 0 4 21]
'std::__1::default_delete<base::ListValue>::operator()' [ 0 5 10 43]
'sk_sp<cc::PaintImageGenerator>::reset' [ 0 32]
'logging::MakeCheckOpString<cc::PaintImage::DecodingMode, cc::PaintImage::DecodingMode>' [ 0 9]
'std::__1::move<bool &>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>::RunImpl<void (cc::SkiaPaintCanvas::*const &)(), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > &, 0>::is_method' [ 0 6 16 151 285]
'cc::(anonymous namespace)::AdjustSrcRectForScale' [ 0 4 27]
'std::__1::__const_pointer<const cc::DrawImage *, const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *>, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<SkPaint> &>' [ 0 5 10]
'cc::DrawRecordOp::Serialize' [ 0 4 18]
'std::__1::conditional<false, std::__1::pointer_traits<base::Value *>::__nat, base::Value>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::trace_event::ConvertableToTraceFormat *, 0, false>::__compressed_pair_elem<base::trace_event::TracedValue *, void>' [ 0 5 10 91]
'cc::PaintImageBuilder::TakePaintImage' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::destroy<std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10 93]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10 77]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__destruct_at_end' [ 0 5 10 142]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::__nat, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>' [ 0 5 10]
'cc::PaintFilter::BaseSerializedSize' [ 0 4 17]
'std::__1::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &, 1, false>' [ 0 5 10]
'std::__1::__wrap_iter<const float *>::base' [ 0 5 10 38]
'std::__1::pair<std::__1::__tree_const_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool, false>' [ 0 5 10 210]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__annotate_shrink' [ 0 5 10 86]
'std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10]
'cc::AnnotateOp::AnnotateOp' [ 0 4 16]
'cc::SaveOp::Deserialize' [ 0 4 12]
'cc::PaintFlags::getImageFilter' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> >, true>' [ 0 5 10 30]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__alloc' [ 0 5 10 73]
'cc::PaintOpReader::ReadTilePaintFilter' [ 0 4 19]
'cc::PaintTypeface::ToSkTypeface' [ 0 4 19]
'cc::TranslateOp::TranslateOp' [ 0 4 17]
'std::__1::swap<const cc::DrawImage **>' [ 0 5 10]
'SkSafeRef<SkTypeface>' [ 0]
'cc::ScaleOp::Raster' [ 0 4 13]
'cc::PaintTypeface::SetSkId' [ 0 4 19]
'cc::PlaybackParams::~PlaybackParams' [ 0 4 20]
'std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >::construct<cc::RTree<unsigned long>::Branch<unsigned long>, unsigned long, const gfx::Rect &>' [ 0 5 10 71]
'cc::PaintOpBufferSerializer::Save' [ 0 4 29]
'std::__1::operator-<const std::__1::pair<int, cc::PaintImage::DecodingMode> *, const std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::remove_reference<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *&>' [ 0 5 10]
'cc::DrawOvalOp::~DrawOvalOp' [ 0 4 16]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >::construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10 69]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'base::internal::OptionalStorageBase<unsigned int, true>' [ 0 6 16]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'cc::DrawDRRectOp::DrawDRRectOp' [ 0 4 18]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::capacity' [ 0 5 10 89]
'std::__1::forward<const cc::MorphologyPaintFilter::MorphType &>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 209]
'cc::DrawIRectOp::Serialize' [ 0 4 17]
'std::__1::remove_reference<sk_sp<SkColorFilter> &>' [ 0 5 10]
'cc::(anonymous namespace)::CheckIfSolidShape<SkRRect>::trace_event_unique_atomic114' [ 0 4 27 55]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__destruct_at_end' [ 0 5 10 89]
'SkSize::Make' [ 0 8]
'std::__1::unique_ptr<SkRecorder, std::__1::default_delete<SkRecorder> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::max_size' [ 0 5 10 98]
'cc::PaintTypeface::FromFamilyNameAndFontStyle' [ 0 4 19]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'base::internal::OptionalStorageBase<cc::ScopedRasterFlags, false>::Init<cc::PaintFlags *, cc::ImageProvider *&, const SkMatrix &, unsigned int>' [ 0 6 16 67]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>' [ 0 6 16]
'sk_make_sp<cc::OffsetPaintFilter, const float &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::allocator<cc::PaintTypeface>::allocate' [ 0 5 10 40]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::~__split_buffer' [ 0 5 10 91]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'base::Optional<cc::RecordPaintCanvas>::emplace<cc::DisplayItemList *, const SkRect &>' [ 0 6 39]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::~vector' [ 0 5 10 133]
'std::__1::input_iterator_tag' [ 0 5 10]
'cc::PaintTypeface::sk_id' [ 0 4 19]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__annotate_delete' [ 0 5 10 92]
'base::internal::StrictNumeric<int>::operator int<int, nullptr>' [ 0 6 16 36]
'std::__1::swap<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::capacity' [ 0 5 10 135]
'sk_ref_sp<SkColorSpace>' [ 0]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::__destruct_at_end' [ 0 5 10 94]
'std::__1::__compressed_pair<base::trace_event::ConvertableToTraceFormat *, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >::__compressed_pair<base::trace_event::TracedValue *, std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10 148]
'cc::AnnotateOp' [ 0 4]
'cc::PaintOpWriter::size' [ 0 4 19]
'__mbstate_t' [ 0]
'base::Optional<unsigned long>::Optional<unsigned long &, false>' [ 0 6 31]
'cc::TranslateOp::AreEqual' [ 0 4 17]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::__end_cap' [ 0 5 10 67]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare::extract_if_value_type' [ 0 6 16 183 200]
'cc::DrawColorOp::DrawColorOp' [ 0 4 17]
'std::__1::advance<const float *>' [ 0 5 10]
'base::Optional<gfx::SizeF>' [ 0 6]
'std::__1::make_unique<cc::SkiaPaintImageGenerator, sk_sp<cc::PaintImageGenerator> &, unsigned long &>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >::release' [ 0 5 10 121]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__annotate_delete' [ 0 5 10 54]
'sk_sp<SkDrawLooper>::operator=' [ 0 21]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 65]
'std::__1::swap<cc::RTree<unsigned long>::Node<unsigned long> *>' [ 0 5 10]
'std::__1::forward<sk_sp<SkImageFilter> >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >::base' [ 0 5 10 81]
'base::internal::OptionalStorageBase<cc::ScopedRasterFlags, false>::Init<const cc::PaintFlags *&, cc::ImageProvider *&, const SkMatrix &, unsigned int>' [ 0 6 16 67]
'cc::TilePaintFilter::SnapshotWithImagesInternal' [ 0 4 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::allocate' [ 0 5 10 97]
'std::__1::__compressed_pair_elem<base::trace_event::TracedValue *, 0, false>' [ 0 5 10]
'sk_sp<const cc::PaintOpBuffer>::operator*' [ 0 32]
'std::__1::conditional<true, std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::__nat>' [ 0 5 10]
'std::__1::pointer_traits<cc::FilterOperation *>' [ 0 5 10]
'cc::PaintOp::Deserialize' [ 0 4 13]
'base::string16' [ 0 6]
'base::internal::OptionalStorage<cc::DecodeStashingImageProvider, false, false>::OptionalStorage' [ 0 6 16 80]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__destroy<cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10 100]
'__FILE' [ 0]
'sk_sp<SkMaskFilter>::sk_sp' [ 0 21]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >' [ 0 5 10]
'SkIRect::MakeXYWH' [ 0 9]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::Impl::get_key_comp' [ 0 6 16 191 197]
'std::__1::distance<const unsigned char *>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::~__vector_base' [ 0 5 10 142]
'std::__1::__const_void_pointer<std::__1::pair<cc::TransferCacheEntryType, unsigned int> *, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, false>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>' [ 0 4]
'std::__1::addressof<char>' [ 0 5 10]
'cc::FilterOperation::MapRectReverse' [ 0 4 21]
'std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::move_iterator' [ 0 5 10 78]
'std::__1::remove_reference<SkRect &>' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::equal_range<int>' [ 0 6 16 183]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<long>' [ 0 6 16 76]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::operator[]' [ 0 5 10 92]
'std::__1::add_lvalue_reference<cc::ServiceRawMemoryTransferCacheEntry>' [ 0 5 10]
'cc::RTree<cc::DrawImage>' [ 0 4]
'cc::LightingSpotPaintFilter::cutoff_angle' [ 0 4 29]
'base::internal::OptionalBase<gfx::ColorSpace>::OptionalBase<const gfx::ColorSpace &>' [ 0 6 16 47]
'base::subtle::RefCountedThreadSafeBase::Release' [ 0 6 14 40]
'std::__1::remove_reference<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'std::__1::underlying_type<cc::PaintImage::AnimationType>' [ 0 5 10]
'base::Optional<unsigned int>::operator=' [ 0 6 30]
'std::__1::bidirectional_iterator_tag' [ 0 5 10]
'base::StackAllocator<gfx::Rect, 1>' [ 0 6]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<char *&, void>' [ 0 5 10 52]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >' [ 0 5 10]
'SkPixelGeometry' [ 0]
'cc::DrawLineOp::CountSlowPaths' [ 0 4 16]
'base::subtle::NoBarrier_Store' [ 0 6 14]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__vector_base' [ 0 5 10 146]
'sk_sp<SkColorFilter>::release' [ 0 22]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::deallocate' [ 0 5 10 71]
'cc::SkiaPaintCanvas::getDeviceClipBounds' [ 0 4 21]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::__split_buffer' [ 0 5 10 63]
'std::__1::pair<cc::TransferCacheEntryType, unsigned int>::pair<cc::TransferCacheEntryType, unsigned int, false>' [ 0 5 10 58]
'base::internal::StrictNumeric<unsigned long>::operator unsigned long<unsigned long, nullptr>' [ 0 6 16 46]
'std::__1::move<cc::RTree<unsigned long>::Node<unsigned long> *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct<float>' [ 0 5 10 57]
'cc::DisplacementMapEffectPaintFilter::scale' [ 0 4 38]
'cc::Rasterizer<cc::RotateOp, false>' [ 0 4]
'std::__1::forward<const cc::PaintImage &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::max_size' [ 0 5 10 75]
'std::__1::allocator<SkPaint>' [ 0 5 10]
'SkNoDrawCanvas::onDrawVerticesObject' [ 0 16]
'cc::ImagePaintFilter::operator==' [ 0 4 22]
'std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>' [ 0 5 10]
'cc::RecordPaintCanvas::recordCustomData' [ 0 4 23]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::size' [ 0 5 10 58]
'cc::PaintOpReader::ReadArithmeticPaintFilter' [ 0 4 19]
'base::FlatContainerDupes' [ 0 6]
'cc::BlurPaintFilter::SerializedSize' [ 0 4 21]
'cc::DropShadowPaintFilter::shadow_mode' [ 0 4 27]
'std::__1::remove_reference<std::__1::allocator<unsigned char> &>' [ 0 5 10]
'cc::DrawImageRectOp::~DrawImageRectOp' [ 0 4 21]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::~flat_tree' [ 0 6 16 183]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::max_size' [ 0 5 10 82]
'base::internal::IsValueInRangeForNumericType<unsigned long, unsigned long>' [ 0 6 16]
'cc::LightingSpotPaintFilter::target' [ 0 4 29]
'cc::PaintCanvas' [ 0 4]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::data' [ 0 5 10 135]
'cc::PaintOpBuffer::ReallocBuffer' [ 0 4 19]
'base::internal::FunctorTraits<void (cc::SkiaPaintCanvas::*)(), void>' [ 0 6 16]
'logging::CheckEQImpl<unsigned long, unsigned long>' [ 0 9]
'cc::ClientColorSpaceTransferCacheEntry::~ClientColorSpaceTransferCacheEntry' [ 0 4 40]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::pop_back' [ 0 5 10 54]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >::deallocate' [ 0 5 10 64]
'sk_sp<cc::TilePaintFilter>::release' [ 0 28]
'cc::UpdateTypeAndSkip<cc::DrawPathOp>' [ 0 4]
'std::__1::pointer_traits<sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'base::RepeatingCallback<void ()>' [ 0 6]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::operator=' [ 0 6 16 191]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::allocate' [ 0 5 10 59]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'cc::DrawIRectOp::Deserialize' [ 0 4 17]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10]
'cc::PaintImageGenerator::GetFrameMetadata' [ 0 4 25]
'cc::BlurPaintFilter' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::__construct_backward<sk_sp<SkImageFilter> *>' [ 0 5 10 73]
'std::__1::remove_reference<int>' [ 0 5 10]
'std::__1::allocator<unsigned long>::allocate' [ 0 5 10 36]
'base::internal::OptionalStorage<unsigned long, true, true>::OptionalStorageBase' [ 0 6 16 60]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::max_size' [ 0 5 10 106]
'base::internal::OptionalStorageBase<SkNoDrawCanvas, false>::~OptionalStorageBase' [ 0 6 16 60]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__annotate_new' [ 0 5 10 58]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServiceRawMemoryTransferCacheEntry *, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10 120]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >' [ 0 5 10]
'sk_sp<SkImage>::operator->' [ 0 16]
'cc::LightingPointPaintFilter::SnapshotWithImagesInternal' [ 0 4 30]
'SkScalarsEqual' [ 0]
'std::__1::add_lvalue_reference<cc::ServiceShaderTransferCacheEntry>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkRecorder *, 0, false>' [ 0 5 10]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__construct_at_end' [ 0 5 10 77]
'base::subtle::Release_Store' [ 0 6 14]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::construct<gfx::Rect, const gfx::Rect &>' [ 0 5 10 65]
'base::internal::OptionalBase<gfx::ColorSpace>::FreeIfNeeded' [ 0 6 16 47]
'std::__1::iterator<std::__1::random_access_iterator_tag, cc::FilterOperation, long, const cc::FilterOperation *, const cc::FilterOperation &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >' [ 0 5 10]
'std::__1::max<float>' [ 0 5 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::GatherDiscardableImages' [ 0 4 27 54]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__annotate_delete' [ 0 5 10 139]
'cc::(anonymous namespace)::DiscardableImageGenerator::all_images_are_srgb' [ 0 4 27 54]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'cc::PaintOpBuffer' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::select_on_container_copy_construction' [ 0 5 10 71]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'cc::TranslateOp::Serialize' [ 0 4 17]
'base::Optional<cc::RecordPaintCanvas>::value' [ 0 6 39]
'cc::DrawDRRectOp::Serialize' [ 0 4 18]
'cc::ClientTransferCacheEntry' [ 0 4]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::Type' [ 0 4 102]
'std::__1::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >::release' [ 0 5 10 129]
'__cxx_global_var_init.1' [ 0]
'__cxx_global_var_init.2' [ 0]
'__cxx_global_var_init.3' [ 0]
'cc::Rasterizer<cc::SetMatrixOp, false>' [ 0 4]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::shrink_to_fit' [ 0 5 10 133]
'std::__1::__add_lvalue_reference_impl<base::trace_event::TracedValue, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::ListValue *, 0, false>::__compressed_pair_elem<base::ListValue *&, void>' [ 0 5 10 63]
'std::__1::advance<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::capacity' [ 0 5 10 77]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__construct_range_forward<cc::FilterOperation *, cc::FilterOperation *>' [ 0 5 10 71]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >' [ 0 5 10]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__alloc' [ 0 5 10 93]
'cc::PaintOpBuffer::push<cc::ClipRRectOp, const SkRRect &, SkClipOp &, bool &>' [ 0 4 19]
'logging::CheckNEImpl' [ 0 9]
'cc::DisplacementMapEffectPaintFilter::color' [ 0 4 38]
'cc::OffsetPaintFilter::input' [ 0 4 23]
'base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::Run' [ 0 6 101]
'base::internal::CheckedNumeric<unsigned long>::IsValid<unsigned long>' [ 0 6 16 47]
'cc::(anonymous namespace)::SizeCounter::WriteSimple<unsigned long>' [ 0 4 27 40]
'gfx::SizeF::width' [ 0 5 12]
'std::__1::forward<const sk_sp<SkImageFilter> &>' [ 0 5 10]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'cc::RecordPaintCanvas::save' [ 0 4 23]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::__alloc' [ 0 5 10 139]
'base::internal::CheckedNumeric<long>::CheckedNumeric<long>' [ 0 6 16 38]
'std::__1::remove_reference<std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> > &>' [ 0 5 10]
'cc::PaintOpBuffer::OffsetIterator::operator bool' [ 0 4 19 35]
'base::internal::OptionalStorageBase<unsigned int, true>::OptionalStorageBase<unsigned int>' [ 0 6 16 57]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::~set' [ 0 5 10 229]
'std::__1::allocator<float>::deallocate' [ 0 5 10 28]
'std::__1::equal<std::__1::__wrap_iter<const unsigned int *>, std::__1::__wrap_iter<const unsigned int *>, std::__1::__equal_to<unsigned int, unsigned int> >' [ 0 5 10]
'std::__1::allocator<sk_sp<SkImageFilter> >::construct<sk_sp<SkImageFilter>, sk_sp<SkImageFilter> >' [ 0 5 10 44]
'SkCanvas::didConcat' [ 0 10]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::get' [ 0 5 10 54]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::clear' [ 0 5 10 144]
'std::__1::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >::reset' [ 0 5 10 137]
'cc::PaintTextBlob::operator bool' [ 0 4 19]
'std::__1::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, 1, false>::__compressed_pair_elem<const base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &, void>' [ 0 5 10 93]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::shrink_to_fit' [ 0 6 16 191]
'cc::RTree<cc::DrawImage>::BuildRecursive' [ 0 4 26]
'std::__1::remove_reference<cc::ImageProvider::ScopedDecodedDrawImage &>' [ 0 5 10]
'std::__1::conditional<false, const cc::PaintOp *const &, const cc::PaintOp *&&>' [ 0 5 10]
'std::__1::swap<const cc::PaintOp **>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::reserve' [ 0 5 10 62]
'std::__1::forward<int>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::__construct<Frame, const Frame &>' [ 0 5 10 57]
'sk_sp<SkTextBlob>::release' [ 0 19]
'std::__1::allocator<Frame>' [ 0 5 10]
'std::__1::forward<SkCanvas *>' [ 0 5 10]
'SkIRect::isEmpty' [ 0 9]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >::construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, int, cc::PaintImage::DecodingMode>' [ 0 5 10 73]
'std::__1::vector<float, base::StackAllocator<float, 3> >::size' [ 0 5 10 58]
'cc::PaintImage::operator=' [ 0 4 16]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 149]
'std::__1::vector<float, std::__1::allocator<float> >::capacity' [ 0 5 10 54]
'cc::Rasterizer<cc::DrawIRectOp, true>::Raster' [ 0 4 39]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::RefCountedThreadSafe' [ 0 6 108]
'cc::RestoreOp::Raster' [ 0 4 15]
'lldiv_t' [ 0]
'cc::ScopedRasterFlags::flags' [ 0 4 23]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::data' [ 0 5 10 82]
'std::__1::forward<const SkPaint &>' [ 0 5 10]
'cc::ComposePaintFilter::inner' [ 0 4 24]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::capacity' [ 0 5 10 63]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::__split_buffer' [ 0 5 10 134]
'std::__1::__const_void_pointer<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface>, false>' [ 0 5 10]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::construct<sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> >' [ 0 5 10 46]
'std::__1::remove_reference<const bool &>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::operator()' [ 0 5 10 146]
'std::__1::vector<float, std::__1::allocator<float> >::__recommend' [ 0 5 10 54]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'std::__1::vector<float, std::__1::allocator<float> >::__destruct_at_end' [ 0 5 10 54]
'base::RepeatingCallback<void (SkCanvas *, unsigned int)>::~RepeatingCallback' [ 0 6 58]
'base::Optional<unsigned long>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<float> >::max_size' [ 0 5 10 57]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__destruct_at_end' [ 0 5 10 143]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::begin' [ 0 5 10 68]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FrameMetadata>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >' [ 0 5 10]
'__uint32_t' [ 0]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::capacity' [ 0 5 10 134]
'SkTo<unsigned char, int>' [ 0]
'std::__1::allocator<gfx::Rect>::construct<gfx::Rect, gfx::Rect>' [ 0 5 10 32]
'std::__1::__tree_key_value_types<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >::__get_key' [ 0 5 10 93]
'std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::base' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &, 1, false>::__get' [ 0 5 10 110]
'std::__1::iterator_traits<const cc::PaintOp **>' [ 0 5 10]
'cc::FilterOperation::blur_tile_mode' [ 0 4 21]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::capacity' [ 0 5 10 142]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::__distance<const unsigned int *>' [ 0 5 10]
'cc::(anonymous namespace)::ScopedFlagsOverride::ScopedFlagsOverride' [ 0 4 27 48]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> &>::__compressed_pair<nullptr_t, base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10 99]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1>, 1, false>' [ 0 5 10]
'scoped_refptr<cc::DisplayItemList>::operator->' [ 0 36]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__destruct_at_end' [ 0 5 10 75]
'cc::TurbulencePaintFilter::seed' [ 0 4 27]
'std::__1::remove_reference<const sk_sp<cc::PaintFilter> &>' [ 0 5 10]
'base::AutoReset<bool>::AutoReset' [ 0 6 23]
'cc::ImagePaintFilter::src_rect' [ 0 4 22]
'std::__1::remove_reference<std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10]
'sk_sp<cc::TurbulencePaintFilter>::release' [ 0 34]
'std::__1::allocator<unsigned int>::construct<unsigned int>' [ 0 5 10 35]
'std::__1::__compressed_pair<Frame *, std::__1::allocator<Frame> &>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::RestoreOp>' [ 0 4]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__annotate_delete' [ 0 5 10 70]
'std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >' [ 0 5 10]
'base::nullopt' [ 0 6]
'cc::FilterOperations::FilterOperations' [ 0 4 22]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::capacity' [ 0 5 10 62]
'cc::PaintFilter::operator==' [ 0 4 17]
'cc::(anonymous namespace)::DataWriter::WriteSimple<SkFontStyle::Slant>' [ 0 4 27 39]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::clear' [ 0 5 10 232]
'cc::PaintImageGenerator::PaintImageGenerator' [ 0 4 25]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::__construct<float, const float &>' [ 0 5 10 61]
'cc::g_raster_with_flags_functions' [ 0 4]
'cc::PaintOpWriter::WriteSimple<cc::MorphologyPaintFilter::MorphType>' [ 0 4 19]
'std::__1::__const_pointer<sk_sp<SkImageFilter>, sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> >, true>' [ 0 5 10]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::reserve' [ 0 5 10 54]
'cc::MagnifierPaintFilter' [ 0 4]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::__vector_base' [ 0 5 10 65]
'cc::SkiaPaintCanvas::drawRoundRect' [ 0 4 21]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>' [ 0 4]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::vector' [ 0 5 10 139]
'int_fast8_t' [ 0]
'std::__1::operator!=<std::__1::__wrap_iter<const cc::FilterOperation *>, std::__1::__wrap_iter<const cc::FilterOperation *> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::ListValue, true>' [ 0 5 10]
'std::__1::remove_reference<bool>' [ 0 5 10]
'std::__1::remove_reference<base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)> &>' [ 0 5 10]
'cc::PaintOpBuffer::OffsetIterator::operator*' [ 0 4 19 35]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::__destruct_at_end' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>, void>' [ 0 5 10 100]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'gfx::RectF' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::destroy<SkPaint>' [ 0 5 10 59]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::__size_type<base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, long, true>' [ 0 5 10]
'std::__1::less<void>::operator()<const int &, const int &>' [ 0 5 10 22]
'SkRegion::op' [ 0 10]
'char' [ 0]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::deallocate' [ 0 5 10 69]
'cc::(anonymous namespace)::kSkiaAlignment' [ 0 4 27]
'base::internal::OptionalStorageBase<gfx::Rect, true>' [ 0 6 16]
'cc::SimpleBufferSerializer::written' [ 0 4 28]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<int, cc::PaintImage::DecodingMode> *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'cc::PaintOp::IsValidSkClipOp' [ 0 4 13]
'cc::SkiaPaintImageGenerator::onRefEncodedData' [ 0 4 29]
'cc::FilterOperation::zoom_inset' [ 0 4 21]
'std::__1::__pointer_type<WireTypeface, std::__1::allocator<WireTypeface> >' [ 0 5 10]
'std::__1::__pointer_type<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10]
'sk_sp<cc::PaintFilter>::operator*' [ 0 24]
'cc::SkiaPaintCanvas::WrapCanvasInColorSpaceXformCanvas' [ 0 4 21]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__make_iter' [ 0 5 10 143]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::__split_buffer' [ 0 5 10 145]
'std::__1::add_lvalue_reference<SkImageGenerator>' [ 0 5 10]
'gfx::Vector2dF::y' [ 0 5 16]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> >::__compressed_pair<nullptr_t, const base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10 98]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>::clear' [ 0 5 10 75]
'std::__1::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >::reset' [ 0 5 10 129]
'base::Optional<SkImageFilter::CropRect>::emplace<const SkImageFilter::CropRect &>' [ 0 6 41]
'cc::(anonymous namespace)::RoundDownToAlignment' [ 0 4 27]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp' [ 0 22]
'sk_sp<cc::PaintFilter>::operator=' [ 0 24]
'SkAlpha' [ 0]
'std::__1::remove_reference<const Frame &>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<void (SkiaPaintCanvas::*)()>::is_nullable, bool>' [ 0 5 10]
'std::__1::conditional<true, const cc::FilterOperation &, cc::FilterOperation &&>' [ 0 5 10]
'base::Optional<cc::DecodeStashingImageProvider>::operator*' [ 0 6 49]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawRRectOp>' [ 0 4 19]
'sk_sp<SkPathEffect>::sk_sp' [ 0 21]
'std::__1::__wrap_iter<const cc::PaintOp *const *>::__wrap_iter<const cc::PaintOp **>' [ 0 5 10 51]
'cc::ArithmeticPaintFilter::k1' [ 0 4 27]
'cc::ArithmeticPaintFilter::k2' [ 0 4 27]
'cc::UpdateTypeAndSkip<cc::ConcatOp>' [ 0 4]
'cc::ArithmeticPaintFilter::k4' [ 0 4 27]
'base::Optional<SkImageFilter::CropRect>::Optional' [ 0 6 41]
'cc::FilterOperation::set_drop_shadow_offset' [ 0 4 21]
'std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, int &>' [ 0 5 10 98]
'cc::DisplayItemList::Finalize::trace_event_unique_atomic59' [ 0 4 21 31]
'cc::RecordPaintCanvas::isClipEmpty' [ 0 4 23]
'base::AtomicSequenceNumber::GetNext' [ 0 6 28]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>, void, void>' [ 0 5 10 111]
'std::__1::__pointer_type<char, std::__1::default_delete<char []> >' [ 0 5 10]
'std::__1::move<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::forward<const base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::~__vector_base' [ 0 5 10 89]
'SkSafeUnref<cc::XfermodePaintFilter>' [ 0]
'std::__1::forward<const std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'cc::ClipRRectOp::Deserialize' [ 0 4 17]
'std::__1::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >::release' [ 0 5 10 119]
'std::__1::forward<cc::SkiaPaintImageGenerator *>' [ 0 5 10]
'SkPoint::set' [ 0 9]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::capacity' [ 0 5 10 142]
'cc::AnnotateOp::Raster' [ 0 4 16]
'cc::MatrixConvolutionPaintFilter::kernel_offset' [ 0 4 34]
'cc::ScopedRasterFlags::MutableFlags' [ 0 4 23]
'int16_t' [ 0]
'logging::CheckEQImpl<unsigned char, int>' [ 0 9]
'SkNoDrawCanvas::onDrawImageRect' [ 0 16]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__move_assign_alloc' [ 0 5 10 89]
'sqrt<int>' [ 0]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__destruct_at_end' [ 0 5 10 79]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::vector' [ 0 5 10 82]
'std::__1::forward<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::Impl::Impl' [ 0 6 16 191 197]
'cc::SimpleSerialize<cc::SaveOp>' [ 0 4]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>' [ 0 4]
'cc::PaintOp::Raster' [ 0 4 13]
'std::__1::allocator<const cc::PaintOp *>::deallocate' [ 0 5 10 42]
'cc::PaintImageBuilder::PaintImageBuilder' [ 0 4 23]
'cc::DrawTextBlobOp::AreEqual' [ 0 4 20]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::~RefCountedThreadSafe' [ 0 6 108]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>, void, void>' [ 0 5 10 111]
'std::__1::conditional<true, const SkPaint &, SkPaint &&>' [ 0 5 10]
'base::internal::OptionalStorageBase<cc::DecodeStashingImageProvider, false>::OptionalStorageBase' [ 0 6 16 77]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::~__vector_base' [ 0 5 10 99]
'SkPoint::operator*' [ 0 9]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10 152]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::~__split_buffer' [ 0 5 10 139]
'gfx::Vector2dF::x' [ 0 5 16]
'SkImageInfo::height' [ 0 13]
'std::__1::__pointer_type<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'Sk64_pin_to_s32' [ 0]
'sk_sp<SkTypeface>::operator bool' [ 0 19]
'SkImage::height' [ 0 9]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::Iterator, true>::Init<const cc::PaintOpBuffer *&>' [ 0 6 16 72]
'std::__1::operator==<const gfx::Rect *, const gfx::Rect *>' [ 0 5 10]
'base::time_internal' [ 0 6]
'std::__1::allocator<const SkDescriptor *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<const cc::DrawImage *> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::allocate' [ 0 5 10 100]
'base::internal::OptionalStorage<cc::RecordPaintCanvas, false, false>' [ 0 6 16]
'std::__1::remove_reference<sk_sp<cc::PaintFilter> &>' [ 0 5 10]
'std::__1::__temp_value<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__addr' [ 0 5 10 157]
'std::__1::forward<const SkIRect &>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__recommend' [ 0 5 10 92]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__construct_backward<unsigned long>' [ 0 5 10 65]
'std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> &, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> &, false>' [ 0 5 10 189]
'std::__1::forward<cc::TransferCacheEntryType>' [ 0 5 10]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'std::__1::forward<const SkMatrixConvolutionImageFilter::TileMode &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__vector_base' [ 0 5 10 150]
'cc::SkiaPaintCanvas::getSaveCount' [ 0 4 21]
'cc::PaintShader::CreateScaledPaintRecord' [ 0 4 17]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::SaveLayerOp>' [ 0 4 19]
'cc::UpdateTypeAndSkip<cc::NoopOp>' [ 0 4]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::~vector' [ 0 5 10 82]
'base::StackAllocator<gfx::Rect, 1>::StackAllocator' [ 0 6 36]
'std::__1::__temp_value<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__addr' [ 0 5 10 149]
'cc::MatrixConvolutionPaintFilter::kernel_size' [ 0 4 34]
'cc::RTree<cc::DrawImage>::~RTree' [ 0 4 26]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__copy_assign_alloc' [ 0 5 10 69]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::__end_cap' [ 0 5 10 63]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::count' [ 0 5 10 229]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 65]
'base::internal::CallbackBase::CallbackBase' [ 0 6 16 30]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::size' [ 0 5 10 136]
'std::__1::add_lvalue_reference<base::ListValue>' [ 0 5 10]
'cc::ServiceShaderTransferCacheEntry::Deserialize' [ 0 4 37]
'std::__1::__const_void_pointer<sk_sp<cc::PaintFilter> *, std::__1::allocator<sk_sp<cc::PaintFilter> >, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >' [ 0 5 10]
'cc::DrawTextBlobOp::IsValid' [ 0 4 20]
'std::__1::remove_reference<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > *&>' [ 0 5 10]
'base::internal::OptionalStorage<cc::RecordPaintCanvas, false, false>::~OptionalStorage' [ 0 6 16 70]
'std::__1::remove_reference<sk_sp<SkColorFilter> >' [ 0 5 10]
'cc::(anonymous namespace)::kMaxExtent' [ 0 4 27]
'std::__1::pointer_traits<cc::FrameMetadata *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, true>' [ 0 5 10 30]
'std::__1::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >::~unique_ptr' [ 0 5 10 121]
'cc::DrawOvalOp::Serialize' [ 0 4 16]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kShader>::TransferCacheEntryBase' [ 0 4 96]
'std::__1::move_if_noexcept<cc::PaintTypeface>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<sk_sp<cc::PaintFilter> >, long, true>' [ 0 5 10]
'base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> >::flat_map' [ 0 6 77]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::deallocate' [ 0 5 10 68]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >::RefCountedThreadSafe' [ 0 6 112]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >' [ 0 5 10]
'cc::PaintOp::DestroyThis' [ 0 4 13]
'std::__1::allocator<unsigned int>::deallocate' [ 0 5 10 35]
'sktfitsin::Private::underlying_type<unsigned long, false>' [ 0 11 20]
'int_fast16_t' [ 0]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__annotate_delete' [ 0 5 10 62]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::construct<sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> >' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::max_size' [ 0 5 10 100]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__max_size' [ 0 5 10 98]
'std::__1::max<float, std::__1::__less<float, float> >' [ 0 5 10]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'cc::MergePaintFilter::input_count' [ 0 4 22]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::__alloc' [ 0 5 10 65]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >::operator*' [ 0 5 10 81]
'base::subtle::AtomicLocation64' [ 0 6 14]
'sk_sp<SkColorSpace>::operator=' [ 0 21]
'cc::ScaleOp::ScaleOp' [ 0 4 13]
'__vtbl_ptr_type' [ 0]
'cc::ClientPathTransferCacheEntry::~ClientPathTransferCacheEntry' [ 0 4 34]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, void>' [ 0 5 10 114]
'std::__1::forward<unsigned long &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation>, 1, true>::__compressed_pair_elem<const std::__1::allocator<cc::FilterOperation> &, void>' [ 0 5 10 85]
'std::__1::remove_reference<base::ListValue *&>' [ 0 5 10]
'std::__1::vector<float, base::StackAllocator<float, 3> >::max_size' [ 0 5 10 58]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::allocate' [ 0 5 10 78]
'std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'std::__1::add_lvalue_reference<SkRecorder>' [ 0 5 10]
'sk_sp<cc::PaintOpBuffer>::operator=' [ 0 26]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10 106]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__max_size' [ 0 5 10 61]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'std::__1::enable_if_t<!std::is_same<internal::RemoveCvRefT<Rect>, Optional<Rect> >::value && std::is_constructible<Rect, Rect>::value && std::is_assignable<Rect &, Rect>::value && (!std::is_scalar<Rect>::value || !std::is_same<std::decay_t<Rect>, Rect>::value), base::Optional<gfx::Rect> &>' [ 0 5 10]
'SkColorSetARGB' [ 0]
'SkMatrix::getType' [ 0 10]
'cc::DrawLineOp::Deserialize' [ 0 4 16]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::data' [ 0 5 10 143]
'cc::DrawOvalOp::RasterWithFlags' [ 0 4 16]
'trace_event_internal::AddTraceEvent' [ 0 22]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>' [ 0 5 10]
'cc::PaintOpWriter::WriteImage' [ 0 4 19]
'cc::SaveOp' [ 0 4]
'std::__1::__const_pointer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, true>' [ 0 5 10]
'std::__1::remove_reference<SkBlendMode>' [ 0 5 10]
'std::__1::add_lvalue_reference<cc::ServiceTransferCacheEntry>' [ 0 5 10]
'cc::DrawImageRectOp::Deserialize' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::__max_size' [ 0 5 10 73]
'std::__1::__compressed_pair_elem<std::__1::allocator<WireTypeface>, 1, true>' [ 0 5 10]
'cc::OffsetPaintFilter::SerializedSize' [ 0 4 23]
'std::__1::forward<cc::DisplayItemList::UsageHint>' [ 0 5 10]
'cc::PaintRecorder::PaintRecorder' [ 0 4 19]
'SkTextBlobBuilder::allocRunPos' [ 0 19]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::data' [ 0 5 10 70]
'std::__1::vector<Frame, std::__1::allocator<Frame> >' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__annotate_delete' [ 0 5 10 78]
'std::__1::forward<const cc::PaintFlags &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct_range_forward<const float *, float *>' [ 0 5 10 57]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::deallocate' [ 0 5 10 65]
'std::__1::forward<const gfx::ColorSpace &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::end' [ 0 5 10 143]
'scoped_refptr<cc::DisplayItemList>::scoped_refptr' [ 0 36]
'cc::SkiaPaintCanvas::Annotate' [ 0 4 21]
'cc::TilePaintFilter::src' [ 0 4 21]
'cc::ImageProvider' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::__construct_range_forward<cc::FrameMetadata>' [ 0 5 10 69]
'base::internal::CheckedDivOp<long, long, void>::Do<long>' [ 0 6 16 48]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair<SkCanvas *, std::__1::default_delete<SkCanvas> >' [ 0 5 10]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare::extract_if_value_type<int>' [ 0 6 16 191 208]
'gfx::Rect::set_width' [ 0 5 11]
'std::__1::iterator_traits<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::allocate' [ 0 5 10 75]
'cc::PaintOpReader::ReadSimple<SkFilterQuality>' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<const SkDescriptor **>::__nat, const SkDescriptor *>' [ 0 5 10]
'cc::NoopOp' [ 0 4]
'sk_sp<cc::MatrixPaintFilter>' [ 0]
'std::__1::__to_raw_pointer<cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10]
'std::__1::__pointer_type<gfx::Rect, std::__1::allocator<gfx::Rect> >' [ 0 5 10]
'cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>::operator=' [ 0 4 26 49]
'std::__1::remove_reference<cc::ImageProvider::ScopedDecodedDrawImage *&>' [ 0 5 10]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 258]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::Type' [ 0 4 98]
'std::__1::enable_if<true, gfx::Rect *>' [ 0 5 10]
'cc::PaintOpWriter::Alignment' [ 0 4 19]
'SkNoDrawCanvas::onDrawRect' [ 0 16]
'cc::LightingDistantPaintFilter::LightingDistantPaintFilter' [ 0 4 32]
'sk_sp<cc::ComposePaintFilter>::sk_sp' [ 0 31]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10 71]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::clear' [ 0 5 10 143]
'cc::SolidColorAnalyzer' [ 0 4]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::OffsetIterator, true>' [ 0 6 16]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::max_size' [ 0 5 10 98]
'SkImageGenerator::onIsValid' [ 0 18]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::end' [ 0 5 10 58]
'cc::FilterOperations::MapRectReverse::operator()' [ 0 4 22 38]
'base::internal::ArithmeticPromotionCategory' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<cc::TransferCacheEntryType, unsigned int> *>::__nat, std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kPaintTypeface>' [ 0 4]
'std::__1::__const_void_pointer<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> **, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>, false>' [ 0 5 10]
'base::internal::operator/<base::internal::CheckedNumeric<long>, base::internal::CheckedNumeric<long>, nullptr>' [ 0 6 16]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::unsafe_emplace<int, base::StackVector<gfx::Rect, 1> >' [ 0 6 16 191]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__end_cap' [ 0 5 10 85]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::ClipRRectOp>' [ 0 4 19]
'cc::DrawRectOp::IsValid' [ 0 4 16]
'base::StackVector<float, 3>::StackVector' [ 0 6 29]
'cc::PaintOpBufferSerializer::MakeSerializeOptions' [ 0 4 29]
'std::__1::__wrap_iter<sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>::Source::stack_buffer' [ 0 6 68 76]
'cc::PaintOpBuffer::push<cc::DrawLineOp, float &, float &, float &, float &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct_backward<gfx::Rect>' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<SkImageGenerator, std::__1::default_delete<SkImageGenerator>, false>' [ 0 5 10 30]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__alloc' [ 0 5 10 75]
'std::__1::__compressed_pair<SkPaint *, std::__1::allocator<SkPaint> &>' [ 0 5 10]
'std::__1::move<cc::PaintFlags &>' [ 0 5 10]
'base::Optional<gfx::Rect>::Optional' [ 0 6 27]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::assign<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10 66]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::__compressed_pair<unsigned long, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__compressed_pair<int, const std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > &>' [ 0 5 10 120]
'cc::PaintOpReader::FixupMatrixPostSerialization' [ 0 4 19]
'std::__1::numeric_limits<int>' [ 0 5 10]
'std::__1::__unwrap_iter<cc::FilterOperation *>' [ 0 5 10]
'SkSafeUnref<cc::MatrixConvolutionPaintFilter>' [ 0]
'cc::SetMatrixOp::Raster' [ 0 4 17]
'signed char' [ 0]
'cc::PaintOpWriter::PaintOpWriter' [ 0 4 19]
'cc::XfermodePaintFilter::~XfermodePaintFilter' [ 0 4 25]
'sk_sp<cc::PaintImageGenerator>::release' [ 0 32]
'ptrdiff_t' [ 0]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kImage>' [ 0 4]
'cc::DisplayItemList::push<cc::DrawRecordOp, sk_sp<const cc::PaintOpBuffer> &>' [ 0 4 21]
'cc::DrawRRectOp::DrawRRectOp' [ 0 4 17]
'cc::(anonymous namespace)::DiscardableImageGenerator' [ 0 4 27]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'base::internal::OptionalStorageBase<SkImageFilter::CropRect, true>::Init<const SkImageFilter::CropRect &>' [ 0 6 16 68]
'sk_memory_order' [ 0]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__move_assign_alloc' [ 0 5 10 77]
'cc::TransferCacheSerializeHelper::AssertLocked' [ 0 4 34]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'cc::DisplacementMapEffectPaintFilter' [ 0 4]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>::~OptionalStorageBase' [ 0 6 16 61]
'sk_sp<SkPathRef>' [ 0]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::~vector' [ 0 5 10 139]
'std::__1::__compressed_pair<cc::ServicePaintTypefaceTransferCacheEntry *, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >::__compressed_pair<cc::ServicePaintTypefaceTransferCacheEntry *&, true>' [ 0 5 10 146]
'std::__1::__compressed_pair<const cc::PaintOp **, base::StackAllocator<const cc::PaintOp *, 3> >' [ 0 5 10]
'cc::LightingSpotPaintFilter::light_color' [ 0 4 29]
'base::StackContainer<std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >, 3>::~StackContainer' [ 0 6 111]
'std::__1::move<sk_sp<SkShader> &>' [ 0 5 10]
'cc::ClientImageTransferCacheEntry::s_next_id_' [ 0 4 35]
'base::Optional<gfx::ColorSpace>::Optional<const gfx::ColorSpace &, false>' [ 0 6 33]
'logging::CheckEQImpl<cc::FilterOperation::FilterType, cc::FilterOperation::FilterType>' [ 0 9]
'sk_sp<SkMaskFilter>::get' [ 0 21]
'base::AtomicRefCount::Increment' [ 0 6 22]
'std::__1::__vector_base<float, std::__1::allocator<float> >::~__vector_base' [ 0 5 10 61]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> >::__compressed_pair<nullptr_t, const base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10 79]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > > >' [ 0 5 10]
'sk_sp<cc::DisplacementMapEffectPaintFilter>' [ 0]
'std::__1::vector<float, std::__1::allocator<float> >::assign<const float *>' [ 0 5 10 54]
'std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::base' [ 0 5 10 82]
'U8CPU' [ 0]
'cc::LightingPointPaintFilter::location' [ 0 4 30]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare::KeyValueCompare' [ 0 6 16 191 208]
'cc::PaintOpBufferSerializer::PaintOpBufferSerializer' [ 0 4 29]
'std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >::deallocate' [ 0 5 10 111]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::~__split_buffer' [ 0 5 10 145]
'base::internal::CheckedMulOp<int, long, void>' [ 0 6 16]
'cc::PaintOpReader::ReadPaintFlagsPaintFilter' [ 0 4 19]
'cc::(anonymous namespace)::CheckIfSolidShape<SkRect>::trace_event_unique_atomic114' [ 0 4 27 54]
'cc::PaintOpBufferSerializer::SerializeOpWithFlags' [ 0 4 29]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'sk_sp<cc::ColorFilterPaintFilter>' [ 0]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__alloc' [ 0 5 10 137]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::RunImpl<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > &, 0>::is_method' [ 0 6 16 299 514]
'base::span<const unsigned char, 18446744073709551615>::end' [ 0 6 55]
'base::trace_event::TraceCategory' [ 0 6 19]
'base::internal::OptionalStorage<unsigned long, true, true>' [ 0 6 16]
'std::__1::__temp_value<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::~__temp_value' [ 0 5 10 149]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::clear' [ 0 5 10 78]
'base::Optional<unsigned long>::operator=' [ 0 6 31]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServiceImageTransferCacheEntry>, void>' [ 0 5 10 100]
'cc::SkiaPaintCanvas::ContextFlushes::ContextFlushes' [ 0 4 21 37]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>' [ 0 5 10]
'cc::PaintOp::HasDiscardableImagesFromFlags' [ 0 4 13]
'std::__1::forward<cc::ServiceShaderTransferCacheEntry *&>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__destruct_at_end' [ 0 5 10 63]
'std::__1::forward<const int &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::clear' [ 0 5 10 132]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::capacity' [ 0 5 10 151]
'std::__1::move<std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > > &>' [ 0 5 10]
'std::__1::__const_void_pointer<float *, std::__1::allocator<float>, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__destroy<unsigned char>' [ 0 5 10 65]
'cc::FilterOperations::HasFilterThatMovesPixels' [ 0 4 22]
'cc::PaintRecorder::getRecordingCanvas' [ 0 4 19]
'std::__1::__compressed_pair_elem<base::StackAllocator<float, 3>, 1, false>::__compressed_pair_elem<const base::StackAllocator<float, 3> &, void>' [ 0 5 10 76]
'operator<<<char, std::__1::char_traits<char>, cc::PaintOpBuffer>' [ 0]
'SkAtomic<SkPath::Convexity, sk_memory_order_relaxed>::load' [ 0 54]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::allocate' [ 0 5 10 93]
'std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >::operator()' [ 0 5 10 75]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::emplace_back<cc::DrawImage, const gfx::Rect &>' [ 0 5 10 125]
'std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::base' [ 0 5 10 76]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::back' [ 0 5 10 135]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__annotate_shrink' [ 0 5 10 78]
'base::internal::StrictNumeric<int>' [ 0 6 16]
'cc::ArithmeticPaintFilter::k3' [ 0 4 27]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>::__compressed_pair<nullptr_t, std::__1::allocator<float> &>' [ 0 5 10 68]
'scoped_refptr<cc::DisplayItemList>::operator=' [ 0 36]
'base::StackAllocator<gfx::Rect, 1>::allocate' [ 0 6 36]
'sk_sp<SkImageFilter>' [ 0]
'cc::PaintImageBuilder::set_id' [ 0 4 23]
'std::__1::__pointer_type<const SkDescriptor *, std::__1::allocator<const SkDescriptor *> >' [ 0 5 10]
'base::internal::OptionalBase<gfx::SizeF>' [ 0 6 16]
'cc::MorphologyPaintFilter' [ 0 4]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10 82]
'SkScalarIsNaN' [ 0]
'cc::Rasterizer<cc::ClipRRectOp, false>::Raster' [ 0 4 40]
'SkPixmap' [ 0]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::capacity' [ 0 5 10 139]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>' [ 0 5 10]
'cc::PaintOpBuffer::MakeFromMemory' [ 0 4 19]
'std::__1::__to_raw_pointer<cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10]
'std::__1::remove_reference<Frame *&>' [ 0 5 10]
'cc::(anonymous namespace)::CompareMatrices' [ 0 4 27]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::RunImpl<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > &, 0>' [ 0 6 16 299]
'SkFunctionWrapper<void, void, &sk_free>' [ 0]
'cc::ClipPathOp::~ClipPathOp' [ 0 4 16]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::size' [ 0 5 10 68]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &, 1, false>::__get' [ 0 5 10 119]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__root_ptr' [ 0 5 10 232]
'cc::RTree<unsigned long>::Branch<unsigned long>::Branch' [ 0 4 26 49]
'gfx::Rect::width' [ 0 5 11]
'cc::DisplayItemList::CreateTracedValue' [ 0 4 21]
'std::__1::move<sk_sp<SkColorFilter> &>' [ 0 5 10]
'std::__1::operator==<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'cc::PaintShader::~PaintShader' [ 0 4 17]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *>::__nat, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >' [ 0 5 10]
'base::internal::OptionalBase<SkNoDrawCanvas>::~OptionalBase' [ 0 6 16 46]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::construct<cc::RTree<unsigned long>::Node<unsigned long>, int &>' [ 0 5 10 98]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> >' [ 0 6]
'std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &, 1, false>' [ 0 5 10]
'cc::AlphaThresholdPaintFilter::SnapshotWithImagesInternal' [ 0 4 31]
'cc::PaintImage::GetFrameMetadata' [ 0 4 16]
'base::internal::Unwrap<const base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> &>' [ 0 6 16]
'cc::Rasterizer<cc::TranslateOp, false>::RasterWithFlags' [ 0 4 40]
'std::__1::remove_reference<unsigned char &>' [ 0 5 10]
'cc::PaintImageBuilder::WithProperties' [ 0 4 23]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'base::internal::OptionalStorage<unsigned long, true, true>::OptionalStorage' [ 0 6 16 60]
'cc::Rasterizer<cc::NoopOp, false>::RasterWithFlags' [ 0 4 35]
'base::internal::CheckedNumeric<long>::Wrapper<base::internal::CheckedNumeric<long> >::is_valid' [ 0 6 16 38 86]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<sk_sp<const SkImage> &>' [ 0 5 10]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::~__split_buffer' [ 0 5 10 79]
'base::Optional<gfx::Rect>' [ 0 6]
'std::__1::__compressed_pair_elem<cc::SkiaPaintImageGenerator *, 0, false>::__compressed_pair_elem<cc::SkiaPaintImageGenerator *&, void>' [ 0 5 10 75]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::__max_size' [ 0 5 10 73]
'logging::MakeCheckOpValueString<cc::PaintShader::Type>' [ 0 9]
'sk_sp<cc::PaintFilter>::operator*::operator()' [ 0 24 35]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>, 1, true>' [ 0 5 10]
'std::__1::move<sk_sp<const SkImage> &>' [ 0 5 10]
'cc::__invoke' [ 0 4]
'SkRect::set' [ 0 8]
'cc::PaintImageBuilder' [ 0 4]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::capacity' [ 0 5 10 144]
'cc::SkiaPaintCanvas::drawColor' [ 0 4 21]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::rend' [ 0 5 10 82]
'cc::PaintOpReader::ReadSimple<SkBlurImageFilter::TileMode>' [ 0 4 19]
'cc::PaintOpBuffer::push<cc::ScaleOp, float &, float &>' [ 0 4 19]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::capacity' [ 0 5 10 145]
'cc::ClientRawMemoryTransferCacheEntry::Serialize' [ 0 4 39]
'cc::ServiceShaderTransferCacheEntry::~ServiceShaderTransferCacheEntry' [ 0 4 37]
'std::__1::allocator<unsigned char>' [ 0 5 10]
'SkFloatIntUnion' [ 0]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::max_size' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::Impl::operator=' [ 0 6 16 191 197]
'cc::PaintOpType' [ 0 4]
'std::__1::__pointer_type<Frame, std::__1::allocator<Frame> >' [ 0 5 10]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::deallocate' [ 0 5 10 46]
'sk_sp<SkPicture>' [ 0]
'std::__1::integer_sequence<unsigned long, 0>' [ 0 5 10]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>' [ 0 6 16]
'SkSerialProcs::SkSerialProcs' [ 0 15]
'std::__1::__less<int, int>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata>, true>' [ 0 5 10 30]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>::Init<const gfx::ColorSpace &>' [ 0 6 16 61]
'sk_make_sp<cc::ColorFilterPaintFilter, sk_sp<SkColorFilter>, sk_sp<cc::PaintFilter> >' [ 0]
'cc::TransferCacheEntryType' [ 0 4]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_delete' [ 0 5 10 133]
'std::__1::enable_if_t<!std::is_same<internal::RemoveCvRefT<const SkMatrix &>, Optional<SkMatrix> >::value && std::is_constructible<SkMatrix, const SkMatrix &>::value && std::is_assignable<SkMatrix &, const SkMatrix &>::value && (!std::is_scalar<SkMatrix>::value || !std::is_same<std::decay_t<const SkMatrix &>, SkMatrix>::value), base::Optional<SkMatrix> &>' [ 0 5 10]
'cc::AnnotateOp::Serialize' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::Value>, 1, true>' [ 0 5 10]
'sk_sp<SkTextBlob>::~sk_sp' [ 0 19]
'std::__1::forward<SkRect &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<SkCanvas *, 0, false>::__compressed_pair_elem<SkCanvas *, void>' [ 0 5 10 56]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__construct_backward<cc::ImageProvider::ScopedDecodedDrawImage *>' [ 0 5 10 97]
'std::__1::__unique_if<cc::ServicePaintTypefaceTransferCacheEntry>' [ 0 5 10]
'std::__1::__wrap_iter<const unsigned int *>' [ 0 5 10]
'cc::PaintShader::operator!=' [ 0 4 17]
'std::__1::remove_reference<const SkMatrixConvolutionImageFilter::TileMode &>' [ 0 5 10]
'cc::DecodedDrawImage::filter_quality' [ 0 4 22]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::Release' [ 0 6 108]
'std::__1::next<std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, 1, true>::__compressed_pair_elem<const std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &, void>' [ 0 5 10 112]
'std::__1::forward<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *&>' [ 0 5 10]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::reset' [ 0 5 10 54]
'sk_sp<cc::PaintFilter>::sk_sp<cc::AlphaThresholdPaintFilter, void>' [ 0 24]
'std::__1::unique_ptr<SkImageGenerator, std::__1::default_delete<SkImageGenerator> >::~unique_ptr' [ 0 5 10 85]
'uint_fast64_t' [ 0]
'SkNoDrawCanvas::onDrawDrawable' [ 0 16]
'cc::(anonymous namespace)::DiscardableImageGenerator::AddImageFromFilter' [ 0 4 27 54]
'base::Reversed<std::__1::vector<SkPaint, std::__1::allocator<SkPaint> > >' [ 0 6]
'std::__1::move<std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &>' [ 0 5 10]
'cc::FilterOperation::CreateGrayscaleFilter' [ 0 4 21]
'std::__1::allocator<Frame>::allocate' [ 0 5 10 28]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::~vector' [ 0 5 10 130]
'std::__1::remove_reference<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__destroy<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10 100]
'cc::DisplayItemList::push<cc::SetMatrixOp, const SkMatrix &>' [ 0 4 21]
'std::__1::__to_raw_pointer<gfx::Rect>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::clear' [ 0 5 10 68]
'logging::CheckEQImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::__alloc' [ 0 5 10 95]
'cc::PaintOpBuffer::push<cc::RestoreOp>' [ 0 4 19]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::__split_buffer' [ 0 5 10 94]
'std::__1::__const_pointer<base::Value, base::Value *, std::__1::allocator<base::Value>, true>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, std::__1::allocator<gfx::Rect> >::__compressed_pair<nullptr_t, const std::__1::allocator<gfx::Rect> &>' [ 0 5 10 75]
'std::__1::move_if_noexcept<SkPaint>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawRectOp>' [ 0 4 19]
'cc::RecordPaintCanvas::GetCanvas' [ 0 4 23]
'cc::ServiceShaderTransferCacheEntry::CachedSize' [ 0 4 37]
'cc::(anonymous namespace)::CreateMatrixImageFilter' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::allocate' [ 0 5 10 69]
'std::__1::move<std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'std::__1::forward<const cc::PaintOp *>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >::release' [ 0 5 10 137]
'sk_sp<SkData>' [ 0]
'std::__1::remove_reference<cc::ServiceImageTransferCacheEntry *&>' [ 0 5 10]
'std::__1::forward<const base::StackAllocator<float, 3> &>' [ 0 5 10]
'std::__1::iterator_traits<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::__destruct_at_end' [ 0 5 10 65]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::max_size' [ 0 5 10 78]
'cc::Rasterizer<cc::CustomDataOp, false>::Raster' [ 0 4 41]
'SkISize' [ 0]
'std::__1::allocator<sk_sp<SkImageFilter> >::deallocate' [ 0 5 10 44]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kImage>' [ 0 4]
'SkRefCntBase::getRefCnt' [ 0 14]
'std::__1::__compressed_pair_elem<cc::FilterOperation *, 0, false>' [ 0 5 10]
'cc::TransferCacheDeserializeHelper::GetEntryAs<cc::ServicePathTransferCacheEntry>' [ 0 4 36]
'sk_sp<cc::TilePaintFilter>' [ 0]
'sk_sp<SkData>::operator->' [ 0 15]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>::construct<cc::DiscardableImageMap::AnimatedImageMetadata, int, cc::PaintImage::CompletionState, const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &, int, unsigned int>' [ 0 5 10 69]
'SkDrawLooper::GetFlattenableType' [ 0 14]
'std::__1::vector<float, std::__1::allocator<float> >::resize' [ 0 5 10 54]
'sk_sp<SkImage>::get' [ 0 16]
'std::__1::vector<float, base::StackAllocator<float, 3> >::operator[]' [ 0 5 10 58]
'cc::PaintOpBuffer::GetFirstOp' [ 0 4 19]
'trace_event_internal::TraceID' [ 0 22]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> &, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, false>' [ 0 5 10 181]
'sk_sp<SkImageFilter>::get' [ 0 22]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'cc::RenderSurfaceFilters::BuildImageFilter' [ 0 4 26]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation> &, 1, false>::__get' [ 0 5 10 88]
'std::__1::conditional<false, std::__1::pointer_traits<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *>::__nat, cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >' [ 0 5 10]
'std::__1::__tree_node_base<void *>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::destroy<sk_sp<cc::PaintFilter> >' [ 0 5 10 78]
'cc::PaintImage::GetNextContentId' [ 0 4 16]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__annotate_new' [ 0 5 10 89]
'base::Optional<cc::PaintFlags>::operator bool' [ 0 6 32]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::operator=' [ 0 5 10 86]
'cc::PaintOpBufferSerializer::RestoreToCount' [ 0 4 29]
'cc::PaintOp::DeserializeOptions::DeserializeOptions' [ 0 4 13 33]
'logging::CheckEQImpl<cc::PaintImage::DecodingMode, cc::PaintImage::DecodingMode>' [ 0 9]
'sk_sp<cc::PaintShader>::operator->' [ 0 24]
'std::__1::__unwrap_iter<gfx::Rect *>' [ 0 5 10]
'cc::ColorFilterPaintFilter' [ 0 4]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::second' [ 0 5 10 139]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::vector' [ 0 5 10 58]
'cc::SkiaPaintImageGenerator::SkiaPaintImageGenerator' [ 0 4 29]
'SkNoDrawCanvas::onDrawImageLattice' [ 0 16]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >' [ 0 5 10]
'std::__1::allocator<cc::FilterOperation>::destroy' [ 0 5 10 42]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'std::__1::remove_reference<float>' [ 0 5 10]
'cc::PaintTextBlobBuilder::TakeTextBlob' [ 0 4 26]
'sk_sp<SkFontMgr>' [ 0]
'cc::LightingPointPaintFilter::operator==' [ 0 4 30]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 6]
'std::__1::conditional<true, const std::__1::pair<cc::DrawImage, gfx::Rect> &, std::__1::pair<cc::DrawImage, gfx::Rect> &&>' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, true>' [ 0 5 10]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__end_cap' [ 0 5 10 63]
'std::__1::swap<unsigned int *>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 218]
'cc::DisplayItemList::push<cc::DrawDRRectOp, const SkRRect &, const SkRRect &, const cc::PaintFlags &>' [ 0 4 21]
'gfx::Vector2dF' [ 0 5]
'std::__1::pair<int, base::StackVector<gfx::Rect, 1> >::operator=' [ 0 5 10 55]
'base::internal::CheckedAddOp<long, int, void>::Do<long>' [ 0 6 16 47]
'SkNO_RETURN_HINT' [ 0]
'std::__1::__compressed_pair_elem<cc::RTree<unsigned long>::Node<unsigned long> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::max_size' [ 0 5 10 73]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__end_cap' [ 0 5 10 142]
'std::__1::__compressed_pair_elem<base::ListValue *, 0, false>' [ 0 5 10]
'sk_sp<SkImage>::sk_sp' [ 0 16]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::destroy<const cc::PaintOp *>' [ 0 5 10 75]
'sk_sp<SkDrawLooper>::sk_sp' [ 0 21]
'sk_sp<cc::TurbulencePaintFilter>::~sk_sp' [ 0 34]
'base::internal::ClampedNumeric<int>::operator int<int>' [ 0 6 16 37]
'cc::PaintOpReader::ReadOffsetPaintFilter' [ 0 4 19]
'std::__1::remove_reference<std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorSpace &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::destroy<cc::FilterOperation>' [ 0 5 10 71]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::__construct_backward<const cc::PaintOp **>' [ 0 5 10 75]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__annotate_new' [ 0 5 10 78]
'std::__1::__compressed_pair_elem<SkCanvas *, 0, false>::__compressed_pair_elem<SkCanvas *&, void>' [ 0 5 10 56]
'std::__1::__distance<gfx::Rect *>' [ 0 5 10]
'base::internal::OptionalStorageBase<SkMatrix, true>' [ 0 6 16]
'cc::(anonymous namespace)::MapStdDeviation' [ 0 4 27]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::deallocate' [ 0 5 10 106]
'cc::PaintImage::FrameKey::operator==' [ 0 4 16 26]
'sk_sp<cc::PaintShader>::sk_sp' [ 0 24]
'gfx::Size::width' [ 0 5 11]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::clear' [ 0 5 10 142]
'SkSafeUnref<cc::ColorFilterPaintFilter>' [ 0]
'std::__1::__compressed_pair<base::Value *, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::swap<cc::DiscardableImageMap::AnimatedImageMetadata *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'cc::FilterOperation::image_filter' [ 0 4 21]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long> >' [ 0 5 10]
'std::__1::move_if_noexcept<Frame>' [ 0 5 10]
'sk_sp<cc::LightingPointPaintFilter>::~sk_sp' [ 0 37]
'SkPoint' [ 0]
'std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator*' [ 0 5 10 82]
'sk_sp<cc::MagnifierPaintFilter>::sk_sp' [ 0 33]
'SkPaint' [ 0]
'cc::Rasterizer<cc::DrawImageRectOp, true>::Raster' [ 0 4 43]
'std::__1::allocator<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'std::__1::__compressed_pair<cc::ServiceImageTransferCacheEntry *, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10]
'std::__1::pair<cc::DrawImage, gfx::Rect>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >' [ 0 5 10]
'base::MakeRefCounted<cc::PaintTextBlob, sk_sp<SkTextBlob>, std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 6]
'base::internal::StrictNumeric<int>::StrictNumeric<int>' [ 0 6 16 36]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::unique_ptr<true, void>' [ 0 5 10 113]
'cc::MatrixConvolutionPaintFilter::tile_mode' [ 0 4 34]
'abs' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, long, true>' [ 0 5 10]
'sk_sp<SkColorSpace>::release' [ 0 21]
'std::__1::conditional<false, std::__1::pointer_traits<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *>::__nat, cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::cbegin' [ 0 5 10 143]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > &>' [ 0 5 10]
'cc::PaintOpBuffer::PaintOpBuffer' [ 0 4 19]
'sk_sp<cc::PaintImageGenerator>::operator->' [ 0 32]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::operator=' [ 0 6 16 183]
'cc::(anonymous namespace)::DiscardableImageGenerator::AddImageFromShader' [ 0 4 27 54]
'std::__1::allocator_traits<std::__1::allocator<float> >::construct<float>' [ 0 5 10 57]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__annotate_shrink' [ 0 5 10 139]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> >' [ 0 5 10]
'cc::Rasterizer<cc::ClipRectOp, false>' [ 0 4]
'cc::PaintOpBuffer::CompositeIterator::operator*' [ 0 4 19 38]
'cc::RecordPaintCanvas::clear' [ 0 4 23]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::value_comp' [ 0 5 10 232]
'cc::SimpleDeserialize<cc::NoopOp>' [ 0 4]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__construct_at_end' [ 0 5 10 89]
'cc::PaintShader::SetColorsAndPositions::kMaxShaderColorsSupported' [ 0 4 17 40]
'SkMetaData' [ 0]
'cc::DropShadowPaintFilter::SerializedSize' [ 0 4 27]
'std::__1::forward<std::__1::allocator<SkPaint> &>' [ 0 5 10]
'std::__1::allocator<gfx::Rect>' [ 0 5 10]
'std::__1::remove_reference<const unsigned long &>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::clear' [ 0 5 10 148]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__alloc' [ 0 5 10 142]
'cc::SkiaPaintCanvas::drawDRRect' [ 0 4 21]
'std' [ 0]
'std::__1::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >::~unique_ptr' [ 0 5 10 137]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::second' [ 0 5 10 143]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::max_size' [ 0 5 10 61]
'cc::SkiaPaintCanvas::getMetaData' [ 0 4 21]
'cc::PaintOpBuffer::CompositeIterator::CompositeIterator' [ 0 4 19 38]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawImageRectOp>' [ 0 4 19]
'cc::PaintOpBuffer::push<cc::RotateOp, float &>' [ 0 4 19]
'std::__1::__wrap_iter<const unsigned int *>::operator*' [ 0 5 10 45]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'cc::PaintImage::height' [ 0 4 16]
'SkNoDrawCanvas::onDrawImage' [ 0 16]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::clear' [ 0 5 10 95]
'std::__1::remove_reference<const SkISize &>' [ 0 5 10]
'base::Pickle::data' [ 0 6 14]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue>, false>' [ 0 5 10 30]
'cc::DisplayItemList::ReleaseAsRecord' [ 0 4 21]
'std::__1::__size_type<std::__1::allocator<cc::FilterOperation>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<const SkDescriptor *, void *> >, 1, true>' [ 0 5 10]
'std::__1::forward<const cc::DrawImage *>' [ 0 5 10]
'cc::DisplayItemList::push<cc::ClipRectOp, const SkRect &, SkClipOp &, bool &>' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::construct<Frame, const Frame &>' [ 0 5 10 57]
'cc::ArithmeticPaintFilter::SnapshotWithImagesInternal' [ 0 4 27]
'std::__1::allocator<unsigned char>::deallocate' [ 0 5 10 36]
'std::__1::forward<scoped_refptr<cc::PaintTextBlob> >' [ 0 5 10]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::__alloc' [ 0 5 10 95]
'cc::NoopOp::Raster' [ 0 4 12]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkMiniRecorder>, 1, true>' [ 0 5 10]
'cc::CustomDataOp::IsValid' [ 0 4 18]
'sk_sp<cc::OffsetPaintFilter>::~sk_sp' [ 0 30]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__recommend' [ 0 5 10 58]
'std::__1::operator!=<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'sk_sp<SkData>::get' [ 0 15]
'cc::Rasterizer<cc::DrawImageRectOp, true>' [ 0 4]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::capacity' [ 0 5 10 67]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::~__vector_base' [ 0 5 10 137]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__construct_forward<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10 106]
'gfx::Rect::set_height' [ 0 5 11]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>' [ 0 5 10]
'cc::Rasterizer<cc::DrawTextBlobOp, true>::Raster' [ 0 4 42]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__annotate_shrink' [ 0 5 10 82]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__annotate_delete' [ 0 5 10 58]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'std::__1::__copy<const unsigned int, unsigned int>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'cc::MatrixPaintFilter::input' [ 0 4 23]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::shrink_to_fit' [ 0 5 10 70]
'sk_sp<cc::BlurPaintFilter>::~sk_sp' [ 0 28]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::__max_size' [ 0 5 10 75]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__annotate_shrink' [ 0 5 10 66]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::__split_buffer' [ 0 5 10 95]
'SkClipOp' [ 0]
'std::__1::__compressed_pair_elem<sk_sp<SkImageFilter> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'std::__1::__unwrap_iter<float *>' [ 0 5 10]
'std::__1::__lazy_enable_if<true, std::__1::__promote<unsigned long, double, void> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> &>::second' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<SkPaint *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 55]
'std::__1::__wrap_iter<const float *>::__wrap_iter' [ 0 5 10 38]
'cc::DisplayItemList::Finalize' [ 0 4 21]
'cc::DisplacementMapEffectPaintFilter::SerializedSize' [ 0 4 38]
'sk_make_sp<cc::ComposePaintFilter, const sk_sp<cc::PaintFilter> &, sk_sp<cc::PaintFilter> >' [ 0]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__emplace_back_slow_path<int &>' [ 0 5 10 135]
'std::__1::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, 1, false>' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::DrawOvalOp, const SkRect &, const cc::PaintFlags &>' [ 0 4 19]
'cc::ScopedRasterFlags' [ 0 4]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, std::__1::__nat>' [ 0 5 10]
'cc::DrawImageRectOp::RasterWithFlags' [ 0 4 21]
'std::__1::remove_reference<SkPaint *&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::back' [ 0 5 10 133]
'cc::(anonymous namespace)::ScopedFlagsOverride' [ 0 4 27]
'cc::Rasterizer<cc::DrawRectOp, true>::Raster' [ 0 4 38]
'sk_sp<SkTypeface>::get' [ 0 19]
'cc::PaintOpBufferSerializer::SerializeOp' [ 0 4 29]
'std::__1::__size_type<std::__1::allocator<unsigned long>, long, true>' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'SkPathRef::computeBounds::operator()' [ 0 11 26]
'SkMatrix::rectStaysRect' [ 0 10]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10 100]
'base::Optional<gfx::Rect>::value' [ 0 6 27]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::~__split_buffer' [ 0 5 10 142]
'std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>' [ 0 5 10]
'std::__1::add_lvalue_reference<SkMiniRecorder>' [ 0 5 10]
'logging::MakeCheckOpValueString<cc::TransferCacheEntryType>' [ 0 9]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::clear' [ 0 5 10 82]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::capacity' [ 0 5 10 92]
'cc::AlphaThresholdPaintFilter::~AlphaThresholdPaintFilter' [ 0 4 31]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<int, cc::PaintImage::DecodingMode> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::__construct<SkPaint, SkPaint>' [ 0 5 10 59]
'base::span<unsigned char, 18446744073709551615>::subspan' [ 0 6 49]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::cbegin' [ 0 6 16 191]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::emplace_back<int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 160]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>::construct<cc::DiscardableImageMap::AnimatedImageMetadata, const cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10 69]
'std::__1::operator==<const float *, const float *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'std::__1::__pointer_type<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >' [ 0 5 10]
'std::__1::remove_reference<const sk_sp<SkColorFilter> &>' [ 0 5 10]
'base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob>::Destruct' [ 0 6 60]
'cc::PaintFlags::setAlpha' [ 0 4 16]
'std::__1::unique_ptr<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot [], std::__1::default_delete<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot []> >' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<unsigned int, false>' [ 0 6 16]
'std::__1::pointer_traits<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *>' [ 0 5 10]
'std::__1::move<SkPaint &>' [ 0 5 10]
'SkSafeUnref<SkTypeface>' [ 0]
'cc::ClientRawMemoryTransferCacheEntry::s_next_id_' [ 0 4 39]
'std::__1::remove_reference<const cc::PaintOp *&>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> >::second' [ 0 5 10 79]
'cc::FilterOperation::CreateEmptyFilter' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__construct_backward<cc::RTree<unsigned long>::Node<unsigned long> >' [ 0 5 10 98]
'cc::PaintShader::GetLocalMatrix' [ 0 4 17]
'std::__1::underlying_type<cc::TransferCacheEntryType>' [ 0 5 10]
'std::__1::remove_reference<std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > > &>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::clear' [ 0 5 10 89]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::capacity' [ 0 5 10 85]
'cc::PaintOpWriter::WriteSimple<SkRect>' [ 0 4 19]
'base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >::operator()' [ 0 6 16 81]
'gfx::Point::x' [ 0 5 12]
'gfx::Point::y' [ 0 5 12]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::remove_reference<cc::PaintCanvas::AnnotationType &>' [ 0 5 10]
'cc::ClientImageTransferCacheEntry::~ClientImageTransferCacheEntry' [ 0 4 35]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::end' [ 0 5 10 78]
'cc::XfermodePaintFilter::operator==' [ 0 4 25]
'std::__1::__const_void_pointer<unsigned int *, std::__1::allocator<unsigned int>, false>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::Run::num_bound_args' [ 0 6 16 299 304]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::default_delete<char []>, false>' [ 0 5 10 30]
'std::__1::__to_raw_pointer<Frame>' [ 0 5 10]
'cc::RecordPaintCanvas::drawPath' [ 0 4 23]
'cc::LightingPointPaintFilter::LightingPointPaintFilter' [ 0 4 30]
'std::__1::__pointer_type<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >' [ 0 5 10]
'std::__1::forward<cc::ServiceRawMemoryTransferCacheEntry *&>' [ 0 5 10]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >' [ 0 5 10]
'std::__1::remove_reference<const SkISize *>' [ 0 5 10]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::clear' [ 0 5 10 95]
'std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::__wrap_iter' [ 0 5 10 80]
'cc::FilterOperations::operator==' [ 0 4 22]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::__destruct_at_end' [ 0 5 10 139]
'std::__1::allocator<unsigned char>::allocate' [ 0 5 10 36]
'SkRefCntBase::internal_dispose_restore_refcnt_to_1' [ 0 14]
'cc::PaintFilter::image_analysis_state' [ 0 4 17]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::RotateOp>' [ 0 4 19]
'sk_ref_sp<SkImage>' [ 0]
'std::__1::reverse_iterator<std::__1::__wrap_iter<SkPaint *> >::base' [ 0 5 10 63]
'SkSafeRef<SkImageFilter>' [ 0]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__end_cap' [ 0 5 10 75]
'std::__1::forward<const cc::PaintTypeface &>' [ 0 5 10]
'cc::(anonymous namespace)::kMaxRegionByteSize' [ 0 4 27]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::__alloc' [ 0 5 10 145]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::emplace_back<cc::DrawImage, const gfx::Rect &>' [ 0 5 10 139]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>, true>' [ 0 5 10 30]
'SkSafeUnref<SkMaskFilter>' [ 0]
'std::__1::__compressed_pair_elem<float *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 53]
'cc::(anonymous namespace)::g_next_shader_id' [ 0 4 27]
'std::__1::__unique_if<cc::SkiaPaintImageGenerator>' [ 0 5 10]
'base::Optional<SkNoDrawCanvas>::Optional' [ 0 6 32]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::__end_cap' [ 0 5 10 144]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'cc::Rasterizer<cc::ClipRRectOp, false>' [ 0 4]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__construct_at_end' [ 0 5 10 148]
'std::__1::advance<std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'base::internal::OptionalBase<cc::PaintOpBuffer::Iterator>' [ 0 6 16]
'cc::PaintOpReader::ReadMagnifierPaintFilter' [ 0 4 19]
'SkPathRef::ComputePtBounds' [ 0 11]
'std::__1::allocator<cc::FilterOperation>' [ 0 5 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::ImageGatheringProvider::~ImageGatheringProvider' [ 0 4 27 54 78]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::advance<const unsigned int *>' [ 0 5 10]
'std::__1::default_delete<SkImageGenerator>::operator()' [ 0 5 10 44]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::deallocate' [ 0 5 10 98]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >, 1, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::construct<SkPaint, const SkPaint &>' [ 0 5 10 59]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >' [ 0 5 10]
'std::__1::move<float *&>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::reserve' [ 0 5 10 70]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__destruct_at_end' [ 0 5 10 150]
'base::internal::OptionalStorageBase<unsigned long, true>::OptionalStorageBase<unsigned long &>' [ 0 6 16 58]
'std::__1::allocator<gfx::Rect>::deallocate' [ 0 5 10 32]
'base::internal::OptionalBase<unsigned int>::operator=' [ 0 6 16 44]
'base::internal::PassingTraitsType<const cc::PaintOp *>' [ 0 6 16]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::capacity' [ 0 5 10 65]
'std::__1::__wrap_iter<base::Value *>' [ 0 5 10]
'std::__1::remove_reference<void (cc::SkiaPaintCanvas::*)()>' [ 0 5 10]
'int_least16_t' [ 0]
'std::__1::__compressed_pair<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 98]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>::destroy' [ 0 5 10 69]
'std::__1::distance<gfx::Rect *>' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, true>' [ 0 5 10]
'cc::Rasterizer<cc::DrawRectOp, true>' [ 0 4]
'cc::PaintShader::MakeColor' [ 0 4 17]
'std::__1::__vector_base<char, std::__1::allocator<char> >' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'cc::Rasterizer<cc::DrawImageRectOp, true>::RasterWithFlags' [ 0 4 43]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::deallocate' [ 0 5 10 61]
'std::__1::__compressed_pair<base::trace_event::ConvertableToTraceFormat *, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'cc::DrawRecordOp::Deserialize' [ 0 4 18]
'std::__1::__wrap_iter<const cc::PaintOp **>' [ 0 5 10]
'cc::SkiaPaintCanvas::clear' [ 0 4 21]
'std::__1::unique_ptr<cc::ServiceRawMemoryTransferCacheEntry, std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 129]
'SkFontConfigInterface::FontIdentity::FontIdentity' [ 0 23 37]
'base::internal::DstRangeRelationToSrcRange<unsigned long, std::numeric_limits, unsigned int>' [ 0 6 16]
'cc::PaintOpReader::ReadDisplacementMapEffectPaintFilter::kMaxChannelSelectorType' [ 0 4 19 57]
'sk_sp<SkColorFilter>::sk_sp' [ 0 22]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::max_size' [ 0 5 10 85]
'std::__1::__compressed_pair_elem<std::__1::allocator<const cc::DrawImage *> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 101]
'base::Optional<cc::RecordPaintCanvas>::has_value' [ 0 6 39]
'cc::PaintOpWriter::GetRecordSize' [ 0 4 19]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'std::__1::remove_reference<const SkPoint3 &>' [ 0 5 10]
'sktfitsin::Private::SkTInRange_LE_MaxD<int, unsigned long>' [ 0 11 20]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::deallocate' [ 0 5 10 73]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'cc::Rasterizer<cc::SetMatrixOp, false>::RasterWithFlags' [ 0 4 40]
'cc::PaintOpWriter::WriteSimple<SkDropShadowImageFilter::ShadowMode>' [ 0 4 19]
'SkSafeUnref<SkImage>' [ 0]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__vector_base' [ 0 5 10 146]
'cc::LightingSpotPaintFilter' [ 0 4]
'cc::(anonymous namespace)::kMaxMergeFilterCount' [ 0 4 27]
'std::__1::allocator<const cc::DrawImage *>::deallocate' [ 0 5 10 44]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::size' [ 0 5 10 151]
'std::__1::__wrap_iter<const gfx::Rect *>::operator++' [ 0 5 10 42]
'cc::FilterOperations::at' [ 0 4 22]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::conditional<false, std::__1::pointer_traits<const cc::PaintOp **>::__nat, const cc::PaintOp *>' [ 0 5 10]
'logging::MakeCheckOpString<cc::FilterOperation::FilterType, cc::FilterOperation::FilterType>' [ 0 9]
'cc::PaintFlags::IsValid' [ 0 4 16]
'base::internal::CheckedAddOp<long, int, void>' [ 0 6 16]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__annotate_delete' [ 0 5 10 136]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__insert_node_at' [ 0 5 10 232]
'cc::DecodedDrawImage::operator=' [ 0 4 22]
'cc::PaintTextBlob::PaintTextBlob' [ 0 4 19]
'cc::PaintFlags::~PaintFlags' [ 0 4 16]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::end' [ 0 5 10 66]
'std::__1::__compressed_pair_elem<std::__1::allocator<Frame> &, 1, false>::__get' [ 0 5 10 74]
'cc::PaintTypeface::FromSkTypeface' [ 0 4 19]
'sk_sp<cc::PaintShader>' [ 0]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::find<int>' [ 0 6 16 191]
'std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >::deallocate' [ 0 5 10 73]
'cc::SkiaPaintCanvas::isClipEmpty' [ 0 4 21]
'std::__1::forward<cc::ImageProvider *&>' [ 0 5 10]
'cc::FilterOperations::HasReferenceFilter' [ 0 4 22]
'std::__1::__pointer_type_imp::__pointer_type<gfx::Rect, base::StackAllocator<gfx::Rect, 1>, true>' [ 0 5 10 30]
'cc::PaintImageBuilder::~PaintImageBuilder' [ 0 4 23]
'base::RepeatingCallback<void (SkCanvas *, unsigned int)>::RepeatingCallback' [ 0 6 58]
'cc::ClipRRectOp::HasNonAAPaint' [ 0 4 17]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::TransferCacheEntryBase' [ 0 4 103]
'std::__1::pointer_traits<Frame *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::ServicePathTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServicePathTransferCacheEntry *&, void>' [ 0 5 10 81]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__move_assign' [ 0 5 10 151]
'base::internal::OptionalStorage<cc::ScopedRasterFlags, false, false>' [ 0 6 16]
'cc::DrawDRRectOp::~DrawDRRectOp' [ 0 4 18]
'std::__1::__vector_base<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::move<sk_sp<cc::PaintOpBuffer> &>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__construct_at_end' [ 0 5 10 139]
'std::__1::pointer_traits<std::__1::pair<unsigned long, unsigned long> *>' [ 0 5 10]
'cc::PaintFont::SetSubpixelText' [ 0 4 15]
'std::__1::forward<const unsigned char &>' [ 0 5 10]
'std::__1::__pointer_type<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >' [ 0 5 10]
'std::__1::operator==<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'SkIRect::width' [ 0 9]
'cc::MagnifierPaintFilter::input' [ 0 4 26]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::construct<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10 98]
'std::__1::conditional<true, int, int>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::cbegin' [ 0 5 10 151]
'cc::MatrixConvolutionPaintFilter::~MatrixConvolutionPaintFilter' [ 0 4 34]
'base::internal::UnderlyingType<unsigned long>' [ 0 6 16]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__annotate_shrink' [ 0 5 10 86]
'std::__1::remove_reference<sk_sp<cc::PaintOpBuffer> &>' [ 0 5 10]
'cc::DrawPathOp::DrawPathOp' [ 0 4 16]
'cc::PaintFlags::getStrokeJoin' [ 0 4 16]
'base::ClampToRange<float>' [ 0 6]
'base::internal::OptionalStorageBase<gfx::Rect, true>::OptionalStorageBase' [ 0 6 16 54]
'std::__1::__compressed_pair_elem<cc::ServicePaintTypefaceTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>, false>' [ 0 5 10 30]
'cc::Rasterizer<cc::SetMatrixOp, false>::Raster' [ 0 4 40]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> >::__compressed_pair<nullptr_t, const base::StackAllocator<float, 3> &>' [ 0 5 10 71]
'std::__1::__size_type<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >, long, true>' [ 0 5 10]
'std::__1::move<const cc::PaintOp **, const cc::PaintOp **>' [ 0 5 10]
'SkSafeUnref<SkPicture>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &, void>' [ 0 5 10 115]
'cc::ServiceShaderTransferCacheEntry::shader' [ 0 4 37]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState' [ 0 6 16 85]
'cc::FilterOperation' [ 0 4]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::__destruct_at_end' [ 0 5 10 144]
'std::__1::__compressed_pair_elem<SkImageGenerator *, 0, false>::__compressed_pair_elem<cc::SkiaPaintImageGenerator *, void>' [ 0 5 10 64]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 77]
'std::__1::__compressed_pair_elem<std::__1::allocator<Frame> &, 1, false>::__compressed_pair_elem<std::__1::allocator<Frame> &, void>' [ 0 5 10 74]
'std::__1::remove_reference<std::__1::allocator<cc::FrameMetadata> &>' [ 0 5 10]
'base::internal::OptionalBase<cc::DecodeStashingImageProvider>' [ 0 6 16]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::capacity' [ 0 5 10 85]
'std::__1::iterator_traits<const unsigned char *>' [ 0 5 10]
'sk_make_sp<cc::ColorFilterPaintFilter, const sk_sp<SkColorFilter> &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::SkiaPaintCanvas::drawPicture' [ 0 4 21]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >' [ 0 5 10]
'SkMaskFilter::GetFlattenableType' [ 0 14]
'cc::MatrixPaintFilter' [ 0 4]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<unsigned int>' [ 0 6 16 85]
'cc::MatrixPaintFilter::filter_quality' [ 0 4 23]
'std::__1::default_delete<cc::ServicePathTransferCacheEntry>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__recommend' [ 0 5 10 62]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__push_back_slow_path<SkPaint>' [ 0 5 10 58]
'std::__1::__compressed_pair<float, SkDescriptorMapOperators>' [ 0 5 10]
'base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> >::operator[]' [ 0 6 77]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceRawMemoryTransferCacheEntry *, void>' [ 0 5 10 77]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, true>' [ 0 5 10 30]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric<unsigned int>' [ 0 6 16 47]
'cc::FilterOperation::set_type' [ 0 4 21]
'std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator*' [ 0 5 10 78]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<cc::PaintTypeface *>::__nat, cc::PaintTypeface>' [ 0 5 10]
'SkVertices' [ 0]
'std::__1::__compressed_pair_elem<base::AlignedFreeDeleter, 1, true>' [ 0 5 10]
'base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> >::operator=' [ 0 6 74]
'cc::PaintImageGenerator' [ 0 4]
'std::__1::move<std::__1::allocator<cc::FrameMetadata> &>' [ 0 5 10]
'cc::PaintFlagsPaintFilter::flags' [ 0 4 27]
'SkAutoTArray<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot>' [ 0]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare::KeyValueCompare' [ 0 6 16 183 200]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__swap_out_circular_buffer' [ 0 5 10 86]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::~vector' [ 0 5 10 151]
'cc::FilterOperation::CreateBrightnessFilter' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 100]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>, false>::__tuple_leaf<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas>, void>' [ 0 5 10 90]
'std::__1::iterator_traits<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::internal::OptionalBase<gfx::Rect>::InitOrAssign<gfx::Rect>' [ 0 6 16 41]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::size' [ 0 5 10 62]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__split_buffer' [ 0 5 10 63]
'cc::DrawDRRectOp::IsValid' [ 0 4 18]
'std::__1::remove_reference<gfx::Rect>' [ 0 5 10]
'std::__1::__pointer_type<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >' [ 0 5 10]
'base::internal::OptionalBase<cc::PaintFlags>::~OptionalBase' [ 0 6 16 46]
'SkNVRefCnt<SkTextBlob>' [ 0]
'base::StackVector<cc::ImageProvider::ScopedDecodedDrawImage, 1>::StackVector' [ 0 6 65]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::construct<const cc::PaintOp *, const cc::PaintOp *const &>' [ 0 5 10 75]
'sk_sp<SkColorFilter>::~sk_sp' [ 0 22]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>' [ 0 4]
'std::__1::remove_reference<cc::PaintOpBuffer>' [ 0 5 10]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>::deallocate' [ 0 6 68]
'std::__1::default_delete<cc::ServicePathTransferCacheEntry>::operator()' [ 0 5 10 61]
'std::__1::__const_void_pointer<WireTypeface *, std::__1::allocator<WireTypeface>, false>' [ 0 5 10]
'std::__1::swap<Frame *>' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>::InitOrAssign<const unsigned long &>' [ 0 6 16 45]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__move_assign_alloc' [ 0 5 10 93]
'std::__1::remove_reference<const gfx::ColorSpace &>' [ 0 5 10]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__annotate_delete' [ 0 5 10 130]
'cc::LightingSpotPaintFilter::input' [ 0 4 29]
'uintptr_t' [ 0]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::__alloc' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >' [ 0 5 10]
'base::StackVector<gfx::Rect, 1>' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>::Run::num_bound_args' [ 0 6 16 151 156]
'SkDeserialTypefaceProc' [ 0]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__root' [ 0 5 10 232]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::~__split_buffer' [ 0 5 10 160]
'std::__1::remove_reference<sk_sp<const cc::PaintOpBuffer> &>' [ 0 5 10]
'std::__1::allocator<sk_sp<SkImageFilter> >' [ 0 5 10]
'cc::PaintOpBuffer::HasNonAAPaint' [ 0 4 19]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::~__vector_base' [ 0 5 10 150]
'cc::FilterOperations::IsEmpty' [ 0 4 22]
'cc::PlaybackParams' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct_range_forward<const unsigned int *, unsigned int *>' [ 0 5 10 64]
'cc::RecordPaintFilter' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::destroy<cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10 98]
'SkNoDrawCanvas::onDrawBitmap' [ 0 16]
'cc::PaintShader::has_discardable_images' [ 0 4 17]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__annotate_new' [ 0 5 10 125]
'sk_sp<cc::TilePaintFilter>::sk_sp' [ 0 28]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::back' [ 0 5 10 135]
'std::__1::__wrap_iter<const gfx::Rect *>::operator+=' [ 0 5 10 42]
'cc::UpdateTypeAndSkip<cc::TranslateOp>' [ 0 4]
'cc::DropShadowPaintFilter::sigma_x' [ 0 4 27]
'cc::DropShadowPaintFilter::sigma_y' [ 0 4 27]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__alloc' [ 0 5 10 85]
'sk_sp<cc::PaintImageGenerator>::operator=' [ 0 32]
'sk_sp<SkTypeface>::sk_sp' [ 0 19]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator*' [ 0 5 10 86]
'cc::MatrixPaintFilter::SerializedSize' [ 0 4 23]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::remove_reference<sk_sp<cc::PaintFilter> >' [ 0 5 10]
'cc::SkiaPaintCanvas::restore' [ 0 4 21]
'cc::MatrixConvolutionPaintFilter::input' [ 0 4 34]
'std::__1::forward<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'std::__1::__wrap_iter<const cc::FrameMetadata *>::__wrap_iter' [ 0 5 10 50]
'cc::PaintOpReader::ReadLightingSpotPaintFilter' [ 0 4 19]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >' [ 0 5 10]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::__compressed_pair<nullptr_t, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10 144]
'cc::Rasterizer<cc::DrawOvalOp, true>::RasterWithFlags' [ 0 4 38]
'sktfitsin::Private::SkTInRange_Cast<int, long>::fits' [ 0 11 20 48]
'cc::PaintOp::SerializeOptions::operator=' [ 0 4 13 31]
'__int64_t' [ 0]
'base::span<unsigned char, 18446744073709551615>::data' [ 0 6 49]
'cc::Rasterizer<cc::SaveLayerOp, true>' [ 0 4]
'std::__1::remove_reference<const cc::PaintFlags *&>' [ 0 5 10]
'cc::(anonymous namespace)::SizeCounter::WriteSimple<SkFontStyle::Slant>' [ 0 4 27 40]
'SkSafeUnref<SkFontMgr>' [ 0]
'cc::PaintOpWriter::WriteSimple<SkIPoint>' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>' [ 0 5 10]
'cc::DisplayItemList::push<cc::DrawColorOp, unsigned int &, SkBlendMode>' [ 0 4 21]
'base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 6 16 198]
'SkRRect::setOval' [ 0 9]
'std::__1::move<base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> > &>' [ 0 5 10]
'std::__1::__atomic_base<int, false>::store' [ 0 5 10 37]
'cc::PaintImage::stable_id' [ 0 4 16]
'cc::ArithmeticPaintFilter' [ 0 4]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__node_alloc' [ 0 5 10 232]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::allocate' [ 0 5 10 62]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::max_size' [ 0 5 10 66]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::__destroy<const cc::DrawImage *>' [ 0 5 10 73]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>' [ 0 5 10]
'SkIRect::height64' [ 0 9]
'cc::TilePaintFilter::input' [ 0 4 21]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::capacity' [ 0 5 10 146]
'std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'cc::PaintTypeface::operator=' [ 0 4 19]
'std::__1::allocator<base::Value>' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__swap_out_circular_buffer' [ 0 5 10 135]
'std::__1::__compressed_pair<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::__destruct_at_end' [ 0 5 10 101]
'std::__1::__equal_to<unsigned int, unsigned int>::operator()' [ 0 5 10 50]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__make_iter' [ 0 5 10 68]
'SkImageInfo::minRowBytes' [ 0 13]
'std::__1::add_lvalue_reference<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot>' [ 0 5 10]
'std::__1::operator==<sk_sp<cc::PaintFilter> *, sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::__compressed_pair<char *, base::AlignedFreeDeleter>::__compressed_pair<char *, true>' [ 0 5 10 63]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, true>' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::capacity' [ 0 5 10 78]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::__destruct_at_end' [ 0 5 10 96]
'std::__1::move_if_noexcept<const cc::PaintOp *>' [ 0 5 10]
'scoped_refptr<cc::PaintTextBlob>::Release' [ 0 34]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__destruct_at_end' [ 0 5 10 77]
'gfx::Rect::GetClampedValue' [ 0 5 11]
'cc::Rasterizer<cc::DrawDRRectOp, true>::RasterWithFlags' [ 0 4 40]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::__destruct_at_end' [ 0 5 10 87]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::__end_cap' [ 0 5 10 67]
'base::span<unsigned char, 18446744073709551615>' [ 0 6]
'base::internal::OptionalStorage<SkImageFilter::CropRect, true, true>::OptionalStorage' [ 0 6 16 70]
'std::__1::__vector_base<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__alloc' [ 0 5 10 150]
'cc::DecodedDrawImage' [ 0 4]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'cc::PaintFont::SetTypeface' [ 0 4 15]
'SkData' [ 0]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >::destroy' [ 0 5 10 64]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__destruct_at_end' [ 0 5 10 142]
'std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >::construct<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10 111]
'base::internal::IsValueInRangeForNumericType<long, long>' [ 0 6 16]
'std::__1::remove_reference<std::__1::allocator<unsigned int> &>' [ 0 5 10]
'SkTypeface::uniqueID' [ 0 12]
'base::StackVector<gfx::Rect, 1>::~StackVector' [ 0 6 33]
'std::__1::forward<const SkDisplacementMapEffect::ChannelSelectorType &>' [ 0 5 10]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__copy_assign_alloc' [ 0 5 10 89]
'std::__1::forward<cc::PaintCanvas::SrcRectConstraint &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::deallocate' [ 0 5 10 73]
'cc::Rasterizer<cc::ScaleOp, false>::RasterWithFlags' [ 0 4 36]
'SkPixmap::width' [ 0 10]
'cc::PaintOp::OpHasDiscardableImages' [ 0 4 13]
'sk_sp<cc::PaintShader>::release' [ 0 24]
'base::internal::operator*<int, base::internal::CheckedNumeric<long>, nullptr>' [ 0 6 16]
'cc::DisplayItemList::push<cc::DrawIRectOp, const SkIRect &, const cc::PaintFlags &>' [ 0 4 21]
'cc::PaintOpReader::ReadMatrixPaintFilter' [ 0 4 19]
'cc::ServiceRawMemoryTransferCacheEntry::ServiceRawMemoryTransferCacheEntry' [ 0 4 40]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::clear' [ 0 5 10 139]
'SkISize::width' [ 0 9]
'std::__1::remove_reference<const cc::PaintOp *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::__construct_range_forward<gfx::Rect>' [ 0 5 10 61]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::~__split_buffer' [ 0 5 10 144]
'std::__1::streamoff' [ 0 5 10]
'cc::PaintImage::DecodeFromSkImage' [ 0 4 16]
'cc::SetMatrixOp::Serialize' [ 0 4 17]
'std::__1::move<cc::ImageProvider::ScopedDecodedDrawImage *&>' [ 0 5 10]
'base::Optional<cc::ScopedRasterFlags>::~Optional' [ 0 6 39]
'cc::PaintOpReader::ReadSimple<SkRRect>' [ 0 4 19]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__push_back_slow_path<const gfx::Rect &>' [ 0 5 10 66]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__vector_base' [ 0 5 10 132]
'std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >::~unique_ptr' [ 0 5 10 123]
'std::__1::forward<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'sk_sp<cc::OffsetPaintFilter>::release' [ 0 30]
'base::Optional<SkImageFilter::CropRect>::operator bool' [ 0 6 41]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::deallocate' [ 0 6 49]
'cc::(anonymous namespace)::ScopedFlagsOverride::~ScopedFlagsOverride' [ 0 4 27 48]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> >, 1, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot, true>' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'cc::DrawTextBlobOp::Deserialize' [ 0 4 20]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__destruct_at_end' [ 0 5 10 73]
'std::__1::__compressed_pair_elem<cc::SkiaPaintImageGenerator *, 0, false>' [ 0 5 10]
'sk_sp<cc::MorphologyPaintFilter>' [ 0]
'gfx::ScrollOffset' [ 0 5]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >::AddRef' [ 0 6 112]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>' [ 0 5 10]
'cc::SimpleBufferSerializer' [ 0 4]
'cc::PaintFlags::nothingToDraw' [ 0 4 16]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::capacity' [ 0 5 10 68]
'base::internal::OptionalStorageBase<SkImageFilter::CropRect, true>::Init<SkRect &, unsigned int &>' [ 0 6 16 68]
'cc::DiscardableImageMap::~DiscardableImageMap' [ 0 4 25]
'cc::LightingDistantPaintFilter::input' [ 0 4 32]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::size' [ 0 5 10 86]
'cc::Rasterizer<cc::DrawTextBlobOp, true>::RasterWithFlags' [ 0 4 42]
'cc::PaintTypeface' [ 0 4]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::capacity' [ 0 5 10 61]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::__alloc' [ 0 5 10 87]
'std::__1::operator==<const std::__1::pair<int, cc::PaintImage::DecodingMode> *, const std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'cc::PaintFlags::getColor' [ 0 4 16]
'cc::Rasterizer<cc::DrawRecordOp, false>::Raster' [ 0 4 41]
'std::__1::vector<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::unique_ptr<char, base::AlignedFreeDeleter>::operator=' [ 0 5 10 54]
'sk_sp<SkData>::release' [ 0 15]
'cc::DrawColorOp::Serialize' [ 0 4 17]
'std::__1::__compressed_pair_elem<cc::ImageProvider::ScopedDecodedDrawImage *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 89]
'SkPixmap::height' [ 0 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::RecordColorHistograms' [ 0 4 27 54]
'base::StackContainer<std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >, 1>::~StackContainer' [ 0 6 155]
'cc::PaintFlagsPaintFilter::SerializedSize' [ 0 4 27]
'std::__1::true_type' [ 0 5 10]
'base::internal::ReversedAdapter<std::__1::vector<SkPaint, std::__1::allocator<SkPaint> > >::begin' [ 0 6 16 92]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::flat_tree' [ 0 6 16 191]
'SkStrikeClient' [ 0]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::reset' [ 0 5 10 67]
'SkWeakRefCnt::weak_unref' [ 0 14]
'index_type' [ 0]
'std::__1::__pointer_type<SkCanvas, std::__1::default_delete<SkCanvas> >' [ 0 5 10]
'cc::Rasterizer<cc::SaveOp, false>' [ 0 4]
'intptr_t' [ 0]
'std::__1::remove_reference<cc::ServiceColorSpaceTransferCacheEntry *>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >' [ 0 5 10]
'base::StackAllocator<const cc::PaintOp *, 3>::Source::stack_buffer' [ 0 6 46 54]
'std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sk_sp<cc::PaintFilter> *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::allocate' [ 0 5 10 73]
'cc::DrawIRectOp::HasNonAAPaint' [ 0 4 17]
'max_align_t' [ 0]
'std::__1::remove_reference<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'std::__1::default_delete<base::trace_event::TracedValue>' [ 0 5 10]
'cc::Rasterizer<cc::DrawDRRectOp, true>' [ 0 4]
'base::span<const unsigned char, 18446744073709551615>::data' [ 0 6 55]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >' [ 0 6 16]
'std::__1::allocator<gfx::Rect>::construct<gfx::Rect, const gfx::Rect &>' [ 0 5 10 32]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'size_t' [ 0]
'cc::FilterOperations::HasFilterThatAffectsOpacity' [ 0 4 22]
'std::__1::remove_reference<base::OnceCallback<void ()> &>' [ 0 5 10]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::clear' [ 0 5 10 69]
'cc::TurbulencePaintFilter::SnapshotWithImagesInternal' [ 0 4 27]
'std::__1::vector<float, std::__1::allocator<float> >::__annotate_new' [ 0 5 10 54]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >, 1, true>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawImageOp>' [ 0 4 19]
'std::__1::__compressed_pair<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> > &>::second' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::__construct<cc::PaintTypeface, const cc::PaintTypeface &>' [ 0 5 10 69]
'cc::PaintTypeface::family_name' [ 0 4 19]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__annotate_delete' [ 0 5 10 85]
'cc::DisplayItemList::push<cc::DrawPathOp, const SkPath &, const cc::PaintFlags &>' [ 0 4 21]
'base::internal::OptionalStorageBase<unsigned int, true>::OptionalStorageBase<const unsigned int &>' [ 0 6 16 57]
'base::RepeatingCallback<void ()>::~RepeatingCallback' [ 0 6 34]
'cc::PaintOpBuffer::CompositeIterator::operator bool' [ 0 4 19 38]
'cc::UpdateTypeAndSkip<cc::RotateOp>' [ 0 4]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::empty' [ 0 5 10 54]
'base::internal::OptionalBase<cc::RecordPaintCanvas>::OptionalBase' [ 0 6 16 53]
'SkRRect::getType::operator()' [ 0 9 18]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__construct_backward<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *>' [ 0 5 10 98]
'std::__1::__vector_base<WireTypeface, std::__1::allocator<WireTypeface> >' [ 0 5 10]
'std::__1::move<unsigned long *&>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10]
'base::operator==<gfx::ColorSpace, gfx::ColorSpace>' [ 0 6]
'cc::SkiaPaintCanvas::drawPath' [ 0 4 21]
'cc::DisplacementMapEffectPaintFilter::~DisplacementMapEffectPaintFilter' [ 0 4 38]
'cc::PaintTypeface::CreateSkTypeface' [ 0 4 19]
'SkCanvas::getDeviceClipBounds' [ 0 10]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::begin' [ 0 6 16 183]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator++' [ 0 5 10 82]
'gfx::Size::set_height' [ 0 5 11]
'cc::ScaleOp::Deserialize' [ 0 4 13]
'std::__1::pointer_traits<unsigned long *>' [ 0 5 10]
'cc::LightingDistantPaintFilter::surface_scale' [ 0 4 32]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::__end_cap' [ 0 5 10 94]
'std::__1::remove_reference<const float &>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<const cc::DrawImage *> &>' [ 0 5 10]
'std::__1::move<gfx::Rect &>' [ 0 5 10]
'std::__1::move<const cc::PaintOp **&>' [ 0 5 10]
'cc::PaintOpReader::ReadDisplacementMapEffectPaintFilter' [ 0 4 19]
'SkMax32' [ 0]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::second' [ 0 5 10 106]
'base::internal::OptionalBase<gfx::ColorSpace>::InitOrAssign<const gfx::ColorSpace &>' [ 0 6 16 47]
'cc::ScopedRasterFlags::DecodeFilter' [ 0 4 23]
'std::__1::__pointer_type<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >' [ 0 5 10]
'sk_make_sp<cc::BlurPaintFilter, const float &, const float &, const SkBlurImageFilter::TileMode &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'cc::DrawRRectOp::IsValid' [ 0 4 17]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::clear' [ 0 5 10 93]
'cc::(anonymous namespace)::IsScaleAdjustmentIdentity' [ 0 4 27]
'cc::ClientImageTransferCacheEntry::Serialize' [ 0 4 35]
'cc::SkiaPaintCanvas::drawImageRect' [ 0 4 21]
'cc::NoopOp::Serialize' [ 0 4 12]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__annotate_delete' [ 0 5 10 66]
'SkSafeUnref<cc::MergePaintFilter>' [ 0]
'logging::CheckNEImpl<unsigned int, unsigned int>' [ 0 9]
'cc::DisplayItemList::push<cc::SaveLayerAlphaOp, const SkRect *&, unsigned char &, bool &>' [ 0 4 21]
'base::internal::OptionalStorage<gfx::ColorSpace, false, false>::OptionalStorage' [ 0 6 16 64]
'std::__1::remove_reference<cc::PaintImage::CompletionState>' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::cbegin' [ 0 6 16 183]
'std::__1::__tree_const_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__end_cap' [ 0 5 10 142]
'std::__1::__size_type<std::__1::allocator<SkPaint>, long, true>' [ 0 5 10]
'cc::SaveLayerAlphaOp::SaveLayerAlphaOp' [ 0 4 22]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::clear' [ 0 5 10 148]
'std::__1::__pointer_type<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::operator=' [ 0 5 10 69]
'cc::PaintOpBuffer::PlaybackFoldingIterator::~PlaybackFoldingIterator' [ 0 4 19 44]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::vector' [ 0 5 10 86]
'cc::PaintImage::kInvalidContentId' [ 0 4 16]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool &, false>' [ 0 5 10 204]
'sk_sp<cc::MatrixPaintFilter>::sk_sp' [ 0 30]
'SkImageFilter::CropRect::flags' [ 0 15 25]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__max_size' [ 0 5 10 100]
'std::__1::move<std::__1::pair<int, cc::PaintImage::DecodingMode> &>' [ 0 5 10]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> &>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<cc::FrameMetadata> &>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__alloc' [ 0 5 10 146]
'std::__1::reverse_iterator<std::__1::__wrap_iter<SkPaint *> >::reverse_iterator' [ 0 5 10 63]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::push_back' [ 0 5 10 82]
'sk_sp<cc::PaintOpBuffer>::~sk_sp' [ 0 26]
'std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry>::operator()' [ 0 5 10 70]
'std::__1::remove_reference<SkCanvas *>' [ 0 5 10]
'SkMulDiv255Round::operator()' [ 0 18]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__alloc' [ 0 5 10 89]
'std::__1::__tree_map_pointer_types<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *, std::__1::__tree_key_value_types<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, false>' [ 0 5 10]
'gfx::Vector2d::x' [ 0 5 15]
'cc::PaintOp::AreSkPointsEqual' [ 0 4 13]
'std::__1::__to_raw_pointer<SkPaint>' [ 0 5 10]
'SkRect' [ 0]
'cc::DrawRecordOp::HasDiscardableImages' [ 0 4 18]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &, 1, false>::__get' [ 0 5 10 115]
'cc::Rasterizer<cc::AnnotateOp, false>::RasterWithFlags' [ 0 4 39]
'std::__1::forward<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::release' [ 0 5 10 258]
'std::__1::__pointer_type<float, base::StackAllocator<float, 3> >' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__swap_out_circular_buffer' [ 0 5 10 82]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::~vector' [ 0 5 10 78]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::destroy<float>' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::allocate' [ 0 5 10 102]
'cc::SimpleSerialize<cc::ConcatOp>' [ 0 4]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__split_buffer' [ 0 5 10 79]
'std::__1::allocator<unsigned int>::construct<unsigned int, const unsigned int &>' [ 0 5 10 35]
'std::__1::__compressed_pair_elem<base::DictionaryValue *, 0, false>' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'cc::PaintTypeface::FromFilenameAndTtcIndex' [ 0 4 19]
'SkImageInfo::width' [ 0 13]
'std::__1::__less<char *, char *>' [ 0 5 10]
'SkPixmap::addr' [ 0 10]
'sk_sp<SkPicture>::release' [ 0 18]
'std::__1::__pointer_type<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::DiscardableImageMap::AnimatedImageMetadata *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 94]
'std::__1::remove_reference<const std::__1::allocator<unsigned char> &>' [ 0 5 10]
'base::internal::FunctorTraits<void (cc::SkiaPaintCanvas::*)(), void>::Invoke<void (cc::SkiaPaintCanvas::*)(), cc::SkiaPaintCanvas *>' [ 0 6 16 70]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'cc::PaintTextBlobBuilder::PaintTextBlobBuilder' [ 0 4 26]
'std::__1::__distance<cc::FilterOperation *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'std::__1::add_lvalue_reference<SkCanvas>' [ 0 5 10]
'cc::PaintOpWriter::WriteSimple<float>' [ 0 4 19]
'base::internal::OptionalBase<unsigned long>::OptionalBase<unsigned long &>' [ 0 6 16 45]
'std::__1::move<cc::PaintImage &>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__destruct_at_end' [ 0 5 10 146]
'sk_make_sp<cc::LightingSpotPaintFilter, const cc::PaintFilter::LightingType &, const SkPoint3 &, const SkPoint3 &, const float &, const float &, const unsigned int &, const float &, const float &, const float &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::reserve' [ 0 5 10 139]
'sk_sp<SkTypeface>::operator=' [ 0 19]
'(anonymous namespace)' [ 0]
'scoped_refptr<base::internal::BindStateBase>::scoped_refptr' [ 0 46]
'sk_sp<cc::PaintFilter>::sk_sp<cc::DisplacementMapEffectPaintFilter, void>' [ 0 24]
'std::__1::iterator_traits<sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'cc::DisplayItemList::push<cc::SaveOp>' [ 0 4 21]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::vector' [ 0 5 10 66]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'std::__1::__compressed_pair<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'sk_sp<SkPicture>::~sk_sp' [ 0 18]
'cc::(anonymous namespace)::CheckIfRRectClipCoversCanvas::trace_event_unique_atomic136' [ 0 4 27 57]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'std::__1::__unwrap_iter<const float *>' [ 0 5 10]
'base::Optional<SkNoDrawCanvas>' [ 0 6]
'cc::DrawImage::src_rect' [ 0 4 15]
'cc::PaintFilter::crop_rect' [ 0 4 17]
'cc::DrawTextBlobOp::~DrawTextBlobOp' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::__construct<const cc::DrawImage *, const cc::DrawImage *>' [ 0 5 10 73]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::capacity' [ 0 5 10 93]
'std::__1::__add_lvalue_reference_impl<base::DictionaryValue, true>' [ 0 5 10]
'sk_sp<SkData>::~sk_sp' [ 0 15]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::Impl::operator=' [ 0 6 16 183 189]
'cc::MorphologyPaintFilter::SerializedSize' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::construct<unsigned int, const unsigned int &>' [ 0 5 10 64]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'base::OptionalOrNullptr<SkImageFilter::CropRect>' [ 0 6]
'base::Optional<SkNoDrawCanvas>::~Optional' [ 0 6 32]
'std::__1::__compressed_pair_elem<base::StackAllocator<float, 3> &, 1, false>::__get' [ 0 5 10 78]
'cc::PaintOpWithFlags::HasDiscardableImagesFromFlags' [ 0 4 22]
'cc::RotateOp::Serialize' [ 0 4 14]
'std::__1::__pointer_type<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 95]
'cc::PaintTextBlobBuilder::~PaintTextBlobBuilder' [ 0 4 26]
'WTF' [ 0]
'cc::PaintImage::ToString' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::reset' [ 0 5 10 258]
'std::__1::operator-<const std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'base::OnceCallback<void ()>::Run' [ 0 6 29]
'std::__1::forward<const Frame &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__end_cap' [ 0 5 10 158]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::max_size' [ 0 5 10 86]
'std::__1::__compressed_pair<Frame *, std::__1::allocator<Frame> &>::__compressed_pair<nullptr_t, std::__1::allocator<Frame> &>' [ 0 5 10 68]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPath>' [ 0 4]
'cc::SetMatrixOp::SetMatrixOp' [ 0 4 17]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::size' [ 0 5 10 78]
'SkPath::updateBoundsCache' [ 0 8]
'std::__1::move_if_noexcept<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 111]
'cc::UpdateTypeAndSkip<cc::DrawImageRectOp>' [ 0 4]
'sk_sp<SkShader>::reset' [ 0 17]
'base::Callback<MakeUnboundRunType<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > >' [ 0 6]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::deallocate' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>, 1, true>::__compressed_pair_elem<std::__1::default_delete<base::trace_event::TracedValue>, void>' [ 0 5 10 114]
'cc::ClipPathOp::ClipPathOp' [ 0 4 16]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__destruct_at_end' [ 0 5 10 142]
'cc::ServicePaintTypefaceTransferCacheEntry::ReadData' [ 0 4 44]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::vector' [ 0 5 10 86]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> &>' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>::FreeIfNeeded' [ 0 6 16 45]
'SkWeakRefCnt::weak_ref' [ 0 14]
'std::__1::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3>, 1, false>::__compressed_pair_elem<const base::StackAllocator<const cc::PaintOp *, 3> &, void>' [ 0 5 10 90]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *&>' [ 0 5 10]
'base::StackContainer<std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >, 3>::operator->' [ 0 6 111]
'logging::CheckNEImpl<cc::FilterOperation::FilterType, cc::FilterOperation::FilterType>' [ 0 9]
'sk_sp<cc::DropShadowPaintFilter>::release' [ 0 34]
'Sk32_sat_add' [ 0]
'std::__1::pair<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::allocate' [ 0 5 10 61]
'logging::MakeCheckOpValueString<cc::PaintImage::DecodingMode>' [ 0 9]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_new' [ 0 5 10 68]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::operator[]' [ 0 5 10 139]
'__gnuc_va_list' [ 0]
'cc::DisplayItemList::push<cc::DrawImageOp, const cc::PaintImage &, float &, float &, const cc::PaintFlags *&>' [ 0 4 21]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::begin' [ 0 5 10 89]
'SkTextBlobBuilder' [ 0]
'std::__1::forward<const sk_sp<cc::PaintImageGenerator> &>' [ 0 5 10]
'SkPaint::setBlendMode' [ 0 9]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__end_cap' [ 0 5 10 148]
'cc::PaintFont::SetFakeBoldText' [ 0 4 15]
'SkImageInfo::isEmpty' [ 0 13]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__end_cap' [ 0 5 10 93]
'std::__1::forward<std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::ClipPathOp, const SkPath &, SkClipOp &, bool &>' [ 0 4 19]
'std::__1::remove_reference<cc::TransferCacheEntryType &>' [ 0 5 10]
'std::__1::conditional<true, const cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &, cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &&>' [ 0 5 10]
'cc::DrawRRectOp::Deserialize' [ 0 4 17]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::TracedValue>, 1, true>' [ 0 5 10]
'SkSafeUnref<cc::LightingPointPaintFilter>' [ 0]
'base::Optional<SkImageFilter::CropRect>' [ 0 6]
'std::__1::vector<float, base::StackAllocator<float, 3> >::capacity' [ 0 5 10 58]
'SkPaint::getLooper' [ 0 9]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::deallocate' [ 0 5 10 82]
'cc::g_is_draw_op' [ 0 4]
'cc::DisplayItemList::BytesUsed' [ 0 4 21]
'gfx::Rect::right' [ 0 5 11]
'std::__1::__compressed_pair_elem<float *, 0, false>' [ 0 5 10]
'std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >::allocate' [ 0 5 10 71]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> &>::second' [ 0 5 10 82]
'base::internal::OptionalBase<SkMatrix>::FreeIfNeeded' [ 0 6 16 40]
'cc::PaintOpWriter::Write' [ 0 4 19]
'cc::PaintFlags::operator==' [ 0 4 16]
'cc::PaintOpBuffer::push<cc::TranslateOp, float &, float &>' [ 0 4 19]
'cc::FilterOperation::~FilterOperation' [ 0 4 21]
'cc::PaintOp' [ 0 4]
'std::__1::__to_raw_pointer<sk_sp<SkImageFilter> >' [ 0 5 10]
'cc::PaintOpBuffer::ComputeOpSkip' [ 0 4 19]
'cc::SkiaPaintCanvas::imageInfo' [ 0 4 21]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::size' [ 0 5 10 133]
'std::__1::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, 1, false>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::~__split_buffer' [ 0 5 10 134]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::push_back' [ 0 5 10 86]
'std::__1::__atomic_base<int, true>::__atomic_base' [ 0 5 10 36]
'std::__1::addressof<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'std::__1::forward<const sk_sp<cc::PaintFilter> &>' [ 0 5 10]
'cc::(anonymous namespace)::DeserializeTypeface' [ 0 4 27]
'cc::PaintOp::IsValidPaintFlagsSkBlendMode' [ 0 4 13]
'std::__1::remove_reference<cc::ServiceShaderTransferCacheEntry *&>' [ 0 5 10]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::construct<sk_sp<cc::PaintFilter>, const sk_sp<cc::PaintFilter> &>' [ 0 5 10 46]
'std::__1::forward<const std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > &>' [ 0 5 10]
'cc::DrawPathOp::IsValid' [ 0 4 16]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::vector' [ 0 5 10 133]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__alloc' [ 0 5 10 77]
'cc::ImageProvider::ScopedDecodedDrawImage::operator bool' [ 0 4 19 43]
'std::__1::remove_reference<cc::PaintImageBuilder &>' [ 0 5 10]
'cc::PaintImage::CreateSkImage' [ 0 4 16]
'std::__1::allocator<float>' [ 0 5 10]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__vector_base' [ 0 5 10 93]
'__compar_fn_t' [ 0]
'std::__1::remove_reference<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &>' [ 0 5 10]
'SkMatrix::MakeTrans' [ 0 10]
'base::internal::PassingTraitsType<const cc::PaintOp::SerializeOptions &>' [ 0 6 16]
'cc::FilterOperation::CreateReferenceFilter' [ 0 4 21]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_new' [ 0 5 10 70]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'sk_sp<const SkImage>::get' [ 0 22]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::TransferCacheEntryBase' [ 0 4 99]
'SkSafeUnref<cc::MorphologyPaintFilter>' [ 0]
'std::__1::__compressed_pair_elem<std::__1::pair<cc::DrawImage, gfx::Rect> *, 0, false>' [ 0 5 10]
'cc::DrawOvalOp::IsValid' [ 0 4 16]
'cc::SimpleSerialize<cc::SaveLayerAlphaOp>' [ 0 4]
'base::internal::OptionalBase<SkMatrix>::InitOrAssign<const SkMatrix &>' [ 0 6 16 40]
'cc::PaintImage::~PaintImage' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::allocator<base::Value>, true>' [ 0 5 10 30]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__vector_base' [ 0 5 10 99]
'operator<<<char, std::__1::char_traits<char>, SkImage>' [ 0]
'SkRect::isFinite' [ 0 8]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'SkImageInfo::~SkImageInfo' [ 0 13]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__max_size' [ 0 5 10 65]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::data' [ 0 5 10 54]
'std::__1::__numeric_type<float>' [ 0 5 10]
'cc::PaintImage::color_space' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<float> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'cc::g_destructor_functions' [ 0 4]
'cc::(anonymous namespace)::DiscardableImageGenerator::RecordColorHistograms::atomic_histogram_pointer' [ 0 4 27 54 77]
'std::__1::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &, 1, false>::__get' [ 0 5 10 114]
'cc::PaintOp::AreSkFlattenablesEqual' [ 0 4 13]
'std::__1::__pointer_type<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::ImageGatheringProvider::GetDecodedDrawImage' [ 0 4 27 54 78]
'cc::TurbulencePaintFilter::SerializedSize' [ 0 4 27]
'std::__1::reverse_iterator<std::__1::__wrap_iter<SkPaint *> >::operator*' [ 0 5 10 63]
'std::__1::move<base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)> &>' [ 0 5 10]
'std::__1::forward<cc::ServiceImageTransferCacheEntry *&>' [ 0 5 10]
'trace_event_internal::ScopedTracer::Initialize' [ 0 22 36]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkImageGenerator>, 1, true>' [ 0 5 10]
'SkSafeRef<SkData>' [ 0]
'cc::(anonymous namespace)::IsSolidColorPaint' [ 0 4 27]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::ServiceColorSpaceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceColorSpaceTransferCacheEntry *&, void>' [ 0 5 10 87]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::~__vector_base' [ 0 5 10 65]
'base::TimeDelta::operator>' [ 0 6 17]
'std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >::construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 73]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__vector_base' [ 0 5 10 142]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__alloc' [ 0 5 10 69]
'cc::ServiceImageTransferCacheEntry' [ 0 4]
'sk_sp<SkShader>::~sk_sp' [ 0 17]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>>' [ 0 5 10 100]
'base::StackContainer<std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >, 1>::~StackContainer' [ 0 6 91]
'std::__1::conditional<true, const sk_sp<SkImageFilter> &, sk_sp<SkImageFilter> &&>' [ 0 5 10]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__annotate_new' [ 0 5 10 54]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::push_back' [ 0 5 10 85]
'std::__1::iterator_traits<const unsigned int *>' [ 0 5 10]
'cc::DisplacementMapEffectPaintFilter::operator==' [ 0 4 38]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__annotate_delete' [ 0 5 10 135]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>::__alloc' [ 0 5 10 94]
'SkRefCntBase::~SkRefCntBase::operator()' [ 0 14 29]
'cc::RecordPaintCanvas::restore' [ 0 4 23]
'std::__1::move<sk_sp<cc::PaintImageGenerator> &>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<float> &>' [ 0 5 10]
'cc::(anonymous namespace)::IsValidSkShaderTileMode' [ 0 4 27]
'std::__1::pointer_traits<cc::DiscardableImageMap::AnimatedImageMetadata *>' [ 0 5 10]
'decltype(nullptr)' [ 0]
'std::__1::forward<const std::__1::allocator<unsigned char> &>' [ 0 5 10]
'cc::PaintOp::QuickRejectDraw' [ 0 4 13]
'base::subtle::AdoptRefTag' [ 0 6 14]
'cc::NoopOp::Deserialize' [ 0 4 12]
'std::__1::__compressed_pair_elem<sk_sp<SkImageFilter> *, 0, false>' [ 0 5 10]
'base::internal::OptionalStorageBase<cc::DecodeStashingImageProvider, false>::Init<cc::ImageProvider *&>' [ 0 6 16 77]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<cc::DrawImage, gfx::Rect> *>::__nat, std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >, 1, true>' [ 0 5 10]
'cc::RasterFunction' [ 0 4]
'std::__1::remove_reference<cc::DisplayItemList *&>' [ 0 5 10]
'sk_make_sp<cc::ImagePaintFilter, cc::PaintImage, const SkRect &, const SkRect &, const SkFilterQuality &>' [ 0]
'std::__1::default_delete<cc::ServiceTransferCacheEntry>::operator()' [ 0 5 10 57]
'cc::DisplayItemList::push<cc::CustomDataOp, unsigned int &>' [ 0 4 21]
'cc::(anonymous namespace)::g_next_image_id' [ 0 4 27]
'cc::LightingSpotPaintFilter::~LightingSpotPaintFilter' [ 0 4 29]
'cc::TransferCacheSerializeHelper::LockEntry' [ 0 4 34]
'std::__1::move<cc::DisplayItemList *&>' [ 0 5 10]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__vector_base' [ 0 5 10 85]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::~__vector_base' [ 0 5 10 73]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__destroy<cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10 98]
'cc::DiscardableImageMap::DiscardableImageMap' [ 0 4 25]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__recommend' [ 0 5 10 82]
'ceil' [ 0]
'gfx::Size::IsEmpty' [ 0 5 11]
'cc::DrawRectOp::DrawRectOp' [ 0 4 16]
'cc::DrawTextBlobOp::Serialize' [ 0 4 20]
'sk_sp<cc::ColorFilterPaintFilter>::sk_sp' [ 0 35]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::max_size' [ 0 5 10 86]
'sk_sp<SkPixelRef>::get' [ 0 19]
'cc::ColorFilterPaintFilter::SnapshotWithImagesInternal' [ 0 4 28]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >' [ 0 5 10]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>::Init<gfx::ColorSpace>' [ 0 6 16 61]
'std::__1::__compressed_pair_elem<base::trace_event::TracedValue *, 0, false>::__compressed_pair_elem<base::trace_event::TracedValue *&, void>' [ 0 5 10 78]
'base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> >::operator=' [ 0 6 77]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__recommend' [ 0 5 10 136]
'cc::BlurPaintFilter::input' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 65]
'cc::PaintFlags::getHinting' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>::__compressed_pair_elem<std::__1::allocator<unsigned int> &, void>' [ 0 5 10 81]
'std::__1::forward<const base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10]
'__uint8_t' [ 0]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> >::second' [ 0 5 10 71]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__annotate_new' [ 0 5 10 130]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::begin' [ 0 5 10 78]
'std::__1::forward<SkMatrix>' [ 0 5 10]
'cc::DropShadowPaintFilter::DropShadowPaintFilter' [ 0 4 27]
'std::__1::remove_reference<std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::ClipRectOp>' [ 0 4]
'cc::PaintShader::operator==' [ 0 4 17]
'std::__1::remove_reference<cc::ServiceShaderTransferCacheEntry *>' [ 0 5 10]
'cc::PaintCanvas::~PaintCanvas' [ 0 4 17]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<int>' [ 0 6 16 76]
'SkPoint::x' [ 0 9]
'SkIRect::set' [ 0 9]
'std::__1::swap<cc::PaintTypeface *>' [ 0 5 10]
'cc::ScaleOp' [ 0 4]
'std::__1::__pointer_type<char, base::AlignedFreeDeleter>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> > >' [ 0 5 10]
'base::AlignedFreeDeleter::operator()' [ 0 6 26]
'SkNoDrawCanvas::onDrawBitmapLattice' [ 0 16]
'SkTDArray<SkPathRef::GenIDChangeListener *>' [ 0]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::Impl::~Impl' [ 0 6 16 183 189]
'SkNoDrawCanvas::onDrawTextRSXform' [ 0 16]
'std::__1::forward<std::__1::allocator<unsigned long> &>' [ 0 5 10]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'uintmax_t' [ 0]
'std::__1::move<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'cc::Rasterizer<cc::DrawLineOp, true>::Raster' [ 0 4 38]
'cc::SkiaPaintCanvas::scale' [ 0 4 21]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::clear' [ 0 5 10 63]
'cc::DrawRRectOp' [ 0 4]
'base::internal::CheckedAddFastOp<long, int>::Do<long>' [ 0 6 16 45]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::allocate' [ 0 5 10 82]
'SkSafeUnref<SkFontConfigInterface>' [ 0]
'SkPaint::getPathEffect' [ 0 9]
'std::__1::move<std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'base::internal::OptionalStorageBase<unsigned int, true>::OptionalStorageBase' [ 0 6 16 57]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &, void>' [ 0 5 10 117]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__annotate_shrink' [ 0 5 10 136]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__recommend' [ 0 5 10 135]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__vector_base' [ 0 5 10 137]
'std::__1::__pointer_type_imp::__pointer_type<SkCanvas, std::__1::default_delete<SkCanvas>, false>' [ 0 5 10 30]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::__construct<float, const float &>' [ 0 5 10 57]
'base::Optional<SkMatrix>::has_value' [ 0 6 26]
'cc::PaintShader::image_analysis_state' [ 0 4 17]
'std::__1::forward<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 81]
'cc::PaintOpReader::ReadComposePaintFilter' [ 0 4 19]
'operator!=<SkImage, SkImage>' [ 0]
'SkTPin<int>' [ 0]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> **>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<unsigned long (SimpleBufferSerializer::*)(const PaintOp *, const SerializeOptions &)>::is_nullable, bool>' [ 0 5 10]
'cc::MergePaintFilter::input_at' [ 0 4 22]
'cc::DrawImageOp::Serialize' [ 0 4 17]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__swap_out_circular_buffer' [ 0 5 10 130]
'std::__1::__pointer_type<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >' [ 0 5 10]
'cc::DrawPathOp' [ 0 4]
'base::Optional<cc::DecodeStashingImageProvider>::~Optional' [ 0 6 49]
'std::__1::__promote<unsigned long, double, void>' [ 0 5 10]
'sk_sp<cc::PaintImageGenerator>::operator bool' [ 0 32]
'cc::PaintOpBuffer::PlaybackFoldingIterator::operator*' [ 0 4 19 44]
'sk_sp<SkImage>::operator=' [ 0 16]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::data' [ 0 5 10 86]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'std::__1::remove_reference<std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::clear' [ 0 5 10 75]
'std::__1::add_lvalue_reference<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot>' [ 0 5 10]
'std::__1::__wrap_iter<const cc::PaintOp **>::__wrap_iter' [ 0 5 10 45]
'std::__1::remove_reference<const base::StackAllocator<float, 3> &>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<const SkDescriptor *> >, std::__1::__hash_node<const SkDescriptor *, void *> >' [ 0 5 10]
'std::__1::pointer_traits<base::Value *>' [ 0 5 10]
'cc::SimpleSerialize<cc::SetMatrixOp>' [ 0 4]
'cc::PaintShader::kInvalidRecordShaderId' [ 0 4 17]
'cc::AnalyzeOpFunc' [ 0 4]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'std::__1::enable_if<true, const unsigned char *>' [ 0 5 10]
'std::__1::remove_reference<const base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> &>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >::release' [ 0 5 10 131]
'base::internal::OptionalStorage<SkMatrix, true, true>::OptionalStorage' [ 0 6 16 55]
'cc::Rasterizer<cc::DrawTextBlobOp, true>' [ 0 4]
'std::__1::__compressed_pair<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> > &>' [ 0 5 10]
'trace_event_internal' [ 0]
'std::__1::__compressed_pair<unsigned char *, SkFunctionWrapper<void, void, &sk_free> >' [ 0 5 10]
'std::__1::remove_reference<gfx::ColorSpace>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::data' [ 0 5 10 89]
'SkMScalar' [ 0]
'sk_sp<const SkImage>' [ 0]
'std::__1::__size_type<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::__construct<float, float>' [ 0 5 10 61]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::~__vector_base' [ 0 5 10 77]
'std::__1::copy<gfx::Rect *, gfx::Rect *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__annotate_delete' [ 0 5 10 143]
'base::internal::OptionalBase<cc::PaintOpBuffer::Iterator>::OptionalBase' [ 0 6 16 59]
'std::__1::__wrap_iter<SkPaint *>::base' [ 0 5 10 34]
'SkSafeRef<const cc::PaintOpBuffer>' [ 0]
'sk_sp<const cc::PaintOpBuffer>::get' [ 0 32]
'cc::GetNestedSingleDrawingOp' [ 0 4]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::lower_bound<int>' [ 0 6 16 191]
'std::__1::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 131]
'std::__1::default_delete<SkImageGenerator>' [ 0 5 10]
'std::__1::__wrap_iter<const cc::FilterOperation *>::__wrap_iter' [ 0 5 10 52]
'std::__1::__pointer_type_imp::__pointer_type<Frame, std::__1::allocator<Frame>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<Frame> &, 1, false>' [ 0 5 10]
'cc::MorphologyPaintFilter::input' [ 0 4 27]
'cc::ServiceColorSpaceTransferCacheEntry' [ 0 4]
'sk_sp<SkData>::operator=' [ 0 15]
'std::__1::forward<base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'base::OnceCallback<void ()>' [ 0 6]
'cc::RTree<cc::DrawImage>::SearchRefs' [ 0 4 26]
'std::__1::remove_reference<const SkPaint &>' [ 0 5 10]
'cc::TilePaintFilter' [ 0 4]
'base::internal::CommonMax<int, int>' [ 0 6 16]
'SkRefCntBase::unref::operator()' [ 0 14 21]
'std::__1::__wrap_iter<const cc::PaintOp *const *>::base' [ 0 5 10 51]
'std::__1::remove_reference<cc::FilterOperation &>' [ 0 5 10]
'SkCanvas::drawIRect' [ 0 10]
'std::__1::move<gfx::Rect *&>' [ 0 5 10]
'cc::PaintOpBuffer::Iterator::operator bool' [ 0 4 19 29]
'std::__1::forward<int &>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >::allocate' [ 0 5 10 111]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__construct_backward<sk_sp<cc::PaintFilter> *>' [ 0 5 10 78]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::~__vector_base' [ 0 5 10 65]
'std::__1::forward<std::__1::__tree_iterator<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, long> >' [ 0 5 10]
'std::__1::pointer_traits<cc::RTree<unsigned long>::Node<unsigned long> *>' [ 0 5 10]
'base::Optional<unsigned long>::Optional' [ 0 6 31]
'cc::DecodeStashingImageProvider::Reset' [ 0 4 33]
'std::__1::pointer_traits<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *>' [ 0 5 10]
'sk_sp<SkFlattenable>::~sk_sp' [ 0 22]
'std::__1::__const_void_pointer<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, false>' [ 0 5 10]
'cc::(anonymous namespace)::DiscardableImageGenerator::AddImage' [ 0 4 27 54]
'std::__1::forward<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>' [ 0 5 10]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__end_cap' [ 0 5 10 92]
'cc::Rasterizer<cc::DrawIRectOp, true>::RasterWithFlags' [ 0 4 39]
'base::RefCountedThreadSafe<cc::PaintTextBlob, base::DefaultRefCountedThreadSafeTraits<cc::PaintTextBlob> >::DeleteInternal<cc::PaintTextBlob>' [ 0 6 108]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::as_const' [ 0 6 16 191]
'SkRefCntBase::internal_dispose' [ 0 14]
'logging::CheckEQImpl' [ 0 9]
'std::__1::forward<sk_sp<cc::PaintImageGenerator> &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::~vector' [ 0 5 10 125]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, true>' [ 0 5 10 30]
'base::Optional<cc::PaintOpBuffer::OffsetIterator>::emplace<const cc::PaintOpBuffer *&, const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > *&>' [ 0 6 51]
'std::__1::__const_pointer<Frame, Frame *, std::__1::allocator<Frame>, true>' [ 0 5 10]
'SkColorType' [ 0]
'base::internal::OptionalStorageBase<gfx::Rect, true>::Init<gfx::Rect>' [ 0 6 16 54]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::~vector' [ 0 5 10 70]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::clear' [ 0 5 10 63]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::SaveLayerAlphaOp>' [ 0 4 19]
'std::__1::allocator<cc::FrameMetadata>::deallocate' [ 0 5 10 40]
'std::__1::__compressed_pair_elem<cc::ServiceColorSpaceTransferCacheEntry *, 0, false>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::DrawColorOp>' [ 0 4]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::__vector_base' [ 0 5 10 65]
'cc::DiscardableImageMap::Generate' [ 0 4 25]
'cc::RotateOp::RotateOp' [ 0 4 14]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::find<int>' [ 0 6 16 183]
'std::__1::__compressed_pair_elem<SkFunctionWrapper<void, void, &sk_free>, 1, true>' [ 0 5 10]
'cc::UpdateTypeAndSkip<cc::SaveLayerAlphaOp>' [ 0 4]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::second' [ 0 5 10 157]
'std::__1::remove_reference<SkRect>' [ 0 5 10]
'cc::PaintOpReader::ReadSimple<SkDropShadowImageFilter::ShadowMode>' [ 0 4 19]
'cc::SaveLayerAlphaOp' [ 0 4]
'std::__1::__pointer_type<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >' [ 0 5 10]
'sk_sp<SkColorSpace>::reset' [ 0 21]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::max_size' [ 0 5 10 73]
'std::__1::unique_ptr<SkImageGenerator, std::__1::default_delete<SkImageGenerator> >::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator>, void, void>' [ 0 5 10 85]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__swap_out_circular_buffer' [ 0 5 10 70]
'cc::DrawRecordOp::CountSlowPaths' [ 0 4 18]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >' [ 0 5 10]
'std::__1::move<scoped_refptr<cc::PaintTextBlob> &>' [ 0 5 10]
'std::__1::forward<base::StackVector<gfx::Rect, 1> >' [ 0 5 10]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >' [ 0 5 10]
'sk_sp<const SkImage>::~sk_sp' [ 0 22]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::~vector' [ 0 5 10 54]
'std::__1::remove_reference<const base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'SkWeakRefCnt::try_ref' [ 0 14]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>' [ 0 5 10]
'cc::SkiaPaintCanvas::getTotalMatrix' [ 0 4 21]
'cc::ImageProvider::ScopedDecodedDrawImage::ScopedDecodedDrawImage' [ 0 4 19 43]
'intmax_t' [ 0]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'SkSize::isEmpty' [ 0 8]
'sk_sp<cc::PaintFilter>::sk_sp<cc::MatrixConvolutionPaintFilter, void>' [ 0 24]
'std::__1::remove_reference<base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> > &>' [ 0 5 10]
'base::Optional<SkImageFilter::CropRect>::has_value' [ 0 6 41]
'std::__1::vector<float, std::__1::allocator<float> >::__swap_out_circular_buffer' [ 0 5 10 54]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__annotate_delete' [ 0 5 10 125]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__construct_at_end<cc::FilterOperation *>' [ 0 5 10 82]
'std::__1::remove_reference<const SkRRect &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct<unsigned int, const unsigned int &>' [ 0 5 10 64]
'cc::FilterOperations::~FilterOperations' [ 0 4 22]
'std::__1::add_lvalue_reference<base::trace_event::ConvertableToTraceFormat>' [ 0 5 10]
'logging::CheckGEImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::conditional<true, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &&, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10]
'cc::SimpleDeserialize<cc::ConcatOp>' [ 0 4]
'std::__1::remove_reference<cc::SimpleBufferSerializer *>' [ 0 5 10]
'std::__1::remove_reference<cc::DrawImage &>' [ 0 5 10]
'std::__1::__wrap_iter<sk_sp<cc::PaintFilter> *>::__wrap_iter' [ 0 5 10 49]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<SkImageFilter> > >::construct<sk_sp<SkImageFilter>, sk_sp<SkImageFilter> >' [ 0 5 10 73]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric' [ 0 6 16 47]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >::destroy' [ 0 5 10 69]
'cc::Rasterizer<cc::DrawRectOp, true>::RasterWithFlags' [ 0 4 38]
'std::__1::__wrap_iter<sk_sp<cc::PaintFilter> *>::base' [ 0 5 10 49]
'sk_sp<cc::PaintImageGenerator>::~sk_sp' [ 0 32]
'sk_sp<SkShader>' [ 0]
'std::__1::__size_type<std::__1::allocator<base::Value>, long, true>' [ 0 5 10]
'base::Optional<cc::DecodeStashingImageProvider>' [ 0 6]
'std::__1::__pointer_type<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >' [ 0 5 10]
'base::StackVector<sk_sp<cc::PaintFilter>, 2>::~StackVector' [ 0 6 46]
'std::__1::remove_reference<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10 156]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::deallocate' [ 0 5 10 62]
'logging::MakeCheckOpString<cc::PaintShader::Type, cc::PaintShader::Type>' [ 0 9]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::operator[]' [ 0 5 10 125]
'cc::PaintOp::HasNonAAPaint' [ 0 4 13]
'base::internal::InvokeHelper<false, unsigned long>::MakeItSo<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), cc::SimpleBufferSerializer *, const cc::PaintOp *, const cc::PaintOp::SerializeOptions &>' [ 0 6 16 52]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::max_size' [ 0 5 10 58]
'SkFontStyle::slant' [ 0 13]
'cc::DrawLineOp::RasterWithFlags' [ 0 4 16]
'std::__1::forward<const cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10]
'std::__1::remove_reference<unsigned long>' [ 0 5 10]
'SkSafeRef<SkShader>' [ 0]
'std::__1::vector<WireTypeface, std::__1::allocator<WireTypeface> >' [ 0 5 10]
'cc::PaintShader::CreateDecodedImage' [ 0 4 17]
'std::__1::vector<float, std::__1::allocator<float> >::__construct_at_end<const float *>' [ 0 5 10 54]
'SkRefCntBase::SkRefCntBase' [ 0 14]
'cc::Rasterizer<cc::TranslateOp, false>::Raster' [ 0 4 40]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >' [ 0 5 10]
'std::__1::__compressed_pair<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot *, std::__1::default_delete<SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot []> >' [ 0 5 10]
'cc::SkiaPaintCanvas::restoreToCount' [ 0 4 21]
'std::__1::allocator<std::__1::__hash_node<const SkDescriptor *, void *> >' [ 0 5 10]
'int64_t' [ 0]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::NoopOp>' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::destroy<cc::FrameMetadata>' [ 0 5 10 69]
'cc::(anonymous namespace)::HasDiscardableImages' [ 0 4 27]
'cc::PaintFilter::SnapshotWithImages' [ 0 4 17]
'std::__1::forward<const SkMatrix &>' [ 0 5 10]
'cc::SkiaPaintCanvas' [ 0 4]
'SkRect::x' [ 0 8]
'SkRect::y' [ 0 8]
'SkMatrix::mapVector' [ 0 10]
'std::__1::allocator<float>::construct<float>' [ 0 5 10 28]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'sk_sp<cc::DisplacementMapEffectPaintFilter>::sk_sp' [ 0 45]
'std::__1::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, 1, false>::__compressed_pair_elem<const base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &, void>' [ 0 5 10 112]
'std::__1::allocator<const cc::DrawImage *>::construct<const cc::DrawImage *, const cc::DrawImage *>' [ 0 5 10 44]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__annotate_shrink' [ 0 5 10 54]
'std::__1::__tree_node_base_types<void *>' [ 0 5 10]
'sk_sp<cc::PaintShader>::operator*::operator()' [ 0 24 35]
'std::__1::__to_raw_pointer<cc::RTree<unsigned long>::Branch<unsigned long> >' [ 0 5 10]
'std::__1::__const_pointer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >, true>' [ 0 5 10]
'sk_sp<cc::ImagePaintFilter>::release' [ 0 29]
'cc::operator()' [ 0 4]
'base::internal::OptionalBase<SkNoDrawCanvas>::FreeIfNeeded' [ 0 6 16 46]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::__alloc' [ 0 5 10 65]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'base::StackAllocator<float, 3>::Source::Source' [ 0 6 32 40]
'cc::SimpleDeserialize<cc::TranslateOp>' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &, void>' [ 0 5 10 119]
'SkPath::isValid' [ 0 8]
'sqrt' [ 0]
'cc::FilterOperation::CreateDropShadowFilter' [ 0 4 21]
'cc::Rasterizer<cc::DrawPathOp, true>::RasterWithFlags' [ 0 4 38]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__recommend' [ 0 5 10 54]
'cc::RecordPaintCanvas::imageInfo' [ 0 4 23]
'std::__1::forward<cc::PaintOpBuffer::CompositeIterator>' [ 0 5 10]
'cc::FilterOperation::operator!=' [ 0 4 21]
'cc::DiscardableImageMap::Reset' [ 0 4 25]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::__alloc' [ 0 5 10 101]
'cc::RTree<unsigned long>::GetAllBoundsRecursive' [ 0 4 26]
'cc::FilterOperations::MapRect' [ 0 4 22]
'std::__1::forward<const std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 93]
'cc::PaintOp::AdditionalOpCount' [ 0 4 13]
'operator!=' [ 0]
'cc::DropShadowPaintFilter::~DropShadowPaintFilter' [ 0 4 27]
'sk_sp<SkDrawLooper>::operator bool' [ 0 21]
'std::__1::__copy<const float, float>' [ 0 5 10]
'base::Optional<SkMatrix>::operator=<SkMatrix>' [ 0 6 26]
'cc::FilterOperation::CreateInvertFilter' [ 0 4 21]
'std::__1::__wrap_iter<const cc::PaintOp *const *>::__wrap_iter' [ 0 5 10 51]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &, 1, false>::__get' [ 0 5 10 115]
'base::Optional<cc::DecodeStashingImageProvider>::emplace<cc::ImageProvider *&>' [ 0 6 49]
'cc::PaintFlags::getTextSize' [ 0 4 16]
'std::__1::unique_ptr<cc::ServiceImageTransferCacheEntry, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 121]
'base::internal::OptionalStorageBase<cc::PaintOpBuffer::Iterator, true>::OptionalStorageBase' [ 0 6 16 72]
'base::AlignedFree' [ 0 6]
'base::Optional<unsigned int>::Optional<unsigned int, false>' [ 0 6 30]
'cc::MatrixConvolutionPaintFilter::SnapshotWithImagesInternal' [ 0 4 34]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__destroy<std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::SkiaPaintImageGenerator>, 1, true>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::RestoreOp>' [ 0 4 19]
'cc::SimpleSerialize<cc::ClipRectOp>' [ 0 4]
'std::__1::remove_reference<std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::remove_reference<const SkIRect &>' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::begin' [ 0 5 10 82]
'cc::MatrixConvolutionPaintFilter::convolve_alpha' [ 0 4 34]
'cc::g_serialize_functions' [ 0 4]
'std::__1::conditional<true, const cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &, cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> &&>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >, long, true>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__construct<gfx::Rect, const gfx::Rect &>' [ 0 5 10 65]
'SkCanvas::drawTextBlob' [ 0 10]
'cc::BlurPaintFilter::tile_mode' [ 0 4 21]
'cc::Rasterizer<cc::DrawIRectOp, true>' [ 0 4]
'sk_sp<SkPathEffect>::release' [ 0 21]
'base::internal::CheckedNumeric<long>::Wrapper<base::internal::CheckedNumeric<int> >::value' [ 0 6 16 38 85]
'SkISize::height' [ 0 9]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kShader>' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<SkPaint *, std::__1::allocator<SkPaint> &>::__compressed_pair<nullptr_t, std::__1::allocator<SkPaint> &>' [ 0 5 10 72]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::__emplace_back_slow_path<cc::PaintOpBuffer::CompositeIterator, const SkMatrix &, int>' [ 0 5 10 54]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::emplace<int, base::StackVector<gfx::Rect, 1> >' [ 0 5 10 151]
'int_fast64_t' [ 0]
'base::internal::SaturateFastOp<int, int, void>' [ 0 6 16]
'cc::SkiaPaintCanvas::concat' [ 0 4 21]
'cc::SkiaPaintCanvas::~SkiaPaintCanvas' [ 0 4 21]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::~__vector_base' [ 0 5 10 143]
'std::__1::remove_reference<SkMatrix>' [ 0 5 10]
'base::trace_event' [ 0 6]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::__push_back_slow_path<const SkPaint &>' [ 0 5 10 58]
'cc::PaintOpBuffer::Iterator::end' [ 0 4 19 29]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> &>::__compressed_pair<nullptr_t, base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10 80]
'std::__1::pair<cc::TransferCacheEntryType, unsigned int>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::max_size' [ 0 5 10 65]
'wchar_t' [ 0]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__annotate_new' [ 0 5 10 78]
'cc::ServiceColorSpaceTransferCacheEntry::CachedSize' [ 0 4 41]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::front' [ 0 5 10 86]
'SkRRect::SkRRect' [ 0 9]
'cc::ServiceImageTransferCacheEntry::ServiceImageTransferCacheEntry' [ 0 4 36]
'base::Optional<gfx::ColorSpace>::operator*' [ 0 6 33]
'SkSafeUnref<SkImageFilter>' [ 0]
'cc::PaintOpBufferSerializer::~PaintOpBufferSerializer' [ 0 4 29]
'base::dynamic_extent' [ 0 6]
'sk_sp<const cc::PaintOpBuffer>::sk_sp' [ 0 32]
'std::__1::__const_void_pointer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<SkPaint> &, 1, false>::__compressed_pair_elem<std::__1::allocator<SkPaint> &, void>' [ 0 5 10 76]
'std::__1::vector<float, base::StackAllocator<float, 3> >::data' [ 0 5 10 58]
'sk_sp<cc::PaintFilter>::sk_sp<cc::LightingSpotPaintFilter, void>' [ 0 24]
'base::Optional<gfx::ColorSpace>::operator=' [ 0 6 33]
'cc::PaintOpWriter::Write::__invoke' [ 0 4 19 26]
'SkMatrix::invert' [ 0 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::data' [ 0 5 10 66]
'std::__1::__unwrap_iter<const unsigned int *>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'std::__1::forward<sk_sp<SkTextBlob> >' [ 0 5 10]
'sk_sp<cc::AlphaThresholdPaintFilter>::sk_sp' [ 0 38]
'std::__1::move<cc::RTree<unsigned long>::Branch<unsigned long> *&>' [ 0 5 10]
'cc::PaintImage::MakeSubset' [ 0 4 16]
'std::__1::swap<cc::FilterOperation *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::allocate' [ 0 5 10 98]
'std::__1::__advance<cc::FilterOperation *>' [ 0 5 10]
'std::__1::__const_void_pointer<unsigned char *, std::__1::allocator<unsigned char>, false>' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp' [ 0 24]
'std::__1::remove_reference<unsigned long &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::data' [ 0 5 10 70]
'cc::DisplayItemList::push<cc::SaveLayerOp, const SkRect *&, const cc::PaintFlags *&>' [ 0 4 21]
'std::__1::iterator_traits<const cc::PaintOp *const *>' [ 0 5 10]
'std::__1::forward<sk_sp<SkData> &>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServiceImageTransferCacheEntry *, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10 120]
'SkIRect::right' [ 0 9]
'Sk32_can_overflow_sub' [ 0]
'std::__1::pointer_traits<std::__1::pair<cc::TransferCacheEntryType, unsigned int> *>' [ 0 5 10]
'std::__1::pair<cc::DrawImage, gfx::Rect>::~pair' [ 0 5 10 42]
'cc::DisplayItemList::IsPainting' [ 0 4 21]
'cc::RecordPaintCanvas::isClipRect' [ 0 4 23]
'cc::MatrixConvolutionPaintFilter::bias' [ 0 4 34]
'logging::MakeCheckOpString<unsigned int, unsigned int>' [ 0 9]
'cc::PaintImageBuilder::WithDefault' [ 0 4 23]
'std::__1::allocator<cc::ImageProvider::ScopedDecodedDrawImage>::allocate' [ 0 5 10 64]
'logging::LogSeverity' [ 0 9]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::operator=' [ 0 5 10 143]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> &>' [ 0 5 10]
'base::span<const unsigned char, 18446744073709551615>::span<unsigned char, 18446744073709551615, void>' [ 0 6 55]
'base::internal::StrictNumeric<unsigned long>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::deallocate' [ 0 5 10 100]
'cc::PaintImage::GetKeyForFrame' [ 0 4 16]
'cc::PaintFlags::setFilterQuality' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::~__split_buffer' [ 0 5 10 152]
'base::Optional<unsigned int>::Optional<const unsigned int &, false>' [ 0 6 30]
'std::__1::__compressed_pair_elem<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &, 1, false>::__get' [ 0 5 10 95]
'base::Optional<SkMatrix>::operator->' [ 0 6 26]
'cc::PaintFilter::GetFilterSize' [ 0 4 17]
'base::Optional<gfx::ColorSpace>::has_value' [ 0 6 33]
'std::__1::__add_lvalue_reference_impl<cc::SkiaPaintImageGenerator, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &, void>' [ 0 5 10 117]
'cc::PaintTypeface::FromFontConfigInterfaceIdAndTtcIndex' [ 0 4 19]
'std::__1::remove_reference<cc::PaintCanvas::SrcRectConstraint &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__swap_out_circular_buffer' [ 0 5 10 133]
'SkBitmap' [ 0]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::destroy<const cc::DrawImage *>' [ 0 5 10 73]
'cc::FilterOperation::CreateHueRotateFilter' [ 0 4 21]
'base::internal::OptionalStorage<cc::PaintFlags, false, false>' [ 0 6 16]
'cc::DecodeStashingImageProvider::GetDecodedDrawImage' [ 0 4 33]
'SkImageInfo::colorSpace' [ 0 13]
'std::__1::__compressed_pair_elem<cc::RTree<unsigned long>::Node<unsigned long> *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<char []>, 1, true>' [ 0 5 10]
'cc::(anonymous namespace)::AreScalarsEqual' [ 0 4 27]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>::__construct_at_end' [ 0 5 10 63]
'cc::MagnifierPaintFilter::MagnifierPaintFilter' [ 0 4 26]
'std::__1::conditional<true, std::__1::pair<unsigned long, unsigned long>, std::__1::__nat>' [ 0 5 10]
'cc::MatrixPaintFilter::matrix' [ 0 4 23]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__push_back_slow_path<const cc::PaintOp *const &>' [ 0 5 10 86]
'std::__1::forward<const cc::PaintOp::SerializeOptions &>' [ 0 5 10]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__vector_base' [ 0 5 10 92]
'sktfitsin::Private' [ 0 11]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::destroy<unsigned char>' [ 0 5 10 65]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::max_size' [ 0 5 10 57]
'cc::PaintImage::FrameKey::ToString' [ 0 4 16 26]
'std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::data' [ 0 5 10 78]
'std::__1::swap<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'base::internal::OptionalBase<cc::RecordPaintCanvas>' [ 0 6 16]
'sk_sp<SkImageFilter>::sk_sp' [ 0 22]
'cc::DrawDRRectOp' [ 0 4]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::flat_tree' [ 0 6 16 183]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::resize' [ 0 5 10 139]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__construct_at_end' [ 0 5 10 139]
'sk_sp<SkTextBlob>::operator bool' [ 0 19]
'gfx::PointF::PointF' [ 0 5 13]
'cc::ClipRectOp::ClipRectOp' [ 0 4 16]
'std::__1::forward<cc::ServiceColorSpaceTransferCacheEntry *&>' [ 0 5 10]
'std::__1::allocator<sk_sp<cc::PaintFilter> >::destroy' [ 0 5 10 46]
'std::__1::make_unique<base::trace_event::TracedValue>' [ 0 5 10]
'std::__1::move<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'base::Optional<cc::PaintFlags>::operator*' [ 0 6 32]
'cc::ConcatOp::IsValid' [ 0 4 14]
'base::internal::OptionalBase<cc::PaintFlags>::OptionalBase' [ 0 6 16 46]
'std::__1::less<void>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::PaintTypeface *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 65]
'base::internal::OptionalBase<cc::PaintOpBuffer::OffsetIterator>::FreeIfNeeded' [ 0 6 16 65]
'SkPathRef::getBounds' [ 0 11]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect>, 1, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<const cc::DrawImage *>, long, true>' [ 0 5 10]
'gfx::Rect::AddWouldOverflow' [ 0 5 11]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawPathOp>' [ 0 4 19]
'trace_event_internal::TraceID::scope' [ 0 22 31]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::data' [ 0 5 10 78]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__annotate_shrink' [ 0 5 10 151]
'base::internal::OptionalBase<cc::ScopedRasterFlags>::OptionalBase' [ 0 6 16 53]
'cc::MatrixConvolutionPaintFilter::kernel_at' [ 0 4 34]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::allocate' [ 0 5 10 98]
'cc::PaintShader::tile' [ 0 4 17]
'uint16_t' [ 0]
'std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>' [ 0 5 10]
'std::__1::__temp_value<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__move_assign_alloc' [ 0 5 10 143]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::~__vector_base' [ 0 5 10 69]
'cc::RotateOp::Raster' [ 0 4 14]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'cc::ScopedRasterFlags::ScopedRasterFlags' [ 0 4 23]
'base::internal::CheckedNumeric<long>::operator+=<base::internal::CheckedNumeric<int> >' [ 0 6 16 38]
'std::__1::operator!=<const gfx::Rect *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::capacity' [ 0 5 10 133]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::__end_cap' [ 0 5 10 95]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::vector' [ 0 5 10 78]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > >' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__recommend' [ 0 5 10 66]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__recommend' [ 0 5 10 139]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__construct<cc::DiscardableImageMap::AnimatedImageMetadata, int, cc::PaintImage::CompletionState, const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &, int, unsigned int>' [ 0 5 10 98]
'cc::PaintFlags::SupportsFoldingAlpha' [ 0 4 16]
'base::internal::OptionalStorage<cc::PaintOpBuffer::OffsetIterator, true, true>' [ 0 6 16]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::~unique_ptr' [ 0 5 10 83]
'base::internal::OptionalStorageBase<cc::PaintFlags, false>' [ 0 6 16]
'sk_sp<const cc::PaintOpBuffer>::operator bool' [ 0 32]
'std::__1::__compressed_pair<cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface> >' [ 0 5 10]
'cc::Rasterizer<cc::DrawColorOp, false>::Raster' [ 0 4 40]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::~__vector_base' [ 0 5 10 142]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>, void, void>' [ 0 5 10 111]
'std::__1::enable_if<true, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >::allocate' [ 0 5 10 69]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 211]
'cc::RestoreOp::AreEqual' [ 0 4 15]
'cc::PaintOpReader::ReadSimple<SkIRect>' [ 0 4 19]
'cc::AlphaThresholdPaintFilter::inner_min' [ 0 4 31]
'gfx::BoxF' [ 0 5]
'sk_sp<cc::LightingSpotPaintFilter>::~sk_sp' [ 0 36]
'cc::TurbulencePaintFilter::turbulence_type' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >' [ 0 5 10]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>::OptionalStorageBase<const gfx::ColorSpace &>' [ 0 6 16 61]
'base::internal::OptionalBase<unsigned int>::OptionalBase' [ 0 6 16 44]
'cc::kInvalidImageTransferCacheEntryId' [ 0 4]
'cc::ServicePathTransferCacheEntry::Deserialize' [ 0 4 35]
'sk_sp<SkTextBlob>' [ 0]
'std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gfx::Rect' [ 0 5]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::vector' [ 0 5 10 89]
'cc::LightingSpotPaintFilter::lighting_type' [ 0 4 29]
'cc::MergePaintFilter::MergePaintFilter' [ 0 4 22]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::const_cast_it' [ 0 6 16 183]
'cc::PaintTextBlobBuilder' [ 0 4]
'std::__1::allocator<const cc::PaintOp *>::construct<const cc::PaintOp *, const cc::PaintOp *const &>' [ 0 5 10 42]
'std::__1::false_type' [ 0 5 10]
'std::__1::move<cc::PaintImageBuilder &>' [ 0 5 10]
'std::__1::__compressed_pair<float *, std::__1::allocator<float> &>' [ 0 5 10]
'unsigned char' [ 0]
'cc::RecordPaintFilter::record' [ 0 4 23]
'cc::DrawRectOp::RasterWithFlags' [ 0 4 16]
'cc::PaintOp::GetBounds' [ 0 4 13]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >' [ 0 5 10]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'cc::PaintOpReader::ExtractReadableMemory' [ 0 4 19]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::deallocate' [ 0 5 10 70]
'std::__1::remove_reference<SkPaint &>' [ 0 5 10]
'SkMin32' [ 0]
'cc::DrawPathOp::Serialize' [ 0 4 16]
'cc::MatrixPaintFilter::operator==' [ 0 4 23]
'cc::DisplayItemList::push<cc::RestoreOp>' [ 0 4 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &, 1, false>::__get' [ 0 5 10 115]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface> &, 1, false>::__get' [ 0 5 10 86]
'SkCanvas::willSave' [ 0 10]
'cc::DecodedDrawImage::DecodedDrawImage' [ 0 4 22]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__push_back_slow_path<const cc::FilterOperation &>' [ 0 5 10 82]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'cc::PaintFont::SetHinting' [ 0 4 15]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::reset' [ 0 5 10 113]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServicePaintTypefaceTransferCacheEntry *, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10 120]
'std::__1::remove_reference<const cc::PaintFlags &>' [ 0 5 10]
'SkNVRefCnt<SkVertices>' [ 0]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::__alloc' [ 0 5 10 61]
'std::__1::__atomic_base<int, true>::fetch_sub' [ 0 5 10 36]
'std::__1::forward<const std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 76]
'base::internal::ReversedAdapter<std::__1::vector<SkPaint, std::__1::allocator<SkPaint> > >::end' [ 0 6 16 92]
'cc::ClientTransferCacheEntryBase<TransferCacheEntryType::kPath>' [ 0 4]
'sk_sp<cc::LightingSpotPaintFilter>' [ 0]
'cc::ServiceShaderTransferCacheEntry' [ 0 4]
'cc::PaintImage::GetSkImageForFrame' [ 0 4 16]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::__end_cap' [ 0 5 10 134]
'std::__1::move<std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, int, cc::PaintImage::DecodingMode>' [ 0 5 10 102]
'base::internal::Unwrap<const base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> &>' [ 0 6 16]
'logging::CheckGTImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::capacity' [ 0 5 10 160]
'cc::PaintOpWithFlags' [ 0 4]
'cc::Rasterizer<cc::DrawOvalOp, true>' [ 0 4]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::unique_ptr<true, void>' [ 0 5 10 69]
'std::__1::__wrap_iter<const cc::FilterOperation *>::operator++' [ 0 5 10 52]
'base::internal::OptionalStorage<cc::PaintOpBuffer::Iterator, true, true>' [ 0 6 16]
'SkNoDrawCanvas::onDrawPath' [ 0 16]
'std::__1::allocator<sk_sp<SkImageFilter> >::construct<sk_sp<SkImageFilter>, const sk_sp<SkImageFilter> &>' [ 0 5 10 44]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >::__vector_base' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface> &, 1, false>::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface> &, void>' [ 0 5 10 86]
'SkPathRef::countPoints' [ 0 11]
'std::__1::move<base::internal::OptionalBase<gfx::ColorSpace> &>' [ 0 5 10]
'cc::Rasterizer<cc::DrawDRRectOp, true>::Raster' [ 0 4 40]
'std::__1::forward<const std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'SkGlyphID' [ 0]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceImageTransferCacheEntry *, void>' [ 0 5 10 77]
'scoped_refptr<cc::PaintTextBlob>::scoped_refptr' [ 0 34]
'std::__1::remove_reference<const float *>' [ 0 5 10]
'cc::PaintOpWriter::TransformShaderIfNecessary' [ 0 4 19]
'cc::PaintShader::MakeTwoPointConicalGradient' [ 0 4 17]
'cc::FilterOperation::set_outer_threshold' [ 0 4 21]
'cc::PaintImage::kNonLazyStableId' [ 0 4 16]
'base::internal::OptionalStorageBase<unsigned long, true>' [ 0 6 16]
'cc::ServiceColorSpaceTransferCacheEntry::ServiceColorSpaceTransferCacheEntry' [ 0 4 41]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::emplace_back<unsigned long, const gfx::Rect &>' [ 0 5 10 139]
'uint_fast8_t' [ 0]
'std::__1::remove_reference<SkBlurImageFilter::TileMode>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::clear' [ 0 5 10 144]
'cc::ClientTransferCacheEntryBase<TransferCacheEntryType::kImage>' [ 0 4]
'SkSafeRef<const cc::PaintFilter>' [ 0]
'SkRect::width' [ 0 8]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::deallocate' [ 0 5 10 65]
'std::__1::forward<SkCanvas *&>' [ 0 5 10]
'base::StackContainer<std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >, 2>' [ 0 6]
'logging::MakeCheckOpValueString<unsigned char>' [ 0 9]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::size' [ 0 5 10 85]
'std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >::deallocate' [ 0 5 10 71]
'SkScalar' [ 0]
'sk_sp<cc::PaintOpBuffer>::sk_sp' [ 0 26]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::begin' [ 0 5 10 66]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::allocate' [ 0 5 10 106]
'std::__1::__size_type<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >, long, true>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::operator->' [ 0 5 10 113]
'base::internal::OptionalBase<cc::ScopedRasterFlags>' [ 0 6 16]
'std::__1::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1> &, 1, false>::__get' [ 0 5 10 82]
'cc::PaintOpWriter::WriteSimple<cc::TurbulencePaintFilter::TurbulenceType>' [ 0 4 19]
'cc::ClientPaintTypefaceTransferCacheEntry::SerializeInternal<cc::(anonymous namespace)::DataWriter>' [ 0 4 43]
'std::__1::__vector_base<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::clear' [ 0 5 10 137]
'cc::SaveLayerOp::Deserialize' [ 0 4 17]
'SkSafeUnref<cc::TurbulencePaintFilter>' [ 0]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'cc::PaintOpBuffer::AllocatePaintOp' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<WireTypeface> >' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare::extract_if_value_type<int>' [ 0 6 16 183 200]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__push_back_slow_path<const unsigned long &>' [ 0 5 10 70]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__destroy<sk_sp<cc::PaintFilter> >' [ 0 5 10 78]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'cc::PaintFlags::getAlpha' [ 0 4 16]
'std::__1::remove_reference<const gfx::Rect &>' [ 0 5 10]
'cc::BlurPaintFilter::~BlurPaintFilter' [ 0 4 21]
'fpos_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::select_on_container_copy_construction' [ 0 5 10 69]
'std::__1::memory_order' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *&>' [ 0 5 10]
'cc::Rasterizer<cc::SaveLayerOp, true>::RasterWithFlags' [ 0 4 39]
'SkNoDrawCanvas::onDrawRRect' [ 0 16]
'cc::DrawImage::operator==' [ 0 4 15]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>, void>' [ 0 5 10 100]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__alloc' [ 0 5 10 77]
'std::__1::__wrap_iter<const cc::FilterOperation *>::operator--' [ 0 5 10 52]
'std::__1::__compressed_pair<gfx::Rect *, base::StackAllocator<gfx::Rect, 1> >' [ 0 5 10]
'cc::ImageProvider::~ImageProvider' [ 0 4 19]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'std::__1::remove_reference<const SkBlurImageFilter::TileMode &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > > >' [ 0 5 10]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::__end_cap' [ 0 5 10 65]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>' [ 0 5 10 153]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::destroy<Frame>' [ 0 5 10 57]
'sk_sp<cc::BlurPaintFilter>::release' [ 0 28]
'cc::ThreadsafePath::~ThreadsafePath' [ 0 4 20]
'sk_sp<cc::MergePaintFilter>' [ 0]
'cc::DrawRectOp::~DrawRectOp' [ 0 4 16]
'sk_sp<SkPathEffect>::operator bool' [ 0 21]
'SkSafeUnref<const SkImage>' [ 0]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServiceShaderTransferCacheEntry *, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10 120]
'std::__1::default_delete<cc::ServiceShaderTransferCacheEntry>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> >, true>' [ 0 5 10 30]
'SkSafeRef<SkImage>' [ 0]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::move<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *&>' [ 0 5 10]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__swap_out_circular_buffer' [ 0 5 10 85]
'cc::MorphologyPaintFilter::operator==' [ 0 4 27]
'std::__1::forward<const SkRect *&>' [ 0 5 10]
'size_type' [ 0]
'cc::DisplayItemList::EmitTraceSnapshot' [ 0 4 21]
'logging::CheckGEImpl' [ 0 9]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::__destruct_at_end' [ 0 5 10 95]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >::__tuple_impl<0, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> , base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10 111]
'cc::SaveLayerAlphaOp::IsValid' [ 0 4 22]
'std::__1::__pointer_type_imp::__pointer_type<float, std::__1::allocator<float>, true>' [ 0 5 10 30]
'cc::PaintFlags::GetSerializedSize' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >' [ 0 5 10]
'cc::SimpleDeserialize<cc::SaveOp>' [ 0 4]
'cc::PaintOp::operator!=' [ 0 4 13]
'sk_sp<SkPathEffect>::operator=' [ 0 21]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__swap_out_circular_buffer' [ 0 5 10 86]
'cc::OffsetPaintFilter::OffsetPaintFilter' [ 0 4 23]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>::__split_buffer' [ 0 5 10 87]
'std::__1::move<sk_sp<cc::PaintFilter> *&>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 70]
'std::__1::__vector_base<float, std::__1::allocator<float> >::capacity' [ 0 5 10 61]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<unsigned long>' [ 0 6 16 85]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >::reverse_iterator' [ 0 5 10 81]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>, 1, true>' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::second' [ 0 5 10 149]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *> > >' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::~__vector_base' [ 0 5 10 77]
'std::__1::pointer_traits<const cc::PaintOp **>' [ 0 5 10]
'logging::CheckOpResult' [ 0 9]
'long double' [ 0]
'base::StackContainer<std::__1::vector<float, base::StackAllocator<float, 3> >, 3>' [ 0 6]
'SkBlendMode' [ 0]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServicePaintTypefaceTransferCacheEntry *, void>' [ 0 5 10 77]
'cc::LightingDistantPaintFilter::direction' [ 0 4 32]
'logging::MakeCheckOpValueString<cc::PaintImage::AnimationType>' [ 0 9]
'std::__1::__wrap_iter<const cc::FrameMetadata *>::operator*' [ 0 5 10 50]
'(anonymous namespace)::affects_alpha' [ 0 23]
'trace_event_internal::ScopedTracer' [ 0 22]
'cc::PaintOpReader::ReadSimple<bool>' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>::__compressed_pair_elem<std::__1::allocator<unsigned long> &, void>' [ 0 5 10 82]
'base::internal::ClampedNumeric<int>' [ 0 6 16]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 71]
'base::StackContainer<std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >, 2>::StackContainer' [ 0 6 117]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawDRRectOp>' [ 0 4 19]
'std::__1::remove_reference<const std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<float> >::allocate' [ 0 5 10 57]
'SkSafeUnref<SkShader>' [ 0]
'cc::MagnifierPaintFilter::inset' [ 0 4 26]
'std::__1::distance<cc::FilterOperation *>' [ 0 5 10]
'SkSafeUnref<SkColorSpace>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<float> >::destroy<float>' [ 0 5 10 57]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__construct_backward<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__destruct_at_end' [ 0 5 10 99]
'std::__1::add_lvalue_reference<base::Value>' [ 0 5 10]
'cc::ImagePaintFilter::filter_quality' [ 0 4 22]
'base::StackContainer<std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >, 3>::StackContainer' [ 0 6 111]
'std::__1::unique_ptr<SkMiniRecorder, std::__1::default_delete<SkMiniRecorder> >' [ 0 5 10]
'cc::PaintTypeface::font_style' [ 0 4 19]
'SkRect::isFinite::operator()' [ 0 8 18]
'cc::RTree<unsigned long>::GetAllBoundsForTracing' [ 0 4 26]
'cc::Rasterizer<cc::AnnotateOp, false>::Raster' [ 0 4 39]
'cc::SkiaPaintCanvas::drawRect' [ 0 4 21]
'std::__1::move_iterator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator++' [ 0 5 10 82]
'cc::PaintFilter::has_discardable_images' [ 0 4 17]
'logging::MakeCheckOpValueString<float>' [ 0 9]
'cc::DiscardableImageMap::GetRectsForImage' [ 0 4 25]
'std::__1::__compressed_pair_elem<gfx::Rect *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 57]
'base::internal::MoveConstructible<false>' [ 0 6 16]
'std::__1::__vector_base<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::clear' [ 0 5 10 73]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::RunImpl<unsigned long (cc::SimpleBufferSerializer::*const &)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), const std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > &, 0>::is_weak_call' [ 0 6 16 299 514]
'std::__1::operator!=<const unsigned int *>' [ 0 5 10]
'base::trace_event::TraceEventHandle' [ 0 6 19]
'cc::PaintOpWriter::WriteFlattenable' [ 0 4 19]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__swap_out_circular_buffer' [ 0 5 10 68]
'cc::FilterOperation::CreateZoomFilter' [ 0 4 21]
'cc::PaintOp::SerializeOptions::SerializeOptions' [ 0 4 13 31]
'std::__1::move<cc::PaintTypeface &>' [ 0 5 10]
'double_t' [ 0]
'base::Optional<cc::PaintOpBuffer::OffsetIterator>::operator*' [ 0 6 51]
'uint8_t' [ 0]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::capacity' [ 0 5 10 67]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::capacity' [ 0 5 10 66]
'std::__1::move_if_noexcept<std::__1::pair<cc::DrawImage, gfx::Rect> >' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::~__vector_base' [ 0 5 10 146]
'cc::Rasterizer<cc::CustomDataOp, false>' [ 0 4]
'cc::PaintCanvas::recordCustomData' [ 0 4 17]
'base::internal::OptionalStorageBase<cc::RecordPaintCanvas, false>::~OptionalStorageBase' [ 0 6 16 67]
'std::__1::allocator<WireTypeface>' [ 0 5 10]
'cc::SetMatrixOp::AreEqual' [ 0 4 17]
'cc::UpdateTypeAndSkip<cc::ClipRRectOp>' [ 0 4]
'cc::LightingSpotPaintFilter::SnapshotWithImagesInternal' [ 0 4 29]
'std::__1::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3> &, 1, false>::__get' [ 0 5 10 92]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::vector' [ 0 5 10 85]
'cc::ClientPathTransferCacheEntry::Id' [ 0 4 34]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::clear' [ 0 5 10 146]
'cc::DrawDRRectOp::AreEqual' [ 0 4 18]
'cc::Rasterizer<cc::CustomDataOp, false>::RasterWithFlags' [ 0 4 41]
'sk_atomic_load<SkPath::Convexity>' [ 0]
'sk_sp<cc::ComposePaintFilter>::release' [ 0 31]
'cc::FilterOperation::set_drop_shadow_color' [ 0 4 21]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::TransferCacheEntryBase' [ 0 4 99]
'std::__1::__wrap_iter<const cc::FilterOperation *>::operator*' [ 0 5 10 52]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::Type' [ 0 4 103]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 109]
'cc::PaintOpWriter::WriteSimple<unsigned char>' [ 0 4 19]
'cc::(anonymous namespace)::GetContrastMatrix' [ 0 4 27]
'cc::PaintFont::SetTextSize' [ 0 4 15]
'std::__1::__pointer_type<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10]
'cc::SkiaPaintCanvas::setMatrix' [ 0 4 21]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::~__tree' [ 0 5 10 232]
'std::__1::__to_raw_pointer<float>' [ 0 5 10]
'base::detail' [ 0 6]
'SkRRect::setOval::operator()' [ 0 9 18]
'SkRect::MakeXYWH' [ 0 8]
'std::__1::__compressed_pair_elem<cc::ServiceRawMemoryTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::default_delete<base::trace_event::TracedValue>::operator()' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<gfx::Rect *, 0, false>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kShader>::Type' [ 0 4 96]
'std::__1::reverse_iterator<std::__1::__wrap_iter<SkPaint *> >' [ 0 5 10]
'cc::PaintFlags::getStyle' [ 0 4 16]
'base::internal::OptionalStorage<SkMatrix, true, true>' [ 0 6 16]
'cc::RecordPaintCanvas::getTotalMatrix' [ 0 4 23]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, true>' [ 0 5 10 30]
'std::__1::allocator<sk_sp<cc::PaintFilter> >' [ 0 5 10]
'cc::ComposePaintFilter' [ 0 4]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::key_comp' [ 0 6 16 191]
'std::__1::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::move_if_noexcept<float>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::__nat>' [ 0 5 10]
'base::internal::OptionalStorageBase<gfx::SizeF, true>' [ 0 6 16]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 75]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::~TransferCacheEntryBase' [ 0 4 99]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__construct<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'SkSize::width' [ 0 8]
'sk_sp<SkImage>::operator bool' [ 0 16]
'cc::ToSkPicture' [ 0 4]
'std::__1::vector<float, std::__1::allocator<float> >::data' [ 0 5 10 54]
'cc::PaintOpReader::ReadDropShadowPaintFilter' [ 0 4 19]
'SkMatrix' [ 0]
'base::internal::CheckedSubFastOp<int, int>' [ 0 6 16]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::unique_ptr<char *, true, void, void>' [ 0 5 10 67]
'operator==' [ 0]
'scoped_refptr<cc::PaintTextBlob>::AddRef' [ 0 34]
'cc::PaintOp::AreSkPoint3sEqual' [ 0 4 13]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__destruct_at_end' [ 0 5 10 92]
'std::__1::move<std::__1::allocator<unsigned char> &>' [ 0 5 10]
'cc::RecordPaintCanvas::~RecordPaintCanvas' [ 0 4 23]
'std::__1::move<unsigned long &>' [ 0 5 10]
'SkRect::isSorted' [ 0 8]
'std::__1::remove_reference<std::__1::allocator<Frame> &>' [ 0 5 10]
'cc::DrawImage::~DrawImage' [ 0 4 15]
'base::internal::OptionalStorage<gfx::SizeF, true, true>' [ 0 6 16]
'InvokeFuncStorage' [ 0]
'cc::SkiaPaintCanvas::FlushAfterDrawIfNeeded::trace_event_unique_atomic388' [ 0 4 21 45]
'base::internal::SaturateFastOp<int, int, void>::Do' [ 0 6 16 48]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<const base::Value *>' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__move_assign' [ 0 5 10 82]
'cc::DrawIRectOp::DrawIRectOp' [ 0 4 17]
'cc::BlurPaintFilter::operator==' [ 0 4 21]
'base::StackContainer<std::__1::vector<float, base::StackAllocator<float, 3> >, 3>::operator->' [ 0 6 83]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__push_back_slow_path<const cc::PaintTypeface &>' [ 0 5 10 78]
'int' [ 0]
'std::__1::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >::unique_ptr<true, void>' [ 0 5 10 119]
'cc::AlphaThresholdPaintFilter::operator==' [ 0 4 31]
'SkISize::Make' [ 0 9]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'SkDeserialProcs::SkDeserialProcs' [ 0 17]
'sk_sp<const cc::PaintOpBuffer>::operator->' [ 0 32]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__recommend' [ 0 5 10 70]
'cc::DrawRecordOp::DrawRecordOp' [ 0 4 18]
'std::__1::__size_type<std::__1::allocator<unsigned char>, long, true>' [ 0 5 10]
'cc::Rasterizer<cc::ConcatOp, false>::RasterWithFlags' [ 0 4 37]
'cc::TurbulencePaintFilter::base_frequency_x' [ 0 4 27]
'cc::RotateOp::AreEqual' [ 0 4 14]
'std::__1::make_unique<cc::ServiceImageTransferCacheEntry>' [ 0 5 10]
'SkNoDrawCanvas::onDrawTextBlob' [ 0 16]
'std::__1::swap<sk_sp<cc::PaintFilter> *>' [ 0 5 10]
'SkSafeUnref<SkPathEffect>' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<base::ListValue, std::__1::default_delete<base::ListValue>, false>' [ 0 5 10 30]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__destruct_at_end' [ 0 5 10 139]
'sk_sp<cc::PaintFilter>::get' [ 0 24]
'std::__1::iterator_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'cc::operator void (*)(const cc::PaintOp *, const cc::PaintFlags *, SkCanvas *, const cc::PlaybackParams &)' [ 0 4]
'cc::Rasterizer<cc::SaveOp, false>::Raster' [ 0 4 35]
'std::__1::__add_lvalue_reference_impl<cc::ServicePaintTypefaceTransferCacheEntry, true>' [ 0 5 10]
'sk_sp<cc::RecordPaintFilter>' [ 0]
'cc::PaintImageBuilder::set_image' [ 0 4 23]
'std::__1::forward<std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::construct<sk_sp<cc::PaintFilter>>' [ 0 5 10 75]
'std::__1::forward<const unsigned long &>' [ 0 5 10]
'cc::operator<<' [ 0 4]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 76]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::~vector' [ 0 5 10 86]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::clear' [ 0 5 10 61]
'std::__1::conditional<false, const gfx::Rect &, gfx::Rect &&>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<cc::DiscardableImageMap::AnimatedImageMetadata *>::__nat, cc::DiscardableImageMap::AnimatedImageMetadata>' [ 0 5 10]
'std::__1::move<sk_sp<SkTextBlob> &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceTransferCacheEntry *, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::__compressed_pair<cc::ServiceColorSpaceTransferCacheEntry *, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >' [ 0 5 10 120]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__annotate_shrink' [ 0 5 10 62]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<unsigned long> &>' [ 0 5 10]
'SkSafeUnref<cc::LightingDistantPaintFilter>' [ 0]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__alloc' [ 0 5 10 142]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__construct<std::__1::pair<cc::DrawImage, gfx::Rect>, const std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10 93]
'cc::PaintFilter::~PaintFilter' [ 0 4 17]
'base::Unretained<cc::SkiaPaintCanvas>' [ 0 6]
'base::StackAllocator<float, 3>::deallocate' [ 0 6 32]
'std::__1::addressof<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::default_delete<base::Value>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::Value>, 1, true>' [ 0 5 10]
'logging::MakeCheckOpValueString<const cc::PaintOpBuffer *>' [ 0 9]
'cc::RestoreOp::Deserialize' [ 0 4 15]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__construct_at_end<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10 66]
'cc::DrawColorOp::AreEqual' [ 0 4 17]
'std::__1::__split_buffer<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> &>' [ 0 5 10]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >::capacity' [ 0 5 10 65]
'cc::SaveLayerOp' [ 0 4]
'base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>' [ 0 6 16]
'cc::ColorFilterPaintFilter::color_filter' [ 0 4 28]
'cc::Rasterizer<cc::ConcatOp, false>' [ 0 4]
'std::__1::get<0, base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'__intmax_t' [ 0]
'std::__1::remove_reference<cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::clear' [ 0 5 10 85]
'std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *>::__wrap_iter' [ 0 5 10 76]
'cc::UpdateTypeAndSkip<cc::DrawOvalOp>' [ 0 4]
'cc::RecordPaintCanvas::drawDRRect' [ 0 4 23]
'std::__1::__distance<std::__1::__wrap_iter<const gfx::Rect *> >' [ 0 5 10]
'SkSize::operator=' [ 0 8]
'cc::DrawRRectOp::RasterWithFlags' [ 0 4 17]
'gfx::Point' [ 0 5]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::size' [ 0 5 10 139]
'SkSize::MakeEmpty' [ 0 8]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__destruct_at_end' [ 0 5 10 82]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__end_cap' [ 0 5 10 152]
'std::__1::__wrap_iter<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::construct<const cc::DrawImage *, const cc::DrawImage *>' [ 0 5 10 73]
'std::__1::__pointer_type<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10]
'sk_sp<SkData>::reset' [ 0 15]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >' [ 0 5 10]
'scoped_refptr<cc::DisplayItemList>' [ 0]
'base::StackVector<sk_sp<cc::PaintFilter>, 2>::StackVector' [ 0 6 46]
'SkTo<int, unsigned long>' [ 0]
'std::__1::forward<cc::SkiaPaintImageGenerator *&>' [ 0 5 10]
'cc::SimpleSerialize<cc::RotateOp>' [ 0 4]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::deallocate' [ 0 5 10 136]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::capacity' [ 0 5 10 82]
'base::internal::OptionalStorageBase<cc::PaintFlags, false>::OptionalStorageBase' [ 0 6 16 60]
'cc::TilePaintFilter::SerializedSize' [ 0 4 21]
'cc::PaintOpReader::ReadSimple<float>' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::allocate' [ 0 5 10 100]
'std::__1::__const_void_pointer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'cc::Rasterizer<cc::DrawColorOp, false>::RasterWithFlags' [ 0 4 40]
'cc::PaintOpBufferSerializer::valid' [ 0 4 29]
'SkPoint::operator-' [ 0 9]
'SkData::isEmpty' [ 0 8]
'gfx::SizeF::SizeF' [ 0 5 12]
'cc::PaintFlags::ToSkPaint' [ 0 4 16]
'std::__1::forward<cc::PaintImage::CompletionState>' [ 0 5 10]
'SkSafeRef<cc::PaintFilter>' [ 0]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::clear' [ 0 5 10 158]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::~vector' [ 0 5 10 62]
'base::internal::OptionalBase<SkImageFilter::CropRect>' [ 0 6 16]
'std::__1::remove_reference<const sk_sp<cc::PaintImageGenerator> &>' [ 0 5 10]
'base::internal::OptionalStorageBase<cc::ScopedRasterFlags, false>::~OptionalStorageBase' [ 0 6 16 67]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >' [ 0 5 10]
'std::__1::__equal_to<gfx::Rect, gfx::Rect>' [ 0 5 10]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::__end_cap' [ 0 5 10 91]
'base::StackContainer<std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >, 1>::container' [ 0 6 91]
'std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>::deallocate' [ 0 5 10 69]
'std::__1::__const_void_pointer<const SkDescriptor **, std::__1::allocator<const SkDescriptor *>, false>' [ 0 5 10]
'std::__1::__to_raw_pointer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >' [ 0 5 10]
'std::__1::forward_iterator_tag' [ 0 5 10]
'std::__1::advance<std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'gFloatBits_exponent_mask' [ 0]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::back' [ 0 5 10 92]
'std::__1::allocator<float>::construct<float, const float &>' [ 0 5 10 28]
'sk_sp<cc::PaintFilter>::sk_sp<cc::ComposePaintFilter, void>' [ 0 24]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__end_cap' [ 0 5 10 77]
'base::internal::OptionalBase<unsigned int>::InitOrAssign<const unsigned int &>' [ 0 6 16 44]
'base::internal::CheckedMulOp<int, long, void>::Do<long>' [ 0 6 16 47]
'SkRegion::isRect' [ 0 10]
'SkSafeUnref<const cc::PaintOpBuffer>' [ 0]
'base::HashInts<unsigned long, unsigned long>' [ 0 6]
'sk_sp<cc::PaintFilter>::operator=<cc::DropShadowPaintFilter, void>' [ 0 24]
'base::StringPiece16' [ 0 6]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'cc::DisplayItemList::EndPaintOfUnpaired' [ 0 4 21]
'std::__1::forward<cc::ServiceShaderTransferCacheEntry *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<int>::is_valid' [ 0 6 16 38 52]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >' [ 0 5 10]
'cc::ServiceRawMemoryTransferCacheEntry::CachedSize' [ 0 4 40]
'SkImageInfo::SkImageInfo' [ 0 13]
'sk_sp<SkData>::sk_sp' [ 0 15]
'sk_make_sp<cc::MatrixConvolutionPaintFilter, const SkISize &, const float *, const float &, const float &, const SkIPoint &, const SkMatrixConvolutionImageFilter::TileMode &, const bool &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__alloc' [ 0 5 10 152]
'sk_sp<cc::PaintFilter>::sk_sp<cc::MorphologyPaintFilter, void>' [ 0 24]
'cc::LightingPointPaintFilter::surface_scale' [ 0 4 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<float> &, 1, false>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Rect, base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'cc::ServicePaintTypefaceTransferCacheEntry::Deserialize' [ 0 4 44]
'std::__1::forward<cc::PaintFlags *>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::__split_buffer' [ 0 5 10 152]
'std::__1::__pointer_type<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<long, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::move<std::__1::unique_ptr<cc::ServiceShaderTransferCacheEntry, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> > &>' [ 0 5 10]
'cc::LightingPointPaintFilter::SerializedSize' [ 0 4 30]
'std::__1::__size_type<base::StackAllocator<gfx::Rect, 1>, long, true>' [ 0 5 10]
'std::__1::move<sk_sp<SkData> &>' [ 0 5 10]
'cc::SimpleSerialize<cc::NoopOp>' [ 0 4]
'cc::ImageProvider::ScopedDecodedDrawImage::decoded_image' [ 0 4 19 43]
'cc::UpdateTypeAndSkip<cc::DrawDRRectOp>' [ 0 4]
'base::in_place' [ 0 6]
'cc::PaintOpWriter::AlignMemory' [ 0 4 19]
'std::__1::remove_reference<const cc::DrawImage **&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__vector_base' [ 0 5 10 142]
'cc::PaintFilter::PaintFilter' [ 0 4 17]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__annotate_shrink' [ 0 5 10 68]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::swap<cc::PaintTextBlob *>' [ 0 5 10]
'SkMatrix::MakeRectToRect' [ 0 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceImageTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >::~unique_ptr' [ 0 5 10 258]
'gfx::Vector2dF::Vector2dF' [ 0 5 16]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__split_buffer' [ 0 5 10 71]
'SkSize::toCeil' [ 0 8]
'SkString' [ 0]
'int_least64_t' [ 0]
'cc::(anonymous namespace)::kMaxFilenameSize' [ 0 4 27]
'std::__1::__compressed_pair_elem<SkCanvas *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::allocate' [ 0 5 10 98]
'gfx::Vector3dF' [ 0 5]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::clear' [ 0 5 10 85]
'cc::SaveLayerOp::SaveLayerOp' [ 0 4 17]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::capacity' [ 0 5 10 95]
'cc::DisplayItemList::push<cc::AnnotateOp, cc::PaintCanvas::AnnotationType &, const SkRect &, sk_sp<SkData> &>' [ 0 4 21]
'scoped_refptr<base::internal::BindStateBase>::operator bool' [ 0 46]
'cc::SkiaPaintCanvas::flush' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<const cc::DrawImage *> >::__construct_backward<const cc::DrawImage *>' [ 0 5 10 73]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__annotate_new' [ 0 5 10 86]
'base::span<const unsigned char, 18446744073709551615>::subspan' [ 0 6 55]
'cc::ServicePathTransferCacheEntry' [ 0 4]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::__end_cap' [ 0 5 10 61]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::resize' [ 0 5 10 139]
'scoped_refptr<cc::PaintTextBlob>::swap' [ 0 34]
'cc::ArithmeticPaintFilter::background' [ 0 4 27]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::allocate' [ 0 6 49]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__annotate_new' [ 0 5 10 82]
'cc::OffsetPaintFilter::dx' [ 0 4 23]
'cc::OffsetPaintFilter::dy' [ 0 4 23]
'sk_sp<cc::LightingPointPaintFilter>::sk_sp' [ 0 37]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>::__compressed_pair<nullptr_t, std::__1::allocator<unsigned long> &>' [ 0 5 10 84]
'base::StackAllocator<const cc::PaintOp *, 3>::StackAllocator' [ 0 6 46]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::capacity' [ 0 5 10 77]
'std::__1::__compressed_pair_elem<std::__1::allocator<sk_sp<SkImageFilter> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<sk_sp<SkImageFilter> > &, void>' [ 0 5 10 90]
'cc::RecordPaintCanvas::concat' [ 0 4 23]
'int8_t' [ 0]
'std::__1::forward<const std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >::deallocate' [ 0 5 10 69]
'cc::DecodeStashingImageProvider::DecodeStashingImageProvider' [ 0 4 33]
'std::__1::conditional<true, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'cc::DrawRecordOp' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'sk_sp<SkPathEffect>::reset' [ 0 21]
'std::__1::remove_reference<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *&>' [ 0 5 10]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>::__alloc' [ 0 5 10 144]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::capacity' [ 0 5 10 86]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::destroy<gfx::Rect>' [ 0 5 10 65]
'cc::ImagePaintFilter::SnapshotWithImagesInternal' [ 0 4 22]
'std::__1::__compressed_pair<cc::FilterOperation *, std::__1::allocator<cc::FilterOperation> >' [ 0 5 10]
'logging::MakeCheckOpValueString<unsigned int>' [ 0 9]
'cc::FilterOperation::drop_shadow_color' [ 0 4 21]
'std::__1::unordered_set<const SkDescriptor *, SkDescriptorMapOperators, SkDescriptorMapOperators, std::__1::allocator<const SkDescriptor *> >' [ 0 5 10]
'trace_event_internal::TraceID::id_flags' [ 0 22 31]
'std::__1::__split_buffer<Frame, std::__1::allocator<Frame> &>::__destruct_at_end' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<cc::ServiceShaderTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<bool &>' [ 0 5 10]
'std::__1::__tuple_types<>' [ 0 5 10]
'operator==<SkImage, SkImage>' [ 0]
'std::__1::pair<int, cc::PaintImage::DecodingMode>' [ 0 5 10]
'base::internal::OptionalStorage<unsigned int, true, true>' [ 0 6 16]
'logging::CheckEQImpl<unsigned int, unsigned int>' [ 0 9]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 75]
'logging::MakeCheckOpValueString<base::TimeDelta>' [ 0 9]
'cc::RestoreOp::RestoreOp' [ 0 4 15]
'cc::PaintOpReader::ReadSimple<int>' [ 0 4 19]
'base::internal::OptionalStorageBase<cc::RecordPaintCanvas, false>' [ 0 6 16]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__annotate_shrink' [ 0 5 10 135]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &, void>' [ 0 5 10 107]
'std::__1::move_if_noexcept<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &, 1, false>::__compressed_pair_elem<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &, void>' [ 0 5 10 114]
'base::internal::OptionalBase<unsigned int>' [ 0 6 16]
'SK_ColorBLACK' [ 0]
'cc::Rasterizer<cc::DrawRRectOp, true>::Raster' [ 0 4 39]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::construct<gfx::Rect, gfx::Rect>' [ 0 5 10 65]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceColorSpaceTransferCacheEntry *, void>' [ 0 5 10 77]
'cc::PaintOpWriter::WriteSimple<SkRRect>' [ 0 4 19]
'base::internal::IsValueInRangeForNumericType<unsigned long, unsigned int>' [ 0 6 16]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<WireTypeface>, long, true>' [ 0 5 10]
'cc::PaintOpReader::ReadData' [ 0 4 19]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawColorOp>' [ 0 4 19]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::max_size' [ 0 5 10 70]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::clear' [ 0 5 10 66]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::vector' [ 0 5 10 130]
'std::__1::__const_pointer<cc::RTree<unsigned long>::Node<unsigned long>, cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >, true>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>' [ 0 4]
'std::__1::__const_void_pointer<Frame *, std::__1::allocator<Frame>, false>' [ 0 5 10]
'cc::PaintRecord' [ 0 4]
'cc::(anonymous namespace)::DataWriter::WriteSimple<unsigned long>' [ 0 4 27 39]
'SkSerialPictureProc' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<int>::value' [ 0 6 16 38 52]
'sk_sp<cc::ArithmeticPaintFilter>::~sk_sp' [ 0 34]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct_backward<unsigned int>' [ 0 5 10 64]
'cc::ClientPathTransferCacheEntry::SerializedSize' [ 0 4 34]
'cc::SkiaPaintCanvas::saveLayerAlpha' [ 0 4 21]
'cc::ComposePaintFilter::SerializedSize' [ 0 4 24]
'SkDeserialImageProc' [ 0]
'cc::FrameMetadata' [ 0 4]
'cc::RecordPaintCanvas::InitializedWithRecordingBounds' [ 0 4 23]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'base::StackVector<float, 3>::operator[]' [ 0 6 29]
'std::__1::remove_reference<gfx::Rect *&>' [ 0 5 10]
'cc::RecordPaintCanvas::getLocalClipBounds' [ 0 4 23]
'std::__1::forward<const SkRRect &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::__destroy<cc::PaintTypeface>' [ 0 5 10 69]
'std::__1::__const_void_pointer<SkPaint *, std::__1::allocator<SkPaint>, false>' [ 0 5 10]
'std::__1::__compressed_pair<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *> &>::__compressed_pair<nullptr_t, std::__1::allocator<const cc::DrawImage *> &>' [ 0 5 10 99]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::remove_reference<cc::PaintOpBuffer::CompositeIterator>' [ 0 5 10]
'base::PickleIterator' [ 0 6]
'std::__1::unique_ptr<cc::ServicePaintTypefaceTransferCacheEntry, std::__1::default_delete<cc::ServicePaintTypefaceTransferCacheEntry> >' [ 0 5 10]
'std::__1::remove_reference<cc::PaintTypeface *&>' [ 0 5 10]
'sk_make_sp<cc::TurbulencePaintFilter, const cc::TurbulencePaintFilter::TurbulenceType &, const float &, const float &, const int &, const float &, const SkISize *, const SkImageFilter::CropRect *>' [ 0]
'std::__1::remove_reference<sk_sp<SkImageFilter> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sk_sp<SkImageFilter> > &, 1, false>::__get' [ 0 5 10 90]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<base::trace_event::TracedValue *, std::__1::default_delete<base::trace_event::TracedValue> >::__compressed_pair<base::trace_event::TracedValue *&, true>' [ 0 5 10 122]
'cc::Rasterizer<cc::DrawRecordOp, false>::RasterWithFlags' [ 0 4 41]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__vector_base' [ 0 5 10 69]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::reserve' [ 0 5 10 135]
'cc::DecodedDrawImage::image' [ 0 4 22]
'sk_sp<cc::MorphologyPaintFilter>::~sk_sp' [ 0 34]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::~TransferCacheEntryBase' [ 0 4 99]
'std::__1::remove_reference<const cc::MorphologyPaintFilter::MorphType &>' [ 0 5 10]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >::__end_cap' [ 0 5 10 65]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>::__compressed_pair<nullptr_t, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > &>' [ 0 5 10 153]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServicePathTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__end_cap' [ 0 5 10 61]
'cc::(anonymous namespace)::GetCanvasClipBounds' [ 0 4 27]
'base::internal::OptionalStorageBase<SkMatrix, true>::OptionalStorageBase' [ 0 6 16 53]
'std::__1::forward<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>' [ 0 5 10]
'std::__1::remove_reference<char *>' [ 0 5 10]
'cc::SimpleDeserialize<cc::ScaleOp>' [ 0 4]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct_range_forward<const unsigned char *, unsigned char *>' [ 0 5 10 65]
'cc::MorphologyPaintFilter::SnapshotWithImagesInternal' [ 0 4 27]
'std::__1::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >::~unique_ptr' [ 0 5 10 107]
'base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >' [ 0 6 16]
'std::__1::__compressed_pair<base::trace_event::TracedValue *, std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10]
'cc::DeserializeFunction' [ 0 4]
'cc::PaintOpBuffer::next_op_offset' [ 0 4 19]
'cc::PaintOpBuffer::OffsetIterator::OffsetIterator' [ 0 4 19 35]
'cc::Rasterizer<cc::DrawRecordOp, false>' [ 0 4]
'cc::RecordPaintCanvas::setMatrix' [ 0 4 23]
'std::__1::remove_reference<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> &>' [ 0 5 10]
'SkTypefaceResolverProc' [ 0]
'sk_sp<cc::LightingSpotPaintFilter>::sk_sp' [ 0 36]
'std::__1::enable_if<true, base::Optional<SkMatrix> &>' [ 0 5 10]
'cc::AlphaThresholdPaintFilter::outer_max' [ 0 4 31]
'__uint16_t' [ 0]
'cc::PaintOpBuffer::push<cc::ConcatOp, const SkMatrix &>' [ 0 4 19]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__swap_out_circular_buffer' [ 0 5 10 135]
'std::__1::__advance<std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'cc::ClipRRectOp::AreEqual' [ 0 4 17]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'cc::FilterOperation::CreateSaturatingBrightnessFilter' [ 0 4 21]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::destroy' [ 0 5 10 77]
'wint_t' [ 0]
'std::__1::allocator<cc::FrameMetadata>::allocate' [ 0 5 10 40]
'SkIVector' [ 0]
'cc::DrawRecordOp::AdditionalOpCount' [ 0 4 18]
'SkAutoCanvasRestore' [ 0]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__destroy<gfx::Rect>' [ 0 5 10 65]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'base::internal::OptionalStorageBase<cc::ScopedRasterFlags, false>' [ 0 6 16]
'std::__1::remove_reference<const base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> &>' [ 0 5 10]
'cc::SkiaPaintCanvas::getLocalClipBounds' [ 0 4 21]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>' [ 0 6 16]
'std::__1::atomic<int>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FrameMetadata>, 1, true>::__compressed_pair_elem<const std::__1::allocator<cc::FrameMetadata> &, void>' [ 0 5 10 83]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface>, 1, true>' [ 0 5 10]
'base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 6 16]
'std::__1::move<cc::PaintTypeface *&>' [ 0 5 10]
'SkSafeRef<SkMaskFilter>' [ 0]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::size' [ 0 5 10 92]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__compressed_pair<nullptr_t, const std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10 138]
'std::__1::__const_pointer<float, float *, base::StackAllocator<float, 3>, true>' [ 0 5 10]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >' [ 0 5 10]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry>, void, void>' [ 0 5 10 111]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::shrink_to_fit' [ 0 5 10 62]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::TranslateOp>' [ 0 4 19]
'std::__1::conditional<false, const float &, float &&>' [ 0 5 10]
'cc::PaintFont' [ 0 4]
'std::__1::pointer_traits<void *>' [ 0 5 10]
'base::internal::OptionalBase<SkMatrix>::InitOrAssign<SkMatrix>' [ 0 6 16 40]
'cc::Rasterizer<cc::ClipPathOp, false>' [ 0 4]
'std::__1::__compressed_pair_elem<base::StackAllocator<float, 3>, 1, false>' [ 0 5 10]
'base::StackAllocator<float, 3>::StackAllocator' [ 0 6 32]
'cc::PaintFont::SetTextSkewX' [ 0 4 15]
'cc::ClipPathOp::Serialize' [ 0 4 16]
'std::__1::lower_bound<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, int, base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare>' [ 0 5 10]
'std::__1::iterator_traits<const cc::FrameMetadata *>' [ 0 5 10]
'cc::RecordPaintCanvas::clipRect' [ 0 4 23]
'cc::(anonymous namespace)::MapRect' [ 0 4 27]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>::operator=' [ 0 6 16 45]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::push_back' [ 0 5 10 58]
'trace_event_internal::TraceID::LocalId::LocalId' [ 0 22 31 40]
'cc::PaintImage::reset_animation_sequence_id' [ 0 4 16]
'base::internal::IsValueInRangeForNumericType<long, int>' [ 0 6 16]
'cc::ImageProvider::ScopedDecodedDrawImage::~ScopedDecodedDrawImage' [ 0 4 19 43]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::__make_iter' [ 0 5 10 151]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::unsafe_emplace<int, cc::PaintImage::DecodingMode>' [ 0 6 16 183]
'base::StackContainer<std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >, 1>::operator->' [ 0 6 155]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::~__split_buffer' [ 0 5 10 95]
'cc::MergePaintFilter::SerializedSize' [ 0 4 22]
'cc::SkiaPaintCanvas::rotate' [ 0 4 21]
'std::__1::pair<cc::DrawImage, gfx::Rect>::pair<cc::DrawImage, const gfx::Rect &, false>' [ 0 5 10 42]
'std::__1::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >::reset' [ 0 5 10 107]
'cc::ServiceImageTransferCacheEntry::Deserialize::operator()' [ 0 4 36 49]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__construct_backward<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10 97]
'base::internal::OptionalBase<cc::PaintFlags>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::construct<cc::DiscardableImageMap::AnimatedImageMetadata, int, cc::PaintImage::CompletionState, const std::__1::vector<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> > &, int, unsigned int>' [ 0 5 10 98]
'std::__1::__compressed_pair<std::__1::pair<cc::DrawImage, gfx::Rect> *, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10 139]
'base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>::operator()' [ 0 6 16 77]
'sk_sp<SkImage>::release' [ 0 16]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<SkCanvas, true>' [ 0 5 10]
'SkRRect::rect' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::deallocate' [ 0 5 10 75]
'cc::RTree<unsigned long>::Node<unsigned long>::Node' [ 0 4 26 47]
'std::__1::forward<const base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> &>' [ 0 5 10]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'cc::LightingDistantPaintFilter' [ 0 4]
'cc::PaintOpReader::ReadSimple<unsigned char>' [ 0 4 19]
'cc::PaintOpBuffer::push<cc::DrawRectOp, const SkRect &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::__compressed_pair<SkPaint *, std::__1::allocator<SkPaint> &>::second' [ 0 5 10 72]
'std::__1::forward<std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<cc::SkiaPaintImageGenerator> >' [ 0 5 10]
'std::__1::add_lvalue_reference<cc::ServiceImageTransferCacheEntry>' [ 0 5 10]
'SkNoDrawCanvas::onDrawRegion' [ 0 16]
'SkPath::getConvexity' [ 0 8]
'base::StackVector<float, 3>' [ 0 6]
'cc::ThreadsafePath::ThreadsafePath' [ 0 4 20]
'std::__1::forward<cc::ServicePathTransferCacheEntry *>' [ 0 5 10]
'base::span<const unsigned char, 18446744073709551615>::begin' [ 0 6 55]
'std::__1::default_delete<cc::ServiceImageTransferCacheEntry>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, 0, false>' [ 0 5 10]
'std::__1::default_delete<cc::SkiaPaintImageGenerator>::operator()' [ 0 5 10 55]
'cc::PaintImage::GetSkImage' [ 0 4 16]
'sk_sp<cc::MatrixConvolutionPaintFilter>::sk_sp' [ 0 41]
'sk_sp<cc::ColorFilterPaintFilter>::~sk_sp' [ 0 35]
'cc::(anonymous namespace)::ExtractScale' [ 0 4 27]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'cc::PaintFlags::getPathEffect' [ 0 4 16]
'cc::ScopedRasterFlags::DecodeImageShader' [ 0 4 23]
'cc::DropShadowPaintFilter::color' [ 0 4 27]
'logging::CheckEQImpl<cc::DisplayItemList::UsageHint, cc::DisplayItemList::UsageHint>' [ 0 9]
'logging::CheckEQImpl<cc::PaintImage::AnimationType, cc::PaintImage::AnimationType>' [ 0 9]
'FILE' [ 0]
'std::__1::pair<unsigned long, unsigned long>' [ 0 5 10]
'sk_sp<cc::MorphologyPaintFilter>::sk_sp' [ 0 34]
'std::__1::__size_type<std::__1::allocator<Frame>, long, true>' [ 0 5 10]
'SkData::data' [ 0 8]
'std::__1::__split_buffer<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>::__end_cap' [ 0 5 10 139]
'SkPixmap::colorSpace' [ 0 10]
'base::internal::OptionalStorageBase<SkImageFilter::CropRect, true>' [ 0 6 16]
'base::AtomicRefCount::Decrement' [ 0 6 22]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int> &, 1, false>::__get' [ 0 5 10 81]
'scoped_refptr<cc::PaintTextBlob>::operator bool' [ 0 34]
'std::__1::__const_pointer<sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter> *, std::__1::allocator<sk_sp<cc::PaintFilter> >, true>' [ 0 5 10]
'std::__1::remove_reference<const SkMatrix &>' [ 0 5 10]
'base::subtle' [ 0 6]
'std::__1::__to_raw_pointer<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry> >' [ 0 5 10]
'cc::RestoreOp::IsValid' [ 0 4 15]
'std::__1::__move<const cc::PaintOp *, const cc::PaintOp *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'cc::RecordPaintCanvas::getDeviceClipBounds' [ 0 4 23]
'base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList>' [ 0 6]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *> > >' [ 0 5 10]
'SkRect::left' [ 0 8]
'std::__1::remove_reference<cc::DecodedDrawImage &>' [ 0 5 10]
'sk_sp<SkPathEffect>::get' [ 0 21]
'base::Optional<SkMatrix>::value' [ 0 6 26]
'cc::Rasterizer<cc::DrawLineOp, true>::RasterWithFlags' [ 0 4 38]
'cc::Rasterizer<cc::ClipRRectOp, false>::RasterWithFlags' [ 0 4 40]
'std::__1::move<cc::DecodedDrawImage &>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::__destruct_at_end' [ 0 5 10 132]
'cc::ClientPaintTypefaceTransferCacheEntry::SerializeInternal<cc::(anonymous namespace)::SizeCounter>' [ 0 4 43]
'std::__1::forward<const SkRect &>' [ 0 5 10]
'SkImageInfo::dimensions' [ 0 13]
'base::internal::OptionalStorageBase<gfx::ColorSpace, false>::OptionalStorageBase' [ 0 6 16 61]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__recommend' [ 0 5 10 86]
'cc::SerializeFunction' [ 0 4]
'trace_event_internal::kNoId' [ 0 22]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::__destroy<float>' [ 0 5 10 61]
'std::__1::iterator_traits<SkPaint *>' [ 0 5 10]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>::allocate' [ 0 6 68]
'cc::(anonymous namespace)::PaintTrackingCanvas' [ 0 4 27]
'SkNoDrawCanvas::onDrawPicture' [ 0 16]
'cc::Rasterizer<cc::DrawOvalOp, true>::Raster' [ 0 4 38]
'std::__1::__wrap_iter<const unsigned int *>::operator++' [ 0 5 10 45]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::FilterOperation> &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<const base::StackAllocator<gfx::Rect, 1> &>' [ 0 5 10]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::~__vector_base' [ 0 5 10 96]
'base::internal::OptionalStorage<cc::PaintOpBuffer::Iterator, true, true>::OptionalStorage' [ 0 6 16 74]
'std::__1::__const_void_pointer<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> >, false>' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>::CopyAssign<unsigned long>' [ 0 6 16 45]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> >' [ 0 5 10]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::__split_buffer' [ 0 5 10 67]
'cc::PaintImage::FrameKey::operator!=' [ 0 4 16 26]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPath>' [ 0 4]
'SkSafeRef<SkDrawLooper>' [ 0]
'SkIRect::height' [ 0 9]
'cc::(anonymous namespace)::PaintTrackingCanvas::ComputePaintBounds' [ 0 4 27 48]
'std::__1::move<std::__1::pair<unsigned long, unsigned long> *&>' [ 0 5 10]
'cc::LightingPointPaintFilter::~LightingPointPaintFilter' [ 0 4 30]
'__int32_t' [ 0]
'cc::PaintTypeface::filename' [ 0 4 19]
'std::__1::pair<int, cc::PaintImage::DecodingMode>::operator=' [ 0 5 10 51]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::data' [ 0 5 10 58]
'std::__1::move<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<cc::FilterOperation *&>' [ 0 5 10]
'cc::DrawTextBlobOp::DrawTextBlobOp' [ 0 4 20]
'std::__1::__compressed_pair_elem<cc::ServicePaintTypefaceTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServicePaintTypefaceTransferCacheEntry *&, void>' [ 0 5 10 90]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::~flat_tree' [ 0 6 16 191]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__construct<cc::DiscardableImageMap::AnimatedImageMetadata, const cc::DiscardableImageMap::AnimatedImageMetadata &>' [ 0 5 10 98]
'std::__1::move<cc::FilterOperation *&>' [ 0 5 10]
'SkWeakRefCnt::weak_unref::operator()' [ 0 14 26]
'std::__1::__compressed_pair_elem<std::__1::allocator<sk_sp<cc::PaintFilter> >, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>' [ 0 5 10]
'sk_make_sp<cc::ArithmeticPaintFilter, const float &, const float &, const float &, const float &, const bool &, sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> >::allocate' [ 0 5 10 64]
'std::__1::move<sk_sp<SkColorSpace> &>' [ 0 5 10]
'std::__1::__vector_base<cc::FrameMetadata, std::__1::allocator<cc::FrameMetadata> >::__destruct_at_end' [ 0 5 10 85]
'SkIRect::MakeWH' [ 0 9]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >::__compressed_pair<char *&, true>' [ 0 5 10 73]
'logging::LogMessageVoidify' [ 0 9]
'cc::SaveLayerOp::AreEqual' [ 0 4 17]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::~vector' [ 0 5 10 135]
'std::__1::reverse_iterator<std::__1::__wrap_iter<const cc::FilterOperation *> >::operator++' [ 0 5 10 81]
'std::__1::__unwrap_iter<const cc::PaintOp **>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> &>' [ 0 5 10]
'std::__1::__const_pointer<cc::PaintTypeface, cc::PaintTypeface *, std::__1::allocator<cc::PaintTypeface>, true>' [ 0 5 10]
'cc::SimpleDeserialize<cc::RotateOp>' [ 0 4]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__alloc' [ 0 5 10 99]
'std::__1::addressof<std::__1::aligned_storage<72, 8>::type>' [ 0 5 10]
'base::Optional<SkImageFilter::CropRect>::emplace<SkRect &, unsigned int &>' [ 0 6 41]
'base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> >::~flat_map' [ 0 6 74]
'cc::PaintOpWithFlags::~PaintOpWithFlags' [ 0 4 22]
'std::__1::swap<cc::ImageProvider::ScopedDecodedDrawImage *>' [ 0 5 10]
'std::__1::allocator<Frame>::deallocate' [ 0 5 10 28]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kImage>::Type' [ 0 4 94]
'SkVector' [ 0]
'std::__1::move<const cc::DrawImage **&>' [ 0 5 10]
'cc::Rasterizer<cc::RotateOp, false>::RasterWithFlags' [ 0 4 37]
'sk_make_sp<cc::MagnifierPaintFilter, SkRect, int, nullptr_t>' [ 0]
'std::__1::__lower_bound<base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::KeyValueCompare &, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, int>' [ 0 5 10]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::empty' [ 0 5 10 82]
'cc::(anonymous namespace)::CreateDrawImage' [ 0 4 27]
'cc::LightingPointPaintFilter::shininess' [ 0 4 30]
'std::__1::__distance<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'cc::DrawRectOp::AreEqual' [ 0 4 16]
'cc::CustomDataOp::Serialize' [ 0 4 18]
'std::__1::__tree_key_value_types<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'SkPixmap::~SkPixmap' [ 0 10]
'cc::ServicePathTransferCacheEntry::~ServicePathTransferCacheEntry' [ 0 4 35]
'cc::(anonymous namespace)::GetGrayscaleMatrix' [ 0 4 27]
'cc::PaintOp::CountSlowPathsFromFlags' [ 0 4 13]
'base::StackAllocator<sk_sp<cc::PaintFilter>, 2>::Source::Source' [ 0 6 49 57]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::~__split_buffer' [ 0 5 10 101]
'std::__1::__size_type<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >, long, true>' [ 0 5 10]
'cc::ClientRawMemoryTransferCacheEntry::ClientRawMemoryTransferCacheEntry' [ 0 4 39]
'std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >::construct<cc::RTree<unsigned long>::Node<unsigned long>, int &>' [ 0 5 10 69]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >' [ 0 5 10]
'cc::PaintTypeface::font_config_interface_id' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<cc::ServiceImageTransferCacheEntry, true>' [ 0 5 10]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::size' [ 0 5 10 232]
'cc::ClipPathOp' [ 0 4]
'std::__1::__size_type<std::__1::allocator<float>, long, true>' [ 0 5 10]
'cc::(anonymous namespace)::CheckIfRRectClipCoversCanvas' [ 0 4 27]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::size' [ 0 5 10 135]
'std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'SkSurfaceProps' [ 0]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, int>' [ 0 6 16]
'cc::DrawOvalOp' [ 0 4]
'cc::SolidColorAnalyzer::DetermineIfSolidColor' [ 0 4 24]
'cc::PaintShader::PaintShader' [ 0 4 17]
'sk_sp<cc::ImagePaintFilter>' [ 0]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__emplace_back_slow_path<unsigned long, const gfx::Rect &>' [ 0 5 10 139]
'cc::AnnotateOp::~AnnotateOp' [ 0 4 16]
'std::__1::__compressed_pair_elem<Frame *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 53]
'cc::DisplayItemList::push<cc::ConcatOp, const SkMatrix &>' [ 0 4 21]
'base::Optional<SkNoDrawCanvas>::operator*' [ 0 6 32]
'cc::ClientRawMemoryTransferCacheEntry' [ 0 4]
'std::__1::accumulate<std::__1::__wrap_iter<const cc::FilterOperation *>, gfx::Rect, (lambda at ../../cc/paint/filter_operations.cc:60:26)>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >::reset' [ 0 5 10 139]
'cc::FilterOperation::outer_threshold' [ 0 4 21]
'base::StackAllocator<const cc::PaintOp *, 3>::allocate' [ 0 6 46]
'SkFontID' [ 0]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::allocate' [ 0 5 10 61]
'cc::Rasterizer<cc::DrawPathOp, true>::Raster' [ 0 4 38]
'SkDescriptorMap<std::unique_ptr<SkGlyphCacheState> >' [ 0]
'std::__1::forward<const SkIPoint &>' [ 0 5 10]
'std::__1::forward<const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10]
'SkAutoTArray<SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot>' [ 0]
'base::internal::strict_cast<unsigned long, unsigned long>' [ 0 6 16]
'cc::PaintOpWriter::Write::operator()' [ 0 4 19 26]
'sk_make_sp<cc::AlphaThresholdPaintFilter, SkRegion &, float, float, nullptr_t>' [ 0]
'cc::UpdateTypeAndSkip<cc::DrawIRectOp>' [ 0 4]
'std::__1::__vector_base<float, base::StackAllocator<float, 3> >' [ 0 5 10]
'cc::Rasterizer<cc::DrawImageOp, true>' [ 0 4]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::capacity' [ 0 5 10 71]
'cc::Rasterizer<cc::ScaleOp, false>::Raster' [ 0 4 36]
'cc::PaintOpBuffer::PlaybackFoldingIterator::operator bool' [ 0 4 19 44]
'cc::PaintOpBufferSerializer::ClearForOpaqueRaster' [ 0 4 29]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *>, 0, false>' [ 0 5 10]
'std::__1::move<cc::DiscardableImageMap::AnimatedImageMetadata *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'base::AtomicRefCount::AtomicRefCount' [ 0 6 22]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::max_size' [ 0 5 10 136]
'cc::DrawOvalOp::DrawOvalOp' [ 0 4 16]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<const SkDescriptor *>, long, true>' [ 0 5 10]
'cc::ServiceRawMemoryTransferCacheEntry::Deserialize' [ 0 4 40]
'std::__1::__allocator_traits_rebind<std::__1::allocator<const SkDescriptor *>, std::__1::__hash_node<const SkDescriptor *, void *>, true>' [ 0 5 10]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::capacity' [ 0 5 10 58]
'cc::RTree<unsigned long>' [ 0 4]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'base::internal::PassingTraitsType<unsigned int>' [ 0 6 16]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::clear' [ 0 5 10 99]
'cc::ImageProvider::ScopedDecodedDrawImage::operator=' [ 0 4 19 43]
'SkTSwap<float>' [ 0]
'std::__1::allocator_traits<base::StackAllocator<const cc::PaintOp *, 3> >::__construct<const cc::PaintOp *, const cc::PaintOp *>' [ 0 5 10 75]
'std::__1::__split_buffer<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>::emplace_back<int, cc::PaintImage::DecodingMode>' [ 0 5 10 152]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator++' [ 0 5 10 86]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >::~vector' [ 0 5 10 89]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::clear' [ 0 5 10 142]
'cc::MatrixPaintFilter::SnapshotWithImagesInternal' [ 0 4 23]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::__compressed_pair<nullptr_t, const base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10 105]
'std::__1::vector<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator+=' [ 0 5 10 86]
'cc::PaintOpReader::ReadImagePaintFilter' [ 0 4 19]
'std::__1::__const_void_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, false>' [ 0 5 10]
'std::__1::addressof<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10]
'cc::PaintImageGenerator::GetSkImageInfo' [ 0 4 25]
'std::__1::__compressed_pair<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'std::__1::remove_reference<cc::PaintImage &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::ServiceImageTransferCacheEntry *, std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >::__compressed_pair<cc::ServiceImageTransferCacheEntry *&, true>' [ 0 5 10 130]
'base::RepeatingCallback<void (SkCanvas *, unsigned int)>' [ 0 6]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::__split_buffer' [ 0 5 10 91]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int>, 1, true>' [ 0 5 10]
'cc::DecodeStashingImageProvider::~DecodeStashingImageProvider' [ 0 4 33]
'base::internal::OptionalStorageBase<unsigned long, true>::OptionalStorageBase' [ 0 6 16 58]
'std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> >::construct<cc::RTree<unsigned long>::Branch<unsigned long>>' [ 0 5 10 71]
'std::__1::vector<Frame, std::__1::allocator<Frame> >::back' [ 0 5 10 54]
'std::__1::__wrap_iter<const float *>::operator++' [ 0 5 10 38]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__annotate_new' [ 0 5 10 86]
'std::__1::__const_void_pointer<cc::DiscardableImageMap::AnimatedImageMetadata *, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata>, false>' [ 0 5 10]
'cc::FilterOperations::size' [ 0 4 22]
'SkImageInfo::makeColorType' [ 0 13]
'std::__1::allocator<const cc::PaintOp *>::construct<const cc::PaintOp *, const cc::PaintOp *>' [ 0 5 10 42]
'sk_sp<SkFontMgr>::~sk_sp' [ 0 18]
'base::internal::ClampedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'cc::PaintOp::operator==' [ 0 4 13]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 70]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__split_buffer' [ 0 5 10 142]
'std::__1::remove_reference<sk_sp<SkImageFilter> *&>' [ 0 5 10]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>, false>::__tuple_leaf<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer>, void>' [ 0 5 10 97]
'std::__1::__compressed_pair_elem<std::__1::allocator<const cc::DrawImage *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<const cc::DrawImage *> &, void>' [ 0 5 10 90]
'cc::PaintFlags::operator=' [ 0 4 16]
'base::internal::IsValueInRangeForNumericType<int, long>' [ 0 6 16]
'std::__1::lower_bound<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, int, base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::KeyValueCompare>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<cc::ServiceImageTransferCacheEntry> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'SkPaint::getMaskFilter' [ 0 9]
'sk_sp<SkPicture>::operator->' [ 0 18]
'cc::(anonymous namespace)::CheckIfSolidColor' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::construct<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10 106]
'cc::RecordPaintCanvas::rotate' [ 0 4 23]
'sk_sp<cc::DropShadowPaintFilter>::sk_sp' [ 0 34]
'base::internal::OptionalStorageBase<cc::ScopedRasterFlags, false>::OptionalStorageBase' [ 0 6 16 67]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__annotate_delete' [ 0 5 10 135]
'std::__1::move<Frame *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<char, base::AlignedFreeDeleter> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__max_size' [ 0 5 10 98]
'cc::XfermodePaintFilter::blend_mode' [ 0 4 25]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__annotate_new' [ 0 5 10 139]
'std::__1::__vector_base<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> >::__alloc' [ 0 5 10 85]
'cc::DisplayItemList::Reset' [ 0 4 21]
'cc::RecordPaintCanvas::drawBitmap' [ 0 4 23]
'cc::PaintCanvas::PaintCanvas' [ 0 4 17]
'SkRefCnt' [ 0]
'std::__1::__equal_to<unsigned int, unsigned int>' [ 0 5 10]
'SkSafeUnref<cc::PaintFilter>' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::operator->' [ 0 5 10 86]
'std::__1::remove_reference<cc::ServiceTransferCacheEntry *>' [ 0 5 10]
'std::__1::__const_pointer<cc::FilterOperation, cc::FilterOperation *, std::__1::allocator<cc::FilterOperation>, true>' [ 0 5 10]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::__vector_base' [ 0 5 10 89]
'cc::AlphaThresholdPaintFilter::region' [ 0 4 31]
'cc::LightingSpotPaintFilter::specular_exponent' [ 0 4 29]
'cc::ServiceTransferCacheEntry::Create' [ 0 4 31]
'cc::RecordPaintCanvas::drawOval' [ 0 4 23]
'sk_sp<cc::PaintOpBuffer>::reset' [ 0 26]
'base::internal::OptionalBase<cc::RecordPaintCanvas>::~OptionalBase' [ 0 6 16 53]
'std::__1::remove_reference<const SkRect &>' [ 0 5 10]
'cc::TurbulencePaintFilter' [ 0 4]
'cc::(anonymous namespace)::GetBrightnessMatrix' [ 0 4 27]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__annotate_shrink' [ 0 5 10 139]
'cc::SkiaPaintImageGenerator::~SkiaPaintImageGenerator' [ 0 4 29]
'std::__1::allocator<cc::PaintTypeface>::deallocate' [ 0 5 10 40]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__construct_at_end<const unsigned int *>' [ 0 5 10 68]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::__vector_base<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::~__vector_base' [ 0 5 10 93]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kRawMemory>::TransferCacheEntryBase' [ 0 4 98]
'sk_sp<SkBBoxHierarchy>' [ 0]
'std::__1::operator-<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *, const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>' [ 0 5 10]
'std::__1::move<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'cc::SaveLayerAlphaOp::Serialize' [ 0 4 22]
'sk_sp<SkImage>' [ 0]
'SkTFitsIn<int, unsigned long>' [ 0]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::__end_cap' [ 0 5 10 71]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::max_size' [ 0 5 10 143]
'std::__1::forward<const gfx::Rect &>' [ 0 5 10]
'cc::NoopOp::IsValid' [ 0 4 12]
'std::__1::forward<float>' [ 0 5 10]
'std::__1::move_backward<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'base::internal::CheckedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::Type' [ 0 4 99]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'SkRegion' [ 0]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >::pair<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> &, std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>, false>' [ 0 5 10 189]
'std::__1::remove_reference<cc::ServicePaintTypefaceTransferCacheEntry *>' [ 0 5 10]
'base::internal::MoveAssignable<false>' [ 0 6 16]
'base::internal::ClampedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'base::internal::checked_cast<unsigned long, base::internal::CheckOnFailure, unsigned int>' [ 0 6 16]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__end_node' [ 0 5 10 232]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::~__split_buffer' [ 0 5 10 77]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::clear' [ 0 5 10 142]
'sk_make_sp<cc::DropShadowPaintFilter, const float &, const float &, const float &, const float &, const unsigned int &, const SkDropShadowImageFilter::ShadowMode &, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::remove_reference<sk_sp<cc::PaintFilter> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *>, 1, true>' [ 0 5 10]
'sk_sp<SkPicture>::sk_sp' [ 0 18]
'std::__1::__wrap_iter<const cc::FilterOperation *>' [ 0 5 10]
'cc::RecordPaintCanvas::Annotate' [ 0 4 23]
'std::__1::__compressed_pair<Frame *, std::__1::allocator<Frame> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 67]
'base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>::Source::Source' [ 0 6 68 76]
'std::__1::remove_reference<const cc::PaintOpBuffer *&>' [ 0 5 10]
'log<unsigned long>' [ 0]
'cc::PaintFlags::operator!=' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<gfx::Rect, std::__1::allocator<gfx::Rect>, true>' [ 0 5 10 30]
'std::__1::remove_reference<std::__1::allocator<sk_sp<SkImageFilter> > &>' [ 0 5 10]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::operator->' [ 0 5 10 69]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::__annotate_new' [ 0 5 10 85]
'sk_sp<SkData>::operator bool' [ 0 15]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> >::deallocate' [ 0 5 10 69]
'sk_sp<SkImage>::reset' [ 0 16]
'cc::XfermodePaintFilter::background' [ 0 4 25]
'sk_sp<SkDrawLooper>::reset' [ 0 21]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::Rect>, 1, true>::__compressed_pair_elem<const std::__1::allocator<gfx::Rect> &, void>' [ 0 5 10 75]
'SkRRect::isRect' [ 0 9]
'cc::ConcatOp::AreEqual' [ 0 4 14]
'std::__1::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1> &, 1, false>::__compressed_pair_elem<base::StackAllocator<gfx::Rect, 1> &, void>' [ 0 5 10 82]
'SkPath' [ 0]
'base::internal::OptionalStorageBase<SkImageFilter::CropRect, true>::OptionalStorageBase' [ 0 6 16 68]
'cc::DisplayItemList::GrowCurrentBeginItemVisualRect' [ 0 4 21]
'std::__1::vector<float, std::__1::allocator<float> >::allocate' [ 0 5 10 54]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::remove_reference<base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'cc::ClipRectOp::AreEqual' [ 0 4 16]
'base::internal::InvokeHelper<false, unsigned long>' [ 0 6 16]
'sk_sp<cc::PaintShader>::get' [ 0 24]
'sk_sp<cc::PaintShader>::reset' [ 0 24]
'sk_sp<SkTextBlob>::sk_sp' [ 0 19]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kImage>::~TransferCacheEntryBase' [ 0 4 94]
'std::__1::forward<cc::PaintOpBuffer>' [ 0 5 10]
'std::__1::__split_buffer<SkPaint, std::__1::allocator<SkPaint> &>::~__split_buffer' [ 0 5 10 67]
'cc::DisplayItemList::push<cc::DrawOvalOp, const SkRect &, const cc::PaintFlags &>' [ 0 4 21]
'sk_sp<SkVertices>' [ 0]
'base::Optional<gfx::ColorSpace>' [ 0 6]
'std::__1::enable_if<true, base::Optional<gfx::Rect> &>' [ 0 5 10]
'sk_sp<cc::PaintFilter>::operator->' [ 0 24]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::max_size' [ 0 5 10 68]
'ldiv_t' [ 0]
'sk_sp<cc::PaintFilter>::sk_sp<cc::MagnifierPaintFilter, void>' [ 0 24]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >' [ 0 5 10]
'cc::DisplacementMapEffectPaintFilter::SnapshotWithImagesInternal' [ 0 4 38]
'std::__1::forward<SkBlendMode>' [ 0 5 10]
'cc::PlaybackParams::PlaybackParams' [ 0 4 20]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::size' [ 0 5 10 130]
'cc::PaintFont::ToSkPaint' [ 0 4 15]
'cc::PaintTypeface::TestTypeface' [ 0 4 19]
'cc::PaintFlags::getColorFilter' [ 0 4 16]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::vector' [ 0 5 10 68]
'base::Optional<cc::ScopedRasterFlags>::Optional' [ 0 6 39]
'std::__1::move<float &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, long, true>' [ 0 5 10]
'std::__1::advance<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<gfx::Rect> &>' [ 0 5 10]
'SkMatrix::get::operator()' [ 0 10 15]
'cc::TurbulencePaintFilter::~TurbulencePaintFilter' [ 0 4 27]
'sk_sp<cc::MergePaintFilter>::release' [ 0 29]
'sk_make_sp<cc::XfermodePaintFilter, const SkBlendMode &, sk_sp<cc::PaintFilter>, sk_sp<cc::PaintFilter>, const SkImageFilter::CropRect *>' [ 0]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>>' [ 0 5 10 100]
'std::__1::vector<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::vector' [ 0 5 10 125]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>' [ 0 4]
'std::__1::__wrap_iter<const unsigned int *>::__wrap_iter' [ 0 5 10 45]
'std::__1::add_lvalue_reference<char>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'sk_sp<SkShader>::operator=' [ 0 17]
'base::internal::OptionalStorage<SkImageFilter::CropRect, true, true>' [ 0 6 16]
'base::internal::Invoker<base::internal::BindState<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >, void ()>::Run' [ 0 6 16 151]
'cc::PaintOp::AreSkRectsEqual' [ 0 4 13]
'cc::PaintImage::unique_id' [ 0 4 16]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::clear' [ 0 5 10 62]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>::__alloc' [ 0 5 10 77]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::data' [ 0 5 10 136]
'cc::PaintOpBufferSerializer::Serialize::kInitialSaveCount' [ 0 4 29 40]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__annotate_shrink' [ 0 5 10 70]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::forward<const SkBlurImageFilter::TileMode &>' [ 0 5 10]
'cc::PaintOp::Serialize' [ 0 4 13]
'std::__1::move<std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > > &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 156]
'cc::PaintShader::SetMatrixAndTiling' [ 0 4 17]
'std::__1::remove_reference<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > &>' [ 0 5 10]
'std::__1::__split_buffer<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char, const unsigned char &>' [ 0 5 10 65]
'std::__1::__vector_base<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::capacity' [ 0 5 10 89]
'base::internal::CheckedNumeric<long>' [ 0 6 16]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::push_back' [ 0 5 10 70]
'std::__1::__hash_key_value_types<const SkDescriptor *>' [ 0 5 10]
'std::__1::__const_void_pointer<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2>, false>' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::LightingDistantPaintFilter, void>' [ 0 24]
'sk_atomic_load<SkPath::Convexity>::operator()' [ 0 35]
'cc::DrawTextBlobOp' [ 0 4]
'gfx::Size' [ 0 5]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__move_assign' [ 0 5 10 86]
'std::__1::allocator<sk_sp<SkImageFilter> >::destroy' [ 0 5 10 44]
'SkNoDrawCanvas::onDrawPosText' [ 0 16]
'cc::FilterOperations::AsValueInto' [ 0 4 22]
'base::internal::OptionalStorage<cc::ScopedRasterFlags, false, false>::OptionalStorage' [ 0 6 16 70]
'std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>>' [ 0 5 10 71]
'std::__1::conditional<false, std::__1::pointer_traits<SkPaint *>::__nat, SkPaint>' [ 0 5 10]
'cc::CustomDataOp::Deserialize' [ 0 4 18]
'cc::PaintOpWriter::Write::operator sk_sp<SkData> (*)(SkTypeface *, void *)' [ 0 4 19 26]
'uint_fast32_t' [ 0]
'SkPaint::computeFastBounds::operator()' [ 0 9 28]
'std::__1::pointer_traits<unsigned char *>' [ 0 5 10]
'base::StackAllocator<float, 3>::Source::stack_buffer' [ 0 6 32 40]
'base::internal::OptionalStorageBase<cc::PaintFlags, false>::~OptionalStorageBase' [ 0 6 16 60]
'std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceTransferCacheEntry>, 1, true>::__compressed_pair_elem<std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>, void>' [ 0 5 10 100]
'cc::(anonymous namespace)::DiscardableImageGenerator::TakeImages' [ 0 4 27 54]
'base::internal::CheckedNumeric<unsigned long>' [ 0 6 16]
'mbstate_t' [ 0]
'std::__1::allocator<SkPaint>::destroy' [ 0 5 10 30]
'cc::RecordPaintFilter::~RecordPaintFilter' [ 0 4 23]
'std::__1::__compressed_pair_elem<const cc::DrawImage **, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__destroy<cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 97]
'base::flat_map<int, base::StackVector<gfx::Rect, 1>, std::__1::less<void> >::~flat_map' [ 0 6 77]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__end_cap' [ 0 5 10 142]
'sk_sp<cc::DropShadowPaintFilter>' [ 0]
'SkSafeUnref<cc::PaintImageGenerator>' [ 0]
'SkPoint::y' [ 0 9]
'cc::(anonymous namespace)::MakeCanvasSettings' [ 0 4 27]
'unsigned int' [ 0]
'base::Optional<cc::PaintOpBuffer::Iterator>::operator*' [ 0 6 45]
'cc::PaintFont::SetAntiAlias' [ 0 4 15]
'std::__1::conditional<false, std::__1::pointer_traits<Frame *>::__nat, Frame>' [ 0 5 10]
'base::StackVector<cc::ImageProvider::ScopedDecodedDrawImage, 1>' [ 0 6]
'sk_ref_sp<cc::PaintFilter>' [ 0]
'SkSafeUnref<cc::AlphaThresholdPaintFilter>' [ 0]
'cc::PaintOp::IsValidDrawColorSkBlendMode' [ 0 4 13]
'cc::PaintOpBufferSerializer::SerializeBuffer' [ 0 4 29]
'SkSafeRef<SkColorSpace>' [ 0]
'SkMatrix::isIdentity' [ 0 10]
'base::internal::CheckedNumeric<int>::CheckedNumeric<long>' [ 0 6 16 37]
'std::__1::__compressed_pair<cc::ServiceShaderTransferCacheEntry *, std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<cc::DrawImage, gfx::Rect>, std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>::clear' [ 0 5 10 134]
'cc::RecordPaintFilter::SnapshotWithImagesInternal' [ 0 4 23]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true> >' [ 0 5 10]
'std::__1::__split_buffer<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> &>::__destruct_at_end' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'sk_sp<SkTypeface>::release' [ 0 19]
'cc::RTree<unsigned long>::~RTree' [ 0 4 26]
'sk_sp<SkColorSpace>::~sk_sp' [ 0 21]
'std::__1::__rebind_pointer<void *, const std::__1::pair<cc::TransferCacheEntryType, unsigned int> >' [ 0 5 10]
'cc::DrawColorOp::Raster' [ 0 4 17]
'std::__1::__compressed_pair<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::__compressed_pair<nullptr_t, const base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> &>' [ 0 5 10 143]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>' [ 0 5 10]
'cc::MergePaintFilter' [ 0 4]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::__construct<unsigned int>' [ 0 5 10 64]
'std::__1::swap<gfx::Rect *>' [ 0 5 10]
'cc::PaintOpBuffer::push<cc::DrawTextBlobOp, scoped_refptr<cc::PaintTextBlob>, float &, float &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::equal<std::__1::__wrap_iter<const gfx::Rect *>, std::__1::__wrap_iter<const gfx::Rect *>, std::__1::__equal_to<gfx::Rect, gfx::Rect> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3> &, 1, false>::__compressed_pair_elem<base::StackAllocator<const cc::PaintOp *, 3> &, void>' [ 0 5 10 92]
'std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>' [ 0 5 10]
'SkSerialImageProc' [ 0]
'base::BindRepeating<void (cc::SkiaPaintCanvas::*)(), base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 6]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'cc::PaintOp::IsUnsetRect' [ 0 4 13]
'cc::FilterOperations::MapRectReverse' [ 0 4 22]
'SkTFitsIn<unsigned char, int>' [ 0]
'std::__1::make_unique<cc::ServiceColorSpaceTransferCacheEntry>' [ 0 5 10]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::lower_bound<int>' [ 0 6 16 183]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'base::internal::OptionalStorageBase<gfx::SizeF, true>::OptionalStorageBase' [ 0 6 16 55]
'std::__1::vector<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::capacity' [ 0 5 10 85]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > >::construct<std::__1::pair<cc::DrawImage, gfx::Rect>, const std::__1::pair<cc::DrawImage, gfx::Rect> &>' [ 0 5 10 93]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'base::internal::OptionalBase<gfx::SizeF>::OptionalBase' [ 0 6 16 42]
'std::__1::forward<base::trace_event::TracedValue *>' [ 0 5 10]
'cc::RenderSurfaceFilters' [ 0 4]
'SkIRect::contains' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface>, 1, true>::__compressed_pair_elem<const std::__1::allocator<cc::PaintTypeface> &, void>' [ 0 5 10 83]
'cc::(anonymous namespace)::TypefaceCtx' [ 0 4 27]
'cc::ServiceShaderTransferCacheEntry::ServiceShaderTransferCacheEntry' [ 0 4 37]
'std::__1::__compressed_pair_elem<SkPaint *, 0, false>' [ 0 5 10]
'cc::LightingDistantPaintFilter::shininess' [ 0 4 32]
'std::__1::remove_reference<const SkDisplacementMapEffect::ChannelSelectorType &>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::vector' [ 0 5 10 62]
'std::__1::remove_reference<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > &>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned int, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 232]
'cc::MatrixPaintFilter::MatrixPaintFilter' [ 0 4 23]
'std::__1::__split_buffer<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>::clear' [ 0 5 10 145]
'std::__1::vector<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawLineOp>' [ 0 4 19]
'cc::DecodedDrawImage::transfer_cache_entry_id' [ 0 4 22]
'SkRefCnt::SkRefCnt' [ 0 10]
'std::__1::pointer_traits<gfx::Rect *>' [ 0 5 10]
'cc::PaintRecorder::finishRecordingAsPicture' [ 0 4 19]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>' [ 0 5 10]
'std::__1::remove_reference<cc::TransferCacheEntryType>' [ 0 5 10]
'std::__1::remove_reference<cc::ServiceRawMemoryTransferCacheEntry *>' [ 0 5 10]
'std::__1::__vector_base<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__end_cap' [ 0 5 10 143]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::vector<float, std::__1::allocator<float> >::deallocate' [ 0 5 10 54]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::__construct_at_end<gfx::Rect *>' [ 0 5 10 62]
'cc::DrawImageOp::HasDiscardableImages' [ 0 4 17]
'base::Optional<gfx::ColorSpace>::Optional' [ 0 6 33]
'std::__1::__pointer_type<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >' [ 0 5 10]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>' [ 0 5 10]
'SkSerialTypefaceProc' [ 0]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::allocate' [ 0 5 10 68]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::operator=' [ 0 5 10 151]
'std::__1::forward<const SkRegion &>' [ 0 5 10]
'base::internal::CheckedNumeric<long>::MathOp<CheckedDivOp, base::internal::CheckedNumeric<long>, base::internal::CheckedNumeric<long> >' [ 0 6 16 38]
'cc::PaintFlags::setImageFilter' [ 0 4 16]
'base::Optional<cc::PaintOpBuffer::Iterator>::Optional' [ 0 6 45]
'sk_sp<const SkImage>::reset' [ 0 22]
'sk_sp<cc::RecordPaintFilter>::~sk_sp' [ 0 30]
'std::__1::vector<float, std::__1::allocator<float> >::clear' [ 0 5 10 54]
'std::__1::__vector_base<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >' [ 0 5 10]
'cc::DrawImageOp::DrawImageOp' [ 0 4 17]
'std::__1::forward<const sk_sp<SkColorFilter> &>' [ 0 5 10]
'std::__1::__vector_base<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::__destruct_at_end' [ 0 5 10 93]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>::Run' [ 0 6 16 299]
'cc::ImageAnalysisState' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::PaintTypeface> &, 1, false>' [ 0 5 10]
'std::__1::vector<gfx::Rect, std::__1::allocator<gfx::Rect> >::push_back' [ 0 5 10 62]
'cc::PaintOpReader::AlignMemory' [ 0 4 19]
'cc::ServicePaintTypefaceTransferCacheEntry::~ServicePaintTypefaceTransferCacheEntry' [ 0 4 44]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__recommend' [ 0 5 10 139]
'cc::DrawPathOp::RasterWithFlags' [ 0 4 16]
'std::__1::forward<const std::__1::allocator<cc::FilterOperation> &>' [ 0 5 10]
'cc::RecordPaintFilter::operator==' [ 0 4 23]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 85]
'std::__1::__compressed_pair_elem<std::__1::pair<unsigned long, unsigned long> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 92]
'std::__1::forward<const std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > &>' [ 0 5 10]
'cc::PaintOpReader::ReadAlphaThresholdPaintFilter' [ 0 4 19]
'sk_sp<cc::DisplacementMapEffectPaintFilter>::release' [ 0 45]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::~TransferCacheEntryBase' [ 0 4 103]
'std::__1::float_denorm_style' [ 0 5 10]
'cc::ServiceTransferCacheEntry::ServiceTransferCacheEntry' [ 0 4 31]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::allocate' [ 0 5 10 66]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::__annotate_new' [ 0 5 10 136]
'std::__1::__wrap_iter<sk_sp<cc::PaintFilter> *>::operator++' [ 0 5 10 49]
'std::__1::atomic<int>::atomic' [ 0 5 10 23]
'std::__1::streampos' [ 0 5 10]
'pow<unsigned long, double>' [ 0]
'std::__1::remove_reference<const cc::PaintFilter::LightingType &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *&>' [ 0 5 10]
'std::__1::__const_pointer<unsigned int, unsigned int *, std::__1::allocator<unsigned int>, true>' [ 0 5 10]
'SkPoint3::Make' [ 0 10]
'std::__1::operator-<const cc::PaintOp *const *, const cc::PaintOp *const *>' [ 0 5 10]
'logging::CheckLEImpl<unsigned long, unsigned long>' [ 0 9]
'base::internal::flat_tree<int, std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, base::internal::GetKeyFromValuePairFirst<int, base::StackVector<gfx::Rect, 1> >, std::__1::less<void> >::begin' [ 0 6 16 191]
'std::__1::forward<cc::DrawImage>' [ 0 5 10]
'cc::PaintOpBufferSerializer::SerializePreamble' [ 0 4 29]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> >, true>' [ 0 5 10 30]
'sk_sp<cc::MagnifierPaintFilter>::release' [ 0 33]
'base::internal::CallbackBase::is_null' [ 0 6 16 30]
'cc::MatrixPaintFilter::~MatrixPaintFilter' [ 0 4 23]
'std::__1::forward<cc::FilterOperation &>' [ 0 5 10]
'cc::DrawImage::operator=' [ 0 4 15]
'gfx::Rect::size' [ 0 5 11]
'cc::PaintOp::AreSkRRectsEqual' [ 0 4 13]
'std::__1::__vector_base<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::capacity' [ 0 5 10 158]
'cc::ClipRRectOp' [ 0 4]
'std::__1::__compressed_pair_elem<cc::DiscardableImageMap::AnimatedImageMetadata *, 0, false>' [ 0 5 10]
'std::__1::vector<SkPaint, std::__1::allocator<SkPaint> >::rend' [ 0 5 10 58]
'std::__1::__pointer_type<base::ListValue, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'std::__1::forward<base::internal::UnretainedWrapper<cc::SkiaPaintCanvas> >' [ 0 5 10]
'std::__1::vector<float, base::StackAllocator<float, 3> >::begin' [ 0 5 10 58]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::__annotate_new' [ 0 5 10 66]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::~vector' [ 0 5 10 70]
'std::__1::operator==<const unsigned int *, const unsigned int *>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<base::trace_event::TracedValue> >' [ 0 5 10]
'std::__1::forward<base::trace_event::TracedValue *&>' [ 0 5 10]
'std::__1::allocator_traits<base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::__destroy<cc::FilterOperation>' [ 0 5 10 71]
'std::__1::__compressed_pair_elem<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &, 1, false>' [ 0 5 10]
'SkBitmap::empty' [ 0 10]
'std::__1::remove_reference<const cc::PaintOp::SerializeOptions &>' [ 0 5 10]
'cc::DrawImageOp::AreEqual' [ 0 4 17]
'sk_sp<SkColorFilter>::reset' [ 0 22]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>::Do<unsigned long>' [ 0 6 16 64]
'std::__1::__const_void_pointer<float *, base::StackAllocator<float, 3>, false>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawOvalOp>' [ 0 4 19]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__move_range' [ 0 5 10 143]
'cc::PaintFlagsPaintFilter::PaintFlagsPaintFilter' [ 0 4 27]
'cc::CustomDataOp::CustomDataOp' [ 0 4 18]
'gfx::Point3F' [ 0 5]
'cc::UpdateTypeAndSkip<cc::ScaleOp>' [ 0 4]
'std::__1::forward<char *>' [ 0 5 10]
'SkTFitsIn<int, long>' [ 0]
'cc::DrawImageRectOp::IsValid' [ 0 4 21]
'cc' [ 0]
'std::__1::__pointer_type<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >' [ 0 5 10]
'logging::CheckOpResult::message' [ 0 9 24]
'cc::SkiaPaintImageGenerator::onGetPixels' [ 0 4 29]
'cc::PaintOpBuffer::size' [ 0 4 19]
'cc::RecordPaintCanvas::getMetaData' [ 0 4 23]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::operator[]' [ 0 5 10 82]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kImage>::TransferCacheEntryBase' [ 0 4 95]
'cc::ClientTransferCacheEntryBase<TransferCacheEntryType::kPaintTypeface>' [ 0 4]
'std::__1::__compressed_pair<Frame *, std::__1::allocator<Frame> &>::second' [ 0 5 10 68]
'SkPoint::Make' [ 0 9]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<char *, void>' [ 0 5 10 52]
'std::__1::vector<float, base::StackAllocator<float, 3> >::__recommend' [ 0 5 10 58]
'std::__1::conditional<false, std::__1::pointer_traits<const cc::DrawImage **>::__nat, const cc::DrawImage *>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<std::__1::pair<cc::DrawImage, gfx::Rect> > &>' [ 0 5 10]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::clear' [ 0 5 10 71]
'std::__1::min<int>' [ 0 5 10]
'cc::PaintOpReader::ReadLightingPointPaintFilter' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::allocate' [ 0 5 10 97]
'gfx::Vector2dF::set_x' [ 0 5 16]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kColorSpace>::Type' [ 0 4 100]
'std::__1::vector<float, std::__1::allocator<float> >::__annotate_delete' [ 0 5 10 54]
'cc::(anonymous namespace)::PaintTrackingCanvas::getSaveLayerStrategy' [ 0 4 27 48]
'SkNVRefCnt<SkData>::ref' [ 0 20]
'std::__1::__hash_table<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, std::__1::__unordered_map_hasher<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>, std::__1::__unordered_map_equal<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>, std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > > >' [ 0 5 10]
'base::StackVector<sk_sp<cc::PaintFilter>, 2>::operator[]' [ 0 6 46]
'base::StackContainer<std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >, 3>' [ 0 6]
'std::__1::forward<const SkBlendMode &>' [ 0 5 10]
'std::__1::iterator_traits<cc::FilterOperation *>' [ 0 5 10]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>' [ 0 5 10]
'base::Optional<gfx::ColorSpace>::~Optional' [ 0 6 33]
'std::__1::forward<std::__1::default_delete<cc::ServiceShaderTransferCacheEntry> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<unsigned char> &, void>' [ 0 5 10 79]
'cc::PaintRecorder::~PaintRecorder' [ 0 4 19]
'cc::DrawImage::DrawImage' [ 0 4 15]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::__split_buffer' [ 0 5 10 67]
'cc::PaintOpReader::ReadSimple<cc::PaintShader::Type>' [ 0 4 19]
'base::internal::OptionalStorageBase<SkMatrix, true>::Init<SkMatrix>' [ 0 6 16 53]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::capacity' [ 0 5 10 144]
'std::__1::next<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'SkPaint::getStyle' [ 0 9]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >::back' [ 0 5 10 66]
'SkPaint::computeFastBounds' [ 0 9]
'cc::FilterOperation::CreateColorMatrixFilter' [ 0 4 21]
'std::__1::allocator_traits<base::StackAllocator<float, 3> >::deallocate' [ 0 5 10 61]
'std::__1::remove_reference<cc::PaintImage::DecodingMode>' [ 0 5 10]
'cc::ThreadsafeMatrix' [ 0 4]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> >::pair<std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> &, std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *> &, false>' [ 0 5 10 181]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::set' [ 0 5 10 229]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::__recommend' [ 0 5 10 135]
'sk_sp<const cc::PaintOpBuffer>::operator*::operator()' [ 0 32 43]
'SkDeserialProcs' [ 0]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Branch<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 152]
'cc::DropShadowPaintFilter::input' [ 0 4 27]
'std::__1::forward<SkBlurImageFilter::TileMode>' [ 0 5 10]
'SkNoDrawCanvas::onDrawPoints' [ 0 16]
'cc::PaintImage::decoding_mode' [ 0 4 16]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__push_back_slow_path<const cc::DrawImage *>' [ 0 5 10 86]
'std::__1::move<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > &>' [ 0 5 10]
'base::AutoReset<bool>::~AutoReset' [ 0 6 23]
'sk_sp<SkColorSpace>::operator bool' [ 0 21]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::~__split_buffer' [ 0 5 10 95]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::data' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >, true>' [ 0 5 10 30]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::__tree_node_destructor' [ 0 5 10 146]
'std::__1::unique_ptr<SkCanvas, std::__1::default_delete<SkCanvas> >::reset' [ 0 5 10 69]
'std::initializer_list<cc::FrameMetadata>' [ 0 5]
'base::internal::CheckedAddFastOp<long, int>' [ 0 6 16]
'std::__1::__split_buffer<float, std::__1::allocator<float> &>' [ 0 5 10]
'std::__1::chrono' [ 0 5 10]
'cc::PaintOpWithFlags::CountSlowPathsFromFlags' [ 0 4 22]
'std::__1::remove_reference<sk_sp<SkTextBlob> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<cc::RTree<unsigned long>::Branch<unsigned long> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 95]
'std::__1::move<cc::RTree<unsigned long>::Branch<unsigned long> &>' [ 0 5 10]
'std::__1::__compressed_pair<float *, base::StackAllocator<float, 3> >' [ 0 5 10]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'std::__1::__to_raw_pointer<unsigned char>' [ 0 5 10]
'cc::RecordPaintCanvas::drawImageRect' [ 0 4 23]
'base::internal::flat_tree<int, std::__1::pair<int, cc::PaintImage::DecodingMode>, base::internal::GetKeyFromValuePairFirst<int, cc::PaintImage::DecodingMode>, std::__1::less<void> >::Impl::get_key_comp' [ 0 6 16 183 189]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> **>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<const SkDescriptor *, void *> *> *>' [ 0 5 10]
'SkRect::MakeLTRB' [ 0 8]
'cc::DrawImage::paint_image' [ 0 4 15]
'std::__1::__split_buffer<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>::capacity' [ 0 5 10 148]
'std::__1::__compressed_pair<const cc::DrawImage **, std::__1::allocator<const cc::DrawImage *> &>::second' [ 0 5 10 99]
'SkTextBlob::operator delete' [ 0 12]
'cc::ClipRectOp::Deserialize' [ 0 4 16]
'std::__1::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'SkNoDrawCanvas::onDrawPatch' [ 0 16]
'std::__1::remove_reference<cc::PaintTypeface &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<std::__1::pair<int, cc::PaintImage::DecodingMode> *> >' [ 0 5 10]
'std::__1::vector<cc::ImageProvider::ScopedDecodedDrawImage, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1> >::max_size' [ 0 5 10 130]
'cc::PaintShader::SetFlagsAndFallback' [ 0 4 17]
'sk_sp<cc::ComposePaintFilter>::~sk_sp' [ 0 31]
'base::internal::OptionalStorageBase<SkMatrix, true>::Init<const SkMatrix &>' [ 0 6 16 53]
'cc::PaintShader::paint_image' [ 0 4 17]
'cc::(anonymous namespace)' [ 0 4]
'base::RefCountedThreadSafe<cc::DisplayItemList, base::DefaultRefCountedThreadSafeTraits<cc::DisplayItemList> >' [ 0 6]
'cc::SkiaPaintCanvas::drawOval' [ 0 4 21]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::operator=' [ 0 5 10 136]
'cc::PaintImage::ShouldAnimate' [ 0 4 16]
'cc::DropShadowPaintFilter::dy' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::__max_size' [ 0 5 10 75]
'std::__1::__size_type<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> >, long, true>' [ 0 5 10]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::DrawRecordOp>' [ 0 4 19]
'std::__1::move<unsigned int *&>' [ 0 5 10]
'std::__1::enable_if<true, const cc::PaintOp **>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<unsigned long, std::numeric_limits, unsigned long>' [ 0 6 16]
'std::__1::__compressed_pair<cc::ServicePathTransferCacheEntry *, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10]
'std::__1::allocator<cc::FilterOperation>::construct<cc::FilterOperation, cc::FilterOperation &>' [ 0 5 10 42]
'SkISize::MakeEmpty' [ 0 9]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::capacity' [ 0 5 10 69]
'std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *>::base' [ 0 5 10 86]
'std::__1::allocator<Frame>::construct<Frame, cc::PaintOpBuffer::CompositeIterator, const SkMatrix &, int>' [ 0 5 10 28]
'std::__1::__split_buffer<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> &>::__split_buffer' [ 0 5 10 95]
'std::__1::__compressed_pair_elem<std::__1::default_delete<SkCanvas>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<SkRecorder, std::__1::default_delete<SkRecorder> >' [ 0 5 10]
'cc::ServiceTransferCacheEntryBase<TransferCacheEntryType::kImage>' [ 0 4]
'cc::TransferCacheSerializeHelper' [ 0 4]
'std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>::operator()' [ 0 5 10 71]
'std::__1::__vector_base<SkPaint, std::__1::allocator<SkPaint> >' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 77]
'cc::DrawImageOp::IsValid' [ 0 4 17]
'SkPoint3::set' [ 0 10]
'cc::SkiaPaintCanvas::clipRRect' [ 0 4 21]
'cc::SkiaPaintCanvas::SkiaPaintCanvas' [ 0 4 21]
'std::__1::forward<gfx::Rect>' [ 0 5 10]
'SkSafeUnref<cc::ComposePaintFilter>' [ 0]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::clear' [ 0 5 10 151]
'cc::(anonymous namespace)::SizeCounter::size' [ 0 4 27 40]
'__syscall_slong_t' [ 0]
'cc::DrawRRectOp::Serialize' [ 0 4 17]
'std::__1::__compressed_pair<sk_sp<SkImageFilter> *, std::__1::allocator<sk_sp<SkImageFilter> > >' [ 0 5 10]
'SkColorSetA' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::operator*' [ 0 5 10 82]
'cc::RecordPaintCanvas::drawRoundRect' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<cc::FrameMetadata> >::max_size' [ 0 5 10 69]
'base::internal::ClampMathOp<ClampedSubOp, int, int>' [ 0 6 16]
'cc::ImagePaintFilter::ImagePaintFilter' [ 0 4 22]
'base::Optional<cc::PaintFlags>::~Optional' [ 0 6 32]
'cc::PaintOpWriter::WriteSimple<SkIRect>' [ 0 4 19]
'std::__1::__vector_base<cc::RTree<unsigned long>::Branch<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<Frame> >::__max_size' [ 0 5 10 57]
'std::__1::vector<sk_sp<cc::PaintFilter>, std::__1::allocator<sk_sp<cc::PaintFilter> > >' [ 0 5 10]
'sk_sp<cc::PaintFilter>::sk_sp<cc::ColorFilterPaintFilter, void>' [ 0 24]
'cc::DisplayItemList::push<cc::ClipRRectOp, const SkRRect &, SkClipOp &, bool &>' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::__construct<SkPaint, const SkPaint &>' [ 0 5 10 59]
'base::Optional<gfx::SizeF>::Optional' [ 0 6 28]
'base::internal::OptionalBase<gfx::Rect>' [ 0 6 16]
'std::__1::forward<SkRegion &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> *>' [ 0 5 10]
'SkCanvas::willRestore' [ 0 10]
'base::internal::OptionalBase<gfx::Rect>::OptionalBase' [ 0 6 16 41]
'std::__1::__pointer_type_imp::__pointer_type<unsigned int, std::__1::allocator<unsigned int>, true>' [ 0 5 10 30]
'SkCanvas::clipRect' [ 0 10]
'std::__1::__compressed_pair_elem<WireTypeface *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<SkPaint> >::__construct_backward<SkPaint *>' [ 0 5 10 59]
'cc::Rasterizer<cc::SaveLayerOp, true>::Raster' [ 0 4 39]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__construct_forward<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'cc::UpdateTypeAndSkip<cc::CustomDataOp>' [ 0 4]
'sk_sp<SkTypeface>::reset' [ 0 19]
'cc::DrawIRectOp::IsValid' [ 0 4 17]
'SkFontStyle::weight' [ 0 13]
'base::internal::OptionalStorageBase<SkMatrix, true>::Init<>' [ 0 6 16 53]
'cc::PaintShader::set_has_animated_images' [ 0 4 17]
'cc::PaintImageBuilder::WithCopy' [ 0 4 23]
'sk_sp<cc::AlphaThresholdPaintFilter>::~sk_sp' [ 0 38]
'uint_least8_t' [ 0]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >::max_size' [ 0 5 10 64]
'SkSafeUnref<cc::DropShadowPaintFilter>' [ 0]
'sk_sp<SkMaskFilter>' [ 0]
'cc::DisplayItemList::push<cc::RotateOp, float &>' [ 0 4 21]
'cc::PaintOpReader::PaintOpReader' [ 0 4 19]
'cc::TranslateOp' [ 0 4]
'SkPixmap::SkPixmap' [ 0 10]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >' [ 0 5 10]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::size' [ 0 5 10 135]
'cc::PaintOpBuffer::push<cc::DrawIRectOp, const SkIRect &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::forward<const SkPath &>' [ 0 5 10]
'cc::ClientPaintTypefaceTransferCacheEntry::Id' [ 0 4 43]
'sk_sp<cc::ArithmeticPaintFilter>::release' [ 0 34]
'base::StackContainer<std::__1::vector<gfx::Rect, base::StackAllocator<gfx::Rect, 1> >, 1>::operator->' [ 0 6 91]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::construct<gfx::Rect, const gfx::Rect &>' [ 0 5 10 61]
'cc::SimpleSerialize<cc::CustomDataOp>' [ 0 4]
'cc::PaintFont::SetFlags' [ 0 4 15]
'cc::PaintFlagsPaintFilter::SnapshotWithImagesInternal' [ 0 4 27]
'cc::PaintOpBuffer::PlaybackFoldingIterator::NextUnfoldedOp' [ 0 4 19 44]
'std::__1::default_delete<char []>::operator()<char>' [ 0 5 10 35]
'std::__1::__pointer_type<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'__libcpp_isnan<float>' [ 0]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::insert' [ 0 5 10 229]
'std::__1::iterator_traits<base::Value *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::__max_size' [ 0 5 10 98]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::~vector' [ 0 5 10 143]
'std::__1::allocator_traits<std::__1::allocator<cc::FilterOperation> >::construct<cc::FilterOperation, cc::FilterOperation &>' [ 0 5 10 71]
'std::__1::remove_reference<unsigned int>' [ 0 5 10]
'std::__1::remove_reference<cc::PaintTextBlob *&>' [ 0 5 10]
'std::__1::__atomic_base<int, false>::compare_exchange_weak' [ 0 5 10 37]
'std::__1::__vector_base<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__destruct_at_end' [ 0 5 10 140]
'sk_sp<cc::PaintFilter>::operator=<cc::BlurPaintFilter, void>' [ 0 24]
'std::__1::__unordered_map_hasher<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true>' [ 0 5 10]
'cc::DrawRecordOp::~DrawRecordOp' [ 0 4 18]
'std::__1::vector<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__annotate_new' [ 0 5 10 143]
'std::__1::__split_buffer<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > &>::~__split_buffer' [ 0 5 10 144]
'std::__1::vector<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > >::deallocate' [ 0 5 10 151]
'std::__1::allocator<SkPaint>::deallocate' [ 0 5 10 30]
'std::__1::__move_backward<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'cc::ScopedRasterFlags::~ScopedRasterFlags' [ 0 4 23]
'std::__1::__pointer_type_imp::__pointer_type<float, base::StackAllocator<float, 3>, true>' [ 0 5 10 30]
'std::__1::__split_buffer<unsigned int, std::__1::allocator<unsigned int> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'cc::(anonymous namespace)::AreFiltersEqual' [ 0 4 27]
'base::internal::OptionalBase<unsigned long>::InitOrAssign<unsigned long>' [ 0 6 16 45]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::~__vector_base' [ 0 5 10 61]
'sk_sp<SkShader>::operator->' [ 0 17]
'cc::TransferCacheEntryBase<cc::ServiceTransferCacheEntry, cc::TransferCacheEntryType::kPath>::Type' [ 0 4 94]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'std::__1::__tree<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::__emplace_unique_key_args<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10 232]
'std::__1::__split_buffer<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> &>::capacity' [ 0 5 10 101]
'sk_sp<cc::OffsetPaintFilter>' [ 0]
'cc::SaveLayerAlphaOp::AreEqual' [ 0 4 22]
'std::__1::forward<const cc::TurbulencePaintFilter::TurbulenceType &>' [ 0 5 10]
'std::__1::__vector_base<sk_sp<SkImageFilter>, std::__1::allocator<sk_sp<SkImageFilter> > >::clear' [ 0 5 10 92]
'std::__1::__compressed_pair_elem<cc::ServicePathTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >' [ 0 5 10]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >' [ 0 5 10]
'SkTextBlob' [ 0]
'std::__1::allocator<const cc::DrawImage *>::allocate' [ 0 5 10 44]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'SkWeakRefCnt::getWeakCnt' [ 0 14]
'std::__1::__atomic_base<SkPath::Convexity, false>::load' [ 0 5 10 51]
'std::__1::forward<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> &>' [ 0 5 10]
'std::__1::vector<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> >::__annotate_delete' [ 0 5 10 86]
'SkPath::isVolatile' [ 0 8]
'std::__1::__compressed_pair_elem<std::__1::default_delete<cc::ServiceRawMemoryTransferCacheEntry>, 1, true>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > *, std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >, false>' [ 0 5 10]
'cc::DecodeStashingImageProvider' [ 0 4]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPath>::~TransferCacheEntryBase' [ 0 4 93]
'SkSafeUnref<cc::PaintOpBuffer>' [ 0]
'std::__1::__compressed_pair_elem<cc::ServiceShaderTransferCacheEntry *, 0, false>::__compressed_pair_elem<cc::ServiceShaderTransferCacheEntry *&, void>' [ 0 5 10 83]
'std::__1::__split_buffer<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::__destroy<std::__1::pair<int, cc::PaintImage::DecodingMode> >' [ 0 5 10 102]
'std::__1::enable_if_t<!std::is_same<internal::RemoveCvRefT<SkMatrix>, Optional<SkMatrix> >::value && std::is_constructible<SkMatrix, SkMatrix>::value && std::is_assignable<SkMatrix &, SkMatrix>::value && (!std::is_scalar<SkMatrix>::value || !std::is_same<std::decay_t<SkMatrix>, SkMatrix>::value), base::Optional<SkMatrix> &>' [ 0 5 10]
'sk_sp<SkImageFilter>::~sk_sp' [ 0 22]
'cc::PaintFilter::operator!=' [ 0 4 17]
'std::__1::__hash_map_pointer_types<const SkDescriptor *, void *, std::__1::__hash_key_value_types<const SkDescriptor *>, false>' [ 0 5 10]
'cc::PaintFlags::getStrokeWidth' [ 0 4 16]
'cc::LightingDistantPaintFilter::lighting_type' [ 0 4 32]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'std::__1::__compressed_pair<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >' [ 0 5 10]
'sk_sp<cc::TurbulencePaintFilter>' [ 0]
'sk_sp<const SkImage>::sk_sp' [ 0 22]
'trace_event_internal::TraceID::LocalId::raw_id' [ 0 22 31 40]
'std::__1::operator==<std::__1::pair<int, cc::PaintImage::DecodingMode> *, std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::set<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::less<std::__1::pair<cc::TransferCacheEntryType, unsigned int> >, std::__1::allocator<std::__1::pair<cc::TransferCacheEntryType, unsigned int> > >::clear' [ 0 5 10 229]
'std::__1::__vector_base<Frame, std::__1::allocator<Frame> >::__vector_base' [ 0 5 10 61]
'std::__1::__wrap_iter<const gfx::Rect *>::base' [ 0 5 10 42]
'cc::SimpleSerialize<cc::ClipRRectOp>' [ 0 4]
'std::__1::__split_buffer<gfx::Rect, std::__1::allocator<gfx::Rect> &>::~__split_buffer' [ 0 5 10 71]
'std::__1::__add_lvalue_reference_impl<cc::ServicePathTransferCacheEntry, true>' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'base::flat_map<int, cc::PaintImage::DecodingMode, std::__1::less<void> >' [ 0 6]
'std::__1::remove_reference<sk_sp<SkTextBlob> >' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'std::__1::remove_reference<const std::__1::tuple<base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> > &>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue>, void, void>' [ 0 5 10 139]
'std::__1::__compressed_pair_elem<const cc::PaintOp **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 66]
'std::__1::__pointer_type_imp::__pointer_type<SkMiniRecorder, std::__1::default_delete<SkMiniRecorder>, false>' [ 0 5 10 30]
'base::internal::IsNull<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 6 16]
'cc::PaintOpBuffer::push<cc::DrawDRRectOp, const SkRRect &, const SkRRect &, const cc::PaintFlags &>' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'operator!=<cc::PaintImageGenerator, cc::PaintImageGenerator>' [ 0]
'std::__1::__vector_base<gfx::Rect, std::__1::allocator<gfx::Rect> >::__end_cap' [ 0 5 10 69]
'std::__1::unique_ptr<cc::ServiceColorSpaceTransferCacheEntry, std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry> >::reset' [ 0 5 10 131]
'cc::DrawPathOp::~DrawPathOp' [ 0 4 16]
'std::__1::__compressed_pair_elem<cc::ServiceTransferCacheEntry *, 0, false>' [ 0 5 10]
'std::__1::vector<cc::RTree<cc::DrawImage>::Node<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >::max_size' [ 0 5 10 135]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, int>' [ 0 6 16]
'std::__1::__compressed_pair<sk_sp<cc::PaintFilter> *, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::second' [ 0 5 10 105]
'std::__1::allocator<SkPaint>::allocate' [ 0 5 10 30]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sk_sp<SkImageFilter> >, 1, true>' [ 0 5 10]
'cc::PaintOpReader::ReadArray' [ 0 4 19]
'std::__1::enable_if<true, unsigned int *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__annotate_shrink' [ 0 5 10 133]
'cc::LightingSpotPaintFilter::surface_scale' [ 0 4 29]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'base::RepeatingCallback<unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 6]
'std::__1::forward<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > &>' [ 0 5 10]
'SkIRect::isEmpty64' [ 0 9]
'cc::PaintOpWriter::WriteSize' [ 0 4 19]
'cc::UpdateTypeAndSkip<cc::SetMatrixOp>' [ 0 4]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >, long, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<Frame> &>' [ 0 5 10]
'cc::RecordPaintCanvas::drawPicture' [ 0 4 23]
'std::__1::allocator<cc::ImageProvider::ScopedDecodedDrawImage>::construct<cc::ImageProvider::ScopedDecodedDrawImage, cc::ImageProvider::ScopedDecodedDrawImage>' [ 0 5 10 64]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const SkDescriptor *, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, SkDescriptorMapOperators, true> >' [ 0 5 10]
'cc::LightingPointPaintFilter::light_color' [ 0 4 30]
'std::__1::vector<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::size' [ 0 5 10 139]
'sk_sp<SkPathEffect>::~sk_sp' [ 0 21]
'std::__1::__const_void_pointer<cc::ImageProvider::ScopedDecodedDrawImage *, base::StackAllocator<cc::ImageProvider::ScopedDecodedDrawImage, 1>, false>' [ 0 5 10]
'sk_sp<SkPixelRef>::operator bool' [ 0 19]
'sk_sp<cc::PaintFilter>::release' [ 0 24]
'std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >::allocate' [ 0 5 10 77]
'std::__1::forward<const SkFilterQuality &>' [ 0 5 10]
'sk_sp<SkImageFilter>::operator->' [ 0 22]
'cc::PaintFlags::PaintFlags' [ 0 4 16]
'uint64_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::unique_ptr<cc::ServicePathTransferCacheEntry, std::__1::default_delete<cc::ServicePathTransferCacheEntry> >' [ 0 5 10]
'sk_sp<cc::PaintOpBuffer>::get' [ 0 26]
'std::__1::move<sk_sp<const cc::PaintOpBuffer> &>' [ 0 5 10]
'cc::ServiceImageTransferCacheEntry::Deserialize' [ 0 4 36]
'std::__1::default_delete<char []>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &, 1, false>::__get' [ 0 5 10 114]
'cc::PaintOpBufferSerializer' [ 0 4]
'std::__1::__split_buffer<std::__1::pair<int, base::StackVector<gfx::Rect, 1> >, std::__1::allocator<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > > &>::__destruct_at_end' [ 0 5 10 160]
'std::__1::addressof<std::__1::pair<int, base::StackVector<gfx::Rect, 1> > >' [ 0 5 10]
'cc::OffsetPaintFilter' [ 0 4]
'SkNoDrawCanvas::onDrawPaint' [ 0 16]
'__clock_t' [ 0]
'std::__1::__vector_base<float, std::__1::allocator<float> >::__vector_base' [ 0 5 10 61]
'cc::PaintOpBuffer::AnalyzeAddedOp<cc::ClipRectOp>' [ 0 4 19]
'std::__1::move<int &>' [ 0 5 10]
'std::__1::__const_void_pointer<cc::RTree<unsigned long>::Node<unsigned long> *, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> >, false>' [ 0 5 10]
'std::__1::__temp_value<std::__1::pair<int, cc::PaintImage::DecodingMode>, std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > >::get' [ 0 5 10 149]
'std::__1::vector<const cc::PaintOp *, base::StackAllocator<const cc::PaintOp *, 3> >::erase' [ 0 5 10 86]
'cc::ServiceTransferCacheEntry' [ 0 4]
'sk_sp<cc::LightingPointPaintFilter>::release' [ 0 37]
'std::__1::allocator_traits<std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::deallocate' [ 0 5 10 98]
'base::internal::MaxExponentPromotion<long, long, base::internal::RIGHT_PROMOTION>' [ 0 6 16]
'cc::ThreadsafePath' [ 0 4]
'cc::ClipPathOp::AreEqual' [ 0 4 16]
'std::__1::vector<cc::FilterOperation, std::__1::allocator<cc::FilterOperation> >::rbegin' [ 0 5 10 82]
'base::OnceClosure' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<sk_sp<cc::PaintFilter> > >::__destroy<sk_sp<cc::PaintFilter> >' [ 0 5 10 75]
'std::__1::forward<std::__1::allocator<std::__1::pair<int, cc::PaintImage::DecodingMode> > &>' [ 0 5 10]
'cc::PaintOpBuffer::operator=' [ 0 4 19]
'std::__1::__vector_base<float, std::__1::allocator<float> >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > > >' [ 0 5 10]
'cc::DrawOvalOp::AreEqual' [ 0 4 16]
'cc::PaintOpBuffer::push<cc::DrawRecordOp, sk_sp<const cc::PaintOpBuffer> &>' [ 0 4 19]
'base::internal::Invoker<base::internal::BindState<unsigned long (cc::SimpleBufferSerializer::*)(const cc::PaintOp *, const cc::PaintOp::SerializeOptions &), base::internal::UnretainedWrapper<cc::SimpleBufferSerializer> >, unsigned long (const cc::PaintOp *, const cc::PaintOp::SerializeOptions &)>' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<sk_sp<cc::PaintFilter> *>::__nat, sk_sp<cc::PaintFilter> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >::allocate' [ 0 5 10 68]
'cc::DrawRRectOp::~DrawRRectOp' [ 0 4 17]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >' [ 0 5 10]
'cc::SimpleDeserialize<cc::SaveLayerAlphaOp>' [ 0 4]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::clear' [ 0 5 10 70]
'std::__1::__split_buffer<const cc::DrawImage *, std::__1::allocator<const cc::DrawImage *> &>::__end_cap' [ 0 5 10 95]
'std::__1::allocator_traits<std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::construct<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, cc::DrawImage, const gfx::Rect &>' [ 0 5 10 100]
'base::internal::CheckedNumeric<int>' [ 0 6 16]
'cc::DrawImageRectOp::AreEqual' [ 0 4 21]
'base::internal::strict_cast<int, int>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::Rect> >::destroy<gfx::Rect>' [ 0 5 10 61]
'std::__1::allocator_traits<base::StackAllocator<gfx::Rect, 1> >::__construct_range_forward<std::__1::__wrap_iter<const gfx::Rect *>, gfx::Rect *>' [ 0 5 10 65]
'cc::PaintOpBuffer::push<cc::DrawRRectOp, const SkRRect &, const cc::PaintFlags &>' [ 0 4 19]
'base::internal::IsCompileTimeConstant<int>' [ 0 6 16]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::__destruct_at_end' [ 0 5 10 146]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__max_size' [ 0 5 10 65]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::remove_reference<base::StackAllocator<const cc::PaintOp *, 3> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > *>::__nat, std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'std::__1::forward<cc::PaintImage>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::TracedValue, std::__1::default_delete<base::trace_event::TracedValue> >::~unique_ptr' [ 0 5 10 113]
'SkPictureRecorder' [ 0]
'cc::FilterOperation::set_image_filter' [ 0 4 21]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'std::__1::__vector_base<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage>, std::__1::allocator<cc::RTree<cc::DrawImage>::Branch<cc::DrawImage> > >::~__vector_base' [ 0 5 10 146]
'std::__1::__const_pointer<unsigned long, unsigned long *, std::__1::allocator<unsigned long>, true>' [ 0 5 10]
'cc::PaintTypeface::ttc_index' [ 0 4 19]
'cc::g_deserialize_functions' [ 0 4]
'gfx::Vector2dF::set_y' [ 0 5 16]
'cc::FilterOperation::shape' [ 0 4 21]
'std::__1::forward<SkDropShadowImageFilter::ShadowMode>' [ 0 5 10]
'cc::ClipRectOp' [ 0 4]
'std::__1::__compressed_pair_elem<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, 0, false>' [ 0 5 10]
'cc::PaintOpReader::ReadSimple<unsigned int>' [ 0 4 19]
'cc::PaintFlagsPaintFilter::operator==' [ 0 4 27]
'std::__1::binary_function<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, std::__1::pair<cc::TransferCacheEntryType, unsigned int>, bool>' [ 0 5 10]
'cc::XfermodePaintFilter' [ 0 4]
'cc::DrawImageRectOp::Serialize' [ 0 4 21]
'std::__1::max<int>' [ 0 5 10]
'cc::TransferCacheEntryBase<cc::ClientTransferCacheEntry, cc::TransferCacheEntryType::kPaintTypeface>::TransferCacheEntryBase' [ 0 4 102]
'SkImageInfo::minRowBytes64' [ 0 13]
'sk_sp<cc::LightingDistantPaintFilter>' [ 0]
'sk_sp<SkFlattenable>' [ 0]
'std::__1::unique_ptr<cc::SkiaPaintImageGenerator, std::__1::default_delete<cc::SkiaPaintImageGenerator> >::unique_ptr<true, void>' [ 0 5 10 107]
'std::__1::vector<sk_sp<cc::PaintFilter>, base::StackAllocator<sk_sp<cc::PaintFilter>, 2> >::reserve' [ 0 5 10 92]
'std::__1::conditional<true, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *> *, std::__1::__hash_node<std::__1::__hash_value_type<const SkDescriptor *, std::__1::unique_ptr<SkStrikeServer::SkGlyphCacheState, std::__1::default_delete<SkStrikeServer::SkGlyphCacheState> > >, void *> *>' [ 0 5 10]
'logging::MakeCheckOpString<cc::TransferCacheEntryType, cc::TransferCacheEntryType>' [ 0 9]
'std::__1::remove_reference<cc::RTree<unsigned long>::Node<unsigned long> *&>' [ 0 5 10]
'std::__1::forward<std::__1::vector<cc::PaintTypeface, std::__1::allocator<cc::PaintTypeface> > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::Rect *>::__nat, gfx::Rect>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<float> >::construct<float, const float &>' [ 0 5 10 57]
'cc::(anonymous namespace)::GetOpacityMatrix' [ 0 4 27]
'base::subtle::RefCountedThreadSafeBase::AddRef' [ 0 6 14 40]
'cc::DrawColorOp::Deserialize' [ 0 4 17]
'std::__1::remove_reference<std::__1::allocator<cc::RTree<unsigned long>::Branch<unsigned long> > &>' [ 0 5 10]
'sk_sp<cc::PaintImageGenerator>::get' [ 0 32]
'std::__1::move<cc::FilterOperation &>' [ 0 5 10]
'std::__1::__compressed_pair<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> *, std::__1::allocator<cc::RTree<cc::DrawImage>::Node<cc::DrawImage> > >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<int, cc::PaintImage::DecodingMode> *>::__wrap_iter' [ 0 5 10 82]
'sk_sp<cc::LightingDistantPaintFilter>::sk_sp' [ 0 39]
'SkIRect' [ 0]
'std::__1::vector<cc::RTree<unsigned long>::Node<unsigned long>, std::__1::allocator<cc::RTree<unsigned long>::Node<unsigned long> > >::vector' [ 0 5 10 135]
'std::__1::forward<cc::ServicePaintTypefaceTransferCacheEntry *>' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::remove_reference<cc::DisplayItemList *>' [ 0 5 10]
'std::__1::__to_raw_pointer<const cc::PaintOp *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, void *> > >::construct<std::__1::pair<cc::TransferCacheEntryType, unsigned int>, const std::__1::pair<cc::TransferCacheEntryType, unsigned int> &>' [ 0 5 10 140]
'std::__1::remove_reference<const SkRegion &>' [ 0 5 10]
'std::__1::__tree_node_base<void *>::__set_parent' [ 0 5 10 36]
'cc::RecordPaintFilter::RecordPaintFilter' [ 0 4 23]
'base::internal::OptionalStorage<cc::PaintOpBuffer::OffsetIterator, true, true>::OptionalStorage' [ 0 6 16 80]
'cc::MagnifierPaintFilter::operator==' [ 0 4 26]
'cc::FilterOperation::set_blur_tile_mode' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<cc::PaintTypeface> >::__max_size' [ 0 5 10 69]
'std::__1::vector<cc::DiscardableImageMap::AnimatedImageMetadata, std::__1::allocator<cc::DiscardableImageMap::AnimatedImageMetadata> >::capacity' [ 0 5 10 136]
'std::__1::remove_reference<base::trace_event::TracedValue *&>' [ 0 5 10]
'SkRect::makeOffset' [ 0 8]
'std::__1::remove_reference<const cc::PaintOp *const &>' [ 0 5 10]
'cc::FilterOperation::matrix' [ 0 4 21]
'cc::DropShadowPaintFilter::dx' [ 0 4 27]
'cc::PaintOpBuffer::push<cc::DrawImageRectOp, const cc::PaintImage &, const SkRect &, const SkRect &, const cc::PaintFlags *&, cc::PaintCanvas::SrcRectConstraint &>' [ 0 4 19]
'std::__1::remove_reference<sk_sp<SkShader> &>' [ 0 5 10]
'std::__1::default_delete<cc::ServiceColorSpaceTransferCacheEntry>::operator()' [ 0 5 10 67]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'std::__1::__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > &>' [ 0 5 10 147]
'std::__1::__const_pointer<std::__1::pair<unsigned long, unsigned long>, std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> >, true>' [ 0 5 10]
'cc::RestoreOp' [ 0 4]
'std::__1::remove_reference<const SkPath &>' [ 0 5 10]
'std::__1::__distance<std::__1::__wrap_iter<const std::__1::pair<int, base::StackVector<gfx::Rect, 1> > *> >' [ 0 5 10]
'std::__1::unique_ptr<cc::ServiceTransferCacheEntry, std::__1::default_delete<cc::ServiceTransferCacheEntry> >::~unique_ptr' [ 0 5 10 111]
'std::__1::__split_buffer<float, base::StackAllocator<float, 3> &>::clear' [ 0 5 10 67]
