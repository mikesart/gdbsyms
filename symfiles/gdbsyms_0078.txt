'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::~__vector_base' [ 0 5 10 101]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'logging' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::data' [ 0 5 10 94]
'media::VideoCaptureDeviceInfo::VideoCaptureDeviceInfo' [ 0 7 31]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'media::VideoCaptureFormat::IsValid' [ 0 7 27]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'media::VideoCaptureTransportType' [ 0 7]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__copy_assign_alloc' [ 0 5 10 101]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__destruct_at_end' [ 0 5 10 94]
'std::__1::__compressed_pair_elem<media::VideoCaptureFormat *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 73]
'std::__1::allocator<media::VideoCaptureFormat>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<media::VideoCaptureFormat> &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::max_size' [ 0 5 10 94]
'std::__1::true_type' [ 0 5 10]
'base::internal::OptionalStorageBase<media::VideoCaptureDeviceDescriptor::CameraCalibration, true>' [ 0 6 16]
'unsigned char' [ 0]
'media::VideoCaptureParams::IsValid' [ 0 7 27]
'std::__1::operator<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10 31 36 60 65]
'__va_list_tag' [ 0]
'media::VideoCaptureDeviceDescriptor' [ 0 7]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::enable_if<true, media::VideoCaptureFormat *>' [ 0 5 10]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'char' [ 0]
'logging::LogSeverity' [ 0 9]
'size_t' [ 0]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::false_type' [ 0 5 10]
'std::__1::ostringstream' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::allocator<media::VideoCaptureFormat>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::deallocate' [ 0 5 10 77]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'uint_least8_t' [ 0]
'std::__1::__compressed_pair<media::VideoCaptureFormat *, std::__1::allocator<media::VideoCaptureFormat> >::__compressed_pair<nullptr_t, const std::__1::allocator<media::VideoCaptureFormat> &>' [ 0 5 10 107]
'std::__1::__advance<media::VideoCaptureFormat *>' [ 0 5 10]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::vector' [ 0 5 10 94]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::deallocate' [ 0 5 10 94]
'int_least64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<media::VideoCaptureFormat *, 0, false>' [ 0 5 10]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__annotate_shrink' [ 0 5 10 94]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::~vector' [ 0 5 10 94]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::allocate' [ 0 5 10 94]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::allocator<char>' [ 0 5 10]
'base::Optional<media::VideoCaptureDeviceDescriptor::CameraCalibration>' [ 0 6]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'gfx::Size::set_height' [ 0 5 11]
'media::VideoCaptureDeviceDescriptor::set_display_name' [ 0 7 37]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'media::VideoCaptureDeviceDescriptor::GetCaptureApiTypeString' [ 0 7 37]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'tm' [ 0]
'std::__1::enable_if<true, void>' [ 0 5 10]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::__destroy<media::VideoCaptureFormat>' [ 0 5 10 77]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'int8_t' [ 0]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__destruct_at_end' [ 0 5 10 101]
'std::__1::chrono' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'uint_least64_t' [ 0]
'media::kSupportedCapturePixelFormats' [ 0 7]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>::InitOrAssign<const media::VideoCaptureDeviceDescriptor::CameraCalibration &>' [ 0 6 16 86]
'std::__1::__unwrap_iter<media::VideoCaptureFormat *>' [ 0 5 10]
'gfx::Size::set_width' [ 0 5 11]
'int_least32_t' [ 0]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>::CopyAssign<media::VideoCaptureDeviceDescriptor::CameraCalibration>' [ 0 6 16 86]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::allocate' [ 0 5 10 77]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >' [ 0 5 10]
'base' [ 0]
'std::__1::__pointer_type_imp' [ 0 5 10]
'__uint8_t' [ 0]
'std::__1::literals' [ 0 5 10]
'__uint64_t' [ 0]
'fpos_t' [ 0]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>::FreeIfNeeded' [ 0 6 16 86]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'intmax_t' [ 0]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::__pointer_type<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >' [ 0 5 10]
'long unsigned int' [ 0]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__end_cap' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'int_least16_t' [ 0]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::clear' [ 0 5 10 101]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::operator==<std::__1::allocator<char> >' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'size_type' [ 0]
'__uint32_t' [ 0]
'time_t' [ 0]
'media::VideoCaptureFormat::ComparePixelFormatPreference' [ 0 7 27]
'bool' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'media::VideoCaptureApi' [ 0 7]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::pointer_traits<media::VideoCaptureFormat *>' [ 0 5 10]
'clock_t' [ 0]
'std::__1::__const_void_pointer<media::VideoCaptureFormat *, std::__1::allocator<media::VideoCaptureFormat>, false>' [ 0 5 10]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::data' [ 0 5 10 65]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'uint_least16_t' [ 0]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>' [ 0 6 16]
'media::VideoCaptureFormats' [ 0 7]
'uintmax_t' [ 0]
'media::VideoCaptureDeviceInfo::~VideoCaptureDeviceInfo' [ 0 7 31]
'base::internal::OptionalStorageBase<media::VideoCaptureDeviceDescriptor::CameraCalibration, true>::OptionalStorageBase' [ 0 6 16 99]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'int64_t' [ 0]
'std::__1::min<unsigned long>' [ 0 5 10]
'long double' [ 0]
'long long int' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat>, true>' [ 0 5 10 30]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::clear' [ 0 5 10 94]
'media::VideoPixelFormat' [ 0 7]
'base::internal::OptionalStorage<media::VideoCaptureDeviceDescriptor::CameraCalibration, true, true>::OptionalStorage' [ 0 6 16 101]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__alloc' [ 0 5 10 101]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >' [ 0 5 10]
'media::VideoCaptureFormat' [ 0 7]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'long long unsigned int' [ 0]
'int16_t' [ 0]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::size' [ 0 5 10 94]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'logging::LogMessage' [ 0 9]
'int_fast8_t' [ 0]
'__uint16_t' [ 0]
'WTF' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator basic_string_view' [ 0 5 10 87]
'std::__1::__size_type<std::__1::allocator<media::VideoCaptureFormat>, long, true>' [ 0 5 10]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'std::__1' [ 0 5]
'float' [ 0]
'wint_t' [ 0]
'ldiv_t' [ 0]
'std::__1::__const_pointer<media::VideoCaptureFormat, media::VideoCaptureFormat *, std::__1::allocator<media::VideoCaptureFormat>, true>' [ 0 5 10]
'wctype_t' [ 0]
'std::__1::once_flag' [ 0 5 10]
'std::__1::__copy<media::VideoCaptureFormat, media::VideoCaptureFormat>' [ 0 5 10]
'base::internal::OptionalStorage<media::VideoCaptureDeviceDescriptor::CameraCalibration, true, true>' [ 0 6 16]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::allocator<media::VideoCaptureFormat>::deallocate' [ 0 5 10 48]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'media::VideoCaptureParams' [ 0 7]
'int32_t' [ 0]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__vector_base' [ 0 5 10 101]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>::operator=' [ 0 6 16 86]
'std::__1::allocator<media::VideoCaptureFormat>::allocate' [ 0 5 10 48]
'std::nullptr_t' [ 0 5]
'short' [ 0]
'std::__1::forward<const media::VideoCaptureDeviceDescriptor::CameraCalibration &>' [ 0 5 10]
'media::(anonymous namespace)::TrimDisplayName' [ 0 7 30]
'gfx::Size::Size' [ 0 5 11]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__annotate_new' [ 0 5 10 94]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::conditional<false, std::__1::pointer_traits<media::VideoCaptureFormat *>::__nat, media::VideoCaptureFormat>' [ 0 5 10]
'std::__1::__vector_base<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::capacity' [ 0 5 10 101]
'media::VideoCaptureDeviceDescriptor::operator<::kFacingMapping' [ 0 7 37 48]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::basic_string_view' [ 0 5 10 65]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'uint8_t' [ 0]
'std::__1::find<const media::VideoPixelFormat *, media::VideoPixelFormat>' [ 0 5 10]
'__gnuc_va_list' [ 0]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__construct_at_end<media::VideoCaptureFormat *>' [ 0 5 10 94]
'uint_fast64_t' [ 0]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::basic_string_view<char, std::__1::char_traits<char> >::size' [ 0 5 10 65]
'div_t' [ 0]
'media' [ 0]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'media::VideoCaptureDeviceDescriptor::operator<' [ 0 7 37]
'media::VideoCaptureDeviceDescriptor::operator=' [ 0 7 37]
'double' [ 0]
'std::__1::copy<media::VideoCaptureFormat *, media::VideoCaptureFormat *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::max_size' [ 0 5 10 77]
'int_fast64_t' [ 0]
'unsigned short' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'base::Optional<media::VideoCaptureDeviceDescriptor::CameraCalibration>::operator=' [ 0 6 72]
'std::__1::__compressed_pair<media::VideoCaptureFormat *, std::__1::allocator<media::VideoCaptureFormat> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 107]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::streamsize' [ 0 5 10]
'wchar_t' [ 0]
'media::VideoCaptureParams::VideoCaptureParams' [ 0 7 27]
'std::__1::string' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::__construct_range_forward<media::VideoCaptureFormat>' [ 0 5 10 77]
'media::VideoCaptureDeviceDescriptor::GetNameAndModel' [ 0 7 37]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::__max_size' [ 0 5 10 77]
'uint_fast32_t' [ 0]
'media::VideoCaptureFormat::ToString' [ 0 7 27]
'base::Optional<media::VideoCaptureDeviceDescriptor::CameraCalibration>::Optional' [ 0 6 72]
'base::nullopt_t' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'base::internal::OptionalBase<media::VideoCaptureDeviceDescriptor::CameraCalibration>::OptionalBase' [ 0 6 16 86]
'signed char' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'base::internal' [ 0 6]
'std::__1::ios_base::flags' [ 0 5 10 20]
'media::VideoCaptureDeviceDescriptor::VideoCaptureDeviceDescriptor' [ 0 7 37]
'std::__1::distance<media::VideoCaptureFormat *>' [ 0 5 10]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'mbstate_t' [ 0]
'media::VideoCaptureDeviceInfo::operator=' [ 0 7 31]
'uint_least32_t' [ 0]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::assign<media::VideoCaptureFormat *>' [ 0 5 10 94]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::operator!=<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'__compar_fn_t' [ 0]
'uintptr_t' [ 0]
'base::TrimPositions' [ 0 6]
'base::internal::OptionalStorageBase<media::VideoCaptureDeviceDescriptor::CameraCalibration, true>::Init<const media::VideoCaptureDeviceDescriptor::CameraCalibration &>' [ 0 6 16 99]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'unsigned int' [ 0]
'std::__1::__to_raw_pointer<media::VideoCaptureFormat>' [ 0 5 10]
'int_fast32_t' [ 0]
'int_least8_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'gfx' [ 0]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::__recommend' [ 0 5 10 94]
'uint64_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::float_denorm_style' [ 0 5 10]
'int' [ 0]
'FILE' [ 0]
'std::__1::locale' [ 0 5 10]
'__builtin_va_list' [ 0]
'_G_fpos64_t' [ 0]
'std::__1::__compressed_pair<media::VideoCaptureFormat *, std::__1::allocator<media::VideoCaptureFormat> >' [ 0 5 10]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >' [ 0 5 10]
'__clock_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'uint_fast16_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::__libcpp_allocate' [ 0 5 10]
'__int8_t' [ 0]
'gfx::Size::height' [ 0 5 11]
'std::__1::remove_const<media::VideoCaptureFormat>' [ 0 5 10]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'double_t' [ 0]
'__int64_t' [ 0]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::capacity' [ 0 5 10 94]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'uint32_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'media::PowerLineFrequency' [ 0 7]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::remove_reference<const media::VideoCaptureDeviceDescriptor::CameraCalibration &>' [ 0 5 10]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'int_fast16_t' [ 0]
'decltype(nullptr)' [ 0]
'gfx::Size::width' [ 0 5 11]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'media::ResolutionChangePolicy' [ 0 7]
'__mbstate_t' [ 0]
'__intmax_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::advance<media::VideoCaptureFormat *>' [ 0 5 10]
'gfx::Size::IsEmpty' [ 0 5 11]
'__int32_t' [ 0]
'media::limits' [ 0 7]
'std::__1::vector<media::VideoCaptureFormat, std::__1::allocator<media::VideoCaptureFormat> >::operator=' [ 0 5 10 94]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::allocator<media::VideoCaptureFormat>, 1, true>::__compressed_pair_elem<const std::__1::allocator<media::VideoCaptureFormat> &, void>' [ 0 5 10 91]
'media::VideoCaptureParams::SuggestConstraints' [ 0 7 27]
'logging::LogMessageVoidify' [ 0 9]
'media::VideoCaptureFormat::VideoCaptureFormat' [ 0 7 27]
'media::VideoFacingMode' [ 0 7]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'media::VideoCaptureDeviceInfo' [ 0 7]
'__FILE' [ 0]
'media::VideoCaptureDeviceDescriptor::~VideoCaptureDeviceDescriptor' [ 0 7 37]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::destroy<media::VideoCaptureFormat>' [ 0 5 10 77]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<media::VideoCaptureFormat> >::select_on_container_copy_construction' [ 0 5 10 77]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'uint16_t' [ 0]
'long int' [ 0]
'std::__1::addressof<char>' [ 0 5 10]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'float_t' [ 0]
'std::__1::__distance<media::VideoCaptureFormat *>' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std' [ 0]
'wctrans_t' [ 0]
'std::__1::char_traits<char>::compare' [ 0 5 10 29]
'va_list' [ 0]
'media::VideoCaptureFormat::ImageAllocationSize' [ 0 7 27]
'std::__1::__throw_length_error' [ 0 5 10]
'__time_t' [ 0]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'media::(anonymous namespace)' [ 0 7]
'std::__1::ostream' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'__int16_t' [ 0]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<media::VideoCaptureFormat> &>' [ 0 5 10]
'std::__1::iterator_traits<media::VideoCaptureFormat *>' [ 0 5 10]
