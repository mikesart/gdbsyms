'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::empty' [ 0 5 10 152]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::begin' [ 0 5 10 203]
'base::ListValue' [ 0 6]
'std::__1::__advance<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~vector' [ 0 5 10 101]
'std::__1::move<void (*&)()>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>::__nat, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'std::__1::iterator_traits<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::end' [ 0 5 10 203]
'std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>' [ 0 5 10]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'std::__1::move<std::__1::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&> &>' [ 0 5 10]
'std::__1::forward<char *&>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'scoped_refptr<base::SequencedTaskRunner>::operator->' [ 0 42]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'sql::Connection::CollectErrorInfo' [ 0 5 17]
'std::__1::__compressed_pair_elem<sql::TimeSource *, 0, false>::__compressed_pair_elem<sql::TimeSource *&, void>' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::MemoryDumpProvider>, 1, true>' [ 0 5 10]
'std::__1::__temp_value<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'sql::ConnectionMemoryDumpProvider' [ 0 5]
'std::__1::__compressed_pair_elem<base::Value *, 0, false>' [ 0 5 10]
'std::__1::default_delete<base::DictionaryValue>' [ 0 5 10]
'sql::Connection::Open' [ 0 5 17]
'sql::ConnectionMemoryDumpProvider::ReportMemoryUsage' [ 0 5 35]
'std::__1::false_type' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>' [ 0 5 10]
'unsigned char' [ 0]
'sql::(anonymous namespace)::RecordSqliteMemory10Min' [ 0 5 28]
'__va_list_tag' [ 0]
'std::__1::__tree_node<sql::Connection::StatementRef *, void *>' [ 0 5 10]
'base::FilePath::value' [ 0 6 16]
'std::__1::add_lvalue_reference<base::DictionaryValue>' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(), void>' [ 0 6 16]
'std::__1::addressof<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'std::__1::pointer_traits<base::Value *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'base::internal::BindState<void (*)()>' [ 0 6 16]
'AnnotateThreadName' [ 0]
'std::__1::__pointer_type<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >' [ 0 5 10]
'timeval' [ 0]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator=' [ 0 5 10 101]
'std::__1::__const_pointer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, true>' [ 0 5 10]
'logging::LogSeverity' [ 0 9]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >::AddRef' [ 0 6 112]
'std::__1::get<0, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<char *&, void>' [ 0 5 10 52]
'std::__1::__const_void_pointer<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >, false>' [ 0 5 10]
'std::__1::get<0, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'sql::Connection::Close' [ 0 5 17]
'std::__1::addressof<std::__1::aligned_storage<24, 8>::type>' [ 0 5 10]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'sqlite3' [ 0]
'std::__1::operator!=<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >' [ 0 5 10]
'std::__1::operator!=' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >, long, true>' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_sub' [ 0 5 10 36]
'logging::LOG_WARNING' [ 0 9]
'logging::CheckLEImpl' [ 0 9]
'sql::(anonymous namespace)::GetWrappedFile' [ 0 5 28]
'std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >::operator=' [ 0 5 10 81]
'std::__1::__pointer_type<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<sql::TimeSource, std::__1::default_delete<sql::TimeSource>, false>' [ 0 5 10 30]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>' [ 0 5 10]
'std::__1::lower_bound<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, sql::StatementID, base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare>' [ 0 5 10]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >' [ 0 5 10]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >::~RefCounted' [ 0 6 112]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'sql::Connection::RecordQueryTime::atomic_histogram_pointer' [ 0 5 17 34]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'sql::(anonymous namespace)::Delete' [ 0 5 28]
'sql::Statement::BindCString' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'base::trace_event::MemoryDumpManager::system_allocator_pool_name' [ 0 6 19 38]
'std::__1::forward<std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'sql::(anonymous namespace)::Sleep' [ 0 5 28]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'base::AtomicRefCount::Increment' [ 0 6 22]
'std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'sql::Connection::ResetErrorExpecter' [ 0 5 17]
'tm' [ 0]
'sql::Statement::Clear' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>' [ 0 5 10 22]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'sql::Statement::DeclaredColumnType' [ 0 5 16]
'std::__1::move<std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> > &>' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::remove_reference<sql::TimeSource *&>' [ 0 5 10]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'std::__1::conditional<false, std::__1::tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<base::RepeatingCallback<void (int, sql::Statement *)> &>' [ 0 5 10]
'AnnotateRWLockDestroy' [ 0]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 101]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >, true>' [ 0 5 10 30]
'std::__1::__pointer_type<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'sql::Connection::transaction_nesting' [ 0 5 17]
'uint_least64_t' [ 0]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >' [ 0 5 10]
'std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >::deallocate' [ 0 5 10 183]
'sql::VFSWrapper::operator()' [ 0 5 17]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::clear' [ 0 5 10 155]
'base::internal::OptionalStorageBase<unsigned long, true>' [ 0 6 16]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::release' [ 0 5 10 78]
'base::AsserterBase::~AsserterBase' [ 0 6 20]
'AnnotateBarrierWaitBefore' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider>, false>' [ 0 5 10 30]
'base::TaskRunnerTraits' [ 0 6]
'base::RepeatingCallback<void (int, sql::Statement *)>::Run' [ 0 6 55]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunOnce' [ 0 6 16 73]
'std::__1::swap<char *>' [ 0 5 10]
'sql::EnsureSqliteInitialized::first_call' [ 0 5 30]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__recommend' [ 0 5 10 203]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, void>' [ 0 5 10 98]
'AnnotateExpectRace' [ 0]
'base' [ 0]
'std::__1::remove_reference<sql::StatementID>' [ 0 5 10]
'base::SequenceChecker::SequenceChecker' [ 0 6 23]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'AnnotateNoOp' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'__pthread_list_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10 132]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::~unique_ptr' [ 0 5 10 119]
'sql::MetaTable::PrepareSetStatement' [ 0 5 16]
'std::__1::__vector_base<char, std::__1::allocator<char> >::__destruct_at_end' [ 0 5 10 59]
'std::__1::memory_order' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sqlite3_vfs, true>' [ 0 5 10]
'std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'sql::(anonymous namespace)::Access' [ 0 5 28]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'AnnotateHappensBefore' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::deallocate' [ 0 5 10 115]
'sql::Connection::HasCachedStatement' [ 0 5 17]
'sql::Connection::IntegrityCheckHelper::kNoWritableSchema' [ 0 5 17 39]
'base::time_internal::TimeBase<base::TimeTicks>::operator-' [ 0 6 21 48]
'std::__1::__compressed_pair_elem<sqlite3_vfs *, 0, false>' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::size' [ 0 5 10 155]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'std::__1::remove_reference<sql::Statement *>' [ 0 5 10]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'scoped_refptr<base::SingleThreadTaskRunner>' [ 0]
'logging::CheckNEImpl<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 9]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::unique_ptr<true, void>' [ 0 5 10 83]
'base::internal::OptionalStorage<unsigned long, true, true>' [ 0 6 16]
'std::__1::forward_as_tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::__nat, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sql::ConnectionMemoryDumpProvider, true>' [ 0 5 10]
'std::__1::function<void (sqlite3_vfs *)>::__as_base' [ 0 5 10 42]
'std::__1::__compressed_pair<sqlite3_vfs *, std::__1::function<void (sqlite3_vfs *)> >::~__compressed_pair' [ 0 5 10 87]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_long_size' [ 0 5 10 126]
'logging::CheckLTImpl<long, int>' [ 0 9]
'std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__vector_base<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'base::internal::PassingTraits<sql::Statement *, true>' [ 0 6 16]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__zero' [ 0 5 10 126]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'base::TimeDelta::FromMicroseconds' [ 0 6 17]
'std::__1::operator==<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct_backward<std::__1::basic_string<char> *>' [ 0 5 10 81]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 101]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 132]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::cbegin' [ 0 6 16 256]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::clear' [ 0 5 10 210]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~__vector_base' [ 0 5 10 108]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::release' [ 0 5 10 95]
'sql::Connection::ReleaseCacheMemoryIfNeeded' [ 0 5 17]
'size_type' [ 0]
'std::__1::default_delete<sql::ConnectionMemoryDumpProvider>::operator()' [ 0 5 10 61]
'sql::Statement::BindBool' [ 0 5 16]
'std::__1::remove_reference<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long> >' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::__append' [ 0 5 10 52]
'std::__1::default_delete<sql::TimeSource>::operator()' [ 0 5 10 43]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*)(), std::__1::tuple<>>' [ 0 6 16 73]
'std::__1::__const_void_pointer<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >, false>' [ 0 5 10]
'sql::Connection::RecordOneEvent' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &, 1, false>::__get' [ 0 5 10 149]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'sql::Connection::GetLastInsertRowId' [ 0 5 17]
'std::__1::__compressed_pair_elem<char *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 52]
'std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator*' [ 0 5 10 108]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::reset' [ 0 5 10 208]
'logging::MakeCheckOpString<long, long>' [ 0 9]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> *>' [ 0 5 10]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 132]
'std::__1::__invoke_void_return_wrapper<void>::__call<(lambda at ../../sql/vfs_wrapper.cc:404:7) &, sqlite3_vfs *>' [ 0 5 10 46]
'std::__1::forward<std::__1::default_delete<sql::Recovery> >' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> , false, false>' [ 0 5 10 85]
'logging::MakeCheckOpValueString<long>' [ 0 9]
'std::__1::__add_lvalue_reference_impl<base::trace_event::MemoryAllocatorDump, true>' [ 0 5 10]
'sql::Statement::ColumnBlobAsString' [ 0 5 16]
'std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >::deallocate' [ 0 5 10 86]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::unique_ptr<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> >' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'logging::LOG_FATAL' [ 0 9]
'base::ThreadCollisionWarner::ThreadCollisionWarner' [ 0 6 29]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char> *>::__nat, std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::move<base::RepeatingCallback<void (int, sql::Statement *)> &>' [ 0 5 10]
'std::__1::min<unsigned long>' [ 0 5 10]
'std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::operator++' [ 0 5 10 132]
'(anonymous namespace)::ValidAttachmentPoint' [ 0 23]
'long long int' [ 0]
'std::__1::move<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *&>' [ 0 5 10]
'sql::Statement::BindInt' [ 0 5 16]
'std::__1::__compressed_pair_elem<sql::Recovery *, 0, false>::__compressed_pair_elem<sql::Recovery *, void>' [ 0 5 10 61]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'sql::Connection::OpenInternal' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::MemoryDumpProvider>, 1, true>::__compressed_pair_elem<std::__1::default_delete<sql::ConnectionMemoryDumpProvider>, void>' [ 0 5 10 108]
'std::__1::__compressed_pair<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>' [ 0 5 10 217]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::clear' [ 0 6 16 256]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > &>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'AnnotateIgnoreReadsEnd' [ 0]
'sql::MetaTable::SetCompatibleVersionNumber' [ 0 5 16]
'(anonymous namespace)::BackupDatabase' [ 0 23]
'std::__1::forward<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__tuple_types<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__emplace_unique_key_args<sql::Connection::StatementRef *, sql::Connection::StatementRef *const &>' [ 0 5 10 155]
'std::__1::__compressed_pair<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >::__compressed_pair<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>' [ 0 5 10 139]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::DictionaryValue *, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'std::__1::piecewise_construct' [ 0 5 10]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >::deallocate' [ 0 5 10 212]
'std::__1::add_lvalue_reference<base::Value>' [ 0 5 10]
'base::BindOnce<void (*)()>' [ 0 6]
'ignore_result<bool>' [ 0]
'AnnotateIgnoreWritesBegin' [ 0]
'wctype_t' [ 0]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> &, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, false>' [ 0 5 10 241]
'std::__1::__compressed_pair<sql::TimeSource *, std::__1::default_delete<sql::TimeSource> >::__compressed_pair<sql::TimeSource *&, true>' [ 0 5 10 92]
'base::DCheckAsserter::DCheckAsserter' [ 0 6 22]
'sql::IsErrorCatastrophic' [ 0 5]
'std::__1::__compressed_pair_elem<base::DictionaryValue *, 0, false>::__compressed_pair_elem<base::DictionaryValue *&, void>' [ 0 5 10 69]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 101]
'sql::(anonymous namespace)::FileControl' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::Value>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, long, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<base::Value>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__get' [ 0 5 10 98]
'std::__1::conditional<false, std::__1::pointer_traits<base::trace_event::MemoryAllocatorDump::Entry *>::__nat, base::trace_event::MemoryAllocatorDump::Entry>' [ 0 5 10]
'std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::operator*' [ 0 5 10 132]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'double_t' [ 0]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::operator=<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>, void, void>' [ 0 5 10 75]
'sql::Connection::GetErrorCode' [ 0 5 17]
'std::__1::__compressed_pair<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'std::__1::__distance<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryDumpProvider *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__construct_backward<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10 132]
'std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::__get_np' [ 0 5 10 138]
'base::RepeatingCallback<void (int, sql::Statement *)>::operator=' [ 0 6 55]
'std::__1::__const_void_pointer<unsigned short *, std::__1::allocator<unsigned short>, false>' [ 0 5 10]
'uint_fast64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >, 1, true>' [ 0 5 10]
'sql::MetaTable::Init' [ 0 5 16]
'std::__1::__compressed_pair<sql::Recovery *, std::__1::default_delete<sql::Recovery> >::__compressed_pair<sql::Recovery *, true>' [ 0 5 10 88]
'base::StringPiece' [ 0 6]
'(anonymous namespace)::kMmapStatusKey' [ 0 23]
'sql::(anonymous namespace)::DlError' [ 0 5 28]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::reset' [ 0 5 10 119]
'std::__1::integer_sequence<unsigned long>' [ 0 5 10]
'std::__1::__const_void_pointer<base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, false>' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::__swap_out_circular_buffer' [ 0 5 10 52]
'std::__1::__compressed_pair<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::__compressed_pair<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10 411]
'sql::MetaTable::~MetaTable' [ 0 5 16]
'std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >::~pair' [ 0 5 10 81]
'sql::(anonymous namespace)::ShmMap' [ 0 5 28]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__end_cap' [ 0 5 10 110]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::allocator_traits<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'(anonymous namespace)::RecordDeprecationEvent::atomic_histogram_pointer' [ 0 23 47]
'base::AutoLock::~AutoLock' [ 0 6 16]
'logging::CheckEQImpl<char, char>' [ 0 9]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::emplace_back<const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 212]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 109]
'std::__1::aligned_storage<24, 8>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::AddRefImpl' [ 0 6 14 40]
'base::subtle::RefCountedBase::AddRefImpl' [ 0 6 14 30]
'sql::Recovery::BeginRecoverDatabase' [ 0 5 15]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryAllocatorDump::Entry *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 81]
'std::__1::less<void>' [ 0 5 10]
'std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10]
'base::detail' [ 0 6]
'sql::(anonymous namespace)::Unlock' [ 0 5 28]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned short>, 1, true>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, true>' [ 0 5 10]
'std::__1::__const_pointer<base::Value, base::Value *, std::__1::allocator<base::Value>, true>' [ 0 5 10]
'sql::(anonymous namespace)::CurrentTimeInt64' [ 0 5 28]
'std::__1::__pointer_type_imp::__pointer_type<sql::Connection::StatementRef *, std::__1::allocator<sql::Connection::StatementRef *>, true>' [ 0 5 10 30]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare::extract_if_value_type<sql::StatementID>' [ 0 6 16 256 273]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'sql::(anonymous namespace)::GetSystemCall' [ 0 5 28]
'std::__1::remove_reference<sql::Recovery *&>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)>, false>' [ 0 5 10 30]
'std::__1::forward<sql::StatementID &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, 0, false>' [ 0 5 10]
'base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >::operator()' [ 0 6 16 107]
'base::trace_event' [ 0 6]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'sql::Connection::DoesSchemaItemExist' [ 0 5 17]
'base::subtle::AdoptRefTag' [ 0 6 14]
'sql::Connection::RecordTimeAndChanges' [ 0 5 17]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::__construct_at_end' [ 0 5 10 61]
'std::__1::remove_reference<std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<sql::Connection::StatementRef *>, long, true>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>' [ 0 5 10]
'std::__1::tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'std::__1::add_lvalue_reference<sqlite3_vfs>' [ 0 5 10]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::destroy' [ 0 5 10 22 161]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'sqlite3_stmt' [ 0]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::unique_ptr<char *, true, void, void>' [ 0 5 10 67]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::destroy<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10 132]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *&>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator[]' [ 0 5 10 101]
'logging::MakeCheckOpString<long, int>' [ 0 9]
'sql::Connection::RecordEvent::atomic_histogram_pointer' [ 0 5 17 30]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::__compressed_pair<true, void>' [ 0 5 10 181]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__is_long' [ 0 5 10 126]
'base::internal::PassingTraits<int, true>' [ 0 6 16]
'sql::ColType' [ 0 5]
'std::__1::tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>::tuple<true, false>' [ 0 5 10 90]
'std::__1::__to_raw_pointer<char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::destroy<sql::Connection::StatementRef *>' [ 0 5 10 115]
'sql::Connection::has_error_callback' [ 0 5 17]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::unique_ptr' [ 0 5 10 75]
'scoped_refptr<sql::Connection::StatementRef>::operator->' [ 0 46]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >, void>' [ 0 5 10 165]
'InvokeFuncStorage' [ 0]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__vector_base' [ 0 5 10 108]
'std::__1::__tree_node_base<void *>' [ 0 5 10]
'std::__1::remove_reference<base::Value *>' [ 0 5 10]
'base::trace_event::MemoryAllocatorDumpGuid' [ 0 6 19]
'std::__1::__wrap_iter<const base::Value *>' [ 0 5 10]
'std::__1::__search_substring<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::operator bool' [ 0 5 10 119]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'int' [ 0]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'std::__1::addressof<sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::size' [ 0 5 10 203]
'__builtin_va_list' [ 0]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::__tuple_types<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&>' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::vector' [ 0 5 10 203]
'std::__1::__compressed_pair_elem<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, 0, false>' [ 0 5 10]
'sql' [ 0]
'std::__1::forward<const std::__1::basic_string<char> &>' [ 0 5 10]
'uint_fast16_t' [ 0]
'sql::Connection::OpenTemporary' [ 0 5 17]
'AnnotateIgnoreReadsBegin' [ 0]
'std::__1::unique_ptr<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >::~unique_ptr' [ 0 5 10 83]
'std::__1::__move_backward<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'base::subtle::Release_Store' [ 0 6 14]
'std::__1::remove_reference<std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> > &>' [ 0 5 10]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >::__compressed_pair<char *&, true>' [ 0 5 10 73]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::__func' [ 0 5 10 22 161]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'sql::Recovery::ShouldRecover' [ 0 5 15]
'sql::(anonymous namespace)::VfsFile' [ 0 5 28]
'base::internal::BindState<void (*)()>::~BindState' [ 0 6 16 39]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::capacity' [ 0 5 10 61]
'uint32_t' [ 0]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'base::Singleton<sql::SqlMemoryDumpProvider, base::LeakySingletonTraits<sql::SqlMemoryDumpProvider>, sql::SqlMemoryDumpProvider>::instance_' [ 0 6 129]
'sql::Connection::DbPath' [ 0 5 17]
'std::__1::__add_lvalue_reference_impl<base::Value, true>' [ 0 5 10]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__insert_node_at' [ 0 5 10 155]
'sql::Connection::set_histogram_tag' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10 30]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::~unique_ptr' [ 0 5 10 79]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::capacity' [ 0 5 10 212]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::resize' [ 0 5 10 126]
'std::__1::pair<std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>::pair<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool, false>' [ 0 5 10 160]
'std::__1::vector<char, std::__1::allocator<char> >::capacity' [ 0 5 10 52]
'sql::Connection::CloseInternal' [ 0 5 17]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true> >' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> > &>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::Value *, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long> >' [ 0 5 10]
'std::__1::remove_reference<int>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::get' [ 0 5 10 208]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::release' [ 0 5 10 208]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, false>' [ 0 5 10]
'std::__1::less<sql::Connection::StatementRef *>::operator()' [ 0 5 10 49]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__end_cap' [ 0 5 10 212]
'std::__1::__tree_next<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'base::internal::IsNull<void (*)()>' [ 0 6 16]
'running_on_valgrind' [ 0]
'base::TimeDelta' [ 0 6]
'std::__1::default_delete<base::Value>' [ 0 5 10]
'sql::Connection::GetSchema' [ 0 5 17]
'sql::(anonymous namespace)::ShmBarrier' [ 0 5 28]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::cbegin' [ 0 5 10 203]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::unique_ptr<true, void>' [ 0 5 10 75]
'std::__1::conditional<true, std::__1::pointer_traits<void *>::__nat, void>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::deallocate' [ 0 5 10 132]
'sql::MetaTable::RazeIfDeprecated' [ 0 5 16]
'sql::EnsureSqliteInitialized' [ 0 5]
'__intmax_t' [ 0]
'std::__1::swap<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'(anonymous namespace)::ScopedBusyTimeout::~ScopedBusyTimeout' [ 0 23 42]
'logging::LOG_DCHECK' [ 0 9]
'base::subtle::RefCountedBase::RefCountedBase' [ 0 6 14 30]
'base::DefaultSingletonTraits<sql::SqlMemoryDumpProvider>' [ 0 6]
'base::Singleton<sql::SqlMemoryDumpProvider, base::LeakySingletonTraits<sql::SqlMemoryDumpProvider>, sql::SqlMemoryDumpProvider>::get' [ 0 6 129]
'scoped_refptr<sql::Connection::StatementRef>::Release' [ 0 46]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >::construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 103]
'std::__1::forward<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> &>' [ 0 5 10]
'AnnotatePCQGet' [ 0]
'std::__1::__throw_bad_function_call' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::~__vector_base' [ 0 5 10 210]
'base::internal::LockImpl::Unlock' [ 0 6 16 26]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::~__split_buffer' [ 0 5 10 212]
'std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >' [ 0 5 10]
'std::__1::remove_reference<scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10]
'std::__1::default_delete<char []>::operator()<char>' [ 0 5 10 35]
'sql::(anonymous namespace)::RecordRecoveryEvent::atomic_histogram_pointer' [ 0 5 28 49]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, true>' [ 0 5 10]
'sql::Statement::ColumnType' [ 0 5 16]
'std::__1::__compressed_pair<sql::Recovery *, std::__1::default_delete<sql::Recovery> >::__compressed_pair<sql::Recovery *&, true>' [ 0 5 10 88]
'std::__1::remove_reference<(lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'sqlite_int64' [ 0]
'std::__1::move<sql::Connection::StatementRef *&>' [ 0 5 10]
'std::__1::atomic<long>' [ 0 5 10]
'sql::Connection::RecordAutoCommitTime::atomic_histogram_pointer' [ 0 5 17 39]
'base::flat_map<sql::StatementID, scoped_refptr<sql::Connection::StatementRef>, std::__1::less<void> >::operator[]' [ 0 6 103]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10 132]
'base::TimeDelta::Max' [ 0 6 17]
'float_t' [ 0]
'sql::Connection::GetMmapAltStatus' [ 0 5 17]
'base::internal::BindStateBase' [ 0 6 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'base::DefaultRefCountedTraits<sql::Connection::StatementRef>' [ 0 6]
'base::TimeTicks' [ 0 6]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::__annotate_shrink' [ 0 5 10 52]
'std::__1::__throw_length_error' [ 0 5 10]
'sql::Connection::IntegrityCheckHelper::kWritableSchema' [ 0 5 17 39]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::operator bool' [ 0 5 10 95]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::resize' [ 0 5 10 52]
'std::__1::vector<char, std::__1::allocator<char> >::operator[]' [ 0 5 10 52]
'std::__1::ostream' [ 0 5 10]
'sql::TimeSource::TimeSource' [ 0 5 17]
'std::__1::tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>::tuple<true, false>' [ 0 5 10 69]
'AnnotateEnableRaceDetection' [ 0]
'std::__1::binary_function<sql::Connection::StatementRef *, sql::Connection::StatementRef *, bool>' [ 0 5 10]
'std::__1::default_delete<sql::ConnectionMemoryDumpProvider>' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::const_cast_it' [ 0 6 16 256]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'__time_t' [ 0]
'base::subtle::Atomic32' [ 0 6 14]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'std::__1::remove_reference<std::__1::tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &> &>' [ 0 5 10]
'std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::__tree_const_iterator' [ 0 5 10 138]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 114]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, long, true>' [ 0 5 10]
'sql::Transaction::Begin' [ 0 5 18]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sql::TimeSource>, 1, true>' [ 0 5 10]
'sql::Connection::Poison' [ 0 5 17]
'sql::MetaTable::GetVersionNumber' [ 0 5 16]
'base::StringPiece16' [ 0 6]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__compressed_pair<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >::__compressed_pair<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10 139]
'sql::(anonymous namespace)::Close' [ 0 5 28]
'std::__1::conditional<false, std::__1::pointer_traits<base::Value *>::__nat, base::Value>' [ 0 5 10]
'scoped_refptr<base::SingleThreadTaskRunner>::scoped_refptr' [ 0 45]
'std::__1::forward<sql::ConnectionMemoryDumpProvider *>' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::~unique_ptr' [ 0 5 10 67]
'AnnotateHappensAfter' [ 0]
'sql::Statement::BindString16' [ 0 5 16]
'std::__1::__pointer_type_imp::__pointer_type<sql::Recovery, std::__1::default_delete<sql::Recovery>, false>' [ 0 5 10 30]
'std::__1::__pointer_type<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >' [ 0 5 10]
'logging::CheckEQImpl<int, long long>' [ 0 9]
'std::__1::move<std::__1::basic_string<char> *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::__vector_base<char, std::__1::allocator<char> >::capacity' [ 0 5 10 59]
'std::__1::move<std::__1::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&> &>' [ 0 5 10]
'std::__1::next<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'sql::Statement::ColumnBlobAsString16' [ 0 5 16]
'GetRunningOnValgrind' [ 0]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::emplace<const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 203]
'base::OnceCallback<void ()>::OnceCallback' [ 0 6 29]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::~unique_ptr' [ 0 5 10 78]
'std::__1::__compressed_pair<sql::ConnectionMemoryDumpProvider *, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::__destruct_at_end' [ 0 5 10 61]
'logging::CheckEQImpl' [ 0 9]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'(anonymous namespace)::ScopedBusyTimeout' [ 0 23]
'scoped_refptr<sql::Connection::StatementRef>::AddRef' [ 0 46]
'std::__1::default_delete<base::Value>::operator()' [ 0 5 10 39]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::ListValue>, 1, true>' [ 0 5 10]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'sql::Recovery::db' [ 0 5 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >, 1, true>' [ 0 5 10]
'sql::Transaction' [ 0 5]
'std::__1::default_delete<base::trace_event::MemoryDumpProvider>::operator()' [ 0 5 10 65]
'sql::Transaction::~Transaction' [ 0 5 18]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> > >' [ 0 5 10]
'sql::Statement::ColumnString16' [ 0 5 16]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >' [ 0 5 10]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'base::trace_event::MemoryDumpProvider::MemoryDumpProvider' [ 0 6 19 39]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::allocate' [ 0 5 10 81]
'std::__1::__pointer_type<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'int_least64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::DictionaryValue>, 1, true>' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::max_size' [ 0 5 10 203]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::get' [ 0 5 10 119]
'scoped_refptr<base::internal::BindStateBase>::operator bool' [ 0 46]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<char *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, true>' [ 0 5 10 30]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 177]
'std::__1::forward<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>' [ 0 5 10]
'std::__1::pointer_traits<(lambda at ../../sql/vfs_wrapper.cc:404:7) *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'sql::(anonymous namespace)::Sync' [ 0 5 28]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign' [ 0 5 10 101]
'std::__1::__tree<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'fpos_t' [ 0]
'sql::Statement::BindString' [ 0 5 16]
'std::__1::move<std::__1::tuple<> &>' [ 0 5 10]
'std::__1::allocator<unsigned short>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>::__tuple_impl<0, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10 106]
'sql::StatementID::StatementID' [ 0 5 18]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::~__tree' [ 0 5 10 155]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::operator->' [ 0 5 10 208]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::allocator<base::Value>, true>' [ 0 5 10 30]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::forward<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *&>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::~__split_buffer' [ 0 5 10 110]
'int8_t' [ 0]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::end' [ 0 5 10 155]
'(anonymous namespace)::DeprecationEventType' [ 0 23]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'sql::MetaTable::DoesTableExist' [ 0 5 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::distance<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::default_delete<char []>, false>' [ 0 5 10 30]
'sql::TimeSource::~TimeSource' [ 0 5 17]
'std::__1::remove_reference<std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> > &>' [ 0 5 10]
'base::NoDestructor<base::Lock>::get' [ 0 6 32]
'std::__1::__less<int, int>' [ 0 5 10]
'base::ThreadCollisionWarner' [ 0 6]
'sql::(anonymous namespace)::AsVfsFile' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, 1, true>::__compressed_pair_elem<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, 0>' [ 0 5 10 108]
'std::__1::forward<base::Value *>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::ListValue, true>' [ 0 5 10]
'std::__1::less<void>::operator()<const sql::StatementID &, sql::StatementID &>' [ 0 5 10 22]
'std::__1::__compressed_pair_elem<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, 1, true>' [ 0 5 10]
'sql::(anonymous namespace)::GetWrappedVfs' [ 0 5 28]
'std::__1::__pointer_type<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, false>' [ 0 5 10]
'std::__1::add_lvalue_reference<sql::Recovery>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__swap_out_circular_buffer' [ 0 5 10 101]
'std::__1::remove_reference<bool &>' [ 0 5 10]
'std::__1::__tuple_types<>' [ 0 5 10]
'sql::Connection::StatementRef::was_valid' [ 0 5 17 31]
'sql::Connection::RecordUpdateTime::atomic_histogram_pointer' [ 0 5 17 35]
'std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::forward<(lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10]
'std::__1::literals' [ 0 5 10]
'AnnotatePublishMemoryRange' [ 0]
'__uint64_t' [ 0]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::pointer_to' [ 0 5 10 93]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::end' [ 0 5 10 152]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::flat_tree' [ 0 6 16 256]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::unique_ptr<true, void>' [ 0 5 10 119]
'base::DefaultSingletonTraits<sql::SqlMemoryDumpProvider>::New' [ 0 6 58]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::forward<sql::Recovery *&>' [ 0 5 10]
'std::__1::__tuple_types<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'base::AsserterBase' [ 0 6]
'_G_fpos64_t' [ 0]
'AnnotateRWLockCreate' [ 0]
'std::__1::remove_reference<void (*)()>' [ 0 5 10]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'std::__1::remove_reference<base::ListValue *&>' [ 0 5 10]
'base::NoDestructor<base::Lock>::operator*' [ 0 6 32]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::__function::__base<void (sqlite3_vfs *)>' [ 0 5 10 22]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<char> >::construct<char>' [ 0 5 10 56]
'std::__1::__compressed_pair<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 216]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__push_back_slow_path<std::__1::basic_string<char> >' [ 0 5 10 101]
'base::RepeatingCallback<bool (int)>' [ 0 6]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::vector<char, std::__1::allocator<char> >::__annotate_new' [ 0 5 10 52]
'std::__1::vector<char, std::__1::allocator<char> >::__recommend' [ 0 5 10 52]
'int_least16_t' [ 0]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'std::__1::forward<bool &>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<sql::Connection::StatementRef *, void *, std::__1::__tree_key_value_types<sql::Connection::StatementRef *>, false>' [ 0 5 10]
'std::__1::__vector_base<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::__construct<char>' [ 0 5 10 56]
'std::__1::__compressed_pair<sql::TimeSource *, std::__1::default_delete<sql::TimeSource> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::unique_ptr<true, void>' [ 0 5 10 402]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunOnce::num_bound_args' [ 0 6 16 73 82]
'sql::(anonymous namespace)::CheckReservedLock' [ 0 5 28]
'time_t' [ 0]
'sqlite3_io_methods' [ 0]
'bool' [ 0]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::construct<sql::Connection::StatementRef *, sql::Connection::StatementRef *const &>' [ 0 5 10 115]
'(anonymous namespace)::ScopedWritableSchema::~ScopedWritableSchema' [ 0 23 45]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'clock_t' [ 0]
'sql::Connection::ExecuteAndReturnErrorCode' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::Value>, 1, true>::__compressed_pair_elem<std::__1::default_delete<base::ListValue>, void>' [ 0 5 10 82]
'std::__1::forward<const std::__1::less<sql::Connection::StatementRef *> &>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >' [ 0 5 10]
'sql::MetaTable::PrepareGetStatement' [ 0 5 16]
'sql::Connection::SetErrorExpecter' [ 0 5 17]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>::__tuple_impl<0, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10 122]
'sql::(anonymous namespace)::Unfetch' [ 0 5 28]
'std::__1::forward_as_tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'sql::ConnectionMemoryDumpProvider::ResetDatabase' [ 0 5 35]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*)()>' [ 0 6 16 43]
'sql::Connection::RazeAndClose' [ 0 5 17]
'sql::Connection::RegisterIntentToUpload::kDiagnosticDumpsKey' [ 0 5 17 41]
'scoped_refptr<sql::Connection::StatementRef>' [ 0]
'std::__1::unique_ptr<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >::reset' [ 0 5 10 83]
'sql::Connection::Execute' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, 1, true>' [ 0 5 10]
'sql::Connection::SetMmapAltStatus' [ 0 5 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'sql::Connection::RecordQueryTime' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10 30]
'sql::Recovery::SetupMeta::kCreateSql' [ 0 5 15 26]
'std::__1::pointer_traits<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__lower_bound<sql::Connection::StatementRef *>' [ 0 5 10 155]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'sql::Connection::GetAppropriateMmapSize' [ 0 5 17]
'__suseconds_t' [ 0]
'__uint16_t' [ 0]
'__vtbl_ptr_type' [ 0]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'base::subtle::RefCountedBase::Release' [ 0 6 14 30]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1::move_backward<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'wint_t' [ 0]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::unique_ptr<true, void>' [ 0 5 10 95]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__node_alloc' [ 0 5 10 155]
'std::__1::move<std::__1::tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &> &>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__push_back_slow_path<const std::__1::basic_string<char> &>' [ 0 5 10 101]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__pointer_type<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'sql::Statement::ColumnInt' [ 0 5 16]
'sql::(anonymous namespace)::SetSystemCall' [ 0 5 28]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::vector<base::Value, std::__1::allocator<base::Value> >::size' [ 0 5 10 66]
'int32_t' [ 0]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'short' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>, false>' [ 0 5 10 30]
'std::__1::allocator<std::__1::basic_string<char> >::allocate' [ 0 5 10 52]
'std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::operator*' [ 0 5 10 138]
'sql::MetaTable::SetVersionNumber' [ 0 5 16]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::clear' [ 0 5 10 203]
'sql::Connection::RollbackTransaction' [ 0 5 17]
'sql::Statement::Step' [ 0 5 16]
'std::__1::__compressed_pair<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'std::__1::tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'logging::MakeCheckOpString<int, long long>' [ 0 9]
'sql::Statement::Reset' [ 0 5 16]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::__tuple_leaf<0, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&, false>::get' [ 0 5 10 81]
'std::__1::pointer_traits<void *>' [ 0 5 10]
'std::__1::__tree_node_base<void *>::__parent_unsafe' [ 0 5 10 36]
'std::__1::vector<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::as_const' [ 0 6 16 256]
'std::__1::__compressed_pair<sqlite3_vfs *, std::__1::function<void (sqlite3_vfs *)> >::__compressed_pair<sqlite3_vfs *&, std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator++' [ 0 5 10 112]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::__const_pointer<std::__1::basic_string<char>, std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, 1, true>' [ 0 5 10]
'sql::ConnectionMemoryDumpProvider::ConnectionMemoryDumpProvider' [ 0 5 35]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::reset' [ 0 5 10 83]
'std::__1::__size_type<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, long, true>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::__compressed_pair<char *, std::__1::default_delete<char []> >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator+=' [ 0 5 10 112]
'sql::Connection::DoesColumnExist' [ 0 5 17]
'sql::ConnectionMemoryDumpProvider::~ConnectionMemoryDumpProvider' [ 0 5 35]
'std::__1::__function::__base<void (sqlite3_vfs *)>::__base' [ 0 5 10 22 52]
'sql::(anonymous namespace)::SchemaCopyHelper' [ 0 5 28]
'std::__1::__compressed_pair_elem<std::__1::allocator<char> &, 1, false>' [ 0 5 10]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::begin' [ 0 5 10 152]
'AnnotateTraceMemory' [ 0]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 52]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> >, 1, true>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>::__nat, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'base::NoDestructor<base::Lock>::NoDestructor<>' [ 0 6 32]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::empty' [ 0 5 10 101]
'sql::Connection::DoRollback' [ 0 5 17]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryDumpProvider *, 0, false>::__compressed_pair_elem<sql::ConnectionMemoryDumpProvider *, void>' [ 0 5 10 85]
'std::__1::__pointer_type<unsigned short, std::__1::allocator<unsigned short> >' [ 0 5 10]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::clear' [ 0 5 10 61]
'logging::CheckGEImpl<long, int>' [ 0 9]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::__compressed_pair<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10 217]
'std::__1::remove_reference<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *&>' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >' [ 0 6 16]
'std::__1::remove_reference<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>' [ 0 5 10]
'std::__1::default_delete<base::DictionaryValue>::operator()' [ 0 5 10 49]
'base::internal::PassingTraitsType<int>' [ 0 6 16]
'logging::CheckEQImpl<long, long>' [ 0 9]
'std::__1::__rebind_pointer<void *, sql::Connection::StatementRef *const>' [ 0 5 10]
'base::internal' [ 0 6]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::find<sql::StatementID>' [ 0 6 16 256]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__destruct_at_end' [ 0 5 10 210]
'std::__1::__move<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::operator->' [ 0 5 10 78]
'std::__1::remove_reference<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__destroy<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10 132]
'uintptr_t' [ 0]
'std::__1::__compressed_pair<sql::ConnectionMemoryDumpProvider *, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::__compressed_pair<sql::ConnectionMemoryDumpProvider *, true>' [ 0 5 10 128]
'std::__1::function<void (sqlite3_vfs *)>::operator()' [ 0 5 10 42]
'std::__1::__temp_value<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::get' [ 0 5 10 209]
'std::__1::__tree_node_base<void *>::__set_parent' [ 0 5 10 36]
'AnnotateCondVarSignalAll' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'int_fast32_t' [ 0]
'base::AutoLock::AutoLock' [ 0 6 16]
'std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::__tree_iterator' [ 0 5 10 132]
'scoped_refptr<sql::Connection::StatementRef>::operator=' [ 0 46]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::get' [ 0 5 10 78]
'std::__1::__compressed_pair<base::trace_event::MemoryDumpProvider *, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >::__compressed_pair<sql::ConnectionMemoryDumpProvider *, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10 136]
'AnnotatePCQPut' [ 0]
'std::__1::operator==<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'(anonymous namespace)::ScopedWritableSchema' [ 0 23]
'base::internal::LockImpl' [ 0 6 16]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::Release' [ 0 6 70]
'std::__1::forward<scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10]
'FILE' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sql::Recovery>, 1, true>' [ 0 5 10]
'sql::Connection::is_open' [ 0 5 17]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__annotate_new' [ 0 5 10 203]
'std::__1::default_delete<sql::Recovery>::operator()' [ 0 5 10 41]
'sql::SqlMemoryDumpProvider::OnMemoryDump' [ 0 5 28]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::erase' [ 0 5 10 155]
'std::__1::locale' [ 0 5 10]
'std::__1::forward<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'base::internal::OptionalBase<unsigned long>' [ 0 6 16]
'std::__1::move<std::__1::tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &> &>' [ 0 5 10]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::~__func' [ 0 5 10 22 161]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, 1, true>' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::key_comp' [ 0 6 16 256]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >, 1, false>' [ 0 5 10]
'base::trace_event::MemoryDumpArgs' [ 0 6 19]
'std::__1::unique_ptr<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >::reset' [ 0 5 10 127]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::release' [ 0 5 10 119]
'base::subtle' [ 0 6]
'sql::Connection::RegisterIntentToUpload::kVersionKey' [ 0 5 17 41]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'base::subtle::RefCountedThreadSafeBase::ReleaseImpl' [ 0 6 14 40]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *&, void>' [ 0 5 10 110]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'sql::Recovery::~Recovery' [ 0 5 15]
'std::__1::__tree_key_value_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, false>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<sql::Connection::StatementRef *> >, std::__1::__tree_node<sql::Connection::StatementRef *, void *> >' [ 0 5 10]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::__clone' [ 0 5 10 22 161]
'__int64_t' [ 0]
'sql::Connection::GetErrorMessage' [ 0 5 17]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::__annotate_delete' [ 0 5 10 52]
'std::__1::__vector_base<char, std::__1::allocator<char> >::__end_cap' [ 0 5 10 59]
'base::char16' [ 0 6]
'sql::Statement::BindInt64' [ 0 5 16]
'sql::Recovery::SetupMeta' [ 0 5 15]
'std::__1::default_delete<sql::TimeSource>' [ 0 5 10]
'sql::Recovery::RecoverDatabase' [ 0 5 15]
'base::AtomicRefCount::IsZero' [ 0 6 22]
'sql::(anonymous namespace)::DlSym' [ 0 5 28]
'sql::MetaTable::GetMmapStatus' [ 0 5 16]
'sql::(anonymous namespace)::RecordSqliteMemory10Min::atomic_histogram_pointer' [ 0 5 28 53]
'std::__1::__size_type<std::__1::allocator<std::__1::basic_string<char> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::less<sql::Connection::StatementRef *> >::__compressed_pair<int, const std::__1::less<sql::Connection::StatementRef *> &>' [ 0 5 10 94]
'std::__1::__compressed_pair<base::trace_event::MemoryDumpProvider *, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >' [ 0 5 10]
'sql::Connection::StatementRef::stmt' [ 0 5 17 31]
'std::__1::__invoke_void_return_wrapper<void>' [ 0 5 10]
'base::ListValue::~ListValue' [ 0 6 17]
'std::__1::__rebind_pointer<void *, sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&>::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7), false, false>' [ 0 5 10 64]
'(anonymous namespace)::kBusyTimeoutSeconds' [ 0 23]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::release' [ 0 5 10 83]
'std::__1::allocator<base::Value>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>' [ 0 5 10]
'base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >' [ 0 6 16]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__root_ptr' [ 0 5 10 155]
'std::__1::__size_type<std::__1::allocator<unsigned short>, long, true>' [ 0 5 10]
'std::__1::__invoke<(lambda at ../../sql/vfs_wrapper.cc:404:7) &, sqlite3_vfs *>' [ 0 5 10]
'sql::Connection::GetUntrackedStatement' [ 0 5 17]
'std::__1::__wrap_iter<base::Value *>' [ 0 5 10]
'std::__1::move<char *&>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, false>' [ 0 5 10]
'std::__1::default_delete<base::ListValue>' [ 0 5 10]
'std::__1::forward<sql::TimeSource *&>' [ 0 5 10]
'sql::Connection::GetStatementImpl' [ 0 5 17]
'std::__1::less<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10 30]
'sql::Connection::StatementRefDeleted' [ 0 5 17]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > &>' [ 0 5 10]
'sql::Connection::StatementRef::connection' [ 0 5 17 31]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 108]
'std::__1::__wrap_iter<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::aligned_storage<24, 16>' [ 0 5 10]
'std::__1::remove_reference<std::__1::basic_string<char> *&>' [ 0 5 10]
'std::__1::forward<sql::Recovery *>' [ 0 5 10]
'sql::Statement::ColumnBlobAsVector' [ 0 5 16]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >::Release' [ 0 6 112]
'std::__1::less<void>::operator()<const sql::StatementID &, const sql::StatementID &>' [ 0 5 10 22]
'std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'base::trace_event::MemoryAllocatorDump::guid' [ 0 6 19 40]
'base::flat_map<sql::StatementID, scoped_refptr<sql::Connection::StatementRef>, std::__1::less<void> >::flat_map' [ 0 6 103]
'base::nullopt_t' [ 0 6]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__destruct_at_end' [ 0 5 10 108]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::lower_bound<sql::StatementID>' [ 0 6 16 256]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, long, true>' [ 0 5 10]
'sql::Connection::RecordCommitTime' [ 0 5 17]
'base::Lock::Acquire' [ 0 6 12]
'sql::Connection::DoesIndexExist' [ 0 5 17]
'std::__1::__rebind_pointer<void *, std::__1::__tree_node_base<void *> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'std::__1::move<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::__compressed_pair<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::~vector' [ 0 5 10 203]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__annotate_shrink' [ 0 5 10 203]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::base' [ 0 5 10 112]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__construct_at_end<std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10 212]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>' [ 0 5 10]
'AnnotatePCQCreate' [ 0]
'std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >::allocate' [ 0 5 10 183]
'std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >::construct<sql::Connection::StatementRef *, sql::Connection::StatementRef *const &>' [ 0 5 10 86]
'uint8_t' [ 0]
'sql::Connection::RecordCommitTime::atomic_histogram_pointer' [ 0 5 17 35]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::pointer_traits<base::trace_event::MemoryAllocatorDump::Entry *>' [ 0 5 10]
'std::__1::forward<sql::StatementID>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::push_back' [ 0 5 10 101]
'std::__1::operator==' [ 0 5 10]
'AnnotateIgnoreWritesEnd' [ 0]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::unsafe_emplace<const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 6 16 256]
'std::__1::allocator_traits<std::__1::allocator<unsigned short> >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'sql::Statement::Statement' [ 0 5 16]
'std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::__get_np' [ 0 5 10 132]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::get_deleter' [ 0 5 10 208]
'std::__1::allocator<std::__1::basic_string<char> >' [ 0 5 10]
'base::TimeDelta::FromHours' [ 0 6 17]
'__int16_t' [ 0]
'base::AsserterBase::AsserterBase' [ 0 6 20]
'std::__1::__compressed_pair_elem<(lambda at ../../sql/vfs_wrapper.cc:404:7), 0, true>::__compressed_pair_elem<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, 0>' [ 0 5 10 87]
'sql::Transaction::Rollback' [ 0 5 18]
'std::__1::__compressed_pair_elem<sql::TimeSource *, 0, false>' [ 0 5 10]
'std::__1::char_traits<char>' [ 0 5 10]
'sql::Statement::ColumnInt64' [ 0 5 16]
'sql::SqlMemoryDumpProvider::SqlMemoryDumpProvider' [ 0 5 28]
'scoped_refptr<base::SingleThreadTaskRunner>::Release' [ 0 45]
'AnnotateBarrierInit' [ 0]
'sql::Connection::AttachDatabase' [ 0 5 17]
'(anonymous namespace)' [ 0]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>::__compressed_pair_elem<int, void>' [ 0 5 10 59]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<char> &, 1, false>::__compressed_pair_elem<std::__1::allocator<char> &, void>' [ 0 5 10 73]
'logging::MakeCheckOpValueString<long long>' [ 0 9]
'sql::ConnectionMemoryDumpProvider::FormatDumpName' [ 0 5 35]
'sql::Connection::DoesTableExist' [ 0 5 17]
'pthread_mutex_t' [ 0]
'std::__1::__compressed_pair<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 127]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::Impl::~Impl' [ 0 6 16 256 262]
'sql::(anonymous namespace)::Randomness' [ 0 5 28]
'std::__1::vector<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::ListValue, std::__1::default_delete<base::ListValue>, false>' [ 0 5 10 30]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >, true>' [ 0 5 10 30]
'logging::MakeCheckOpString<sqlite3 *, sqlite3 *>' [ 0 9]
'base::internal::PassingTraitsType<sql::Statement *>' [ 0 6 16]
'sql::(anonymous namespace)::Truncate' [ 0 5 28]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::clear' [ 0 5 10 212]
'base::FilePath::empty' [ 0 6 16]
'std::__1::unary_function<sqlite3_vfs *, void>' [ 0 5 10]
'std::__1::__pointer_type<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__split_buffer' [ 0 5 10 110]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::true_type' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::reset' [ 0 5 10 67]
'std::__1::__const_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10]
'logging::LOG_ERROR' [ 0 9]
'std::__1::__tree_min<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>' [ 0 5 10]
'base::Value' [ 0 6]
'sql::Connection::BeginTransaction' [ 0 5 17]
'sql::(anonymous namespace)::Write' [ 0 5 28]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__max_size' [ 0 5 10 81]
'std::__1::pointer_traits<sql::Connection::StatementRef **>' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::data' [ 0 5 10 52]
'max_align_t' [ 0]
'std::__1::remove_reference<sql::ConnectionMemoryDumpProvider *>' [ 0 5 10]
'sqlite3_file' [ 0]
'std::__1::remove_reference<std::__1::function<void (sqlite3_vfs *)> &>' [ 0 5 10]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::set' [ 0 5 10 152]
'std::__1::vector<char, std::__1::allocator<char> >::max_size' [ 0 5 10 52]
'std::__1::__function::__base<void (sqlite3_vfs *)>::~__base' [ 0 5 10 22 52]
'std::__1::iterator_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'sql::(anonymous namespace)::ShmLock' [ 0 5 28]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare::KeyValueCompare' [ 0 6 16 256 273]
'sql::Connection::GetAppropriateMmapSize::g_reads_allowed' [ 0 5 17 41]
'AnnotatePCQDestroy' [ 0]
'std::__1::advance<std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >, 1, false>' [ 0 5 10]
'sql::MetaTable::MetaTable' [ 0 5 16]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::capacity' [ 0 5 10 210]
'std::__1::__compressed_pair_elem<base::Value *, 0, false>::__compressed_pair_elem<base::Value *, void>' [ 0 5 10 59]
'size_t' [ 0]
'std::__1::remove_reference<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'sql::Statement::BindDouble' [ 0 5 16]
'std::__1::__function' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >' [ 0 5 10]
'sql::(anonymous namespace)::NextSystemCall' [ 0 5 28]
'sql::Connection::IsSQLValid' [ 0 5 17]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::equal_range<sql::StatementID>' [ 0 6 16 256]
'sql::Connection::Connection' [ 0 5 17]
'base::subtle::GetOrCreateLazyPointer<sql::SqlMemoryDumpProvider>' [ 0 6 14]
'sql::Connection::StatementRef::is_valid' [ 0 5 17 31]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__destruct_at_end' [ 0 5 10 212]
'sql::Recovery::RecoverDatabaseWithMetaVersion' [ 0 5 15]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::operator()' [ 0 5 10 121]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >, std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::find<sql::Connection::StatementRef *>' [ 0 5 10 155]
'std::__1::forward<sql::Statement *>' [ 0 5 10]
'logging::CheckNEImpl' [ 0 9]
'base::RepeatingCallback<void (int, sql::Statement *)>::~RepeatingCallback' [ 0 6 55]
'sql::Connection::AddTaggedHistogram' [ 0 5 17]
'base::TimeDelta::Min' [ 0 6 17]
'std::__1::__vector_base<char, std::__1::allocator<char> >::__alloc' [ 0 5 10 59]
'(anonymous namespace)::GetMediumTimeHistogram' [ 0 23]
'std::__1::forward<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'sql::Statement::~Statement' [ 0 5 16]
'sql::Statement::ColumnBool' [ 0 5 16]
'std::__1::__tuple_leaf<0, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&, false>::__tuple_leaf<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void>' [ 0 5 10 102]
'base::flat_map<sql::StatementID, scoped_refptr<sql::Connection::StatementRef>, std::__1::less<void> >' [ 0 6]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>' [ 0 6]
'logging' [ 0]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, false>' [ 0 5 10]
'sqlite3_syscall_ptr' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::destroy<char>' [ 0 5 10 56]
'sql::Connection::OnSqliteError' [ 0 5 17]
'std::nullptr_t' [ 0 5]
'std::__1::pointer_traits<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *>' [ 0 5 10]
'std::__1::operator==<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::~flat_tree' [ 0 6 16 256]
'std::__1::__function::__maybe_derive_from_binary_function<void (sqlite3_vfs *)>' [ 0 5 10 22]
'sql::Statement::ColumnString' [ 0 5 16]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'sqlite3_int64' [ 0]
'(anonymous namespace)::ScopedWritableSchema::ScopedWritableSchema' [ 0 23 45]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'sql::(anonymous namespace)::Lock' [ 0 5 28]
'sql::Recovery::Shutdown' [ 0 5 15]
'std::__1::__compressed_pair<base::ListValue *, std::__1::default_delete<base::ListValue> >::__compressed_pair<base::ListValue *&, true>' [ 0 5 10 92]
'std::__1::remove_reference<sqlite3_vfs *>' [ 0 5 10]
'sql::Connection::Preload' [ 0 5 17]
'sql::Connection::current_expecter_cb_' [ 0 5 17]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__recommend' [ 0 5 10 101]
'std::__1::__temp_value<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__addr' [ 0 5 10 209]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *>' [ 0 5 10]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10]
'std::__1::iterator_traits<const base::Value *>' [ 0 5 10]
'std::__1::remove_reference<base::ListValue *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 108]
'div_t' [ 0]
'sql::Connection::Now' [ 0 5 17]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::add_lvalue_reference<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10]
'std::__1::forward<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'sql::Statement::CheckError' [ 0 5 16]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__alloc' [ 0 5 10 108]
'base::Singleton<sql::SqlMemoryDumpProvider, base::LeakySingletonTraits<sql::SqlMemoryDumpProvider>, sql::SqlMemoryDumpProvider>::CreatorFunc' [ 0 6 129]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::__pointer_type_imp' [ 0 5 10]
'sql::(anonymous namespace)::DlOpen' [ 0 5 28]
'std::__1::__tuple_leaf<0, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, false>::__tuple_leaf<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, void>' [ 0 5 10 86]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::__wrap_iter' [ 0 5 10 112]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::operator bool' [ 0 5 10 79]
'std::__1::add_lvalue_reference<char>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >, true>' [ 0 5 10 30]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__get_short_size' [ 0 5 10 126]
'std::__1::__add_lvalue_reference_impl<char, true>' [ 0 5 10]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>::__tree_end_node' [ 0 5 10 65]
'std::__1::__compressed_pair<unsigned long, std::__1::less<sql::Connection::StatementRef *> >' [ 0 5 10]
'std::__1::addressof<const char>' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(), void>::Invoke<void (*)()>' [ 0 6 16 49]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'sql::Connection::DoesViewExist' [ 0 5 17]
'sql::Connection::RecordUpdateTime' [ 0 5 17]
'std::__1::remove_reference<const sql::StatementID &>' [ 0 5 10]
'__pthread_internal_list' [ 0]
'std::__1::__compressed_pair_elem<std::__1::function<void (sqlite3_vfs *)>, 1, false>::__compressed_pair_elem<std::__1::function<void (sqlite3_vfs *)>, void>' [ 0 5 10 86]
'pthread_t' [ 0]
'std::__1::less<sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10 115]
'std::__1::__compressed_pair<base::ListValue *, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >::__compressed_pair<base::Value *, true>' [ 0 5 10 84]
'uint_least32_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::move<std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> > &>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'sql::MetaTable::kMmapSuccess' [ 0 5 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *>::__nat, std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::second' [ 0 5 10 217]
'long unsigned int' [ 0]
'std::__1::piecewise_construct_t' [ 0 5 10]
'std::__1::conditional<false, const std::__1::basic_string<char> &, std::__1::basic_string<char> &&>' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__make_iter' [ 0 5 10 203]
'sql::Connection::QuickIntegrityCheck' [ 0 5 17]
'std::__1::__tree_key_value_types<sql::Connection::StatementRef *>::__get_key' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, 0, false>' [ 0 5 10]
'std::__1::max<unsigned long>' [ 0 5 10]
'sql::Connection::StatementRef::~StatementRef' [ 0 5 17 31]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::get' [ 0 5 10 402]
'base::trace_event::MemoryDumpLevelOfDetail' [ 0 6 19]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::capacity' [ 0 5 10 203]
'std::__1::float_round_style' [ 0 5 10]
'sql::Recovery::Rollback' [ 0 5 15]
'std::__1::__less<char *, char *>' [ 0 5 10]
'std::__1::remove_reference<sql::Connection::StatementRef *const &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::DictionaryValue *, 0, false>' [ 0 5 10]
'base::ThreadCollisionWarner::~ThreadCollisionWarner' [ 0 6 29]
'base::trace_event::MemoryAllocatorDump' [ 0 6 19]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::value_comp' [ 0 5 10 155]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::conditional<true, sql::StatementID, sql::StatementID>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'sqlite3_vfs' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'std::__1::__lower_bound<base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare &, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, sql::StatementID>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::max_size' [ 0 5 10 132]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'std::__1::__const_void_pointer<base::Value *, std::__1::allocator<base::Value>, false>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::add_lvalue_reference<sql::ConnectionMemoryDumpProvider>' [ 0 5 10]
'base::trace_event::MemoryDumpProvider::~MemoryDumpProvider' [ 0 6 19 39]
'std::__1::remove_reference<std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'sql::Connection::CollectCorruptionInfo' [ 0 5 17]
'std::__1::forward_as_tuple<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::basic_string<char> >' [ 0 5 10]
'sql::(anonymous namespace)::Fetch' [ 0 5 28]
'base::trace_event::MemoryDumpProvider' [ 0 6 19]
'std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::__wrap_iter' [ 0 5 10 106]
'scoped_refptr<base::internal::BindStateBase>::scoped_refptr' [ 0 46]
'std::__1::__tree_node_base_types<void *>' [ 0 5 10]
'base::RepeatingCallback<void (int, sql::Statement *)>' [ 0 6]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::remove_reference<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::~unique_ptr' [ 0 5 10 75]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::__tree_node_destructor' [ 0 5 10 121]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'sql::Transaction::Commit' [ 0 5 18]
'std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::base' [ 0 5 10 106]
'std::__1::__tree_key_value_types<sql::Connection::StatementRef *>::__get_ptr' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<base::Value *, 0, false>::__compressed_pair_elem<base::ListValue *, void>' [ 0 5 10 59]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::reset' [ 0 5 10 75]
'std::__1::remove_reference<std::__1::tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &> &>' [ 0 5 10]
'base::UnguessableToken' [ 0 6]
'RunningOnValgrind' [ 0]
'sql::Connection::IntegrityCheckHelper' [ 0 5 17]
'std::__1::__pointer_type<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::__const_pointer<base::trace_event::MemoryAllocatorDump::Entry, base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'std::__1::__add_lvalue_reference_impl<base::DictionaryValue, true>' [ 0 5 10]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'sql::SqlMemoryDumpProvider' [ 0 5]
'base::LeakySingletonTraits<sql::SqlMemoryDumpProvider>' [ 0 6]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'base::AutoLock' [ 0 6]
'sql::Connection::AssertIOAllowed' [ 0 5 17]
'logging::LogMessage' [ 0 9]
'std::__1::__compressed_pair_elem<sqlite3_vfs *, 0, false>::__compressed_pair_elem<sqlite3_vfs *&, void>' [ 0 5 10 59]
'sql::Connection::ExecuteWithTimeout' [ 0 5 17]
'int_least8_t' [ 0]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'std::__1::conditional<true, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &&, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &>' [ 0 5 10]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >::RefCounted' [ 0 6 112]
'std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator++' [ 0 5 10 108]
'sql::(anonymous namespace)::RecordSqliteMemoryHour' [ 0 5 28]
'float' [ 0]
'sql::Connection::GetAppropriateMmapSize::kPageSize' [ 0 5 17 41]
'base::OnceCallback<void ()>::~OnceCallback' [ 0 6 29]
'std::__1::__compressed_pair_elem<sql::Recovery *, 0, false>' [ 0 5 10]
'ldiv_t' [ 0]
'std::__1::move_if_noexcept<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10]
'sql::Statement::CheckValid' [ 0 5 16]
'sql::TimeSource::Now' [ 0 5 17]
'std::__1::forward<const sql::StatementID &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::__destroy<char>' [ 0 5 10 56]
'base::TimeDelta::FromMilliseconds' [ 0 6 17]
'va_list' [ 0]
'std::__1::__const_void_pointer<sql::Connection::StatementRef **, std::__1::allocator<sql::Connection::StatementRef *>, false>' [ 0 5 10]
'sql::Connection::ReportMemoryUsage' [ 0 5 17]
'sqlite3_backup' [ 0]
'sql::Connection' [ 0 5]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'sql::Connection::OpenInMemory' [ 0 5 17]
'std::__1::__temp_value<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__temp_value<const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10 209]
'scoped_refptr<base::SequencedTaskRunner>::~scoped_refptr' [ 0 42]
'std::__1::remove_reference<void (*&)()>' [ 0 5 10]
'std::__1::__advance<std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'AnnotateBarrierDestroy' [ 0]
'__gnuc_va_list' [ 0]
'AnnotateCondVarWait' [ 0]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::~unique_ptr' [ 0 5 10 402]
'sql::MetaTable::Reset' [ 0 5 16]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >::destroy' [ 0 5 10 103]
'std::__1::remove_reference<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::operator*' [ 0 5 10 75]
'std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>' [ 0 5 10]
'(anonymous namespace)::GetSqlite3File' [ 0 23]
'sql::Connection::Raze' [ 0 5 17]
'sql::TimeSource' [ 0 5]
'std::__1::binary_function<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::MemoryAllocatorDumpGuid, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &, void>' [ 0 5 10 149]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 52]
'sql::Recovery::GetMetaVersionNumber::kVersionSql' [ 0 5 15 37]
'std::__1::__rebind_pointer<void *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'base::ListValue::GetSize' [ 0 6 17]
'sql::Connection::IsExpectedSqliteError' [ 0 5 17]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator*' [ 0 5 10 112]
'std::__1::move<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>' [ 0 5 10]
'sql::(anonymous namespace)::SectorSize' [ 0 5 28]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__pointer_type<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryAllocatorDump *, 0, false>' [ 0 5 10]
'__pthread_mutex_s' [ 0]
'std::__1::__const_void_pointer<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, false>' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'logging::LogMessage::stream' [ 0 9 21]
'base::HistogramBase::AddTime' [ 0 6 21]
'sql::Connection::GetAppropriateMmapSize::lock' [ 0 5 17 41]
'std::__1::__add_lvalue_reference_impl<base::trace_event::MemoryDumpProvider, true>' [ 0 5 10]
'sql::Recovery::Recovered' [ 0 5 15]
'std::__1::remove_reference<const std::__1::basic_string<char> &>' [ 0 5 10]
'base::SequenceChecker' [ 0 6]
'AnnotateUnpublishMemoryRange' [ 0]
'std::__1::__vector_base<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::addressof<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'sql::Statement::RunWithoutTimers' [ 0 5 16]
'uint_fast32_t' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'wctrans_t' [ 0]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__alloc' [ 0 5 10 210]
'sql::Connection::~Connection' [ 0 5 17]
'sql::Statement::is_valid' [ 0 5 16]
'signed char' [ 0]
'std::__1::__str_find<char, unsigned long, std::__1::char_traits<char>, 18446744073709551615>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'base::WhitespaceHandling' [ 0 6]
'std::__1::move<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::get<0, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'sql::(anonymous namespace)::FullPathname' [ 0 5 28]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> *, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'std::__1::__pointer_type<sql::Recovery, std::__1::default_delete<sql::Recovery> >' [ 0 5 10]
'base::DictionaryValue::~DictionaryValue' [ 0 6 23]
'mbstate_t' [ 0]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::begin' [ 0 5 10 155]
'std::__1::vector<char, std::__1::allocator<char> >::size' [ 0 5 10 52]
'sql::Statement::StepInternal' [ 0 5 16]
'std::__1::function<void (sqlite3_vfs *)>::function' [ 0 5 10 42]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'std::__1::operator!=<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'__compar_fn_t' [ 0]
'scoped_refptr<sql::Connection::StatementRef>::~scoped_refptr' [ 0 46]
'std::__1::default_delete<base::ListValue>::operator()' [ 0 5 10 43]
'std::__1::remove_reference<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> &>' [ 0 5 10]
'unsigned int' [ 0]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::operator->' [ 0 5 10 79]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::data' [ 0 5 10 101]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::operator()' [ 0 5 10 22 161]
'std::__1::__tree_is_left_child<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10]
'std::__1::unique_ptr<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider>, void, void>' [ 0 5 10 127]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::erase' [ 0 5 10 152]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::reset' [ 0 5 10 79]
'std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sql::ConnectionMemoryDumpProvider>, 1, true>' [ 0 5 10]
'sql::Connection::RegisterIntentToUpload' [ 0 5 17]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'sql::(anonymous namespace)::RecordRecoveryEvent' [ 0 5 28]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'std::__1::conditional<false, std::__1::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::operator==<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue>, void, void>' [ 0 5 10 75]
'std::__1::__tuple_leaf<0, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, false>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::__pointer_type<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'std::__1::function<void (sqlite3_vfs *)>' [ 0 5 10]
'std::__1::__pointer_type<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__annotate_delete' [ 0 5 10 203]
'std::__1::remove_reference<std::__1::default_delete<sql::Recovery> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&, false>::__tuple_leaf<(lambda at ../../sql/vfs_wrapper.cc:404:7), void>' [ 0 5 10 81]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> > &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *>::__nat, std::__1::__tree_node<sql::Connection::StatementRef *, void *> >' [ 0 5 10]
'base::internal::BindState<void (*)()>::Destroy' [ 0 6 16 39]
'sql::Recovery::Init' [ 0 5 15]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&>::__tuple_impl<0, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&, (lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10 101]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'std::__1::__vector_base<char, std::__1::allocator<char> >::clear' [ 0 5 10 59]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >::deallocate' [ 0 5 10 103]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::enable_if<true, void>' [ 0 5 10]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::reset' [ 0 5 10 78]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> &>::__compressed_pair<nullptr_t, std::__1::allocator<char> &>' [ 0 5 10 66]
'sql::Transaction::Transaction' [ 0 5 18]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, 0, false>::__compressed_pair_elem<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *&, void>' [ 0 5 10 207]
'__int8_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__destruct_at_end' [ 0 5 10 110]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'logging::CheckGTImpl' [ 0 9]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >' [ 0 5 10]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10 112]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'base::SplitResult' [ 0 6]
'std::__1::iterator_traits<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::trace_event::MemoryAllocatorDump>' [ 0 5 10]
'decltype(nullptr)' [ 0]
'scoped_refptr<base::SequencedTaskRunner>::Release' [ 0 42]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'std::__1::default_delete<base::trace_event::MemoryDumpProvider>' [ 0 5 10]
'sql::Statement::ColumnCount' [ 0 5 16]
'std::__1::remove_reference<std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > &>' [ 0 5 10]
'std::__1::swap<std::__1::basic_string<char> *>' [ 0 5 10]
'__mbstate_t' [ 0]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true> >' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::move<(lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'(anonymous namespace)::RecordDeprecationEvent' [ 0 23]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'sql::Connection::set_mmap_disabled' [ 0 5 17]
'std::__1::__tuple_leaf<0, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, false>::get' [ 0 5 10 107]
'std::__1::allocator<sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::default_delete<base::Value>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'std::__1::vector<char, std::__1::allocator<char> >::clear' [ 0 5 10 52]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >, 1, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, long, true>' [ 0 5 10]
'std::__1::conditional<false, const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > &&>' [ 0 5 10]
'std::__1::pointer_traits<unsigned short *>' [ 0 5 10]
'sql::Recovery::Begin' [ 0 5 15]
'logging::MakeCheckOpValueString<sqlite3 *>' [ 0 9]
'base::RepeatingCallback<bool (int)>::Run' [ 0 6 37]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'sql::Recovery::Unrecoverable' [ 0 5 15]
'__uint8_t' [ 0]
'std::__1::remove_reference<sql::Connection::StatementRef *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&> &>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::base' [ 0 5 10 108]
'std::__1::remove_reference<base::DictionaryValue *&>' [ 0 5 10]
'base::string16' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::MemoryAllocatorDump>, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator+=' [ 0 5 10 106]
'std::__1::allocator<char>::construct<char>' [ 0 5 10 27]
'base::flat_map<sql::StatementID, scoped_refptr<sql::Connection::StatementRef>, std::__1::less<void> >::~flat_map' [ 0 6 103]
'base::subtle::Acquire_Load' [ 0 6 14]
'sql::Connection::RecordAutoCommitTime' [ 0 5 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10 30]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::begin' [ 0 6 16 256]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>::__nat, std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'sql::MetaTable::SetMmapStatus' [ 0 5 16]
'std::__1::__compressed_pair_elem<sql::Recovery *, 0, false>::__compressed_pair_elem<sql::Recovery *&, void>' [ 0 5 10 61]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'sql::(anonymous namespace)::RecordSqliteMemoryHour::atomic_histogram_pointer' [ 0 5 28 52]
'std::__1::float_denorm_style' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sql::Connection::StatementRef *>, std::__1::__tree_node<sql::Connection::StatementRef *, void *>, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > &>' [ 0 5 10]
'std::__1::addressof<char>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign_alloc' [ 0 5 10 108]
'std::__1::__const_void_pointer<(lambda at ../../sql/vfs_wrapper.cc:404:7) *, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, false>' [ 0 5 10]
'std::__1::streampos' [ 0 5 10]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__alloc' [ 0 5 10 212]
'std::__1::function<void (sqlite3_vfs *)>::~function' [ 0 5 10 42]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__find_equal<sql::Connection::StatementRef *>' [ 0 5 10 155]
'std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >::allocate' [ 0 5 10 86]
'std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, std::__1::allocator<unsigned short> >::__compressed_pair<true, void>' [ 0 5 10 200]
'double' [ 0]
'uintmax_t' [ 0]
'std::__1::__tuple_leaf<0, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&, false>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >::release' [ 0 5 10 75]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__move_range' [ 0 5 10 203]
'std::__1::forward<base::ListValue *>' [ 0 5 10]
'std::__1::forward<base::DictionaryValue *&>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::AddRef' [ 0 6 70]
'std::__1::default_delete<sql::Recovery>' [ 0 5 10]
'sql::GetCorruptFileDiagnosticsInfo' [ 0 5]
'std::__1::forward<base::ListValue *&>' [ 0 5 10]
'base::internal::CallbackBase::is_null' [ 0 6 16 30]
'std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >' [ 0 5 10]
'base::AtomicRefCount::Decrement' [ 0 6 22]
'std::__1::__pointer_type<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >' [ 0 5 10]
'std::__1::remove_reference<sql::StatementID &>' [ 0 5 10]
'sql::Connection::Open::atomic_histogram_pointer' [ 0 5 17 23]
'std::__1::function<void (sqlite3_vfs *)>::function<(lambda at ../../sql/vfs_wrapper.cc:404:7), void>' [ 0 5 10 42]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> &>::second' [ 0 5 10 66]
'std::__1::__const_void_pointer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, false>' [ 0 5 10]
'std::__1::__pointer_type<base::ListValue, std::__1::default_delete<base::ListValue> >' [ 0 5 10]
'(anonymous namespace)::ScopedBusyTimeout::SetTimeout' [ 0 23 42]
'std::__1::binary_function<std::__1::basic_string<char>, std::__1::basic_string<char>, bool>' [ 0 5 10]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::unique_ptr<true, void>' [ 0 5 10 79]
'std::__1::__add_lvalue_reference_impl<sql::TimeSource, true>' [ 0 5 10]
'base::Lock::Release' [ 0 6 12]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sql::Recovery>, 1, true>::__compressed_pair_elem<std::__1::default_delete<sql::Recovery>, void>' [ 0 5 10 84]
'std::__1::map<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10 30]
'std::__1::add_lvalue_reference<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&, false>' [ 0 5 10]
'scoped_refptr<sql::Connection::StatementRef>::get' [ 0 46]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::__compressed_pair<sql::Recovery *, std::__1::default_delete<sql::Recovery> >::__compressed_pair<sql::Recovery *, std::__1::default_delete<sql::Recovery> >' [ 0 5 10 88]
'sql::(anonymous namespace)::Read' [ 0 5 28]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::capacity' [ 0 5 10 110]
'std::__1::move<std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> > &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'base::FlatContainerDupes' [ 0 6]
'std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::operator->' [ 0 5 10 106]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_delete' [ 0 5 10 101]
'sql::Statement::BindNull' [ 0 5 16]
'std::__1::__pointer_type<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >::get' [ 0 5 10 67]
'std::__1::forward_as_tuple<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'base::DefaultRefCountedTraits<sql::Connection::StatementRef>::Destruct' [ 0 6 62]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::operator->' [ 0 5 10 83]
'std::__1::advance<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'sql::Connection::set_page_size' [ 0 5 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<char> &, 1, false>::__get' [ 0 5 10 73]
'logging::CheckOpResult::message' [ 0 9 24]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::Value>, 1, true>::__compressed_pair_elem<std::__1::default_delete<base::Value>, void>' [ 0 5 10 82]
'sql::EnsureSqliteInitialized::sqlite_init_lock' [ 0 5 30]
'sql::MetaTable::GetValue' [ 0 5 16]
'std::__1::__compressed_pair<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >::__compressed_pair<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&>' [ 0 5 10 139]
'std::__1::forward<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::release' [ 0 5 10 402]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__end_cap' [ 0 5 10 210]
'unsigned short' [ 0]
'sql::ConnectionMemoryDumpProvider::OnMemoryDump' [ 0 5 35]
'sql::Connection::GetCachedStatement' [ 0 5 17]
'std::__1::min<int>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<void (*)()>::is_nullable, bool>' [ 0 5 10]
'AnnotateBenignRace' [ 0]
'std::__1::remove_reference<const (lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'std::__1::swap<sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, 1, true>::__compressed_pair_elem<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&, 0>' [ 0 5 10 108]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::operator->' [ 0 5 10 95]
'std::__1::ostringstream' [ 0 5 10]
'__uintmax_t' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::second' [ 0 5 10 115]
'base::Singleton<sql::SqlMemoryDumpProvider, base::LeakySingletonTraits<sql::SqlMemoryDumpProvider>, sql::SqlMemoryDumpProvider>' [ 0 6]
'scoped_refptr<sql::Connection::StatementRef>::scoped_refptr' [ 0 46]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::unique_ptr' [ 0 5 10 79]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator+=' [ 0 5 10 87]
'std::__1::forward<sqlite3_vfs *&>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::vector<char, std::__1::allocator<char> >::__destruct_at_end' [ 0 5 10 52]
'std::__1::__tree_next_iter<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'sql::Statement::ColumnDouble' [ 0 5 16]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >::construct<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >' [ 0 5 10 103]
'std::__1::__compressed_pair_elem<sql::ConnectionMemoryDumpProvider *, 0, false>::__compressed_pair_elem<sql::ConnectionMemoryDumpProvider *, void>' [ 0 5 10 81]
'std::__1::__pointer_type<sql::Connection::StatementRef *, std::__1::allocator<sql::Connection::StatementRef *> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> &, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> &, false>' [ 0 5 10 241]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::clear' [ 0 5 10 152]
'std::__1::__tuple_leaf<0, const (lambda at ../../sql/vfs_wrapper.cc:404:7) &, false>::get' [ 0 5 10 86]
'sql::Recovery::Backup' [ 0 5 15]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare::operator()<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, sql::StatementID>' [ 0 6 16 256 273]
'sql::Connection::RollbackAllTransactions' [ 0 5 17]
'std::__1::allocator<char>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>::pair<std::__1::__tree_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool &, false>' [ 0 5 10 154]
'sql::Connection::StatementRef::StatementRef' [ 0 5 17 31]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__construct_node<sql::Connection::StatementRef *const &>' [ 0 5 10 155]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >::__allocator_destructor' [ 0 5 10 218]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>::operator++' [ 0 5 10 138]
'timespec' [ 0]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, true>' [ 0 5 10]
'std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'std::__1::tuple<>' [ 0 5 10]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::find' [ 0 5 10 152]
'std::__1::__tuple_leaf<0, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, false>::__tuple_leaf<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, void>' [ 0 5 10 107]
'std::__1::__compressed_pair_elem<std::__1::less<sql::Connection::StatementRef *>, 1, true>::__compressed_pair_elem<const std::__1::less<sql::Connection::StatementRef *> &, void>' [ 0 5 10 92]
'std::__1::move<std::__1::function<void (sqlite3_vfs *)> &>' [ 0 5 10]
'std::__1::once_flag' [ 0 5 10]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'sql::Recovery::AutoRecoverTable' [ 0 5 15]
'std::__1::__tree_node_types<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::ListValue *, 0, false>::__compressed_pair_elem<base::ListValue *&, void>' [ 0 5 10 63]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump>, false>' [ 0 5 10 30]
'std::__1::chrono' [ 0 5 10]
'sql::Statement::BindBlob' [ 0 5 16]
'sql::(anonymous namespace)::ShmUnmap' [ 0 5 28]
'std::__1::char_traits<char>::compare' [ 0 5 10 29]
'std::__1::remove_reference<bool>' [ 0 5 10]
'std::__1::__compressed_pair<sqlite3_vfs *, std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'scoped_refptr<base::SequencedTaskRunner>' [ 0]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'std::__1::streamoff' [ 0 5 10]
'std::__1::forward<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::KeyValueCompare::extract_if_value_type' [ 0 6 16 256 273]
'sql::Connection::RecordEvent' [ 0 5 17]
'std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> >' [ 0 5 10]
'std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >::allocate' [ 0 5 10 103]
'base::TimeDelta::FromProduct' [ 0 6 17]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'std::__1::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__end_cap' [ 0 5 10 108]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 101]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'sql::Statement::GetSQLStatement' [ 0 5 16]
'std::__1::unique_ptr<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::reset' [ 0 5 10 402]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 76]
'scoped_refptr<base::SingleThreadTaskRunner>::~scoped_refptr' [ 0 45]
'sql::(anonymous namespace)::Open' [ 0 5 28]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::~unique_ptr' [ 0 5 10 208]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >' [ 0 5 10]
'AnnotateRWLockReleased' [ 0]
'base::subtle::RefCountedBase::~RefCountedBase' [ 0 6 14 30]
'sql::ConnectionMemoryDumpProvider::GetDbMemoryUsage' [ 0 5 35]
'std::__1::__split_buffer<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::__split_buffer' [ 0 5 10 212]
'sql::Statement::CheckOk' [ 0 5 16]
'std::__1::remove_reference<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::next<std::__1::__wrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'std::__1::forward<int>' [ 0 5 10]
'base::internal::flat_tree<std::__1::basic_string<char>, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, base::internal::GetKeyFromValuePairFirst<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::less<void> >' [ 0 6 16]
'sql::(anonymous namespace)::RecoveryEventType' [ 0 5 28]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'sql::(anonymous namespace)::RecordSqliteMemoryWeek' [ 0 5 28]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::reset' [ 0 5 10 95]
'std::__1::vector<char, std::__1::allocator<char> >::__construct_at_end' [ 0 5 10 52]
'sql::Connection::GetDiagnosticInfo' [ 0 5 17]
'lldiv_t' [ 0]
'base::OnceCallback<void ()>' [ 0 6]
'std::__1::remove_reference<std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find' [ 0 5 10 87]
'intmax_t' [ 0]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'logging::MakeCheckOpString<char, char>' [ 0 9]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &>::second' [ 0 5 10 217]
'scoped_refptr<base::SingleThreadTaskRunner>::AddRef' [ 0 45]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'base::RepeatingCallback<void (int, sql::Statement *)>::RepeatingCallback' [ 0 6 55]
'sql::Recovery::Recovery' [ 0 5 15]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'__syscall_slong_t' [ 0]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::__end_cap' [ 0 5 10 61]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider>, false>' [ 0 5 10 30]
'std::__1::remove_reference<std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<sql::Connection::StatementRef *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > > >::unique_ptr<true, void>' [ 0 5 10 208]
'base::IsAsciiWhitespace<char>' [ 0 6]
'sql::Connection::RegisterIntentToUpload::kVersion' [ 0 5 17 41]
'sql::(anonymous namespace)::FileSize' [ 0 5 28]
'AnnotateBarrierWaitAfter' [ 0]
'std::__1::pair<std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>' [ 0 5 10]
'sql::MetaTable::GetCompatibleVersionNumber' [ 0 5 16]
'std::__1::__size_type<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, long, true>' [ 0 5 10]
'sql::Connection::reset_error_callback' [ 0 5 17]
'__uint32_t' [ 0]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >::operator()' [ 0 5 10 218]
'std::__1::__size_type<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> >, long, true>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>::__tuple_impl<0, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &, const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10 127]
'std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >::pair<const sql::StatementID &, scoped_refptr<sql::Connection::StatementRef>, false>' [ 0 5 10 81]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*)(), std::__1::tuple<>>::is_method' [ 0 6 16 73 113]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, long, true>' [ 0 5 10]
'logging::MakeCheckOpValueString<char>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__max_size' [ 0 5 10 132]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::size' [ 0 5 10 126]
'std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >::pair' [ 0 5 10 81]
'std::__1::__unwrap_iter<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >' [ 0 5 10]
'sqlite3_destructor_type' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'sql::(anonymous namespace)::Open::io_methods' [ 0 5 28 34]
'sql::Statement::ColumnBlob' [ 0 5 16]
'logging::CheckOpResult' [ 0 9]
'std::__1::forward<(lambda at ../../sql/vfs_wrapper.cc:404:7) &>' [ 0 5 10]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'uint_least8_t' [ 0]
'sql::(anonymous namespace)::RecordSqliteMemoryDay' [ 0 5 28]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >::DeleteInternal<sql::Connection::StatementRef>' [ 0 6 112]
'std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned short, std::__1::allocator<unsigned short>, true>' [ 0 5 10 30]
'int64_t' [ 0]
'std::__1::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > &, 1, false>' [ 0 5 10]
'sql::Recovery' [ 0 5]
'std::__1::index_sequence<>' [ 0 5 10]
'long long unsigned int' [ 0]
'base::DictionaryValue' [ 0 6]
'sql::Connection::GetLastChangeCount' [ 0 5 17]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_new' [ 0 5 10 101]
'base::TimeDelta::FromDays' [ 0 6 17]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >' [ 0 5 10]
'base::SequenceChecker::~SequenceChecker' [ 0 6 23]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::function<void (sqlite3_vfs *)>, 1, false>::~__compressed_pair_elem' [ 0 5 10 86]
'int_fast8_t' [ 0]
'sql::Statement' [ 0 5]
'std::__1::unique_ptr<sqlite3_vfs, std::__1::function<void (sqlite3_vfs *)> >::unique_ptr<true, void>' [ 0 5 10 78]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'std::__1::remove_reference<std::__1::basic_string<char> >' [ 0 5 10]
'sql::Connection::ReportDiagnosticInfo' [ 0 5 17]
'std::__1::unique_ptr<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >::operator->' [ 0 5 10 83]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'std::__1::iterator_traits<base::Value *>' [ 0 5 10]
'std::__1::unique_ptr<sql::Recovery, std::__1::default_delete<sql::Recovery> >::release' [ 0 5 10 79]
'std::__1' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::allocate' [ 0 5 10 132]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'char' [ 0]
'std::__1::allocator_traits<std::__1::allocator<sql::Connection::StatementRef *> >' [ 0 5 10]
'std::__1::atomic<int>' [ 0 5 10]
'std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)>::destroy_deallocate' [ 0 5 10 22 161]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'sql::Connection::StatementRefCreated' [ 0 5 17]
'base::Optional<unsigned long>' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::Value>, 1, true>' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'sql::Connection::StatementRef::AssertIOAllowed' [ 0 5 17 31]
'sql::MetaTable::DeleteKey' [ 0 5 16]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::default_delete<base::trace_event::MemoryAllocatorDump>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::__nat, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::__alloc' [ 0 5 10 61]
'sql::Connection::TrimMemory' [ 0 5 17]
'std::__1::remove_reference<const std::__1::less<sql::Connection::StatementRef *> &>' [ 0 5 10]
'sql::StatementID::operator<' [ 0 5 18]
'sql::Recovery::GetMetaVersionNumber' [ 0 5 15]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::get<0, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 81]
'AnnotateNewMemory' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::clear' [ 0 5 10 110]
'AnnotateCondVarSignal' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__construct_backward<char>' [ 0 5 10 56]
'std::__1::__compressed_pair_elem<std::__1::less<sql::Connection::StatementRef *>, 1, true>' [ 0 5 10]
'std::__1::operator-<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::data' [ 0 5 10 203]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*)(), std::__1::tuple<>>::is_weak_call' [ 0 6 16 73 113]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::__split_buffer' [ 0 5 10 61]
'sql::VFSWrapper' [ 0 5]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, false>' [ 0 5 10]
'std::__1::operator!=<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'sql::Statement::Succeeded' [ 0 5 16]
'std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::basic_string' [ 0 5 10 126]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::~set' [ 0 5 10 152]
'base::IsAsciiAlpha<char>' [ 0 6]
'std::__1::__pointer_type<char, std::__1::default_delete<char []> >' [ 0 5 10]
'base::NoDestructor<base::Lock>' [ 0 6]
'std::__1::unique_ptr<base::trace_event::MemoryDumpProvider, std::__1::default_delete<base::trace_event::MemoryDumpProvider> >::~unique_ptr' [ 0 5 10 127]
'sql::Connection::StatementRef::Close' [ 0 5 17 31]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >' [ 0 5 10]
'std::__1::forward<std::__1::function<void (sqlite3_vfs *)> >' [ 0 5 10]
'AnnotateIgnoreSyncEnd' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<sql::Connection::StatementRef **>::__nat, sql::Connection::StatementRef *>' [ 0 5 10]
'std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::remove_reference<(lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10]
'int_fast64_t' [ 0]
'sql::Statement::ColumnByteLength' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::allocate' [ 0 5 10 115]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *>, true>' [ 0 5 10]
'std::__1::__function::__maybe_derive_from_unary_function<void (sqlite3_vfs *)>' [ 0 5 10 22]
'std::__1::pair<std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>, std::__1::__wrap_iter<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *> >' [ 0 5 10]
'int16_t' [ 0]
'std::__1::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__compressed_pair<base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >::~unique_ptr' [ 0 5 10 95]
'(anonymous namespace)::kVersionKey' [ 0 23]
'wchar_t' [ 0]
'base::trace_event::ProcessMemoryDump' [ 0 6 19]
'std::__1::string' [ 0 5 10]
'base::PlatformThreadRef' [ 0 6]
'(anonymous namespace)::kCompatibleVersionKey' [ 0 23]
'sql::(anonymous namespace)::DeviceCharacteristics' [ 0 5 28]
'std::__1::unique_ptr<sql::ConnectionMemoryDumpProvider, std::__1::default_delete<sql::ConnectionMemoryDumpProvider> >::operator->' [ 0 5 10 119]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::remove_reference<sqlite3_vfs *&>' [ 0 5 10]
'sql::StatementID' [ 0 5]
'std::__1::remove_reference<char *&>' [ 0 5 10]
'base::IsAsciiDigit<char>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'base::subtle::RefCountedBase::AddRef' [ 0 6 14 30]
'base::FilePermissionBits' [ 0 6]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >::__compressed_pair<base::ListValue *, std::__1::default_delete<base::ListValue> >' [ 0 5 10 84]
'base::time_internal' [ 0 6]
'base::FilePath' [ 0 6]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'std::__1::operator!=<const std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'AnnotateRWLockAcquired' [ 0]
'std::__1::__compressed_pair<sql::Recovery *, std::__1::default_delete<sql::Recovery> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sql::ConnectionMemoryDumpProvider *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<base::DictionaryValue *, std::__1::default_delete<base::DictionaryValue> >::__compressed_pair<base::DictionaryValue *&, true>' [ 0 5 10 104]
'AnnotateFlushState' [ 0]
'std::__1::allocator_traits<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>' [ 0 5 10]
'std::__1::add_lvalue_reference<sql::TimeSource>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'AnnotateIgnoreSyncBegin' [ 0]
'base::Lock' [ 0 6]
'sql::SqlMemoryDumpProvider::GetInstance' [ 0 5 28]
'std::__1::__compressed_pair<base::trace_event::MemoryAllocatorDump *, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'uint64_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'sql::(anonymous namespace)::DlClose' [ 0 5 28]
'__FILE' [ 0]
'std::__1::default_delete<char []>' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> > &>' [ 0 5 10]
'AnnotateMutexIsNotPHB' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__construct_forward<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10 132]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > >, true>' [ 0 5 10 30]
'std::__1::__tree_key_value_types<sql::Connection::StatementRef *>' [ 0 5 10]
'__clock_t' [ 0]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&> &>' [ 0 5 10]
'sql::Statement::Assign' [ 0 5 16]
'base::internal::CallbackBase::CallbackBase' [ 0 6 16 30]
'std::__1::__compressed_pair_elem<(lambda at ../../sql/vfs_wrapper.cc:404:7), 0, true>::__compressed_pair_elem<(lambda at ../../sql/vfs_wrapper.cc:404:7) &&, 0>' [ 0 5 10 87]
'sql::SqlMemoryDumpProvider::~SqlMemoryDumpProvider' [ 0 5 28]
'std::__1::__compressed_pair<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > > >::second' [ 0 5 10 411]
'std::__1::allocator_traits<std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::forward<const std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'scoped_refptr<sql::Connection::StatementRef>::swap' [ 0 46]
'base::Time' [ 0 6]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__insert_unique' [ 0 5 10 155]
'sql::Connection::DetachDatabase' [ 0 5 17]
'sql::(anonymous namespace)::RecordSqliteMemoryDay::atomic_histogram_pointer' [ 0 5 28 51]
'std::__1::__compressed_pair_elem<std::__1::basic_string<unsigned short, base::string16_internals::string16_char_traits, std::__1::allocator<unsigned short> >::__rep, 0, false>' [ 0 5 10]
'sql::(anonymous namespace)::GetLastError' [ 0 5 28]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'std::__1::remove_reference<sql::Recovery *>' [ 0 5 10]
'sql::Connection::CommitTransaction' [ 0 5 17]
'sql::(anonymous namespace)::RecordSqliteMemoryWeek::atomic_histogram_pointer' [ 0 5 28 52]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned short *>::__nat, unsigned short>' [ 0 5 10]
'std::__1::__tuple_types<std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&>' [ 0 5 10]
'sql::Connection::GetLastErrno' [ 0 5 17]
'std::__1::forward<std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<char> &>' [ 0 5 10]
'sql::(anonymous namespace)::CurrentTime' [ 0 5 28]
'std::__1::unique_ptr<char [], std::__1::default_delete<char []> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_const_iterator<sql::Connection::StatementRef *, std::__1::__tree_node<sql::Connection::StatementRef *, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__vector_base<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__vector_base' [ 0 5 10 210]
'std::__1::__compressed_pair_elem<std::__1::default_delete<char []>, 1, true>' [ 0 5 10]
'std::__1::addressof<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'int_fast16_t' [ 0]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>::~__split_buffer' [ 0 5 10 61]
'std::__1::__compressed_pair_elem<std::__1::function<void (sqlite3_vfs *)>, 1, false>' [ 0 5 10]
'std::__1::forward<sql::Connection::StatementRef *const &>' [ 0 5 10]
'std::__1::move_iterator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>::move_iterator' [ 0 5 10 108]
'sql::Statement::Run' [ 0 5 16]
'base::TimeDelta::FromMinutes' [ 0 6 17]
'std::__1::pointer_traits<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::vector' [ 0 5 10 101]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::forward<bool>' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::end' [ 0 6 16 256]
'std::__1::char_traits<char>::find' [ 0 5 10 29]
'std::__1::vector<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::__swap_out_circular_buffer' [ 0 5 10 203]
'base::internal::BindState<void (*)()>::BindState<void (*)()>' [ 0 6 16 39]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10 30]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__end_node' [ 0 5 10 155]
'std::__1::__compressed_pair_elem<base::ListValue *, 0, false>' [ 0 5 10]
'intptr_t' [ 0]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'std::__1::forward<sqlite3_vfs *>' [ 0 5 10]
'base::subtle::RefCountedBase' [ 0 6 14]
'std::__1::__tuple_leaf<0, std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)> &&, false>::get' [ 0 5 10 102]
'base::RefCounted<sql::Connection::StatementRef, base::DefaultRefCountedTraits<sql::Connection::StatementRef> >' [ 0 6]
'std::__1::unique_ptr<sql::TimeSource, std::__1::default_delete<sql::TimeSource> >::unique_ptr<true, void>' [ 0 5 10 83]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >' [ 0 5 10 84]
'base::SequenceCheckerImpl' [ 0 6]
'__int32_t' [ 0]
'sql::(anonymous namespace)' [ 0 5]
'AnnotateBenignRaceSized' [ 0]
'std::__1::remove_reference<std::__1::tuple<> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sql::Recovery, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::ListValue>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<sql::Connection::StatementRef *, void *> > >::__construct<sql::Connection::StatementRef *, sql::Connection::StatementRef *const &>' [ 0 5 10 115]
'std::__1::move_if_noexcept<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<(lambda at ../../sql/vfs_wrapper.cc:404:7) *>::__nat, (lambda at ../../sql/vfs_wrapper.cc:404:7)>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::size' [ 0 5 10 101]
'std::__1::allocator<std::__1::basic_string<char> >::destroy' [ 0 5 10 52]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__tree' [ 0 5 10 155]
'std::__1::iterator_traits<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > *>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_shrink' [ 0 5 10 101]
'std::__1::forward<void (*)()>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'sql::MetaTable::kMmapFailure' [ 0 5 16]
'std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, (lambda at ../../sql/vfs_wrapper.cc:404:7) &&>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__function::__func<(lambda at ../../sql/vfs_wrapper.cc:404:7), std::__1::allocator<(lambda at ../../sql/vfs_wrapper.cc:404:7)>, void (sqlite3_vfs *)> > >, void>' [ 0 5 10 262]
'base::subtle::RefCountedThreadSafeBase::AddRef' [ 0 6 14 40]
'std::__1::allocator<std::__1::basic_string<char> >::deallocate' [ 0 5 10 52]
'uint16_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>, 1, true>' [ 0 5 10]
'logging::CheckNEImpl<sqlite3 *, sqlite3 *>' [ 0 9]
'long int' [ 0]
'sql::Connection::RegisterIntentToUpload::lock' [ 0 5 17 41]
'base::flat_map<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >, std::__1::less<void> >' [ 0 6]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::Release' [ 0 6 14 40]
'base::TimeDelta::FromSeconds' [ 0 6 17]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::Impl::get_key_comp' [ 0 6 16 256 262]
'std::__1::pointer_traits<std::__1::__tree_node<sql::Connection::StatementRef *, void *> *>' [ 0 5 10]
'long double' [ 0]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<(lambda at ../../sql/vfs_wrapper.cc:404:7), 0, true>' [ 0 5 10]
'std::__1::set<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::insert' [ 0 5 10 152]
'sql::MetaTable::SetValue' [ 0 5 16]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'(anonymous namespace)::GetSqlite3FileAndSize' [ 0 23]
'sql::MetaTable' [ 0 5]
'std::__1::__compressed_pair<sqlite3_vfs *, std::__1::function<void (sqlite3_vfs *)> >::second' [ 0 5 10 87]
'sql::Connection::Delete' [ 0 5 17]
'(anonymous namespace)::ScopedBusyTimeout::ScopedBusyTimeout' [ 0 23 42]
'sql::Connection::FullIntegrityCheck' [ 0 5 17]
'std::__1::conditional<true, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::__nat>' [ 0 5 10]
'base::internal::flat_tree<sql::StatementID, std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, base::internal::GetKeyFromValuePairFirst<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::less<void> >::Impl::Impl' [ 0 6 16 256 262]
'AnnotateFlushExpectedRaces' [ 0]
'(anonymous namespace)::AsUTF8ForSQL' [ 0 23]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'std::__1::unique_ptr<base::ListValue, std::__1::default_delete<base::ListValue> >::~unique_ptr' [ 0 5 10 83]
'std::__1::__pointer_type<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::__root' [ 0 5 10 155]
'std::__1::add_lvalue_reference<base::trace_event::MemoryDumpProvider>' [ 0 5 10]
'std::__1::__tree<sql::Connection::StatementRef *, std::__1::less<sql::Connection::StatementRef *>, std::__1::allocator<sql::Connection::StatementRef *> >::destroy' [ 0 5 10 155]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__alloc' [ 0 5 10 110]
'sql::Connection::GetUniqueStatement' [ 0 5 17]
'std::__1::__temp_value<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> >, std::__1::allocator<std::__1::pair<sql::StatementID, scoped_refptr<sql::Connection::StatementRef> > > >::~__temp_value' [ 0 5 10 209]
