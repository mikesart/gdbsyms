'ui::NativeThemeBase::Clamp' [ 0 4 21]
'cc::PaintFlags::SetInternalFlag' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'AnnotateBarrierInit' [ 0]
'(anonymous namespace)' [ 0]
'ui::GetAuraColor::kTouchableMenuItemLabelColor' [ 0 4 18]
'std::__1::remove<std::__1::__wrap_iter<ui::NativeThemeObserver **>, nullptr_t>' [ 0 5 10]
'pthread_mutex_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::__destroy<ui::NativeThemeObserver *>' [ 0 5 10 77]
'base::internal::DstRangeRelationToSrcRange<int, SaturationDefaultLimits, int>' [ 0 6 16]
'fabs' [ 0]
'std::__1::move<ui::NativeThemeObserver **, ui::NativeThemeObserver **>' [ 0 5 10]
'base::internal::WeakReference' [ 0 6 16]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'SK_ColorWHITE' [ 0]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::operator[]' [ 0 5 10 94]
'gfx::Insets::Insets' [ 0 5 13]
'ui::NativeThemeDarkAura::instance::s_native_theme' [ 0 4 25 35]
'sk_sp<SkTextBlob>' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'std::__1::true_type' [ 0 5 10]
'ui::NativeTheme::SetScrollbarColors' [ 0 4 17]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::false_type' [ 0 5 10]
'ui::GetAuraColor::kBlueButtonShadowColor' [ 0 4 18]
'unsigned char' [ 0]
'ui::GetAuraColor::kProminentButtonColor' [ 0 4 18]
'__va_list_tag' [ 0]
'AnnotatePublishMemoryRange' [ 0]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'std::__1::allocator<void>' [ 0 5 10]
'ui::NativeThemeBase::DrawVertLine' [ 0 4 21]
'ui::GetAuraColor::kResultsTablePositiveText' [ 0 4 18]
'(anonymous namespace)::kSliderThumbWidth' [ 0 23]
'ui::GetAuraColor::kMenuHighlightBackgroundColor' [ 0 4 18]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'ui::NativeThemeAura::GetPartSize' [ 0 4 21]
'ui::GetAuraColor::kMenuBorderColor' [ 0 4 18]
'AnnotateThreadName' [ 0]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'SkSafeUnref<cc::PaintShader>' [ 0]
'std::__1::numeric_limits<int>' [ 0 5 10]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::max_size' [ 0 5 10 94]
'AnnotatePCQPut' [ 0]
'logging::LogSeverity' [ 0 9]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'size_t' [ 0]
'gfx::Point::operator-=' [ 0 5 12]
'SK_AlphaTRANSPARENT' [ 0]
'SkAtomic<unsigned int, sk_memory_order_seq_cst>' [ 0]
'ui::GetAuraColor::kResultsTableNegativeSelectedText' [ 0 4 18]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'SkRefCntBase::unref' [ 0 14]
'ui::GetAuraColor::kTreeBackground' [ 0 4 18]
'AnnotateCondVarSignal' [ 0]
'std::__1::ostringstream' [ 0 5 10]
'ui::GetAuraColor::kTooltipBackground' [ 0 4 18]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__annotate_shrink' [ 0 5 10 94]
'sk_memory_order' [ 0]
'ui::GetAuraColor::kThrobberLightColor' [ 0 4 18]
'gfx::Rect::Inset' [ 0 5 11]
'gfx::operator+' [ 0 5]
'cc::PaintCanvas::drawColor' [ 0 4 17]
'sk_sp<SkPathRef>' [ 0]
'(anonymous namespace)::kSliderThumbDarkGrey' [ 0 23]
'base::internal::ClampedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'ui::NativeThemeDarkAura::GetSystemColor::kPrimaryTextColor' [ 0 4 25 41]
'base::internal::WeakPtrBase' [ 0 6 16]
'base::ObserverList<ui::NativeThemeObserver, false, true>::RemoveObserver' [ 0 6 58]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'cc::PaintFlags::setAntiAlias' [ 0 4 16]
'std::__1::__wrap_iter<ui::NativeThemeObserver **>::base' [ 0 5 10 51]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::operator bool' [ 0 6 74]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::__end_cap' [ 0 5 10 103]
'ui::NativeTheme::RemoveObserver' [ 0 4 17]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::allocator<char>' [ 0 5 10]
'ui::(anonymous namespace)::kTrackColor' [ 0 4 27]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::empty' [ 0 5 10 94]
'gfx::Size::set_height' [ 0 5 11]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::~vector' [ 0 5 10 94]
'ui::kOverlayScrollbarThumbNormalAlpha' [ 0 4]
'SkGlyphID' [ 0]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__push_back_slow_path<ui::NativeThemeObserver *const &>' [ 0 5 10 94]
'U8CPU' [ 0]
'tm' [ 0]
'(anonymous namespace)::kCheckboxAndRadioWidth' [ 0 23]
'std::nullptr_t' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'SkPoint::set' [ 0 9]
'gfx::kGoogleBlue500' [ 0 5]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'SkRect::width' [ 0 8]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, int>' [ 0 6 16]
'__int64_t' [ 0]
'ui::NativeThemeAura::~NativeThemeAura' [ 0 4 21]
'ui::GetAuraColor::kResultsTableHoveredBackground' [ 0 4 18]
'uint_least64_t' [ 0]
'logging::CheckNEImpl<unsigned int, unsigned int>' [ 0 9]
'SkScalar' [ 0]
'ui::NativeThemeAura::instance::s_native_theme' [ 0 4 21 31]
'base::trace_event::TraceCategory' [ 0 6 19]
'std::__1::min<float, std::__1::__less<float, float> >' [ 0 5 10]
'SkRect::set' [ 0 8]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'gfx::Insets::operator+=' [ 0 5 13]
'gfx::Rect::IsEmpty' [ 0 5 11]
'ui' [ 0]
'div_t' [ 0]
'ui::NativeThemeDarkAura::instance' [ 0 4 25]
'gfx::kGoogleYellow700' [ 0 5]
'ui::IsOverlayScrollbarEnabled' [ 0 4]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::forward<const int &>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'(anonymous namespace)::kCheckboxBorderDisabledColor' [ 0 23]
'AnnotateExpectRace' [ 0]
'base' [ 0]
'std::__1::__pointer_type_imp' [ 0 5 10]
'ui::GetAuraColor::kTreeSelectionBackgroundColor' [ 0 4 18]
'ui::NativeThemeDarkAura::NativeThemeDarkAura' [ 0 4 25]
'gfx::Rect::bottom' [ 0 5 11]
'__pthread_list_t' [ 0]
'base::internal::WeakReferenceOwner' [ 0 6 16]
'ui::(anonymous namespace)' [ 0 4]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>' [ 0 5 10]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__destruct_at_end' [ 0 5 10 94]
'fpos_t' [ 0]
'std::__1::memory_order' [ 0 5 10]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'gfx::kGoogleRed700' [ 0 5]
'ui::NativeThemeBase::PaintButton' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::__construct<ui::NativeThemeObserver *, ui::NativeThemeObserver *const &>' [ 0 5 10 77]
'ui::NativeThemeBase::NativeThemeBase' [ 0 4 21]
'__pthread_internal_list' [ 0]
'ui::GetAuraColor::kTableTextColor' [ 0 4 18]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::data' [ 0 5 10 94]
'uint_least32_t' [ 0]
'SkRect' [ 0]
'ui::NativeThemeBase::PaintScrollbarTrack' [ 0 4 21]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::minmax<int>' [ 0 5 10]
'sk_sp<SkImageFilter>' [ 0]
'SkNoncopyable' [ 0]
'ui::NativeThemeAura::PaintScrollbarCorner' [ 0 4 21]
'long unsigned int' [ 0]
'ui::GetAuraColor::kResultsTableText' [ 0 4 18]
'ui::CommonThemePaintMenuItemBackground' [ 0 4]
'trace_event_internal::kGlobalScope' [ 0 22]
'std::__1::__wrap_iter<ui::NativeThemeObserver **>::operator*' [ 0 5 10 51]
'ui::NativeTheme::ExtraParams::ExtraParams' [ 0 4 17 30]
'std::__1::max<unsigned long>' [ 0 5 10]
'ui::GetAuraColor::kThrobberSpinningColor' [ 0 4 18]
'std::__1::end<std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> > >' [ 0 5 10]
'ui::NativeTheme::AddObserver' [ 0 4 17]
'base::internal::ClampSub<int, int>' [ 0 6 16]
'std::__1::float_round_style' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'ui::NativeTheme::~NativeTheme' [ 0 4 17]
'size_type' [ 0]
'base::internal::CheckedSubOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::enable_if<true, void>' [ 0 5 10]
'gfx::PointF' [ 0 5]
'logging::CheckGEImpl' [ 0 9]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'base::internal::CheckedSubFastOp<int, int>::Do<int>' [ 0 6 16 44]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'gfx::Rect::width' [ 0 5 11]
'ui::NativeThemeBase::PaintArrowButton' [ 0 4 21]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'base::internal::ClampedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'base::ObserverList<ui::NativeThemeObserver, false, true>::AddObserver' [ 0 6 58]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 209]
'ui::NativeThemeBase::PaintCheckboxRadioCommon' [ 0 4 21]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'gfx::Insets' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<ui::NativeThemeObserver **>::__nat, ui::NativeThemeObserver *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::operator!=<ui::NativeThemeObserver *const *>' [ 0 5 10]
'sk_sp<SkDrawLooper>' [ 0]
'std::__1::remove_reference<ui::NativeThemeObserver *&>' [ 0 5 10]
'std::__1::operator!=<ui::NativeThemeObserver **>' [ 0 5 10]
'std::__1::__move<ui::NativeThemeObserver *, ui::NativeThemeObserver *>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'ui::GetAuraColor::kSelectedMenuItemForegroundColor' [ 0 4 18]
'ui::NativeThemeAura::GetSystemColor' [ 0 4 21]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >' [ 0 6]
'uint_least16_t' [ 0]
'features' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'base::ObserverList<ui::NativeThemeObserver, false, true>::HasObserver' [ 0 6 58]
'ui::GetAuraColor::kTextfieldDefaultColor' [ 0 4 18]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::min<unsigned long>' [ 0 5 10]
'long double' [ 0]
'long long int' [ 0]
'SkBlendMode' [ 0]
'RunningOnValgrind' [ 0]
'gfx::Rect::AddWouldOverflow' [ 0 5 11]
'SkRect::right' [ 0 8]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'gfx::Insets::right' [ 0 5 13]
'scoped_refptr<base::internal::WeakReference::Flag>' [ 0]
'SkPath' [ 0]
'trace_event_internal::ScopedTracer' [ 0 22]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>::operator++' [ 0 5 10 57]
'AnnotateRWLockAcquired' [ 0]
'base::internal::ClampedNumeric<int>' [ 0 6 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::__compressed_pair<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'logging::LogMessage' [ 0 9]
'sk_sp<cc::PaintShader>::reset' [ 0 24]
'std::__1::max<int>' [ 0 5 10]
'(anonymous namespace)::kCheckboxStrokeColor' [ 0 23]
'(anonymous namespace)::kSliderThumbLightGrey' [ 0 23]
'int_least8_t' [ 0]
'ui::GetAuraColor::kBlueButtonTextColor' [ 0 4 18]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'WTF' [ 0]
'std::__1::operator-<ui::NativeThemeObserver *const *, ui::NativeThemeObserver *const *>' [ 0 5 10]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'AnnotateBarrierWaitAfter' [ 0]
'ui::GetAuraColor::kActionableSubmenuVerticalSeparatorColor' [ 0 4 18]
'float' [ 0]
'std::__1::__pointer_type<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >' [ 0 5 10]
'ldiv_t' [ 0]
'(anonymous namespace)::kMenuPopupBackgroundColor' [ 0 23]
'wctype_t' [ 0]
'std::__1::__less<int, int>' [ 0 5 10]
'std::__1::remove_reference<ui::NativeThemeObserver *const &>' [ 0 5 10]
'trace_event_internal::ScopedTracer::ScopedTracer' [ 0 22 36]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'gfx::Path' [ 0 5]
'(anonymous namespace)::kCheckboxShadowDisabledColor' [ 0 23]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::end' [ 0 5 10 94]
'base::trace_event::TraceEventHandle' [ 0 6 19]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'ui::NativeThemeBase::GetPartSize' [ 0 4 21]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'std::__1::__less<float, float>' [ 0 5 10]
'ui::NativeThemeAura::SupportsNinePatch' [ 0 4 21]
'std::__1::min<float>' [ 0 5 10]
'uint8_t' [ 0]
'SkNVRefCnt<SkData>' [ 0]
'base::internal::saturated_cast_impl<int, SaturationDefaultLimits, int>' [ 0 6 16]
'__gnuc_va_list' [ 0]
'AnnotateCondVarWait' [ 0]
'std::__1::__to_raw_pointer<ui::NativeThemeObserver *>' [ 0 5 10]
'std::__1::__less<float, float>::operator()' [ 0 5 10 32]
'uint_fast64_t' [ 0]
'color_utils::HSL' [ 0 13]
'gfx::Rect::Rect' [ 0 5 11]
'gfx::Insets::top' [ 0 5 13]
'base::ObserverListPolicy' [ 0 6]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__end_cap' [ 0 5 10 101]
'SkColorToHSV' [ 0]
'std::__1::iterator_traits<ui::NativeThemeObserver **>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::capacity' [ 0 5 10 101]
'SkTypefaceCatalogerProc' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__size_type<std::__1::allocator<ui::NativeThemeObserver *>, long, true>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'ui::NativeThemeBase::PaintMenuSeparator' [ 0 4 21]
'sk_sp<cc::PaintShader>::operator=' [ 0 24]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>' [ 0 5 10]
'gfx::Rect::right' [ 0 5 11]
'timespec' [ 0]
'__pthread_mutex_s' [ 0]
'AnnotateBenignRace' [ 0]
'gfx::Point::Point' [ 0 5 12]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'cc::PaintFlags::setAlpha' [ 0 4 16]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'ui::(anonymous namespace)::kOverlayScrollbarBorderPatchWidth' [ 0 4 27]
'base::SequenceChecker' [ 0 6]
'ui::NativeThemeBase::PathForArrow' [ 0 4 21]
'AnnotateUnpublishMemoryRange' [ 0]
'AnnotateIgnoreSyncBegin' [ 0]
'base::subtle::AdoptRefTag' [ 0 6 14]
'ui::NativeThemeObserver' [ 0 4]
'uint_fast32_t' [ 0]
'ui::NativeThemeAura::GetNinePatchCanvasSize' [ 0 4 21]
'SkFilterQuality' [ 0]
'sk_sp<SkData>' [ 0]
'wctrans_t' [ 0]
'std::__1::operator-<ui::NativeThemeObserver *const *, ui::NativeThemeObserver **>' [ 0 5 10]
'(anonymous namespace)::kSliderThumbBorderDarkGrey' [ 0 23]
'SkMatrix' [ 0]
'SkPath::transform' [ 0 8]
'signed char' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'SkISize' [ 0]
'SkRefCntBase::getRefCnt' [ 0 14]
'std::__1::ios_base::flags' [ 0 5 10 20]
'gfx::Rect::origin' [ 0 5 11]
'SkColorSetARGB' [ 0]
'ui::GetAuraColor::kLinkEnabledColor' [ 0 4 18]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'ui::GetAuraColor::kResultsTableNegativeHoveredText' [ 0 4 18]
'AnnotateBarrierWaitBefore' [ 0]
'(anonymous namespace)::kCheckboxGradientColors' [ 0 23]
'std::__1::__compressed_pair<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::NativeThemeObserver *> &>' [ 0 5 10 107]
'mbstate_t' [ 0]
'ui::GetAuraColor::kTextfieldReadOnlyColor' [ 0 4 18]
'std::__1::__less<char *, char *>' [ 0 5 10]
'(anonymous namespace)::kCheckboxBorderColor' [ 0 23]
'__compar_fn_t' [ 0]
'SkRect::isEmpty' [ 0 8]
'gfx::kDisabledControlAlpha' [ 0 5]
'ui::NativeThemeAura::PaintScrollbarThumb' [ 0 4 21]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::push_back' [ 0 5 10 94]
'(anonymous namespace)::kSliderThumbHeight' [ 0 23]
'unsigned int' [ 0]
'base::internal::SaturateFastOp<int, int, void>::Do' [ 0 6 16 48]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'gfx::kGoogleYellow300' [ 0 5]
'AnnotateHappensBefore' [ 0]
'ui::NativeThemeBase::PaintRadio' [ 0 4 21]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'int' [ 0]
'std::__1::max<char *>' [ 0 5 10]
'base::TimeDelta' [ 0 6]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'AnnotateFlushState' [ 0]
'__builtin_va_list' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>::ObserverList' [ 0 6 58]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<ui::NativeThemeObserver *>, ui::NativeThemeObserver **, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'gfx::kGoogleRed300' [ 0 5]
'SkRect::bottom' [ 0 8]
'gfx::Size::height' [ 0 5 11]
'uint_fast16_t' [ 0]
'ui::NativeThemeBase::PaintScrollbarCorner' [ 0 4 21]
'ui::NativeThemeAura::web_instance' [ 0 4 21]
'AnnotateIgnoreReadsBegin' [ 0]
'std::__1::__libcpp_allocate' [ 0 5 10]
'ui::NativeThemeAura::PaintMenuPopupBackground' [ 0 4 21]
'gfx::Vector2dF' [ 0 5]
'trace_event_internal::ScopedTracer::Initialize' [ 0 22 36]
'SkNO_RETURN_HINT' [ 0]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::capacity' [ 0 5 10 103]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'ui::NativeThemeBase::scrollbar_button_length' [ 0 4 21]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::minmax<int, std::__1::__less<int, int> >' [ 0 5 10]
'ui::GetAuraColor' [ 0 4]
'base::internal::SaturationDefaultLimits<int>::Underflow' [ 0 6 16 46]
'trace_event_internal::kZeroNumArgs' [ 0 22]
'pthread_t' [ 0]
'ui::NativeThemeBase::UsesHighContrastColors' [ 0 4 21]
'(anonymous namespace)::kDefaultScrollbarButtonLength' [ 0 23]
'uint32_t' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::operator*' [ 0 6 58 64]
'ui::NativeThemeBase::SaturateAndBrighten' [ 0 4 21]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'base::internal::IntegerRepresentation' [ 0 6 16]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'gfx::InsetsF' [ 0 5]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'logging::CheckGTImpl' [ 0 9]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::vector' [ 0 5 10 94]
'__int8_t' [ 0]
'ui::GetAuraColor::kTextfieldReadOnlyBackground' [ 0 4 18]
'decltype(nullptr)' [ 0]
'ui::kOverlayScrollbarThumbWidthPressed' [ 0 4]
'ui::GetAuraColor::kTreeSelectedTextColor' [ 0 4 18]
'cc::PaintCanvas::clipRect' [ 0 4 17]
'sk_sp<cc::PaintShader>::sk_sp' [ 0 24]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::capacity' [ 0 5 10 94]
'(anonymous namespace)::kCheckboxGradientHoveredColors' [ 0 23]
'cc::PaintFlags::setShader' [ 0 4 16]
'scoped_refptr<const base::internal::WeakReference::Flag>' [ 0]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__destruct_at_end' [ 0 5 10 101]
'SkPoint' [ 0]
'__mbstate_t' [ 0]
'ui::NativeThemeBase::PaintCheckbox' [ 0 4 21]
'base::RefCountedThreadSafe<base::internal::WeakReference::Flag, base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >' [ 0 6]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'(anonymous namespace)::kRadioDotColor' [ 0 23]
'(anonymous namespace)::kTextBorderColor' [ 0 23]
'SkTextBlob' [ 0]
'SkRect::offset' [ 0 8]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'ui::GetAuraColor::kMenuBackgroundColor' [ 0 4 18]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'gfx::Size::IsEmpty' [ 0 5 11]
'(anonymous namespace)::BrightenColor' [ 0 23]
'AnnotateHappensAfter' [ 0]
'__intmax_t' [ 0]
'ui::GetAuraColor::kTreeTextColor' [ 0 4 18]
'gfx::InsetsF::InsetsF' [ 0 5 14]
'base::internal::ClampedNumeric<int>::MathOp<ClampedSubOp, int, int>' [ 0 6 16 37]
'std::__1::find<std::__1::__wrap_iter<ui::NativeThemeObserver *const *>, const ui::NativeThemeObserver *>' [ 0 5 10]
'std::__1::move<SkPoint &>' [ 0 5 10]
'trace_event_internal::AddTraceEvent' [ 0 22]
'std::__1::pair<int, int>::pair<const int &, const int &, false>' [ 0 5 10 26]
'cc::PaintFlags::setColor' [ 0 4 16]
'gfx::Point' [ 0 5]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'__uint8_t' [ 0]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::~__split_buffer' [ 0 5 10 103]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::erase' [ 0 5 10 94]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'features::kOverlayScrollbarFlashWhenMouseEnter' [ 0 10]
'__FILE' [ 0]
'ui::GetAuraColor::kDisabledTextColor' [ 0 4 18]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__vector_base' [ 0 5 10 101]
'(anonymous namespace)::kCheckboxBorderHoveredColor' [ 0 23]
'ui::NativeThemeAura::PaintScrollbarThumb::trace_event_unique_atomic196' [ 0 4 21 42]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >' [ 0 5 10]
'ui::GetAuraColor::kResultsTablePositiveSelectedText' [ 0 4 18]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::cbegin' [ 0 5 10 94]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::float_denorm_style' [ 0 5 10]
'std::__1::enable_if<true, ui::NativeThemeObserver **>' [ 0 5 10]
'SkIRect::set' [ 0 9]
'sk_sp<SkPathEffect>' [ 0]
'std::__1::addressof<char>' [ 0 5 10]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'ui::NativeThemeAura::GetNinePatchAperture' [ 0 4 21]
'SkTDArray<SkPathRef::GenIDChangeListener *>' [ 0]
'std::__1::find<std::__1::__wrap_iter<ui::NativeThemeObserver **>, const ui::NativeThemeObserver *>' [ 0 5 10]
'std' [ 0]
'features::kOverlayScrollbar' [ 0 10]
'base::Feature' [ 0 6]
'double' [ 0]
'uintmax_t' [ 0]
'base::TimeTicks' [ 0 6]
'(anonymous namespace)::kRadioDotDisabledColor' [ 0 23]
'SkAtomic<SkPath::Convexity, sk_memory_order_relaxed>' [ 0]
'std::__1::__throw_length_error' [ 0 5 10]
'std::__1::remove_reference<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'std::__1::operator==<ui::NativeThemeObserver **, ui::NativeThemeObserver **>' [ 0 5 10]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::swap<ui::NativeThemeObserver **>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'(anonymous namespace)::kDefaultScrollbarWidth' [ 0 23]
'std::__1::ostream' [ 0 5 10]
'gfx::Size::width' [ 0 5 11]
'ui::GetAuraColor::kTextSelectionBackgroundFocused' [ 0 4 18]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::__split_buffer' [ 0 5 10 103]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::__destruct_at_end' [ 0 5 10 103]
'base::subtle::NoBarrier_Store' [ 0 6 14]
'ui::NativeThemeBase::PaintFrameTopArea' [ 0 4 21]
'std::__1::find<std::__1::__wrap_iter<ui::NativeThemeObserver **>, nullptr_t>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__recommend' [ 0 5 10 94]
'gfx::Rect::size' [ 0 5 11]
'ui::kOverlayScrollbarStrokeWidth' [ 0 4]
'gfx::Rect::height' [ 0 5 11]
'AnnotateBarrierDestroy' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'__time_t' [ 0]
'gfx::Rect::set_y' [ 0 5 11]
'ui::NativeThemeDarkAura::GetSystemColor::kTextfieldDefaultColor' [ 0 4 25 41]
'gfx::kPlaceholderColor' [ 0 5]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'logging' [ 0]
'base::internal::IsValueInRangeForNumericType<int, int>' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'ui::NativeThemeBase::PaintSliderThumb' [ 0 4 21]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'gfx::Vector2d::x' [ 0 5 15]
'gfx::Vector2d::y' [ 0 5 15]
'gfx::Rect::set_height' [ 0 5 11]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'gfx::SizeF' [ 0 5]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'base::ObserverList<ui::NativeThemeObserver, false, true>::~ObserverList' [ 0 6 58]
'SkUnichar' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::operator==' [ 0 6 58 64]
'ui::NativeThemeDarkAura::GetSystemColor' [ 0 4 25]
'SkColorSetARGB::operator()' [ 0 16]
'(anonymous namespace)::kCheckboxStrokeDisabledColor' [ 0 23]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'ui::(anonymous namespace)::kOverlayScrollbarCenterPatchSize' [ 0 4 27]
'SkClipOp' [ 0]
'SkSize' [ 0]
'ui::GetAuraColor::kThrobberWaitingColor' [ 0 4 18]
'ui::NativeThemeBase::Paint' [ 0 4 21]
'ui::GetAuraColor::kTextSelectionColor' [ 0 4 18]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>::__wrap_iter<ui::NativeThemeObserver **>' [ 0 5 10 57]
'cc' [ 0]
'logging::CheckOpResult::message' [ 0 9 24]
'ui::NativeThemeDarkAura::GetSystemColor::kButtonEnabledColor' [ 0 4 25 41]
'ui::OverlayScrollbarFlashAfterAnyScrollUpdate' [ 0 4]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__make_iter' [ 0 5 10 94]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::GetCurrent' [ 0 6 58 64]
'GetRunningOnValgrind' [ 0]
'ui::GetAuraColor::kEnabledMenuItemForegroundColor' [ 0 4 18]
'unsigned short' [ 0]
'ui::NativeThemeDarkAura::~NativeThemeDarkAura' [ 0 4 25]
'std::__1::__wrap_iter<ui::NativeThemeObserver **>::operator++' [ 0 5 10 51]
'std::__1::min<int>' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'base::internal::IsCompileTimeConstant<int>' [ 0 6 16]
'std::__1::pair<const int &, const int &>::pair<true, false>' [ 0 5 10 42]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'ui::NativeTheme::GetInstanceForNativeUi' [ 0 4 17]
'base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag>' [ 0 6]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::~Iter' [ 0 6 58 64]
'std::__1::__wrap_iter<ui::NativeThemeObserver **>' [ 0 5 10]
'base::internal::RangeCheck' [ 0 6 16]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'__vtbl_ptr_type' [ 0]
'trace_event_internal' [ 0]
'ui::NativeThemeBase::PaintTextField' [ 0 4 21]
'std::__1::locale' [ 0 5 10]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'(anonymous namespace)::kProgressValueColor' [ 0 23]
'ui::GetAuraColor::kProminentButtonTextColor' [ 0 4 18]
'std::__1::pair<const int &, const int &>' [ 0 5 10]
'SkHSVToColor' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'base::subtle::NoBarrier_Load' [ 0 6 14]
'sk_sp<SkColorFilter>' [ 0]
'ui::GetAuraColor::kDialogBackgroundColor' [ 0 4 18]
'int_least64_t' [ 0]
'ui::kOverlayScrollbarThumbHoverAlpha' [ 0 4]
'gfx::Insets::bottom' [ 0 5 13]
'logging::LOG_ERROR' [ 0 9]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::~__vector_base' [ 0 5 10 101]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::max<float>' [ 0 5 10]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'ui::NativeTheme::GetInstanceForWeb' [ 0 4 17]
'SkRRect' [ 0]
'ui::GetAuraColor::kMenuItemMinorTextColor' [ 0 4 18]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<ui::NativeThemeObserver *> &>' [ 0 5 10]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'ui::NativeThemeAura::instance' [ 0 4 21]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::deallocate' [ 0 5 10 77]
'ui::GetAuraColor::kTableGroupingIndicatorColor' [ 0 4 18]
'gfx::Point::y' [ 0 5 12]
'ui::GetAuraColor::kTextfieldDefaultBackground' [ 0 4 18]
'std::__1::once_flag' [ 0 5 10]
'ui::GetAuraColor::kResultsTablePositiveHoveredText' [ 0 4 18]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::operator!=' [ 0 6 58 64]
'std::__1::__pointer_type_imp::__pointer_type<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *>, true>' [ 0 5 10 30]
'std::__1::chrono' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'SK_AlphaOPAQUE' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'base::internal::ClampedNumeric<int>::ClampedNumeric<int>' [ 0 6 16 37]
'gfx::RectF::Inset' [ 0 5 12]
'base::internal::SaturationDefaultLimits<int>::Overflow' [ 0 6 16 46]
'(anonymous namespace)::kProgressTickColor' [ 0 23]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'AnnotatePCQCreate' [ 0]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::clear' [ 0 5 10 101]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'logging::MakeCheckOpValueString<unsigned int>' [ 0 9]
'std::__1::__const_pointer<ui::NativeThemeObserver *, ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *>, true>' [ 0 5 10]
'base::internal::CommonMin<int, int>' [ 0 6 16]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'ui::NativeThemeAura::NativeThemeAura' [ 0 4 21]
'gfx::Insets::left' [ 0 5 13]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'base::internal::SupportsWeakPtrBase' [ 0 6 16]
'kUiResources' [ 0]
'std::__1::conditional<true, std::__1::pair<int, int>, std::__1::__nat>' [ 0 5 10]
'gfx::InsetsF::operator+=' [ 0 5 14]
'std::__1::__compressed_pair_elem<ui::NativeThemeObserver **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 72]
'SkRect::y' [ 0 8]
'AnnotateRWLockReleased' [ 0]
'std::__1::literals' [ 0 5 10]
'std::__1::swap<SkPoint>' [ 0 5 10]
'__uint64_t' [ 0]
'SkAtomic<unsigned char, sk_memory_order_relaxed>' [ 0]
'ui::GetAuraColor::kTableSelectedTextColor' [ 0 4 18]
'SkColor' [ 0]
'std::__1::__unwrap_iter<ui::NativeThemeObserver **>' [ 0 5 10]
'ui::GetAuraColor::kTooltipTextColor' [ 0 4 18]
'SK_ColorBLACK' [ 0]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::clear' [ 0 5 10 103]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'SkRect::x' [ 0 8]
'std::__1::__compressed_pair<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 106]
'(anonymous namespace)::kCheckboxTinyColor' [ 0 23]
'_G_fpos64_t' [ 0]
'AnnotateRWLockCreate' [ 0]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'gfx::Vector2d' [ 0 5]
'intmax_t' [ 0]
'std::__1::remove_reference<std::__1::allocator<ui::NativeThemeObserver *> &>' [ 0 5 10]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'SkNVRefCnt<SkPathRef>' [ 0]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'gfx::Rect' [ 0 5]
'ui::NativeThemeBase::OutlineColor' [ 0 4 21]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'SkPath::offset' [ 0 8]
'__syscall_slong_t' [ 0]
'int_least16_t' [ 0]
'SkColorSetA' [ 0]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'base::internal::ClampedSubOp<int, int, void>' [ 0 6 16]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'SkBool8' [ 0]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >' [ 0 5 10]
'gfx' [ 0]
'base::internal::ClampMathOp<ClampedSubOp, int, int>' [ 0 6 16]
'sk_sp<SkShader>' [ 0]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::~WeakPtr' [ 0 6 74]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'gfx::kGoogleBlue300' [ 0 5]
'base::internal::CommonMax<int, int>' [ 0 6 16]
'__uint32_t' [ 0]
'ui::NativeThemeBase::PaintMenuPopupBackground' [ 0 4 21]
'time_t' [ 0]
'gfx::SizeF::SizeF' [ 0 5 12]
'(anonymous namespace)::kCheckboxGradientDisabledColors' [ 0 23]
'bool' [ 0]
'std::__1::__vector_base<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__alloc' [ 0 5 10 101]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'SkPathRef' [ 0]
'std::__1::move<ui::NativeThemeObserver *&>' [ 0 5 10]
'std::__1::allocator<ui::NativeThemeObserver *>::allocate' [ 0 5 10 48]
'std::__1::remove_reference<ui::NativeThemeObserver **&>' [ 0 5 10]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>::operator*' [ 0 5 10 57]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Compact' [ 0 6 58]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'clock_t' [ 0]
'gfx::Point::set_y' [ 0 5 12]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'ui::NativeThemeBase::BoundingRectForArrow' [ 0 4 21]
'uint_least8_t' [ 0]
'gfx::Insets::operator InsetsF' [ 0 5 13]
'SkRefCntBase::unref::operator()' [ 0 14 21]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::__construct_backward<ui::NativeThemeObserver *>' [ 0 5 10 77]
'ui::NativeTheme::NativeTheme' [ 0 4 17]
'std::__1::__const_void_pointer<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *>, false>' [ 0 5 10]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'running_on_valgrind' [ 0]
'int64_t' [ 0]
'GritResourceMap' [ 0]
'color_utils' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'gfx::kGoogleGreen700' [ 0 5]
'base::internal::CheckedSubFastOp<int, int>' [ 0 6 16]
'ui::NativeThemeAura::PaintMenuItemBackground' [ 0 4 21]
'kWebuiResources' [ 0]
'base::FeatureState' [ 0 6]
'(anonymous namespace)::kProgressBorderColor' [ 0 23]
'ui::NativeThemeBase::PaintProgressBar' [ 0 4 21]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::Iter' [ 0 6 58 64]
'sk_sp<cc::PaintShader>' [ 0]
'long long unsigned int' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'base::ObserverList<ui::NativeThemeObserver, false, true>::begin' [ 0 6 58]
'SK_ColorTRANSPARENT' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>::end' [ 0 6 58]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'int_fast8_t' [ 0]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__annotate_delete' [ 0 5 10 94]
'SkTypefaceResolverProc' [ 0]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::get' [ 0 6 74]
'__uint16_t' [ 0]
'SkPaint' [ 0]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::size' [ 0 5 10 94]
'ui::kOverlayScrollbarStrokeNormalAlpha' [ 0 4]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'gfx::RectF' [ 0 5]
'std::__1' [ 0 5]
'wint_t' [ 0]
'base::SupportsWeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >' [ 0 6]
'ui::NativeThemeAura' [ 0 4]
'std::__1::allocator<ui::NativeThemeObserver *>::construct<ui::NativeThemeObserver *, ui::NativeThemeObserver *const &>' [ 0 5 10 48]
'char' [ 0]
'SkIVector' [ 0]
'cc::PaintFlags::setStyle' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::forward<ui::NativeThemeObserver *const &>' [ 0 5 10]
'ui::GetAuraColor::kSeparatorColor' [ 0 4 18]
'ui::NativeThemeAura::PaintScrollbarTrack' [ 0 4 21]
'ui::NativeThemeDarkAura::GetSystemColor::kResultsTableNormalBackground' [ 0 4 25 41]
'std::__1::atomic<int>' [ 0 5 10]
'int32_t' [ 0]
'short' [ 0]
'base::SupportsWeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::AsWeakPtr' [ 0 6 82]
'std::__1::iterator_traits<ui::NativeThemeObserver *const *>' [ 0 5 10]
'ui::MenuSeparatorType' [ 0 4]
'ui::NativeThemeAura::PaintScrollbarThumb::kOverlayScrollbarStrokeColor' [ 0 4 21 42]
'std::__1::move<ui::NativeThemeObserver **&>' [ 0 5 10]
'ui::NativeThemeBase::PaintArrow' [ 0 4 21]
'gfx::RectF::RectF' [ 0 5 12]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::NativeThemeObserver *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::NativeThemeObserver *> &, void>' [ 0 5 10 94]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__swap_out_circular_buffer' [ 0 5 10 94]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'AnnotateNewMemory' [ 0]
'std::__1::__wrap_iter<ui::NativeThemeObserver **>::__wrap_iter' [ 0 5 10 51]
'(anonymous namespace)::kCheckboxShadowColor' [ 0 23]
'AnnotateTraceMemory' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >' [ 0 5 10]
'ui::NativeTheme' [ 0 4]
'(anonymous namespace)::kCheckboxGradientPressedColors' [ 0 23]
'max_align_t' [ 0]
'base::internal::CheckedSubOp<int, int, void>' [ 0 6 16]
'std::__1::max<int, std::__1::__less<int, int> >' [ 0 5 10]
'SkMatrix::setIdentity' [ 0 10]
'ui::NativeThemeBase::AdjustCheckboxRadioRectForPadding' [ 0 4 21]
'std::__1::conditional<false, std::__1::pair<const int &, const int &>, std::__1::__nat>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, SaturationDefaultLimits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 218]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>::base' [ 0 5 10 57]
'ui::NativeThemeBase::GetNinePatchAperture' [ 0 4 21]
'AnnotatePCQGet' [ 0]
'__clock_t' [ 0]
'ui::NativeThemeBase::PaintScrollbarThumb' [ 0 4 21]
'ui::NativeThemeBase::PaintMenuList' [ 0 4 21]
'ui::NativeThemeBase' [ 0 4]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'AnnotateFlushExpectedRaces' [ 0]
'AnnotateIgnoreSyncEnd' [ 0]
'sk_sp<SkTypeface>' [ 0]
'base::trace_event' [ 0 6]
'gfx::SizeF::clamp' [ 0 5 12]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'GzippedGritResourceMap' [ 0]
'std::__1::ios_base::width' [ 0 5 10 20]
'ui::GetAuraColor::kTableSelectionBackgroundColor' [ 0 4 18]
'int_fast64_t' [ 0]
'base::internal::SaturateFastOp<int, int, void>' [ 0 6 16]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'base::SupportsWeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::~SupportsWeakPtr' [ 0 6 82]
'int16_t' [ 0]
'std::__1::pair<int, int>' [ 0 5 10]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'cc::PaintFlags::setStrokeWidth' [ 0 4 16]
'std::__1::streamsize' [ 0 5 10]
'AnnotateIgnoreWritesBegin' [ 0]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'ui::GetAuraColor::kResultsTableNegativeText' [ 0 4 18]
'std::__1::string' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::PlatformThreadRef' [ 0 6]
'std::__1::__split_buffer<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> &>::__alloc' [ 0 5 10 103]
'SkRect::MakeEmpty' [ 0 8]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'gfx::Size::Size' [ 0 5 11]
'SkNVRefCnt<SkTextBlob>' [ 0]
'std::__1::__wrap_iter<ui::NativeThemeObserver *const *>::__wrap_iter' [ 0 5 10 57]
'sk_sp<cc::PaintFilter>' [ 0]
'ui::NativeThemeObserver::~NativeThemeObserver' [ 0 4 25]
'base::internal' [ 0 6]
'std::__1::remove_reference<const int &>' [ 0 5 10]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'ui::GetAuraColor::kPrimaryTextColor' [ 0 4 18]
'std::__1::__compressed_pair<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'wchar_t' [ 0]
'int8_t' [ 0]
'AnnotatePCQDestroy' [ 0]
'base::time_internal' [ 0 6]
'ceil' [ 0]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'(anonymous namespace)::kCheckboxShadowHoveredColor' [ 0 23]
'uintptr_t' [ 0]
'base::ContainsValue<std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >, const ui::NativeThemeObserver *, 0>' [ 0 6]
'gfx::PointF::x' [ 0 5 13]
'SkIPoint' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::destroy<ui::NativeThemeObserver *>' [ 0 5 10 77]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::__annotate_new' [ 0 5 10 94]
'AnnotateCondVarSignalAll' [ 0]
'base::internal::RangeCheck::IsUnderflowFlagSet' [ 0 6 16 28]
'ui::GetAuraColor::kTableBackground' [ 0 4 18]
'int_fast32_t' [ 0]
'ui::GetAuraColor::kMenuSeparatorColor' [ 0 4 18]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::__max_size' [ 0 5 10 77]
'base::Lock' [ 0 6]
'(anonymous namespace)::kSliderTrackBackgroundColor' [ 0 23]
'features::kOverlayScrollbarFlashAfterAnyScrollUpdate' [ 0 10]
'uint64_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'gfx::kGoogleBlue900' [ 0 5]
'FILE' [ 0]
'gfx::Vector2d::Vector2d' [ 0 5 15]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::is_end' [ 0 6 58 64]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::WeakPtr' [ 0 6 74]
'AnnotateMutexIsNotPHB' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>' [ 0 6]
'ui::NativeThemeDarkAura' [ 0 4]
'ui::NativeThemeDarkAura::GetSystemColor::kTextfieldDefaultBackground' [ 0 4 25 41]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::allocate' [ 0 5 10 77]
'SkMinScalar' [ 0]
'SkRect::MakeWH' [ 0 8]
'logging::MakeCheckOpString<unsigned int, unsigned int>' [ 0 9]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'ui::NativeTheme::NotifyObservers' [ 0 4 17]
'base::subtle' [ 0 6]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'base::WeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::operator->' [ 0 6 74]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'ui::NativeThemeAura::web_instance::s_native_theme_for_web' [ 0 4 21 35]
'base::internal::saturated_cast<int, SaturationDefaultLimits, int>' [ 0 6 16]
'AnnotateNoOp' [ 0]
'base::internal::ClampedNumeric<int>::operator int<int>' [ 0 6 16 37]
'SkRect::height' [ 0 8]
'double_t' [ 0]
'AnnotateEnableRaceDetection' [ 0]
'std::__1::__compressed_pair<ui::NativeThemeObserver **, std::__1::allocator<ui::NativeThemeObserver *> &>::second' [ 0 5 10 107]
'ui::NativeThemeBase::SupportsNinePatch' [ 0 4 21]
'std::__1::remove_reference<SkPoint &>' [ 0 5 10]
'std::__1::operator==<ui::NativeThemeObserver *const *, ui::NativeThemeObserver *const *>' [ 0 5 10]
'std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> >::begin' [ 0 5 10 94]
'ui::NativeThemeAura::PaintArrowButton' [ 0 4 21]
'std::__1::allocator<ui::NativeThemeObserver *>::deallocate' [ 0 5 10 48]
'trace_event_internal::kNoId' [ 0 22]
'kWebuiResourcesSize' [ 0]
'gfx::PointF::y' [ 0 5 13]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'ui::NativeThemeBase::DrawHorizLine' [ 0 4 21]
'sk_sp<SkMaskFilter>' [ 0]
'ui::OverlayScrollbarFlashWhenMouseEnter' [ 0 4]
'int_fast16_t' [ 0]
'base::internal::RangeCheck::IsOverflowFlagSet' [ 0 6 16 28]
'ui::NativeThemeBase::PaintSliderTrack' [ 0 4 21]
'ui::NativeThemeBase::GetNinePatchCanvasSize' [ 0 4 21]
'ui::NativeThemeBase::PaintMenuItemBackground' [ 0 4 21]
'std::__1::__compressed_pair_elem<ui::NativeThemeObserver **, 0, false>' [ 0 5 10]
'std::__1::max<float, std::__1::__less<float, float> >' [ 0 5 10]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::construct<ui::NativeThemeObserver *, ui::NativeThemeObserver *const &>' [ 0 5 10 77]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::operator++' [ 0 6 58 64]
'ui::NativeThemeDarkAura::GetSystemColor::kResultsTableDimmedText' [ 0 4 25 41]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::EnsureValidIndex' [ 0 6 58 64]
'ui::NativeTheme::PaintStateTransition' [ 0 4 17]
'base::SupportsWeakPtr<base::ObserverList<ui::NativeThemeObserver, false, true> >::SupportsWeakPtr' [ 0 6 82]
'ui::kOverlayScrollbarStrokeHoverAlpha' [ 0 4]
'gfx::Rect::GetClampedValue' [ 0 5 11]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::NativeThemeObserver *> &, 1, false>::__get' [ 0 5 10 94]
'gfx::Rect::x' [ 0 5 11]
'gfx::Rect::y' [ 0 5 11]
'SkTDArray<float>' [ 0]
'gfx::PointF::PointF' [ 0 5 13]
'base::SequenceCheckerImpl' [ 0 6]
'__int32_t' [ 0]
'AnnotateBenignRaceSized' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::NativeThemeObserver *>, 1, true>' [ 0 5 10]
'AnnotateRWLockDestroy' [ 0]
'base::ObserverList<ui::NativeThemeObserver, false, true>::Iter::clamped_max_index' [ 0 6 58 64]
'ui::NativeThemeBase::~NativeThemeBase' [ 0 4 21]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'ui::NativeThemeAura::PaintScrollbarThumb::kOverlayScrollbarThumbColor' [ 0 4 21 42]
'std::__1::allocator<ui::NativeThemeObserver *>' [ 0 5 10]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp' [ 0 22]
'gfx::operator-' [ 0 5]
'(anonymous namespace)::kCheckboxAndRadioHeight' [ 0 23]
'base::internal::CommonMaxOrMin<int, int>' [ 0 6 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'std::__1::allocator_traits<std::__1::allocator<ui::NativeThemeObserver *> >::max_size' [ 0 5 10 77]
'ui::NativeThemeDarkAura::GetSystemColor::kResultsTableText' [ 0 4 25 41]
'gfx::kGoogleGreen300' [ 0 5]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'base::internal::SaturationDefaultLimits<int>' [ 0 6 16]
'SkData' [ 0]
'logging::CheckOpResult' [ 0 9]
'sk_sp<cc::PaintShader>::release' [ 0 24]
'uint16_t' [ 0]
'SkAlpha' [ 0]
'long int' [ 0]
'SkIRect' [ 0]
'ui::GetAuraColor::kResultsTableDimmedText' [ 0 4 18]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::NativeThemeObserver *> &, 1, false>' [ 0 5 10]
'ui::GetAuraColor::kButtonEnabledColor' [ 0 4 18]
'ui::NativeThemeBase::GetArrowColor' [ 0 4 21]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'kUiResourcesSize' [ 0]
'SkVector' [ 0]
'std::__1::move<sk_sp<cc::PaintShader> &>' [ 0 5 10]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::streamoff' [ 0 5 10]
'va_list' [ 0]
'std::__1::pointer_traits<ui::NativeThemeObserver **>' [ 0 5 10]
'AnnotateIgnoreWritesEnd' [ 0]
'SkRect::inset' [ 0 8]
'ui::NativeThemeBase::PaintInnerSpinButton' [ 0 4 21]
'cc::PaintFlags' [ 0 4]
'gfx::Point::x' [ 0 5 12]
'std::__1::__libcpp_numeric_limits<unsigned long, true>' [ 0 5 10]
'gfx::Rect::bottom_left' [ 0 5 11]
'std::__1::begin<std::__1::vector<ui::NativeThemeObserver *, std::__1::allocator<ui::NativeThemeObserver *> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'SkRect::iset' [ 0 8]
'__int16_t' [ 0]
'sk_sp<cc::PaintShader>::~sk_sp' [ 0 24]
'ui::NativeThemeDarkAura::GetSystemColor::kTextSelectionBackgroundFocused' [ 0 4 25 41]
'ui::NativeThemeBase::DrawBox' [ 0 4 21]
'std::__1::char_traits<char>' [ 0 5 10]
'trace_event_internal::ScopedTracer::~ScopedTracer' [ 0 22 36]
