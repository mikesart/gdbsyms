'gl::(anonymous namespace)::SGIVideoSyncThread' [ 0 4 27]
'std::__1::remove_reference<unsigned char *&>' [ 0 5 10]
'std::__1::pair<void *, std::__1::basic_string<char> >::pair<void *&, std::__1::basic_string<char>, false>' [ 0 5 10 55]
'gl::eglSwapBuffersProc' [ 0 4]
'gl::GLApiBase::glWindowRectanglesEXTFn' [ 0 4 15]
'gl::EGLApiBase::eglGetFrameTimestampSupportedANDROIDFn' [ 0 4 16]
'gl::GLStubApiBase::glUniform2ivFn' [ 0 4 19]
'std::__1::distance<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLApiBase::glStencilFuncFn' [ 0 4 15]
'std::__1::rotate<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::TraceGLXApi::glXDestroyContextFn' [ 0 4 17]
'gl::GLStubApiBase::glGetnUniformfvRobustANGLEFn' [ 0 4 19]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::release' [ 0 5 10 85]
'std::__1::move_if_noexcept<gfx::NativePixmapPlane>' [ 0 5 10]
'gl::GLStubApiBase::glBindImageTextureEXTFn' [ 0 4 19]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>::max' [ 0 6 16 68]
'gl::DebugGLApi::glCoverageModulationNVFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'gl::NoContextGLApi::glVertexAttribI4uiFn' [ 0 4 20]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'gl::TraceGLApi::glGetGraphicsResetStatusARBFn' [ 0 4 16]
'gl::GLSurfacePresentationHelper::ScopedSwapBuffers::ScopedSwapBuffers' [ 0 4 33 52]
'base::Singleton<gl::GLVisualPickerGLX, base::DefaultSingletonTraits<gl::GLVisualPickerGLX>, gl::GLVisualPickerGLX>::CreatorFunc' [ 0 6 116]
'gl::glGenFramebuffersEXTProc' [ 0 4]
'gl::TraceGLApi::glInsertEventMarkerEXTFn' [ 0 4 16]
'gl::GLXApiBase::glXCreateWindowFn' [ 0 4 16]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::operator-<ui::GpuSwitchingObserver *const *, ui::GpuSwitchingObserver **>' [ 0 5 10]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext> >::instance' [ 0 6 167]
'AnnotateNewMemory' [ 0]
'logging::MakeCheckOpString<int, unsigned char>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<int> >::construct<int, const int &>' [ 0 5 10 55]
'std::__1::allocator<int>' [ 0 5 10]
'std::__1::forward<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'std::__1::forward<gfx::PresentationFeedback &>' [ 0 5 10]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::size' [ 0 5 10 122]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::ExpandCapacityIfNecessary' [ 0 6 60]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SharedMemory>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair<TimeNamePair *, std::__1::allocator<TimeNamePair> &>::second' [ 0 5 10 82]
'std::__1::move<gfx::NativePixmapPlane *&>' [ 0 5 10]
'gl::GLStubApiBase::glDisableVertexAttribArrayFn' [ 0 4 19]
'gl::TraceGLApi::glBufferSubDataFn' [ 0 4 16]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__deallocate_node' [ 0 5 10 466]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 85]
'gl::GLApiBase::glBindBufferFn' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'gl::GLStubApiBase::glGetBufferParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::~unique_ptr' [ 0 5 10 71]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__destruct_n &>' [ 0 5 10]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::lower_bound<base::BasicStringPiece<std::string> >' [ 0 6 16 203]
'gl::GLStubApiBase::glGenBuffersARBFn' [ 0 4 19]
'timeval' [ 0]
'gl::DebugGLApi::glBindBufferFn' [ 0 4 16]
'gl::GLApiBase::glGetMultisamplefvRobustANGLEFn' [ 0 4 15]
'gl::TraceEGLApi::eglGetCurrentContextFn' [ 0 4 17]
'gl::glXCreatePbufferProc' [ 0 4]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator=<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider>, void, void>' [ 0 5 10 89]
'gl::GLApiBase::glGetVertexAttribfvFn' [ 0 4 15]
'gl::GLImage::BindTexImageWithInternalformat' [ 0 4 13]
'std::__1::add_lvalue_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::__construct_backward<ui::GpuSwitchingObserver *>' [ 0 5 10 78]
'gl::TraceGLApi::glPixelStoreiFn' [ 0 4 16]
'base::internal::circular_deque_iterator<scoped_refptr<gl::TimerQuery> >::operator--' [ 0 6 16 73]
'std::__1::__compressed_pair<ui::CARendererLayerParams::FilterEffect *, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >' [ 0 5 10]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>::operator*' [ 0 5 10 58]
'scoped_refptr<gl::TimerQuery>::Release' [ 0 31]
'std::__1::pair<int, int>::pair<int, int, false>' [ 0 5 10 26]
'gl::ScopedFramebufferBinder' [ 0 4]
'gl::DebugGLApi::glGetShaderInfoLogFn' [ 0 4 16]
'AnnotateCondVarSignal' [ 0]
'std::__1::ostringstream' [ 0 5 10]
'gl::GLSurfaceAdapter::GetCompatibilityKey' [ 0 4 22]
'gl::GLVersionInfo::Initialize' [ 0 4 19]
'base::internal::StrictNumeric<long>' [ 0 6 16]
'gl::glRequestExtensionANGLEProc' [ 0 4]
'gl::glXDestroyWindowProc' [ 0 4]
'gl::DebugGLApi::glCompressedTexImage2DFn' [ 0 4 16]
'gl::GLApiBase::glClearBufferivFn' [ 0 4 15]
'gl::DebugOSMESAApi::OSMesaPixelStoreFn' [ 0 4 20]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >' [ 0 5 10]
'gl::GLXApiBase::glXCopySubBufferMESAFn' [ 0 4 16]
'gl::GLStubApiBase::glGetUniformfvRobustANGLEFn' [ 0 4 19]
'std::__1::__compressed_pair<base::SharedMemory *, std::__1::default_delete<base::SharedMemory> >' [ 0 5 10]
'gl::TraceGLApi::glGetUniformfvFn' [ 0 4 16]
'gl::GLStubApiBase::glGetQueryObjectivFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >' [ 0 5 10]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::CheckedNumericState<int>' [ 0 6 16 75]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'gl::GLStubApiBase::glFrontFaceFn' [ 0 4 19]
'gl::DebugGLApi::glGetProgramInfoLogFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::__max_size' [ 0 5 10 67]
'gl::GLApiBase::glBindTransformFeedbackFn' [ 0 4 15]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::allocate' [ 0 5 10 122]
'gl::TraceGLApi::glFinishFn' [ 0 4 16]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 285]
'std::__1::allocator<gfx::NativePixmapPlane>::construct<gfx::NativePixmapPlane, int &, int &, int, unsigned long &>' [ 0 5 10 45]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::__max_size' [ 0 5 10 79]
'std::__1::__pointer_type<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::destroy<gl::GLContext *>' [ 0 5 10 99]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::back' [ 0 5 10 74]
'GLsizeiptr' [ 0]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>::unique_ptr<true, void>' [ 0 5 10 85]
'gl::GLApiBase::glUniform2uivFn' [ 0 4 15]
'std::__1::__size_type<std::__1::allocator<const char *>, long, true>' [ 0 5 10]
'gl::GLStubApi' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::max_size' [ 0 5 10 78]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::release' [ 0 5 10 91]
'std::__1::__tuple_leaf<0, const gfx::ColorSpace &, false>::get' [ 0 5 10 59]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::deallocate' [ 0 5 10 219]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::deallocate' [ 0 5 10 64]
'tm' [ 0]
'std::__1::__vector_base<int, std::__1::allocator<int> >::capacity' [ 0 5 10 57]
'gl::TraceGLApi::glGetProgramResourceLocationFn' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'gl::TraceGLApi::glGetActiveUniformsivFn' [ 0 4 16]
'gl::GLStubApi::glTestFenceNVFn' [ 0 4 15]
'gl::GLImageStub::GLImageStub' [ 0 4 17]
'gl::DebugGLApi::glGetQueryObjectivRobustANGLEFn' [ 0 4 16]
'gl::GLXApiBase::glXSwapIntervalMESAFn' [ 0 4 16]
'gl::GLSurfaceAdapter::IsSurfaceless' [ 0 4 22]
'gl::NoContextGLApi::glUniformMatrix4fvFn' [ 0 4 20]
'std::__1::__const_void_pointer<int *, std::__1::allocator<int>, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >' [ 0 5 10]
'gl::OSMESAApiBase::OSMesaColorClampFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<char> >::deallocate' [ 0 5 10 56]
'std::__1::__compressed_pair<gl::YUVToRGBConverter *, std::__1::default_delete<gl::YUVToRGBConverter> >::__compressed_pair<gl::YUVToRGBConverter *, true>' [ 0 5 10 104]
'uint_least64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, void>' [ 0 5 10 89]
'gl::GLStubApiBase::glTexParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >::unique_ptr<void **, true, void, void>' [ 0 5 10 69]
'gl::NoContextGLApi::glStencilThenCoverStrokePathNVFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__max_size' [ 0 5 10 91]
'gl::DebugGLApi::glVertexAttrib1fvFn' [ 0 4 16]
'std::__1::remove_reference<base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> > &>' [ 0 5 10]
'gl::GLApiBase::glGetBooleanvFn' [ 0 4 15]
'gl::DebugGLApi::glGetUniformuivRobustANGLEFn' [ 0 4 16]
'gl::GLApiBase::glBlendFuncFn' [ 0 4 15]
'gl::TraceGLApi::glGetTexParameterfvFn' [ 0 4 16]
'ui' [ 0]
'gl::TraceGLApi::glCompressedTexSubImage3DRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glGetTexParameterIuivRobustANGLEFn' [ 0 4 16]
'switches::kUseANGLE' [ 0 10]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::reset' [ 0 5 10 119]
'gl::NoContextGLApi::glGetFloatvRobustANGLEFn' [ 0 4 20]
'base::SharedMemory::memory' [ 0 6 20]
'gl::GLSurfaceAdapter::Destroy' [ 0 4 22]
'std::__1::move<void **&>' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::__split_buffer' [ 0 5 10 83]
'gl::(anonymous namespace)::g_egl_create_context_webgl_compatability_supported' [ 0 4 27]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::DestructRange<gl::GLSurfacePresentationHelper::Frame, 0>' [ 0 6 16 70]
'std::__1::unique_ptr<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent> >::reset' [ 0 5 10 95]
'std::__1::forward<const char *>' [ 0 5 10]
'gl::DebugGLApi::glGetTransformFeedbackVaryingFn' [ 0 4 16]
'std::__1::__const_pointer<ui::DCRendererLayerParams::FilterEffect, ui::DCRendererLayerParams::FilterEffect *, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, true>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> >' [ 0 5 10]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 6]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::__destruct_at_end' [ 0 5 10 77]
'gl::TraceGLApi::glSamplerParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glUniformMatrix2x4fvFn' [ 0 4 20]
'gl::GLStubApiBase::glGetVertexAttribIivRobustANGLEFn' [ 0 4 19]
'std::__1::unique<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../base/containers/flat_tree.h:453:23)>' [ 0 5 10]
'std::__1::forward<gl::YUVToRGBConverter *&>' [ 0 5 10]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__end_cap' [ 0 5 10 103]
'base::AtomicFlag' [ 0 6]
'std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gl::GLSurface::Initialize' [ 0 4 15]
'std::__1::__pointer_type<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent> >' [ 0 5 10]
'features' [ 0]
'gl::GLFenceNV::HasCompleted' [ 0 4 15]
'std::__1::allocator<TimeNamePair>::construct<TimeNamePair, TimeNamePair>' [ 0 5 10 35]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >' [ 0 5 10]
'logging::MakeCheckOpString<gl::GLContext *, gl::GLContext *>' [ 0 9]
'gl::TraceGLXApi::glXCreateWindowFn' [ 0 4 17]
'gl::TraceGLApi::glGetBooleanvFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::reset' [ 0 5 10 176]
'gl::EGLApiBase::eglProgramCacheResizeANGLEFn' [ 0 4 16]
'gl::GPUTimingImpl::CreateGPUTimingClient' [ 0 4 19]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::operator++' [ 0 5 10 61]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::~unique_ptr' [ 0 5 10 167]
'scoped_refptr<gl::GLSurface>::AddRef' [ 0 30]
'gl::GLContextOSMesa::GetHandle' [ 0 4 21]
'gl::TraceGLApi::glFlushFn' [ 0 4 16]
'gl::TraceGLApi::glBindBufferFn' [ 0 4 16]
'base::ContainsValue<std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >, const ui::GpuSwitchingObserver *, 0>' [ 0 6]
'gl::glDepthRangefProc' [ 0 4]
'gl::glSamplerParameterfvProc' [ 0 4]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::CheckValidIndexOrEnd' [ 0 6 62]
'__pid_t' [ 0]
'std::__1::__tuple_leaf<1, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, false>::__tuple_leaf<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, void>' [ 0 5 10 100]
'base::internal::VectorBuffer<base::TimeDelta>::capacity' [ 0 6 16 47]
'gl::glCoverStrokePathInstancedNVProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<ContextCreationInfo>, 1, true>' [ 0 5 10]
'base::internal::CheckedMulOp<int, int, void>::Do<int>' [ 0 6 16 46]
'std::__1::operator!=<gl::GLApi, std::__1::default_delete<gl::GLApi> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::DisplayType> &, 1, false>' [ 0 5 10]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider::OMLSyncControlVSyncProvider' [ 0 4 27 56]
'std::__1::forward<gl::DriverGL *>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__swap_out_circular_buffer' [ 0 5 10 82]
'gl::NoContextGLApi::glGetFramebufferAttachmentParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__hash_const_iterator' [ 0 5 10 127]
'gl::GLImageStub' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::clear' [ 0 6 16 203]
'base::LazyInstance<gl::(anonymous namespace)::TraceSwapEventsInitializer, base::internal::LeakyLazyInstanceTraits<gl::(anonymous namespace)::TraceSwapEventsInitializer> >::Pointer' [ 0 6 172]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__vector_base' [ 0 5 10 104]
'gl::DebugGLApi::glGetFenceivNVFn' [ 0 4 16]
'gl::DebugGLApi::glDeleteSamplersFn' [ 0 4 16]
'std::__1::equal_to<unsigned long>::operator()' [ 0 5 10 35]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::unique_ptr<true, void>' [ 0 5 10 71]
'gl::TraceGLApi::glMatrixLoadIdentityEXTFn' [ 0 4 16]
'gl::GLXApiBase::glXCreateGLXPixmapFn' [ 0 4 16]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~__vector_base' [ 0 5 10 108]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*&)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &)>' [ 0 5 10]
'gl::NoContextGLApi::glGetUniformuivFn' [ 0 4 20]
'std::__1::float_round_style' [ 0 5 10]
'gl::GLApiBase::GLApiBase' [ 0 4 15]
'std::__1::remove_reference<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> >' [ 0 5 10]
'angle::(anonymous namespace)::ANGLEPlatformImpl_logError' [ 0 7 30]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::operator[]' [ 0 5 10 96]
'gfx::PointF' [ 0 5]
'angle::GetDisplayPlatformFunc' [ 0 7]
'gl::GLStubApiBase::glBindTextureFn' [ 0 4 19]
'gl::GLImageRefCountedMemory::~GLImageRefCountedMemory' [ 0 4 29]
'gl::NoContextGLApi::glGetFloatvFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'std::__1::__const_void_pointer<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, false>' [ 0 5 10]
'gl::glFramebufferTexture2DMultisampleEXTProc' [ 0 4]
'std::__1::remove_reference<gl::DisplayType>' [ 0 5 10]
'gl::NoContextGLApi::glScissorFn' [ 0 4 20]
'gl::GLApiBase::glGetFramebufferAttachmentParameterivRobustANGLEFn' [ 0 4 15]
'gl::glGetVertexAttribivProc' [ 0 4]
'gl::glUniformMatrix2x3fvProc' [ 0 4]
'base::internal::CheckOnFailure' [ 0 6 16]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__hash' [ 0 5 10 122]
'gl::TraceEGLApi::eglStreamConsumerGLTextureExternalKHRFn' [ 0 4 17]
'gl::TraceGLApi::glGetProgramivFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::ScopedMakeCurrent>, 1, true>' [ 0 5 10]
'gl::DebugGLApi::glProgramParameteriFn' [ 0 4 16]
'GLXFBConfig' [ 0]
'gl::GLStubApiBase::glViewportFn' [ 0 4 19]
'gl::NoContextGLApi::glGenQueriesFn' [ 0 4 20]
'trace_event_internal::TraceID::TraceID' [ 0 22 31]
'std::__1::streamsize' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::max_size' [ 0 5 10 91]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *&, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10 273]
'gl::GLSurfacePresentationHelper::CheckPendingFrames::operator()' [ 0 4 33 53]
'gl::DebugGLApi::glUniform4fvFn' [ 0 4 16]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::end' [ 0 6 59]
'std::__1::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'base::SupportsWeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >' [ 0 6]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'gl::OSMesaGetColorBufferProc' [ 0 4]
'gl::TraceGLApi::glUniformBlockBindingFn' [ 0 4 16]
'gl::TimeElapsedTimerQuery::StartQuery' [ 0 4 27]
'std::__1::min<unsigned long>' [ 0 5 10]
'gl::NoContextGLApi::glIsSamplerFn' [ 0 4 20]
'long long int' [ 0]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::get' [ 0 6 75]
'std::__1::remove_reference<std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> > &>' [ 0 5 10]
'gl::NoContextGLApi::glGetProgramivRobustANGLEFn' [ 0 4 20]
'std::__1::forward<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'gl::glGenRenderbuffersEXTProc' [ 0 4]
'gl::eglGetCompositorTimingANDROIDProc' [ 0 4]
'gl::DebugEGLApi' [ 0 4]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::GpuSwitchingObserver *> &, 1, false>::__get' [ 0 5 10 95]
'gl::GLApiBase::glIsPathNVFn' [ 0 4 15]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>::Do<unsigned long>' [ 0 6 16 66]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::find<gl::GLContext *>' [ 0 5 10 107]
'gl::NoContextGLApi::glBindTransformFeedbackFn' [ 0 4 20]
'gl::GLApiBase::glGetActiveAttribFn' [ 0 4 15]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gl::TraceGLApi::glUniform2uivFn' [ 0 4 16]
'base::Singleton<gl::GLVisualPickerGLX, base::DefaultSingletonTraits<gl::GLVisualPickerGLX>, gl::GLVisualPickerGLX>::OnExit' [ 0 6 116]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::__compressed_pair<true, void>' [ 0 5 10 165]
'gl::glTestFenceAPPLEProc' [ 0 4]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::reset' [ 0 5 10 89]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>' [ 0 5 10]
'gl::GLApiBase::glGetSamplerParameterivFn' [ 0 4 15]
'std::__1::__to_raw_pointer<gl::DisplayType>' [ 0 5 10]
'logging::GetVlogLevel<38>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<const char *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<const char *> &, void>' [ 0 5 10 81]
'gl::DebugEGLApi::eglStreamConsumerGLTextureExternalKHRFn' [ 0 4 17]
'GLsizei' [ 0]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::__destruct_at_end' [ 0 5 10 91]
'base::operator<' [ 0 6]
'gl::DebugEGLApi::eglGetConfigsFn' [ 0 4 17]
'gl::GLApiBase::glGetTexParameterIuivRobustANGLEFn' [ 0 4 15]
'gl::GLApiBase::glTexBufferRangeFn' [ 0 4 15]
'gl::DebugGLApi::glUniformMatrix3x2fvFn' [ 0 4 16]
'switches::kDisableDirectCompositionLayers' [ 0 10]
'gl::GLApiBase::glGenBuffersARBFn' [ 0 4 15]
'gl::(anonymous namespace)::current_surface_' [ 0 4 27]
'gl::DebugEGLApi::eglQueryStringFn' [ 0 4 17]
'base::ThreadCheckerImpl' [ 0 6]
'wctype_t' [ 0]
'AnnotatePCQCreate' [ 0]
'gl::RealGLXApi::SetDisabledExtensions' [ 0 4 16]
'gl::NoContextGLApi::glStencilThenCoverStrokePathInstancedNVFn' [ 0 4 20]
'base::DCheckAsserter::DCheckAsserter' [ 0 6 22]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__construct_backward<base::FileDescriptor>' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<XVisualInfo *, 0, false>' [ 0 5 10]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::DestructRange' [ 0 6 60]
'gl::GLApiBase::glIsTextureFn' [ 0 4 15]
'gl::TraceGLApi::glFinishFenceAPPLEFn' [ 0 4 16]
'std::__1::__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >' [ 0 5 10]
'gl::GLApiBase::glStencilMaskSeparateFn' [ 0 4 15]
'gl::GLSurface::SupportsProtectedVideo' [ 0 4 15]
'gl::GLFenceNV::ResetState' [ 0 4 15]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__annotate_delete' [ 0 5 10 96]
'gl::TraceGLApi::glClearFn' [ 0 4 16]
'ui::ScopedMakeCurrent::~ScopedMakeCurrent' [ 0 4 23]
'gl::GLStubApiBase::glGetIntegeri_vFn' [ 0 4 19]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'gl::GLShareGroup::GetContext' [ 0 4 18]
'gl::TraceGLApi::glVertexAttribPointerFn' [ 0 4 16]
'gl::GLApiBase::glUniform3ivFn' [ 0 4 15]
'Drawable' [ 0]
'gl::TraceEGLApi::eglStreamConsumerAcquireKHRFn' [ 0 4 17]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::~vector' [ 0 5 10 82]
'std::__1::random_access_iterator_tag' [ 0 5 10]
'gl::DebugGLApi::glUniform3ivFn' [ 0 4 16]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::~vector' [ 0 5 10 68]
'std::__1::default_delete<gfx::GpuFence>' [ 0 5 10]
'gl::QueryResult::GetDelta' [ 0 4 17]
'gl::GLStubApiBase::glVertexAttrib1fvFn' [ 0 4 19]
'gl::GLApiBase::glGetSamplerParameterIivRobustANGLEFn' [ 0 4 15]
'gl::GLApiBase::glGetUniformivFn' [ 0 4 15]
'gl::GLStubApiBase::glRequestExtensionANGLEFn' [ 0 4 19]
'std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterivFn' [ 0 4 16]
'base::internal::Unwrap<const base::WeakPtr<gl::GLSurfacePresentationHelper> &>' [ 0 6 16]
'gl::eglDupNativeFenceFDANDROIDProc' [ 0 4]
'base::subtle::GetOrCreateLazyPointer<ui::GpuSwitchingManager>' [ 0 6 14]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::__tree_node_destructor' [ 0 5 10 151]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__construct<unsigned char>' [ 0 5 10 65]
'gl::GLApiBase::glFenceSyncFn' [ 0 4 15]
'gl::glIsSamplerProc' [ 0 4]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__vector_base' [ 0 5 10 89]
'std::__1::__compressed_pair_elem<base::BasicStringPiece<std::string> *, 0, false>::__compressed_pair_elem<base::BasicStringPiece<std::string> *, void>' [ 0 5 10 83]
'gl::DebugGLApi::glUniform2fvFn' [ 0 4 16]
'gl::EGLApiBase::eglQuerySurfacePointerANGLEFn' [ 0 4 16]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__end_cap' [ 0 5 10 110]
'gl::glXGetClientStringProc' [ 0 4]
'gl::glCoverageModulationNVProc' [ 0 4]
'gl::TraceEGLApi::eglGetNativeClientBufferANDROIDFn' [ 0 4 17]
'gl::GLApiBase::glCullFaceFn' [ 0 4 15]
'gl::GPUTimingImpl::EndElapsedTimeQuery' [ 0 4 19]
'gl::GLSurface::PostSubBuffer' [ 0 4 15]
'std::__1::allocator<unsigned char>::deallocate' [ 0 5 10 36]
'gl::DebugGLApi::glUniform4fFn' [ 0 4 16]
'gl::GLApiBase::glDeleteFencesNVFn' [ 0 4 15]
'std::__1::remove_reference<gfx::FixedVSyncProvider *&>' [ 0 5 10]
'gl::glGetQueryObjecti64vProc' [ 0 4]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::push_back' [ 0 5 10 66]
'std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::GLImageGLX::GLImageGLX' [ 0 4 16]
'gl::GLStubApiBase::glSamplerParameterivRobustANGLEFn' [ 0 4 19]
'gl::TraceGLApi::glShaderSourceFn' [ 0 4 16]
'gl::GLXApiBase::glXDestroyPbufferFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<void *> >::deallocate' [ 0 5 10 58]
'gl::GLSurface::Recreate' [ 0 4 15]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::VectorBuffer' [ 0 6 16 68]
'gl::DebugGLXApi::glXDestroyContextFn' [ 0 4 17]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::~vector' [ 0 5 10 70]
'gl::TraceGLApi::glGetSamplerParameterfvFn' [ 0 4 16]
'gl::DebugGLApi::glDeleteBuffersARBFn' [ 0 4 16]
'gl::GLContext::GetCurrent' [ 0 4 15]
'std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>::deallocate' [ 0 5 10 62]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, 0, false>::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, void>' [ 0 5 10 169]
'sk_sp<SkColorSpace>' [ 0]
'std::__1::__size_type<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, long, true>' [ 0 5 10]
'std::__1::less<void>::operator()<const base::BasicStringPiece<std::string> &, const base::BasicStringPiece<std::string> &>' [ 0 5 10 22]
'std::__1::forward<const char *&>' [ 0 5 10]
'gl::NoContextGLApi::glCompressedTexImage3DFn' [ 0 4 20]
'std::__1::__pointer_type<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'gl::glReleaseShaderCompilerProc' [ 0 4]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::unique_ptr' [ 0 5 10 119]
'base::circular_deque<base::TimeDelta>::~circular_deque' [ 0 6 39]
'gl::glDeleteVertexArraysOESProc' [ 0 4]
'base::trace_event' [ 0 6]
'gl::NoContextGLApi::glEnableFn' [ 0 4 20]
'scoped_refptr<gl::GLImage>::~scoped_refptr' [ 0 28]
'gl::GLStubApiBase::glUniformMatrix2fvFn' [ 0 4 19]
'gl::DebugGLXApi::glXQueryExtensionFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::destroy<XVisualInfo>' [ 0 5 10 63]
'std::__1::move<std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> > &>' [ 0 5 10]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::DestructRange' [ 0 6 62]
'gl::glGetFloatvRobustANGLEProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::destroy<TimeNamePair>' [ 0 5 10 64]
'gl::GLSurfaceEGL::~GLSurfaceEGL' [ 0 4 18]
'gl::GLSurfaceAdapter::DeferDraws' [ 0 4 22]
'base::DefaultRefCountedTraits<gl::TimerQuery>' [ 0 6]
'gl::GLApiBase::glClearDepthFn' [ 0 4 15]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::cbegin' [ 0 5 10 96]
'std::__1::__pointer_type<std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >' [ 0 5 10]
'gl::TraceEGLApi::eglCopyBuffersFn' [ 0 4 17]
'gl::TraceEGLApi::eglGetNextFrameIdANDROIDFn' [ 0 4 17]
'std::__1::move<base::TimeDelta &>' [ 0 5 10]
'std::__1::remove_reference<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_value_type<unsigned long, gl::GLContext *> *>::__nat, std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'std::__1::__compressed_pair<gl::GLApi *, std::__1::default_delete<gl::GLApi> >' [ 0 5 10]
'gl::DebugGLApi::glClearDepthFn' [ 0 4 16]
'std::__1::default_delete<int []>::operator()<int>' [ 0 5 10 34]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__swap_out_circular_buffer' [ 0 5 10 68]
'ui::ScopedMakeCurrent' [ 0 4]
'gl::GLContextStub::GetGLRenderer' [ 0 4 19]
'gl::GLStubApiBase::glTransformFeedbackVaryingsFn' [ 0 4 19]
'std::__1::find<std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>, const ui::GpuSwitchingObserver *>' [ 0 5 10]
'std::__1::__const_pointer<ui::GpuSwitchingObserver *, ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>, 1, true>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__annotate_delete' [ 0 5 10 82]
'std::__1::remove_reference<gl::GLStateRestorer *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>, 1, true>' [ 0 5 10]
'gl::glQueryCounterProc' [ 0 4]
'std::__1::add_lvalue_reference<void *>' [ 0 5 10]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::operator!=' [ 0 6 59 65]
'gl::GLSurfaceOSMesa::GetFormat' [ 0 4 21]
'gl::GLStubApiBase::glTexImage3DRobustANGLEFn' [ 0 4 19]
'std::__1::forward<std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'gl::DebugGLApi::glCreateProgramFn' [ 0 4 16]
'gl::glXGetSelectedEventProc' [ 0 4]
'base::NativeLibraryLoadError' [ 0 6]
'std::__1::__pointer_type<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'switches::kUseGL' [ 0 10]
'gl::GLContextReal' [ 0 4]
'gl::DebugGLApi::glTexParameterfFn' [ 0 4 16]
'std::__1::move<gl::QueryResult *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *, 0, false>::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *&, void>' [ 0 5 10 100]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::emplace_back<gl::GLSurfacePresentationHelper::Frame>' [ 0 6 62]
'gl::GLStubApiBase::glGenQueriesFn' [ 0 4 19]
'std::__1::vector<int, std::__1::allocator<int> >::operator[]' [ 0 5 10 50]
'gl::TraceGLApi::glStencilStrokePathNVFn' [ 0 4 16]
'gl::glCoverFillPathInstancedNVProc' [ 0 4]
'std::__1::remove_reference<TimeNamePair>' [ 0 5 10]
'gl::NoContextGLApi::glFramebufferTexture2DEXTFn' [ 0 4 20]
'gl::GLApiBase::glVertexAttribI4iFn' [ 0 4 15]
'gl::GLVisualPickerGLX::~GLVisualPickerGLX' [ 0 4 23]
'gl::(anonymous namespace)::kVertexHeaderCoreProfile' [ 0 4 27]
'std::__1::__pointer_type<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'EGLNativeWindowType' [ 0]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::operator[]' [ 0 5 10 200]
'__builtin_va_list' [ 0]
'gl::GLEnums' [ 0 4]
'std::__1::remove_reference<gfx::NativePixmap *&>' [ 0 5 10]
'gl::DebugGLApi::glReleaseShaderCompilerFn' [ 0 4 16]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::operator=' [ 0 5 10 89]
'gl::DebugGLApi::glGetSamplerParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::GLStubApiBase::glIsFenceNVFn' [ 0 4 19]
'gl::TraceGLXApi::glXDestroyWindowFn' [ 0 4 17]
'gl::g_driver_osmesa' [ 0 4]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::size' [ 0 5 10 97]
'gl::GLApiBase::glSamplerParameterivRobustANGLEFn' [ 0 4 15]
'gl::GLStubApi::glCreateShaderFn' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider>, false>' [ 0 5 10 30]
'gl::GLImageEGL::ReleaseTexImage' [ 0 4 16]
'gl::(anonymous namespace)::g_egl_window_fixed_size_supported' [ 0 4 27]
'gl::RealGLApi::~RealGLApi' [ 0 4 15]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::capacity' [ 0 5 10 129]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'base::BindUnwrapTraits<base::WeakPtr<gl::GLSurfacePresentationHelper> >::Unwrap<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 73]
'base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread>' [ 0 6]
'gl::TraceGLApi::glGetTexParameterfvRobustANGLEFn' [ 0 4 16]
'gl::GLSurfaceFormat::SetStencilBits' [ 0 4 21]
'gl::GLStubApiBase::glVertexAttribI4uivFn' [ 0 4 19]
'gl::TraceEGLApi::eglWaitNativeFn' [ 0 4 17]
'gl::TraceGLApi::glGetActiveUniformBlockivRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane> &, void>' [ 0 5 10 91]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long> >' [ 0 5 10]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__emplace_unique_key_args<gl::GLContext *, gl::GLContext *const &>' [ 0 5 10 107]
'gl::GLSurfaceGLX::IsOMLSyncControlSupported' [ 0 4 18]
'gl::SyncControlVSyncProvider' [ 0 4]
'gl::NoContextGLApi::glGetVertexAttribivRobustANGLEFn' [ 0 4 20]
'std::__1::__pointer_type<gl::GLSurface::CALayerInUseQuery, std::__1::allocator<gl::GLSurface::CALayerInUseQuery> >' [ 0 5 10]
'gl::DebugGLApi::glPixelStoreiFn' [ 0 4 16]
'base::AutoWritableMemory::Create<void (*)(void *)>' [ 0 6 26]
'gl::OSMESAApiBase::OSMesaGetCurrentContextFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::less<gl::GLContext *>, 1, true>' [ 0 5 10]
'std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >::~tuple' [ 0 5 10 66]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'gl::GLStubApiBase::glGetUniformLocationFn' [ 0 4 19]
'gl::GLApiBase::glIsShaderFn' [ 0 4 15]
'std::__1::remove_reference<std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::TraceGLApi::glUniform2fvFn' [ 0 4 16]
'gl::GLSurfaceEGL::InitializeDisplay' [ 0 4 18]
'gl::GLHelper::SetupQuadVertexBuffer' [ 0 4 14]
'std::__1::__pointer_type<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'gl::TraceOSMESAApi::OSMesaMakeCurrentFn' [ 0 4 20]
'gl::GLStubApiBase::glGetQueryObjectui64vRobustANGLEFn' [ 0 4 19]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >::AddRef' [ 0 6 84]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<__GLXFBConfigRec *>' [ 0 5 10]
'__eglMustCastToProperFunctionPointerType' [ 0]
'gl::(anonymous namespace)::TextureFormat' [ 0 4 27]
'gl::GLApiBase::glGetnUniformivRobustANGLEFn' [ 0 4 15]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, void>::IsCancelled<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 157]
'gl::GLStubApiBase::glBindFramebufferEXTFn' [ 0 4 19]
'base::RepeatingCallback<long ()>::operator=' [ 0 6 34]
'gl::GLApiBase::glVertexAttribDivisorANGLEFn' [ 0 4 15]
'gl::glGetBooleanvRobustANGLEProc' [ 0 4]
'gl::GLApiBase::glStencilThenCoverStrokePathNVFn' [ 0 4 15]
'OSMESAproc' [ 0]
'std::__1::tuple<gfx::PresentationFeedback>::tuple<gfx::PresentationFeedback, false, false>' [ 0 5 10 44]
'gl::GLStubApiBase::glDepthFuncFn' [ 0 4 19]
'std::__1::conditional<true, base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::DestructRange<scoped_refptr<gl::TimerQuery>, 0>' [ 0 6 16 62]
'std::__1::__compressed_pair_elem<std::__1::__return_temporary_buffer, 1, true>' [ 0 5 10]
'gl::glSamplerParameteriProc' [ 0 4]
'EGLDisplay' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, true>' [ 0 5 10 30]
'gl::glGetSamplerParameterIuivRobustANGLEProc' [ 0 4]
'std::__1::__tuple_leaf<1, base::TimeDelta, false>::__tuple_leaf<const base::TimeDelta &, void>' [ 0 5 10 51]
'gl::SurfacelessEGL::GetSize' [ 0 4 20]
'std::__1::forward<gl::CurrentGL *>' [ 0 5 10]
'std::__1::__pointer_type<XVisualInfo, gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<double>::value' [ 0 6 16 38 55]
'gl::DebugGLXApi::glXDestroyPixmapFn' [ 0 4 17]
'gl::GLSurfaceGLX::IsCreateContextES2ProfileSupported' [ 0 4 18]
'base::internal::ScopedFDCloseTraits' [ 0 6 16]
'gl::GPUTimingClient' [ 0 4]
'std::__1::remove_reference<gl::DriverGL *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<const char *> &, 1, false>::__get' [ 0 5 10 81]
'base::TimeDelta::FromSeconds' [ 0 6 17]
'gl::GLStubApiBase::glGetTexLevelParameterfvRobustANGLEFn' [ 0 4 19]
'gl::glDeleteFencesNVProc' [ 0 4]
'base::subtle::RefCountedBase::RefCountedBase' [ 0 6 14 30]
'gl::GLStubApiBase::glFramebufferTexture2DEXTFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<ui::GpuSwitchingObserver **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 73]
'std::__1::move<gl::GLContext *&>' [ 0 5 10]
'std::__1::allocator<const char *>::allocate' [ 0 5 10 35]
'gl::GLApiBase::glUniform1fFn' [ 0 4 15]
'std::__1::tuple<base::TimeTicks, base::TimeDelta>' [ 0 5 10]
'std::__1::vector<void *, std::__1::allocator<void *> >::size' [ 0 5 10 56]
'gl::glGetPointervProc' [ 0 4]
'gl::TraceGLApi::glClearDepthFn' [ 0 4 16]
'gl::GLStubApiBase::glClearFn' [ 0 4 19]
'gl::GLApiBase::glDrawBuffersARBFn' [ 0 4 15]
'XReparentEvent' [ 0]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLContext>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLContext> > >::Pointer' [ 0 6 145]
'base::WeakPtrFactory<gl::GLSurfacePresentationHelper>::WeakPtrFactory' [ 0 6 55]
'gl::DebugGLApi::glCopyTextureCHROMIUMFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::GetFormat' [ 0 4 28]
'gl::GLStubApiBase::glBufferSubDataFn' [ 0 4 19]
'std::__1::addressof<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'gl::NoContextGLApi::glSamplerParameteriFn' [ 0 4 20]
'std::__1::addressof<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::DCRendererLayerParams::FilterEffect *, 0, false>' [ 0 5 10]
'gl::OSMESAApiBase' [ 0 4]
'gl::glGetAttribLocationProc' [ 0 4]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::reset' [ 0 5 10 268]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>' [ 0 6 16]
'EGLSurface' [ 0]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >' [ 0 5 10]
'std::__1::allocator<TimeNamePair>::allocate' [ 0 5 10 35]
'gl::GLSurfaceEGL::initialized_' [ 0 4 18]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::~map' [ 0 5 10 160]
'gl::glVertexAttrib4fProc' [ 0 4]
'std::__1::allocator<base::BasicStringPiece<std::string> >::allocate' [ 0 5 10 59]
'gl::GLApiBase::glGetIntegeri_vFn' [ 0 4 15]
'gl::GLContextEGL' [ 0 4]
'gl::GLStubApiBase::glMemoryBarrierEXTFn' [ 0 4 19]
'base::TimeTicks' [ 0 6]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__insert_unique<std::__1::pair<void *, std::__1::basic_string<char> >, void>' [ 0 5 10 299]
'gl::TraceGLApi::glPolygonOffsetFn' [ 0 4 16]
'std::__1::__pointer_type<int, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'gl::GLStubApiBase::glIsFramebufferEXTFn' [ 0 4 19]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::Decrement' [ 0 6 16 79]
'gl::NoContextGLApi::glRenderbufferStorageMultisampleFn' [ 0 4 20]
'gl::glTexParameteriProc' [ 0 4]
'base::internal::NarrowingRange<long, double, numeric_limits>' [ 0 6 16]
'gl::NoContextGLApi::glCopyTexImage2DFn' [ 0 4 20]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned long, gl::GLContext *> *>::pointer_to' [ 0 5 10 89]
'gl::GLStubApiBase::glTexParameterIuivRobustANGLEFn' [ 0 4 19]
'std::__1::ostream' [ 0 5 10]
'std::__1::iterator<std::__1::random_access_iterator_tag, base::BasicStringPiece<std::string>, long, base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> &>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__swap_out_circular_buffer' [ 0 5 10 50]
'std::__1::__const_pointer<unsigned char, unsigned char *, std::__1::allocator<unsigned char>, true>' [ 0 5 10]
'std::__1::vector<long, std::__1::allocator<long> >::capacity' [ 0 5 10 52]
'gl::glEGLImageTargetTexture2DOESProc' [ 0 4]
'base::internal::circular_deque_const_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::operator*' [ 0 6 16 85]
'gl::GLApiBase::glGenRenderbuffersEXTFn' [ 0 4 15]
'gl::DebugGLApi::glGetBooleanvFn' [ 0 4 16]
'gl::GLEnums::enum_to_string_table_' [ 0 4 13]
'std::__1::pair<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >' [ 0 5 10]
'gl::TraceGLApi::glVertexAttrib3fFn' [ 0 4 16]
'scoped_refptr<gl::GLShareGroup>::operator->' [ 0 33]
'base::ThreadPriority' [ 0 6]
'std::__1::pointer_traits<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>' [ 0 5 10]
'gl::GLApiBase::glGetProgramResourceivFn' [ 0 4 15]
'gl::ScopedViewport::ScopedViewport' [ 0 4 20]
'gl::DebugEGLApi::eglStreamConsumerGLTextureExternalAttribsNVFn' [ 0 4 17]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 114]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>::__wrap_iter' [ 0 5 10 58]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::release' [ 0 5 10 81]
'switches' [ 0]
'gl::DebugGLApi::glCompressedCopyTextureCHROMIUMFn' [ 0 4 16]
'gfx::SizeF' [ 0 5]
'gl::NoContextGLApi::glMapBufferRangeFn' [ 0 4 20]
'std::__1::__algo_gcd<long>' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::SwapBuffers' [ 0 4 28]
'scoped_refptr<base::RefCountedMemory>::operator=' [ 0 39]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__alloc' [ 0 5 10 129]
'gl::OSMESAApiBase::OSMESAApiBase' [ 0 4 19]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::operator bool' [ 0 5 10 115]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLSurface> >' [ 0 6 16]
'std::__1::__compressed_pair_elem<gfx::VSyncProvider *, 0, false>::__compressed_pair_elem<gfx::VSyncProvider *, void>' [ 0 5 10 66]
'gl::DebugEGLApi::eglBindTexImageFn' [ 0 4 17]
'base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread>::Destruct' [ 0 6 78]
'std::__1::forward<std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10]
'std::__1::move<std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>, std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> > >' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__annotate_delete' [ 0 5 10 84]
'gl::GLStubApiBase::glFramebufferTextureLayerFn' [ 0 4 19]
'gl::GLStubApiBase::glGetVertexAttribIuivRobustANGLEFn' [ 0 4 19]
'gl::glEnableVertexAttribArrayProc' [ 0 4]
'gl::TraceGLApi::glGetQueryObjectui64vFn' [ 0 4 16]
'gl::glGenSamplersProc' [ 0 4]
'gl::SyncControlVSyncProvider::GetVSyncParametersIfAvailable::trace_event_unique_atomic50' [ 0 4 30 61]
'gl::TraceGLApi::glGetProgramResourceNameFn' [ 0 4 16]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'switches::kDisableGpuVsync' [ 0 10]
'gl::NoContextGLApi::glGetSamplerParameterivRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glGetFramebufferAttachmentParameterivEXTFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::allocate' [ 0 5 10 145]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::capacity' [ 0 5 10 105]
'gl::glFlushProc' [ 0 4]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 70]
'gl::glDeleteSyncProc' [ 0 4]
'gl::GLContextEGL::MakeCurrent' [ 0 4 18]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLStateRestorer>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glGetShaderivFn' [ 0 4 16]
'gl::glIsRenderbufferEXTProc' [ 0 4]
'std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>::operator*' [ 0 5 10 67]
'base::internal::CheckedNumeric<long>::MathOp<CheckedDivOp, int>' [ 0 6 16 38]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::size' [ 0 5 10 183]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator[]' [ 0 5 10 87]
'gl::SurfacelessEGL' [ 0 4]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLSurface>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLSurface> > >::Pointer' [ 0 6 145]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::operator bool' [ 0 6 75]
'gl::TraceGLApi::glClientWaitSyncFn' [ 0 4 16]
'uint_fast32_t' [ 0]
'base::internal::RangeCheck' [ 0 6 16]
'gl::GPUTimingImpl::CalculateTimerOffset' [ 0 4 19]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, void>::IsCancelled<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> >' [ 0 6 151]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__construct<gfx::NativePixmapPlane, int &, int &, int, unsigned long &>' [ 0 5 10 74]
'gl::GLContextOSMesa' [ 0 4]
'std::__1::unique_ptr<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::PbufferGLSurfaceEGL::Resize' [ 0 4 25]
'std::__1::forward<const int &>' [ 0 5 10]
'gl::GLStubApiBase::glGetBooleanvRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glUniformMatrix4x3fvFn' [ 0 4 20]
'std::__1::default_delete<gfx::GpuFence>::operator()' [ 0 5 10 41]
'gl::GLApiBase::glGetBufferParameterivFn' [ 0 4 15]
'trace_event_internal::TraceID::scope' [ 0 22 31]
'gl::glGetInteger64vProc' [ 0 4]
'gl::GLFenceNV::ResetSupported' [ 0 4 15]
'gl::GLApiBase::glFinishFenceAPPLEFn' [ 0 4 15]
'base::ScopedPlatformFile' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'gl::(anonymous namespace)::NoContextHelper' [ 0 4 27]
'AnnotateHappensBefore' [ 0]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'std::__1::__wrap_iter<gl::DisplayType *>::operator*' [ 0 5 10 42]
'gl::NoContextGLApi::glClearBufferfiFn' [ 0 4 20]
'gl::DebugGLApi::glUniform2uivFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<ui::ScopedMakeCurrent *, 0, false>::__compressed_pair_elem<ui::ScopedMakeCurrent *, void>' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<scoped_refptr<gl::GLImage> *, 0, false>' [ 0 5 10]
'scoped_refptr<gl::QueryResult>::swap' [ 0 32]
'gl::DebugGLApi::glFramebufferTexture2DEXTFn' [ 0 4 16]
'trace_event_internal::TraceID::raw_id' [ 0 22 31]
'std::__1::__add_lvalue_reference_impl<base::trace_event::ConvertableToTraceFormat, true>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct_range_forward<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, base::BasicStringPiece<std::string> *>' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>' [ 0 5 10]
'gl::GLEnums::GetStringEnum' [ 0 4 13]
'std::__1::default_delete<gl::TraceGLApi>::operator()' [ 0 5 10 42]
'std::__1::remove_reference<std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > > &>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'gl::GLSurface::UseOverlaysForVideo' [ 0 4 15]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__annotate_new' [ 0 5 10 122]
'angle::(anonymous namespace)::ANGLEPlatformImpl_currentTime' [ 0 7 30]
'base::circular_deque<base::TimeDelta>::CheckValidIndexOrEnd' [ 0 6 39]
'gl::GLSurfaceGLX::GLSurfaceGLX' [ 0 4 18]
'gl::GLStubApiBase::glGetQueryObjecti64vRobustANGLEFn' [ 0 4 19]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::erase' [ 0 5 10 466]
'gl::(anonymous namespace)::kFragmentHeaderCoreProfile' [ 0 4 27]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLApi>, 1, true>' [ 0 5 10]
'SkIPoint' [ 0]
'gl::eglCreatePixmapSurfaceProc' [ 0 4]
'std::__1::allocator<unsigned int>' [ 0 5 10]
'ui::PlatformEventDispatcher::~PlatformEventDispatcher' [ 0 4 29]
'std::__1::__compressed_pair_elem<gl::GPUTimer *, 0, false>::__compressed_pair_elem<gl::GPUTimer *, void>' [ 0 5 10 60]
'std::__1::operator<<<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gl::DebugGLApi::glGetFramebufferAttachmentParameterivRobustANGLEFn' [ 0 4 16]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'gl::GLXApiBase::glXQueryVersionFn' [ 0 4 16]
'base::internal::circular_deque_iterator<base::TimeDelta>::operator--' [ 0 6 16 58]
'std::__1::__compressed_pair<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 95]
'gl::GLStubApiBase::glGenFencesAPPLEFn' [ 0 4 19]
'std::__1::__pointer_type<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'gl::DebugGLApi::glGetFloatvRobustANGLEFn' [ 0 4 16]
'gl::GLContext::OnReleaseVirtuallyCurrent' [ 0 4 15]
'gl::glGetFramebufferAttachmentParameterivEXTProc' [ 0 4]
'gl::GLStubApiBase::glGetProgramivRobustANGLEFn' [ 0 4 19]
'gl::EGLApiBase::eglCreatePbufferSurfaceFn' [ 0 4 16]
'std::__1::__vector_base<long, std::__1::allocator<long> >::capacity' [ 0 5 10 59]
'std::__1::remove_reference<std::__1::pair<int, int> >' [ 0 5 10]
'gl::DebugGLApi::glCopyBufferSubDataFn' [ 0 4 16]
'gl::GetRequestableGLExtensionsFromCurrentContext' [ 0 4]
'gl::kANGLEImplementationOpenGLESNULLName' [ 0 4]
'gl::TraceGLApi::glBlendFuncSeparateFn' [ 0 4 16]
'gl::NoContextGLApi::glBlendEquationFn' [ 0 4 20]
'gl::GLApiBase::glGetVertexAttribivFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::max_size' [ 0 5 10 88]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__swap_out_circular_buffer' [ 0 5 10 101]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::get_deleter' [ 0 5 10 268]
'gl::GLImageMemory::stride' [ 0 4 19]
'gl::DebugGLXApi::glXGetSyncValuesOMLFn' [ 0 4 17]
'std::__1::__compressed_pair<gl::YUVToRGBConverter *, std::__1::default_delete<gl::YUVToRGBConverter> >' [ 0 5 10]
'std::__1::basic_iostream<char, std::__1::char_traits<char> >::basic_iostream' [ 0 5 10 62]
'gl::glDrawElementsProc' [ 0 4]
'std::__1::__pointer_type<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >' [ 0 5 10]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >::Release' [ 0 6 80]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::YUVToRGBConverter>, 1, true>' [ 0 5 10]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::capacity' [ 0 5 10 115]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >' [ 0 5 10]
'std::__1::basic_istream<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uint64_t' [ 0]
'std::__1::__const_void_pointer<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane>, false>' [ 0 5 10]
'gl::glGetTranslatedShaderSourceANGLEProc' [ 0 4]
'std::__1::__apply_cv<unsigned int, unsigned int, false, false>' [ 0 5 10]
'gl::GLFenceARB::ClientWait' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::construct<gl::DisplayType, const gl::DisplayType &>' [ 0 5 10 67]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >::~RefCounted' [ 0 6 82]
'gl::TraceGLApi::glGetUniformivFn' [ 0 4 16]
'gfx::AcceleratedWidget' [ 0 5]
'gl::g_real_glx' [ 0 4]
'std::__1::default_delete<gfx::FixedVSyncProvider>::operator()' [ 0 5 10 51]
'std::__1::allocator<base::FileDescriptor>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>::MakeItSo<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>' [ 0 6 16 43]
'gl::DebugGLApi::glBindTransformFeedbackFn' [ 0 4 16]
'gl::GLStubApi::glIsTransformFeedbackFn' [ 0 4 15]
'gl::TraceEGLApi::eglGetConfigsFn' [ 0 4 17]
'gl::InitializeStaticGLBindingsGLX' [ 0 4]
'gl::OSMESAApi' [ 0 4]
'gl::NoContextGLApi::glTestFenceAPPLEFn' [ 0 4 20]
'std::__1::get<0, unsigned long &&>' [ 0 5 10]
'gl::OSMesaGetCurrentContextProc' [ 0 4]
'gl::glGetBufferParameteri64vRobustANGLEProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::deallocate' [ 0 5 10 65]
'gl::NoContextGLApi::glUniform1iFn' [ 0 4 20]
'std::__1::__pointer_type<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >' [ 0 5 10]
'gl::GLApiBase::glBufferSubDataFn' [ 0 4 15]
'gfx::Vector2d' [ 0 5]
'gl::GLContextOSMesa::Destroy' [ 0 4 21]
'gl::GLStubApiBase::glSamplerParameteriFn' [ 0 4 19]
'scoped_refptr<base::RefCountedMemory>::~scoped_refptr' [ 0 39]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::operator++' [ 0 6 59 65]
'gl::GLStubApiBase::glPathParameterfNVFn' [ 0 4 19]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::max_size' [ 0 5 10 96]
'gl::GLStubApiBase::glBindUniformLocationCHROMIUMFn' [ 0 4 19]
'std::__1::make_unique<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, void *&>' [ 0 5 10]
'std::__1::forward<unsigned char *&>' [ 0 5 10]
'gl::eglStreamConsumerAcquireKHRProc' [ 0 4]
'gl::TraceGLApi::glUniform3fFn' [ 0 4 16]
'gl::(anonymous namespace)::kGLImplementationNamePairs' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::__construct_range_forward<scoped_refptr<gl::GLImage> *, scoped_refptr<gl::GLImage> *>' [ 0 5 10 79]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::capacity' [ 0 6 16 62]
'gl::GLApiBase::glDrawBufferFn' [ 0 4 15]
'gl::DebugGLApi::glMapBufferFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >::deallocate' [ 0 5 10 190]
'base::internal::as_unsigned<int>' [ 0 6 16]
'std::__1::__pointer_type<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >' [ 0 5 10]
'gl::DebugGLApi::glDrawBufferFn' [ 0 4 16]
'gl::NoContextGLApi::glStencilFillPathNVFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<gl::GLStateRestorer *, 0, false>::__compressed_pair_elem<gl::GLStateRestorer *&, void>' [ 0 5 10 67]
'base::internal::ArithmeticOrUnderlyingEnum<double, false>' [ 0 6 16]
'gl::DebugEGLApi::eglCreateContextFn' [ 0 4 17]
'gl::DebugGLApi::glDeleteTexturesFn' [ 0 4 16]
'std::__1::remove_reference<ui::GpuSwitchingObserver *const &>' [ 0 5 10]
'scoped_refptr<gl::GLContext>::AddRef' [ 0 30]
'std::__1::get<0, base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >' [ 0 6 16]
'time_t' [ 0]
'std::__1::__destruct_n::operator()<base::BasicStringPiece<std::string> >' [ 0 5 10 24]
'gl::GLStubApiBase::glGetVertexAttribfvRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glUniformMatrix3fvFn' [ 0 4 20]
'base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext>::Delete' [ 0 6 16 99]
'trace_event_internal::ScopedTracer::ScopedTracer' [ 0 22 36]
'bool' [ 0]
'gl::eglExportDMABUFImageQueryMESAProc' [ 0 4]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::bucket_count' [ 0 5 10 466]
'gl::TraceGLApi::glGetTexParameterivFn' [ 0 4 16]
'gl::GLStubApi::glIsFenceNVFn' [ 0 4 15]
'std::__1::__tuple_leaf<0, base::TimeTicks, false>::__tuple_leaf<base::TimeTicks &, void>' [ 0 5 10 51]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::equal_range<base::BasicStringPiece<std::string> >' [ 0 6 16 203]
'std::__1::remove_reference<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'gl::glStencilFillPathNVProc' [ 0 4]
'gl::TraceGLApi::glGetRenderbufferParameterivRobustANGLEFn' [ 0 4 16]
'clock_t' [ 0]
'gl::DebugGLApi::glBindFragDataLocationIndexedFn' [ 0 4 16]
'std::__1::allocator<gl::DisplayType>::allocate' [ 0 5 10 38]
'XVisualInfo' [ 0]
'std::__1::forward<const gl::GLVersionInfo &>' [ 0 5 10]
'gl::TraceGLXApi::glXChooseFBConfigFn' [ 0 4 17]
'gl::GLApiBase::glGetVertexAttribivRobustANGLEFn' [ 0 4 15]
'gl::(anonymous namespace)::GLES2Data' [ 0 4 27]
'gl::DebugGLApi::glFramebufferRenderbufferEXTFn' [ 0 4 16]
'std::__1::remove_reference<base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo> &>' [ 0 5 10]
'gl::eglMakeCurrentProc' [ 0 4]
'gl::GLFence::Invalidate' [ 0 4 13]
'gl::(anonymous namespace)::TraceSwapEventsInitializer::TraceSwapEventsInitializer' [ 0 4 27 55]
'gl::NoContextGLApi::glCoverStrokePathNVFn' [ 0 4 20]
'gl::DebugGLApi::glBlendBarrierKHRFn' [ 0 4 16]
'gl::EGLApiBase::eglReleaseThreadFn' [ 0 4 16]
'std::__1::swap<gl::QueryResult *>' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<long>::is_valid' [ 0 6 16 38 53]
'gl::GLContextEGL::SetUnbindFboOnMakeCurrent' [ 0 4 18]
'gl::glCullFaceProc' [ 0 4]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 101]
'std::__1::forward<gfx::FixedVSyncProvider *&>' [ 0 5 10]
'gl::GLImage::~GLImage' [ 0 4 13]
'std::__1::forward<gfx::VSyncProvider *>' [ 0 5 10]
'std::__1::array<unsigned char, 20>::operator[]' [ 0 5 10 36]
'gl::GLApiBase::glMatrixLoadfEXTFn' [ 0 4 15]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver **>::operator++' [ 0 5 10 52]
'gl::NoContextGLApi::glUniformMatrix2x3fvFn' [ 0 4 20]
'gl::DebugGLApi::glWaitSyncFn' [ 0 4 16]
'std::__1::__tree<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), void>' [ 0 6 16]
'gl::NoContextGLApi::glGetInternalformativFn' [ 0 4 20]
'base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>::~BindState' [ 0 6 16 127]
'gl::ScopedFramebufferBinder::ScopedFramebufferBinder' [ 0 4 29]
'base::internal::Unwrap<gfx::PresentationFeedback>' [ 0 6 16]
'std::__1::__const_pointer<gfx::NativePixmapPlane, gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane>, true>' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>' [ 0 6 16]
'gl::eglChooseConfigProc' [ 0 4]
'gl::TraceGLApi::glProgramBinaryFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::max_size' [ 0 5 10 79]
'gl::GLSurfaceAdapter::OnMakeCurrent' [ 0 4 22]
'base::SharedMemoryHandle' [ 0 6]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<gl::GLContext *, void *> *>::__nat, std::__1::__tree_node<gl::GLContext *, void *> >' [ 0 5 10]
'switches::kDisableD3D11' [ 0 10]
'std::__1::__pointer_type<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'gl::EGLApiBase::eglQueryAPIFn' [ 0 4 16]
'gl::GLImageMemory::Initialize' [ 0 4 19]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>' [ 0 5 10]
'gl::GLHelper::LoadShader' [ 0 4 14]
'gl::DebugGLApi::glGetUniformfvRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair<base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::__tree_key_value_types<gl::GLContext *>::__get_key' [ 0 5 10 51]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), void>::Invoke<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &, base::TimeTicks, base::TimeDelta>' [ 0 6 16 135]
'gl::GLApiBase::glGetPointervRobustANGLERobustANGLEFn' [ 0 4 15]
'gl::DebugGLXApi::glXSwapIntervalMESAFn' [ 0 4 17]
'gl::DebugEGLApi::eglDestroyContextFn' [ 0 4 17]
'std::__1::tuple_element<1, std::__1::__tuple_types<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__annotate_new' [ 0 5 10 115]
'std::__1::__const_pointer<const char *, const char **, std::__1::allocator<const char *>, true>' [ 0 5 10]
'gl::ScopedVertexAttribArray::ScopedVertexAttribArray' [ 0 4 29]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::pop_front' [ 0 6 60]
'gl::DebugGLApi::glPopDebugGroupFn' [ 0 4 16]
'gl::TraceGLApi::glPointParameteriFn' [ 0 4 16]
'std::__1::integer_sequence<unsigned long, 0, 1>' [ 0 5 10]
'gl::UnloadGLNativeLibraries' [ 0 4]
'gl::TraceGLApi::glCoverStrokePathInstancedNVFn' [ 0 4 16]
'angle::CurrentTimeFunc' [ 0 7]
'gl::glXDestroyPbufferProc' [ 0 4]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::emplace_back<scoped_refptr<gl::TimerQuery> >' [ 0 6 54]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::erase' [ 0 5 10 107]
'int32_t' [ 0]
'std::__1::default_delete<gl::GLVersionInfo>::operator()' [ 0 5 10 45]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'short' [ 0]
'gl::DebugGLApi::glGetDebugMessageLogFn' [ 0 4 16]
'base::internal::ConditionalNegate<unsigned int>' [ 0 6 16]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::unique_ptr<true, void>' [ 0 5 10 91]
'gl::TraceEGLApi::eglImageFlushExternalEXTFn' [ 0 4 17]
'gl::TraceGLXApi::glXQueryExtensionFn' [ 0 4 17]
'std::__1::enable_if_t<FunctorTraits<void (GLSurfacePresentationHelper::*)(TimeTicks, TimeDelta)>::is_nullable, bool>' [ 0 5 10]
'scoped_refptr<gfx::NativePixmap>::~scoped_refptr' [ 0 34]
'base::ProtectedMemory<void (*)(void *)>::operator*' [ 0 6 41]
'gl::GLXApiBase::glXDestroyWindowFn' [ 0 4 16]
'gl::NoContextGLApi::glBindAttribLocationFn' [ 0 4 20]
'signed char' [ 0]
'gl::GLStubApiBase::glGetProgramBinaryFn' [ 0 4 19]
'gl::GLSurface::SupportsDCLayers' [ 0 4 15]
'gl::GLImage::GLImage' [ 0 4 13]
'gl::DebugGLXApi::glXCreateNewContextFn' [ 0 4 17]
'gl::NoContextGLApi::glBindBufferRangeFn' [ 0 4 20]
'std::__1::__pointer_type<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >' [ 0 5 10]
'std::__1::stable_sort<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare>' [ 0 5 10]
'gl::EGLApi::EGLApi' [ 0 4 12]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::reset' [ 0 5 10 89]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::~queue' [ 0 5 10 74]
'base::DefaultRefCountedTraits<gl::GLImage>' [ 0 6]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>::RepeatingCallback' [ 0 6 66]
'std::__1::remove_reference<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *&>' [ 0 5 10]
'base::internal::VectorBuffer<base::TimeDelta>::DestructRange<base::TimeDelta, 0>' [ 0 6 16 47]
'gl::GLSurface::CommitOverlayPlanes' [ 0 4 15]
'std::__1::add_lvalue_reference<gfx::VSyncProvider>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, false>::load' [ 0 5 10 46]
'base::internal::ConditionalNegate<unsigned long>' [ 0 6 16]
'base::internal::circular_deque_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::operator*' [ 0 6 16 79]
'gl::GLSurfaceGLX::GetGLXExtensions' [ 0 4 18]
'gl::NativeViewGLSurfaceEGL::ScheduleOverlayPlane' [ 0 4 28]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::IsHWClock' [ 0 4 27 54]
'std::__1::remove_reference<gl::GLVersionInfo *&>' [ 0 5 10]
'scoped_refptr<gl::GLContext>::operator=' [ 0 30]
'gl::TraceGLApi::glDrawBufferFn' [ 0 4 16]
'gl::glCompileShaderProc' [ 0 4]
'gl::glDeleteFencesAPPLEProc' [ 0 4]
'std::__1::__compressed_pair<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 108]
'gl::DebugGLApi::glCompressedTexImage3DFn' [ 0 4 16]
'gl::GLContextGLX::IsCurrent' [ 0 4 18]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::__destroy<gl::DisplayType>' [ 0 5 10 67]
'gl::eglGetCurrentContextProc' [ 0 4]
'gl::TraceGLApi::glPathParameteriNVFn' [ 0 4 16]
'gl::glGetInteger64i_vRobustANGLEProc' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>::RunOnce::num_bound_args' [ 0 6 16 365 374]
'gl::GLVisualPickerGLX' [ 0 4]
'gl::GLStubApiBase::glTestFenceAPPLEFn' [ 0 4 19]
'sync_pt_info' [ 0]
'std::__1::remove_reference<std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'gl::glWaitSyncProc' [ 0 4]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::release' [ 0 5 10 75]
'std::__1::conditional<false, std::__1::pointer_traits<gl::GLSurface::CALayerInUseQuery *>::__nat, gl::GLSurface::CALayerInUseQuery>' [ 0 5 10]
'gl::GLApiBase::glDiscardFramebufferEXTFn' [ 0 4 15]
'gl::GLXApiBase::glXGetCurrentContextFn' [ 0 4 16]
'std::__1::__compressed_pair<gl::YUVToRGBConverter *, std::__1::default_delete<gl::YUVToRGBConverter> >::__compressed_pair<gl::YUVToRGBConverter *&, true>' [ 0 5 10 104]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__insert_node_at' [ 0 5 10 539]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> >, 1, true>' [ 0 5 10]
'base::queue<base::TimeDelta>' [ 0 6]
'gl::GLSurface::CALayerInUseQuery::CALayerInUseQuery' [ 0 4 15 34]
'std::__1::__compressed_pair<gl::GLVersionInfo *, std::__1::default_delete<gl::GLVersionInfo> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::reset' [ 0 5 10 81]
'std::__1::__compressed_pair<const char **, std::__1::allocator<const char *> &>::__compressed_pair<nullptr_t, std::__1::allocator<const char *> &>' [ 0 5 10 81]
'std::__1::unique_ptr<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >' [ 0 5 10]
'gl::TraceEGLApi::eglGetCurrentSurfaceFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::deallocate' [ 0 5 10 79]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::get' [ 0 5 10 85]
'std::__1::allocator<base::BasicStringPiece<std::string> >::deallocate' [ 0 5 10 59]
'gl::TraceGLApi::glGetUniformuivRobustANGLEFn' [ 0 4 16]
'gl::GLSurface::SetUsePlaneGpuFences' [ 0 4 15]
'gl::NoContextGLApi::glClearBufferuivFn' [ 0 4 20]
'gl::GLApiBase::glReadBufferFn' [ 0 4 15]
'gl::DebugEGLApi::eglWaitClientFn' [ 0 4 17]
'gl::GLStubApiBase::glGenerateMipmapEXTFn' [ 0 4 19]
'std::__1::unique_ptr<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >::~unique_ptr' [ 0 5 10 83]
'gl::GLApiBase::glUseProgramFn' [ 0 4 15]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::operator->' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<void **>::__nat, void *>' [ 0 5 10]
'gl::NoContextGLApi::glCoverFillPathNVFn' [ 0 4 20]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::capacity' [ 0 5 10 122]
'gl::GLStubApiBase::glCompressedTexImage3DRobustANGLEFn' [ 0 4 19]
'std::__1::end<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >' [ 0 5 10]
'gl::DebugGLApi::glUseProgramFn' [ 0 4 16]
'gl::GLStubApiBase::glGetProgramResourceNameFn' [ 0 4 19]
'gl::GLApiBase::glEndTransformFeedbackFn' [ 0 4 15]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::operator->' [ 0 5 10 89]
'gl::GLVersionInfo::~GLVersionInfo' [ 0 4 19]
'std::__1::remove_reference<const int &>' [ 0 5 10]
'gl::TraceGLApi::glDeletePathsNVFn' [ 0 4 16]
'std::__1::__compressed_pair<long *, std::__1::allocator<long> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 65]
'gl::GLImageEGL::BindTexImage' [ 0 4 16]
'gl::glGetProgramResourceivProc' [ 0 4]
'std::__1::remove_const<base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__destroy<base::FileDescriptor>' [ 0 5 10 72]
'std::__1::vector<void *, std::__1::allocator<void *> >::operator[]' [ 0 5 10 56]
'gl::GLStubApiBase::glDepthMaskFn' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<long *>::__nat, long>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GLSurface::CALayerInUseQuery *, std::__1::allocator<gl::GLSurface::CALayerInUseQuery> >' [ 0 5 10]
'gl::eglInitializeProc' [ 0 4]
'gl::DebugGLXApi::glXGetFBConfigAttribFn' [ 0 4 17]
'base::NativeLibraryLoadError::NativeLibraryLoadError' [ 0 6 30]
'AnnotateThreadName' [ 0]
'gl::GLSurface::SetDrawRectangle' [ 0 4 15]
'pollfd' [ 0]
'gl::eglWaitNativeProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::deallocate' [ 0 5 10 91]
'gl::NoContextGLApi::glSetFenceNVFn' [ 0 4 20]
'gl::GLApiBase::glUniform2ivFn' [ 0 4 15]
'std::__1::forward<const unsigned int &>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__emplace_unique_key_args<unsigned long, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned long &&>, std::__1::tuple<> >' [ 0 5 10 466]
'int_fast32_t' [ 0]
'gl::glDebugMessageInsertProc' [ 0 4]
'std::__1::__compressed_pair<gl::GLVersionInfo *, std::__1::default_delete<gl::GLVersionInfo> >::__compressed_pair<gl::GLVersionInfo *&, true>' [ 0 5 10 96]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >::reset' [ 0 5 10 69]
'std::__1::__distance<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__destruct_n::__destruct_n' [ 0 5 10 24]
'gl::GLApiBase::glUniform3uivFn' [ 0 4 15]
'gl::DebugGLApi::glUniform2ivFn' [ 0 4 16]
'std::__1::__compressed_pair<gl::DisplayType *, std::__1::allocator<gl::DisplayType> &>' [ 0 5 10]
'base::internal::LockImpl' [ 0 6 16]
'gl::GLApiBase::glGetFramebufferAttachmentParameterivEXTFn' [ 0 4 15]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, true>' [ 0 5 10]
'gl::NoContextGLApi::glStencilFillPathInstancedNVFn' [ 0 4 20]
'std::__1::forward<gl::DisplayType>' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>::since_origin' [ 0 6 21 48]
'gl::GLStubApiBase::glProgramPathFragmentInputGenNVFn' [ 0 4 19]
'gl::RealEGLApi::eglQueryStringFn' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<TimeNamePair, std::__1::allocator<TimeNamePair>, true>' [ 0 5 10 30]
'gl::GLApiBase::glUniform1fvFn' [ 0 4 15]
'gl::eglDestroyContextProc' [ 0 4]
'std::__1::locale' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::reserve' [ 0 5 10 50]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, std::__1::__nat>' [ 0 5 10]
'gl::GLImageMemory::ValidFormat' [ 0 4 19]
'std::__1::default_delete<base::trace_event::MemoryAllocatorDump>' [ 0 5 10]
'gl::GLApiBase::glBufferDataFn' [ 0 4 15]
'std::__1::pair<void *, std::__1::basic_string<char> >' [ 0 5 10]
'gfx::SwapResult' [ 0 5]
'gl::DebugGLApi::glUniform1fvFn' [ 0 4 16]
'base::internal::CheckedNumeric<int>::Wrapper<int>::value' [ 0 6 16 37 51]
'base::WeakPtr<gl::GLSurfacePresentationHelper>::get' [ 0 6 48]
'gl::GLApiBase::glStencilOpSeparateFn' [ 0 4 15]
'base::subtle::RefCountedThreadSafeBase::ReleaseImpl' [ 0 6 14 40]
'gl::DebugGLApi::glBufferDataFn' [ 0 4 16]
'base::internal::ArithmeticOrUnderlyingEnum<unsigned long, false>' [ 0 6 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__annotate_shrink' [ 0 5 10 68]
'base::ThreadChecker::ThreadChecker' [ 0 6 21]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__end_cap' [ 0 5 10 129]
'gl::GLStubApi::glGetQueryObjecti64vFn' [ 0 4 15]
'gl::DebugGLApi::glGetActiveUniformBlockNameFn' [ 0 4 16]
'gl::GLStubApiBase::glStencilFillPathNVFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<const char **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 59]
'std::__1::__pointer_type<int, std::__1::default_delete<int []> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::NativePixmapPlane *, 0, false>' [ 0 5 10]
'base::LazyInstanceTraitsBase<gl::(anonymous namespace)::TraceSwapEventsInitializer>' [ 0 6]
'gl::GLApiBase::glRequestExtensionANGLEFn' [ 0 4 15]
'AnnotateBarrierWaitBefore' [ 0]
'std::__1::add_lvalue_reference<gl::CurrentGL>' [ 0 5 10]
'gl::GLSurfaceAdapter::SetBackbufferAllocation' [ 0 4 22]
'std::__1::less<void *>' [ 0 5 10]
'gl::GLStubApiBase::glPolygonOffsetFn' [ 0 4 19]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<gl::GLContext> >' [ 0 6]
'gl::glTexSubImage2DRobustANGLEProc' [ 0 4]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::DestructRange' [ 0 6 54]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GPUTiming>, 1, true>' [ 0 5 10]
'base::AtomicRefCount::IsZero' [ 0 6 22]
'gl::NoContextGLApi::glGetQueryObjectivRobustANGLEFn' [ 0 4 20]
'base::BindOnce<const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &, base::TimeTicks &, const base::TimeDelta &>' [ 0 6]
'std::__1::__const_pointer<void *, void **, std::__1::allocator<void *>, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::basic_string<char> >, long, true>' [ 0 5 10]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::~unique_ptr' [ 0 5 10 95]
'gl::NoContextGLApi::glDeleteVertexArraysOESFn' [ 0 4 20]
'gl::NoContextGLApi::glValidateProgramFn' [ 0 4 20]
'gl::GLStubApiBase::glGetActiveUniformBlockivFn' [ 0 4 19]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::__compressed_pair<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >' [ 0 5 10]
'base::internal::StrictNumeric<long>::StrictNumeric<long>' [ 0 6 16 37]
'gl::GLSurface::IsSurfaceless' [ 0 4 15]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > >' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> > &>' [ 0 5 10]
'std::__1::default_delete<gl::GLSurfacePresentationHelper>' [ 0 5 10]
'gl::TraceEGLApi::eglGetConfigAttribFn' [ 0 4 17]
'gl::glTexImage2DProc' [ 0 4]
'gl::TraceGLXApi::glXBindTexImageEXTFn' [ 0 4 17]
'gl::GLStubApiBase::glCoverStrokePathNVFn' [ 0 4 19]
'gl::DebugGLApi::glGetProgramResourceLocationFn' [ 0 4 16]
'std::__1::remove_reference<gl::GLFence *>' [ 0 5 10]
'base::BindUnwrapTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6]
'EGLContext' [ 0]
'gl::GLImageGLX::ScheduleOverlayPlane' [ 0 4 16]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 16]
'features::kDefaultANGLEOpenGL' [ 0 10]
'gl::NoContextGLApi::glPushDebugGroupFn' [ 0 4 20]
'gl::NativeViewGLSurfaceGLX::Destroy' [ 0 4 28]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::KeyValueCompare::operator()<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> >' [ 0 6 16 203 220]
'gl::EGLApiBase::eglStreamConsumerGLTextureExternalAttribsNVFn' [ 0 4 16]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::__end_cap' [ 0 5 10 75]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >::unique_ptr<true, void>' [ 0 5 10 79]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::construct<std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 145]
'std::__1::stringstream' [ 0 5 10]
'gl::GLStubApiBase::glTexStorage3DFn' [ 0 4 19]
'gl::TraceGLXApi::glXGetSyncValuesOMLFn' [ 0 4 17]
'gfx::Rect::y' [ 0 5 11]
'std::__1::add_lvalue_reference<gl::GLSurfacePresentationHelper>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 108]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >, true>' [ 0 5 10 30]
'std::__1::__add_lvalue_reference_impl<gl::GPUTiming, true>' [ 0 5 10]
'base::internal::InvokeHelper<true, void>::MakeItSo<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta), const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &, base::TimeTicks, base::TimeDelta>' [ 0 6 16 42]
'std::__1::remove_reference<std::__1::basic_string<char> *&>' [ 0 5 10]
'gl::GLSurfaceGLX::IsEXTSwapControlSupported' [ 0 4 18]
'std::__1::pointer_traits<unsigned int *>' [ 0 5 10]
'gl::NoContextGLApi::glDebugMessageCallbackFn' [ 0 4 20]
'gl::eglQueryAPIProc' [ 0 4]
'gl::GLStubApiBase::glBindRenderbufferEXTFn' [ 0 4 19]
'gl::TraceGLXApi::SetDisabledExtensions' [ 0 4 17]
'gl::GLApiBase::glTexSubImage3DRobustANGLEFn' [ 0 4 15]
'gl::TraceGLApi::glGetQueryObjectivRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glReadBufferFn' [ 0 4 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::vector' [ 0 5 10 68]
'gl::eglExportDMABUFImageMESAProc' [ 0 4]
'gl::GLSurfaceAdapter::GetFormat' [ 0 4 22]
'gl::TraceGLApi::glUseProgramFn' [ 0 4 16]
'std::__1::operator==<base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__construct_node<std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 299]
'gl::TraceGLApi::glPauseTransformFeedbackFn' [ 0 4 16]
'gl::DebugGLApi::glBeginTransformFeedbackFn' [ 0 4 16]
'gl::GLXApiBase::glXGetConfigFn' [ 0 4 16]
'base::nullopt_t' [ 0 6]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__destruct_at_end' [ 0 5 10 108]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::VSyncProvider>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glVertexAttribI4uiFn' [ 0 4 16]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::MoveBuffer' [ 0 6 62]
'gl::GLApiBase::glTexImage3DRobustANGLEFn' [ 0 4 15]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'gl::NoContextGLApi::glGetActiveUniformBlockNameFn' [ 0 4 20]
'gl::GLApiBase::glDeleteSamplersFn' [ 0 4 15]
'std::__1::__tuple_types<unsigned long &&>' [ 0 5 10]
'gl::HasExtension<28>' [ 0 4]
'std::__1::__compressed_pair<gl::GPUTimer *, std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::data' [ 0 5 10 68]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::operator->' [ 0 5 10 81]
'base::internal::circular_deque_const_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::circular_deque_const_iterator' [ 0 6 16 85]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<int>' [ 0 6 16 75]
'gl::GLSurfaceGLX::ShutdownOneOff' [ 0 4 18]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::begin' [ 0 6 16 62]
'std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>' [ 0 5 10]
'std::__1::operator-<const base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::SharedMemory *, 0, false>::__compressed_pair_elem<base::SharedMemory *, void>' [ 0 5 10 66]
'std::__1::__pointer_type<const char *, std::__1::allocator<const char *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gl::GLContext *, void *> *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::capacity' [ 0 5 10 91]
'gl::NoContextGLApi::glTexParameterfvFn' [ 0 4 20]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::data' [ 0 5 10 96]
'std::__1::pair<const unsigned long, gl::GLContext *>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<gl::(anonymous namespace)::TraceSwapEventsInitializer>::New' [ 0 6 16 96]
'std::__1::pointer_traits<base::trace_event::MemoryAllocatorDump::Entry *>' [ 0 5 10]
'gl::TraceGLApi::glUniform2ivFn' [ 0 4 16]
'gl::TraceGLApi::glGetTransformFeedbackVaryingFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::allocate' [ 0 5 10 63]
'std::__1::tuple<gfx::PresentationFeedback>' [ 0 5 10]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::unique_ptr' [ 0 5 10 85]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::__end_cap' [ 0 5 10 77]
'gl::glMatrixLoadIdentityEXTProc' [ 0 4]
'std::__1::__compressed_pair_elem<gfx::XObjectDeleter<void, int, &XFree>, 1, true>' [ 0 5 10]
'gl::EGLApiBase::eglProgramCacheQueryANGLEFn' [ 0 4 16]
'gl::glWindowRectanglesEXTProc' [ 0 4]
'gl::DebugGLApi::glCheckFramebufferStatusEXTFn' [ 0 4 16]
'gl::glSamplerParameterivRobustANGLEProc' [ 0 4]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::max_size' [ 0 5 10 115]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::~__vector_base' [ 0 5 10 122]
'gl::TraceGLApi::glSamplerParameterfFn' [ 0 4 16]
'gl::GLContext::CreateGLApi' [ 0 4 15]
'std::__1::allocator<std::__1::basic_string<char> >' [ 0 5 10]
'gl::TraceGLApi::glUniform1fvFn' [ 0 4 16]
'gl::EGLApiBase::eglSwapBuffersFn' [ 0 4 16]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>' [ 0 6]
'std::__1::__tuple_leaf<0, gfx::PresentationFeedback, false>::__tuple_leaf<gfx::PresentationFeedback &, void>' [ 0 5 10 61]
'std::__1::char_traits<char>' [ 0 5 10]
'gl::TraceGLApi::glBufferDataFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>::RunOnce' [ 0 6 16 155]
'std::__1::__tuple_leaf<1, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, false>' [ 0 5 10]
'gl::DebugGLApi::glDeleteFramebuffersEXTFn' [ 0 4 16]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::pop' [ 0 5 10 74]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::clear' [ 0 5 10 75]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::__destroy<ui::GpuSwitchingObserver *>' [ 0 5 10 78]
'gl::NoContextGLApi::glWaitSyncFn' [ 0 4 20]
'gfx::Point::y' [ 0 5 12]
'gl::GLStubApiBase::glSetFenceNVFn' [ 0 4 19]
'base::BindUnwrapTraits<base::TimeTicks>::Unwrap<base::TimeTicks>' [ 0 6 41]
'switches::kUseGpuInTests' [ 0 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'gl::TraceGLApi::glUniform3uivFn' [ 0 4 16]
'scoped_refptr<gl::GLSurface>::~scoped_refptr' [ 0 30]
'std::__1::__wrap_iter<ContextCreationInfo *>::base' [ 0 5 10 46]
'base::internal::circular_deque_const_iterator<base::TimeDelta>::circular_deque_const_iterator' [ 0 6 16 64]
'gl::TraceGLApi::glGetStringFn' [ 0 4 16]
'gl::TraceGLXApi::glXCreateGLXPixmapFn' [ 0 4 17]
'std::__1::vector<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::vector' [ 0 5 10 84]
'base::internal::WeakReference' [ 0 6 16]
'gl::glDrawBufferProc' [ 0 4]
'gl::eglGetNativeClientBufferANDROIDProc' [ 0 4]
'std::__1::__to_raw_pointer<ContextCreationInfo>' [ 0 5 10]
'std::__1::operator!=<const XVisualInfo *>' [ 0 5 10]
'std::__1::__pointer_type<long, std::__1::allocator<long> >' [ 0 5 10]
'gl::eglStreamConsumerGLTextureExternalAttribsNVProc' [ 0 4]
'gl::GLStubApiBase::glGetUniformBlockIndexFn' [ 0 4 19]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__recommend' [ 0 5 10 96]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents' [ 0 4 28]
'gl::GLStubApi::set_extensions' [ 0 4 15]
'gl::GLApiBase::glIsSyncFn' [ 0 4 15]
'gl::NoContextGLApi::glGetQueryObjectivFn' [ 0 4 20]
'std::__1::forward<void *>' [ 0 5 10]
'sw_sync_timeline_create' [ 0]
'logging::LOG_ERROR' [ 0 9]
'std::__1::__tree_min<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gl::DriverGLX::InitializeStaticBindings' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::DisplayType> &, 1, false>::__compressed_pair_elem<std::__1::allocator<gl::DisplayType> &, void>' [ 0 5 10 84]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::operator=' [ 0 5 10 115]
'std::__1::pair<unsigned long, gl::GLContext *>' [ 0 5 10]
'std::__1::allocator<const char *>::deallocate' [ 0 5 10 35]
'std::__1::__to_raw_pointer<long>' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::SwapBuffersWithDamage' [ 0 4 28]
'std::__1::pointer_traits<scoped_refptr<gl::GLImage> *>' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, gfx::PresentationFeedback>::__tuple_impl<0, gfx::PresentationFeedback, gfx::PresentationFeedback &>' [ 0 5 10 81]
'gl::GLApiBase::glDebugMessageInsertFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__max_size' [ 0 5 10 81]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLSurface>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<base::ThreadLocalPointer<gl::GLSurface> > >' [ 0 6]
'std::__1::remove_reference<std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10]
'off_t' [ 0]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >' [ 0 5 10]
'base::trace_event::MemoryDumpArgs' [ 0 6 19]
'gl::TraceGLApi::glUniformMatrix4fvFn' [ 0 4 16]
'std::__1::__const_void_pointer<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor>, false>' [ 0 5 10]
'gl::GLHelper' [ 0 4]
'std::__1::__compressed_pair_elem<gl::GLStateRestorer *, 0, false>' [ 0 5 10]
'gl::TraceOSMESAApi::OSMesaDestroyContextFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer>, false>' [ 0 5 10 30]
'gl::NoContextGLApi::glGetPointervFn' [ 0 4 20]
'gl::NoContextGLApi::glSamplerParameterfvFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<long> >::allocate' [ 0 5 10 56]
'gl::NoContextGLApi::glGetInteger64vFn' [ 0 4 20]
'gl::GLApiBase::glGetUniformIndicesFn' [ 0 4 15]
'gl::NoContextGLApi::glCheckFramebufferStatusEXTFn' [ 0 4 20]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >' [ 0 6]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::RangesOverlap' [ 0 6 16 62]
'std::__1::remove_reference<std::__1::allocator<int> &>' [ 0 5 10]
'std::__1::__compressed_pair<base::SharedMemory *, std::__1::default_delete<base::SharedMemory> >::__compressed_pair<base::SharedMemory *&, true>' [ 0 5 10 98]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::operator*' [ 0 5 10 55]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::~circular_deque' [ 0 6 60]
'angle::CacheProgramFunc' [ 0 7]
'gl::NoContextGLApi::glBindFramebufferEXTFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<void *> >::__max_size' [ 0 5 10 58]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'gl::GLSurface::PostSubBufferAsync' [ 0 4 15]
'gl::TraceGLApi::glGetFloatvFn' [ 0 4 16]
'gl::GLStubApiBase::glVertexAttrib1fFn' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned char *>::__nat, unsigned char>' [ 0 5 10]
'gl::GLImageGLX::ReleaseTexImage' [ 0 4 16]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::base' [ 0 5 10 62]
'std::__1::__pointer_type<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'std::__1::__to_raw_pointer<XVisualInfo>' [ 0 5 10]
'gl::GLApiBase::glCopyTextureCHROMIUMFn' [ 0 4 15]
'std::__1::__add_lvalue_reference_impl<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, true>' [ 0 5 10]
'gl::GLApiBase::glGenFencesNVFn' [ 0 4 15]
'gl::DebugGLXApi::glXGetCurrentDisplayFn' [ 0 4 17]
'std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::DebugGLXApi::glXWaitXFn' [ 0 4 17]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'gl::DebugGLXApi::glXWaitVideoSyncSGIFn' [ 0 4 17]
'gl::kANGLEImplementationD3D11Name' [ 0 4]
'logging::MakeCheckOpString<bool, bool>' [ 0 9]
'gl::TraceGLApi::glGetFenceivNVFn' [ 0 4 16]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__end_cap' [ 0 5 10 122]
'gl::DebugGLApi::glActiveTextureFn' [ 0 4 16]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'std::__1::allocator<char>' [ 0 5 10]
'std::__1::forward<gl::YUVToRGBConverter *>' [ 0 5 10]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::push_back' [ 0 5 10 74]
'std::__1::__tree_node<gl::GLContext *, void *>' [ 0 5 10]
'gl::GLSurface::SetFrontbufferAllocation' [ 0 4 15]
'base::internal::VectorBuffer<base::TimeDelta>::VectorBuffer' [ 0 6 16 47]
'gl::TraceGLApi::glIsSamplerFn' [ 0 4 16]
'std::__1::allocator<base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::operator->' [ 0 5 10 264]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::clear' [ 0 5 10 103]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >' [ 0 5 10]
'gl::DebugGLApi::glPopGroupMarkerEXTFn' [ 0 4 16]
'gl::GLSurfaceOverlay' [ 0 4]
'base::internal::IsValueInRangeForNumericType<int, int>' [ 0 6 16]
'std::__1::__wrap_iter<void **>::operator++' [ 0 5 10 32]
'std::__1::__compressed_pair<gfx::GpuFence *, std::__1::default_delete<gfx::GpuFence> >::__compressed_pair<gfx::GpuFence *&, true>' [ 0 5 10 88]
'std::__1::advance<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLHelper::LinkProgram' [ 0 4 14]
'gl::DebugGLApi::glInsertEventMarkerEXTFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::GetConfig' [ 0 4 28]
'gl::GLApiBase::glPolygonOffsetFn' [ 0 4 15]
'gl::NoContextGLApi::glDisableVertexAttribArrayFn' [ 0 4 20]
'std::__1::forward<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<const unsigned long, gl::GLContext *>, std::__1::__nat>' [ 0 5 10]
'gl::GLApiBase::glAttachShaderFn' [ 0 4 15]
'gl::DebugGLApi::glGetGraphicsResetStatusARBFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::GetDrawableHandle' [ 0 4 28]
'XCreateWindowEvent' [ 0]
'gl::eglSurfaceAttribProc' [ 0 4]
'std::__1::forward<gl::GLFenceAndroidNativeFenceSync *&>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, int>' [ 0 6 16]
'gl::GLSurface::SetEnableDCLayers' [ 0 4 15]
'gl::glXChooseFBConfigProc' [ 0 4]
'gl::GLApiBase::glPathParameteriNVFn' [ 0 4 15]
'std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>' [ 0 5 10]
'gl::DebugGLApi::glGetUniformfvFn' [ 0 4 16]
'scoped_refptr<gl::GLContext>::Release' [ 0 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >, 1, true>' [ 0 5 10]
'base::Singleton<ui::GpuSwitchingManager, base::DefaultSingletonTraits<ui::GpuSwitchingManager>, ui::GpuSwitchingManager>::instance_' [ 0 6 122]
'gl::ScopedTextureBinder::~ScopedTextureBinder' [ 0 4 25]
'gl::EGLApiBase::eglDestroyContextFn' [ 0 4 16]
'features::kDirectCompositionUnderlays' [ 0 10]
'std::__1::remove_reference<std::__1::tuple<base::TimeTicks, base::TimeDelta> &>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::data' [ 0 5 10 82]
'gl::glGetSamplerParameterivProc' [ 0 4]
'gl::TraceGLApi::glCompressedTexImage2DRobustANGLEFn' [ 0 4 16]
'gl::GLApiBase::glGetTexParameterfvFn' [ 0 4 15]
'gl::NativeViewGLSurfaceEGL::GetSize' [ 0 4 28]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::__construct<ui::GpuSwitchingObserver *, ui::GpuSwitchingObserver *const &>' [ 0 5 10 78]
'gl::TraceGLApi::glScissorFn' [ 0 4 16]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::MoveRange<scoped_refptr<gl::TimerQuery>, 0>' [ 0 6 16 62]
'gl::glGetActiveUniformsivProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'gl::GLStubApiBase::glSamplerParameterfvRobustANGLEFn' [ 0 4 19]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>::__compressed_pair<nullptr_t, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10 98]
'std::__1::remove_reference<base::BasicStringPiece<std::string> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char **>::__nat, const char *>' [ 0 5 10]
'std::__1::__compressed_pair<int *, std::__1::default_delete<int []> >::__compressed_pair<int *, true>' [ 0 5 10 71]
'gl::DebugGLXApi' [ 0 4]
'gl::glGetSamplerParameterIivRobustANGLEProc' [ 0 4]
'angle::LogErrorFunc' [ 0 7]
'gl::TraceGLApi::glGetSamplerParameterivRobustANGLEFn' [ 0 4 16]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::GetVSyncParameters' [ 0 4 27 59]
'gl::NoContextGLApi::glGetTexParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::destroy<gl::DisplayType>' [ 0 5 10 67]
'std::__1::forward<gl::GLSurfacePresentationHelper *>' [ 0 5 10]
'std::__1::__pointer_type_imp' [ 0 5 10]
'gl::GLStubApiBase::glGetTexParameterIuivRobustANGLEFn' [ 0 4 19]
'gl::DebugGLApi::glCompressedTexSubImage2DFn' [ 0 4 16]
'gl::GLContext::SetUnbindFboOnMakeCurrent' [ 0 4 15]
'gl::DebugGLApi::glTexParameterIivRobustANGLEFn' [ 0 4 16]
'gl::TraceEGLApi::eglGetSyncValuesCHROMIUMFn' [ 0 4 17]
'scoped_refptr<gl::TimerQuery>::scoped_refptr' [ 0 31]
'gl::TraceGLApi::glGetInteger64i_vRobustANGLEFn' [ 0 4 16]
'std::__1::add_lvalue_reference<gl::GLFenceAndroidNativeFenceSync>' [ 0 5 10]
'gl::GLApiBase::glFlushFn' [ 0 4 15]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::emplace_back<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6 60]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>::__tree_end_node' [ 0 5 10 65]
'gl::DebugGLXApi::glXCreateWindowFn' [ 0 4 17]
'std::__1::addressof<const char>' [ 0 5 10]
'gl::NoContextGLApi::glLinkProgramFn' [ 0 4 20]
'gl::NoContextGLApi::glUniformMatrix4x2fvFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'gl::DebugGLXApi::glXIsDirectFn' [ 0 4 17]
'std::__1::__wrap_iter<int *>::operator++' [ 0 5 10 30]
'gl::TimeStampTimerQuery::DoQuery' [ 0 4 25]
'gl::TraceGLApi::glBindVertexArrayOESFn' [ 0 4 16]
'std::__1::__add_lvalue_reference_impl<gl::GLApi, true>' [ 0 5 10]
'std::__1::move<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*&)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &)>' [ 0 5 10]
'gl::NoContextGLApi::glMatrixLoadIdentityEXTFn' [ 0 4 20]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::Initialize' [ 0 4 27 59]
'gl::TraceEGLApi::eglExportDMABUFImageMESAFn' [ 0 4 17]
'gl::TimeElapsedTimerQuery::~TimeElapsedTimerQuery' [ 0 4 27]
'base::trace_event::MemoryAllocatorDump::guid' [ 0 6 19 40]
'base::internal::CheckOnFailure::HandleFailure<unsigned long>' [ 0 6 16 32]
'gl::eglStreamAttribKHRProc' [ 0 4]
'gl::(anonymous namespace)::GLES2RGBData<(lambda at ../../ui/gl/gl_image_memory.cc:296:27)>::trace_event_unique_atomic230' [ 0 4 27 92]
'std::__1::remove_const<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10]
'gl::GLStubApiBase::glWindowRectanglesEXTFn' [ 0 4 19]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *>, true>' [ 0 5 10]
'base::TimeDelta::operator=' [ 0 6 17]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::display_' [ 0 4 27 59]
'gl::DebugGLApi::glUniform2iFn' [ 0 4 16]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >' [ 0 5 10]
'std::__1::forward<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::NativePixmapPlane *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 70]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>, long, true>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::IsValid<unsigned long>' [ 0 6 16 47]
'gl::GLStubApiBase::glBindTransformFeedbackFn' [ 0 4 19]
'gl::TimeStampTimerQuery::UpdateQueryResults' [ 0 4 25]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct<int, int>' [ 0 5 10 55]
'std::__1::vector<gl::GLSurface::CALayerInUseQuery, std::__1::allocator<gl::GLSurface::CALayerInUseQuery> >' [ 0 5 10]
'gl::NoContextGLApi::glGetGraphicsResetStatusARBFn' [ 0 4 20]
'gl::GLXApiBase::glXGetClientStringFn' [ 0 4 16]
'base::UnguessableToken::is_empty' [ 0 6 24]
'gl::ScopedActiveTexture' [ 0 4]
'std::__1::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *, 0, false>' [ 0 5 10]
'gl::NoContextGLApi::glClearDepthfFn' [ 0 4 20]
'switches::kDisableGLDrawingForTests' [ 0 10]
'gl::TraceGLApi::glGetActiveAttribFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::allocator<void *> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gl::YUVToRGBConverter, true>' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::data' [ 0 5 10 88]
'std::__1::move<std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> > &>' [ 0 5 10]
'gl::DebugEGLApi::eglReleaseThreadFn' [ 0 4 17]
'gl::TraceGLApi::glEnableFn' [ 0 4 16]
'XPropertyEvent' [ 0]
'gl::GLFenceNV' [ 0 4]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__node_alloc' [ 0 5 10 466]
'std::__1::vector<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >' [ 0 5 10]
'gl::NoContextGLApi::glUniformBlockBindingFn' [ 0 4 20]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__vector_base' [ 0 5 10 103]
'std::__1::forward<const char *const (&)[14]>' [ 0 5 10]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'gl::DebugGLApi::glStencilStrokePathInstancedNVFn' [ 0 4 16]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::release' [ 0 5 10 89]
'gl::DebugGLApi::glDeleteTransformFeedbacksFn' [ 0 4 16]
'gl::GLApiBase::glCompressedTexImage2DRobustANGLEFn' [ 0 4 15]
'std::__1::remove_reference<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'std::__1::prev<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<const unsigned long, gl::GLContext *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::GLFence *, 0, false>::__compressed_pair_elem<gl::GLFence *, void>' [ 0 5 10 59]
'gl::eglQueryStreamu64KHRProc' [ 0 4]
'std::__1::operator-<base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'gl::glPathParameteriNVProc' [ 0 4]
'base::DefaultRefCountedTraits<gl::QueryResult>' [ 0 6]
'std::__1::default_delete<gl::GLFenceEGL>::operator()' [ 0 5 10 42]
'std::__1::__pointer_type_imp::__pointer_type<base::SharedMemory, std::__1::default_delete<base::SharedMemory>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> &>::second' [ 0 5 10 102]
'gl::GLApiBase::glGenFramebuffersEXTFn' [ 0 4 15]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >::RefCounted' [ 0 6 92]
'std::__1::accumulate<std::__1::__wrap_iter<const XVisualInfo *>, int, (lambda at ../../ui/gl/gl_visual_picker_glx.cc:133:23)>' [ 0 5 10]
'std::__1::__advance<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::clear' [ 0 5 10 129]
'gl::GLApiBase::glPolygonModeFn' [ 0 4 15]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::__destruct_at_end' [ 0 5 10 83]
'gl::TraceOSMESAApi::OSMesaPixelStoreFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::construct<base::BasicStringPiece<std::string>>' [ 0 5 10 88]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::sort_and_unique::operator()' [ 0 6 16 203 220]
'std::__1::unique_ptr<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >' [ 0 5 10]
'gl::TraceGLApi::glIsPathNVFn' [ 0 4 16]
'base::UnguessableToken' [ 0 6]
'gl::TraceGLApi::glPrimitiveRestartIndexFn' [ 0 4 16]
'std::__1::forward<gl::GLFenceAndroidNativeFenceSync *>' [ 0 5 10]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::~__split_buffer' [ 0 5 10 65]
'gl::TraceGLApi::glGenFencesNVFn' [ 0 4 16]
'gl::GLStubApiBase::glGetTexParameterfvFn' [ 0 4 19]
'base::internal::InvokeHelper<true, void>::MakeItSo<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper>>' [ 0 6 16 42]
'gl::GLXApi::SetDisabledExtensions' [ 0 4 12]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>::RunOnce::num_bound_args' [ 0 6 16 155 164]
'gl::GLContext::BindGLApi' [ 0 4 15]
'gl::NoContextGLApi::glGetAttachedShadersFn' [ 0 4 20]
'std::__1::unique_ptr<XVisualInfo [], gfx::XObjectDeleter<void, int, &XFree> >::~unique_ptr' [ 0 5 10 79]
'gl::NoContextGLApi::glUniform4iFn' [ 0 4 20]
'switches::kGLSwitchesCopiedFromGpuProcessHost' [ 0 10]
'std::__1::allocator_traits<std::__1::allocator<void *> >::construct<void *, void *const &>' [ 0 5 10 58]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__max_size' [ 0 5 10 72]
'gl::TraceGLApi::glCopyTexImage2DFn' [ 0 4 16]
'gl::GLSurfaceEGL::InitializeOneOffCommon' [ 0 4 18]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::vector<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10 115]
'gl::TraceGLApi::glResumeTransformFeedbackFn' [ 0 4 16]
'std::__1::__unique_if<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>' [ 0 5 10]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::clear' [ 0 5 10 91]
'gl::glCompressedTexImage2DProc' [ 0 4]
'int_least8_t' [ 0]
'std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int>' [ 0 5 10 50]
'gl::GLStubApi::glGenTexturesFn' [ 0 4 15]
'std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >::construct<gl::GLContext *, gl::GLContext *const &>' [ 0 5 10 70]
'EGLTimeKHR' [ 0]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'gl::NoContextGLApi::glVertexAttribPointerFn' [ 0 4 20]
'gl::GLImageMemory::FromGLImage' [ 0 4 19]
'gl::QueryResult' [ 0 4]
'gl::DebugGLApi::glSamplerParameterIivRobustANGLEFn' [ 0 4 16]
'scoped_refptr<gl::TimeElapsedTimerQuery>' [ 0]
'std::__1::remove_reference<gl::GLSurfacePresentationHelper::Frame &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10 277]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__insert_node_at' [ 0 5 10 107]
'gl::GLApiBase::glClearFn' [ 0 4 15]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__annotate_new' [ 0 5 10 74]
'base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>::BindState<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &, gfx::PresentationFeedback &>' [ 0 6 16 121]
'gl::EGLApiBase::eglPostSubBufferNVFn' [ 0 4 16]
'GLXPbuffer' [ 0]
'std::__1::forward<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *>' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::capacity' [ 0 5 10 88]
'gl::(anonymous namespace)::CreateHighestVersionContext::ContextCreationInfo::ContextCreationInfo' [ 0 4 27 56 77]
'std::__1::pair<base::BasicStringPiece<std::string> *, long>' [ 0 5 10]
'base::AutoWritableMemory::Create<bool (*)(void *, const char *const *, unsigned int, void *, void *)>' [ 0 6 26]
'base::BindOnce<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6]
'gl::HasExtension<46>' [ 0 4]
'gl::GLContextGLX::GLContextGLX' [ 0 4 18]
'gl::GLApiBase::glVertexAttribI4uiFn' [ 0 4 15]
'std::__1::unique_ptr<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >' [ 0 5 10]
'gl::GLSurface::PrepareToDestroy' [ 0 4 15]
'gl::TraceGLApi::glMapBufferRangeFn' [ 0 4 16]
'gl::DriverEGL::InitializeStaticBindings' [ 0 4 15]
'gl::GLSurfaceFormat::GetColorSpace' [ 0 4 21]
'gl::TraceEGLApi::eglQuerySurfacePointerANGLEFn' [ 0 4 17]
'gl::EGLApiBase::eglGetNextFrameIdANDROIDFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::unique_ptr<true, void>' [ 0 5 10 332]
'logging::CheckEQImpl<gl::GLContext *, gl::GLContext *>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::BasicStringPiece<std::string> >, 1, true>' [ 0 5 10]
'gl::GLApiBase::glBindSamplerFn' [ 0 4 15]
'std::__1::vector<long, std::__1::allocator<long> >::data' [ 0 5 10 52]
'gl::DebugEGLApi::eglCreateWindowSurfaceFn' [ 0 4 17]
'gl::DebugGLApi::glFinishFenceNVFn' [ 0 4 16]
'std::__1::__move<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::remove_reference<const base::TimeTicks &>' [ 0 5 10]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider' [ 0 4 27]
'gl::NoContextGLApi::glUniformMatrix2fvFn' [ 0 4 20]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::FreeIfNecessary' [ 0 6 63]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, double>' [ 0 6 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::back' [ 0 6 54]
'gl::DebugGLApi::glGetShaderSourceFn' [ 0 4 16]
'gl::glReadnPixelsRobustANGLEProc' [ 0 4]
'base::WeakPtrFactory<gl::GLSurfacePresentationHelper>::GetWeakPtr' [ 0 6 55]
'base::ProtectedMemory<bool (*)(void *, const char *const *, unsigned int, void *, void *)>::operator*' [ 0 6 92]
'std::__1::remove_reference<gl::GPUTimer *&>' [ 0 5 10]
'gl::NoContextGLApi::glIsEnabledFn' [ 0 4 20]
'gl::GLSurfaceEGL::GetHardwareDisplay' [ 0 4 18]
'gl::GLApiBase::glGetSamplerParameterfvRobustANGLEFn' [ 0 4 15]
'gl::TraceGLApi::glTexParameterfvRobustANGLEFn' [ 0 4 16]
'angle::GetTraceCategoryEnabledFlagFunc' [ 0 7]
'gl::TraceGLApi::glCullFaceFn' [ 0 4 16]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >::DeleteInternal<gl::GLSurface>' [ 0 6 80]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct_at_end<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10 115]
'gl::GLImageNativePixmap::SetColorSpace' [ 0 4 25]
'std::__1::forward<gl::TraceGLApi *>' [ 0 5 10]
'std::__1::__pointer_type<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::reset<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **>' [ 0 5 10 332]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::circular_deque' [ 0 6 62]
'gl::TraceGLApi::glDrawRangeElementsFn' [ 0 4 16]
'gl::NoContextGLApi::glObjectLabelFn' [ 0 4 20]
'gl::GLStubApiBase::glGetFloatvFn' [ 0 4 19]
'gl::glGetActiveUniformBlockNameProc' [ 0 4]
'Time' [ 0]
'gl::glDisableProc' [ 0 4]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::operator->' [ 0 5 10 176]
'base::internal::IsNull<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta)>' [ 0 6 16]
'std::__1::forward<std::__1::tuple<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'gl::NoContextGLApi::glCompressedTexSubImage2DRobustANGLEFn' [ 0 4 20]
'gl::(anonymous namespace)::kFragmentHeaderCompatiblityProfile' [ 0 4 27]
'std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::GLVersionInfo *, 0, false>::__compressed_pair_elem<gl::GLVersionInfo *, void>' [ 0 5 10 65]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 63]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::capacity' [ 0 5 10 93]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::__construct<TimeNamePair, TimeNamePair>' [ 0 5 10 64]
'gl::GLImplementation' [ 0 4]
'gl::TraceGLApi::glVertexAttribI4iFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<gl::CurrentGL *, 0, false>' [ 0 5 10]
'gl::GLSurfaceOSMesaX11::Initialize' [ 0 4 24]
'gl::DebugGLApi::glCopyTexSubImage3DFn' [ 0 4 16]
'base::SequenceChecker' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, 1, true>' [ 0 5 10]
'gl::GLImageMemory::GetInternalFormat' [ 0 4 19]
'std::__1::__compressed_pair<gl::GPUTiming *, std::__1::default_delete<gl::GPUTiming> >::__compressed_pair<gl::GPUTiming *, true>' [ 0 5 10 88]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::~Impl' [ 0 6 16 203 209]
'gl::DebugGLApi::glDeleteVertexArraysOESFn' [ 0 4 16]
'gl::TraceGLApi::glSetFenceAPPLEFn' [ 0 4 16]
'gl::GPUTimingImpl::GPUTimingImpl' [ 0 4 19]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::~unique_ptr' [ 0 5 10 79]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>::RunImpl<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, 0, 1>::is_method' [ 0 6 16 161 293]
'std::__1::__const_pointer<gl::GLSurfaceOverlay, gl::GLSurfaceOverlay *, std::__1::allocator<gl::GLSurfaceOverlay>, true>' [ 0 5 10]
'wctrans_t' [ 0]
'std::__1::__hash_value_type<unsigned long, gl::GLContext *>' [ 0 5 10]
'gl::DebugGLApi::glCopySubTextureCHROMIUMFn' [ 0 4 16]
'std::__1::pair<std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__stable_sort_move<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::circular_deque' [ 0 6 60]
'gl::GLStubApi::glCreateProgramFn' [ 0 4 15]
'gl::NoContextGLApi::glStencilStrokePathNVFn' [ 0 4 20]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::__tree_node_destructor' [ 0 5 10 225]
'gl::TraceGLApi::glDeleteSamplersFn' [ 0 4 16]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::front' [ 0 6 62]
'std::__1::__add_lvalue_reference_impl<XVisualInfo, true>' [ 0 5 10]
'gl::GLXApiBase::glXQueryServerStringFn' [ 0 4 16]
'gl::GLStubApiBase::glGetTexParameterIivRobustANGLEFn' [ 0 4 19]
'base::circular_deque<base::TimeDelta>::empty' [ 0 6 39]
'gl::DebugGLXApi::glXGetVisualFromFBConfigFn' [ 0 4 17]
'std::__1::default_delete<gl::GLStateRestorer>' [ 0 5 10]
'gl::DriverGLX::ClearBindings' [ 0 4 15]
'gl::NativeViewGLSurfaceEGLX11::Destroy' [ 0 4 31]
'std::__1::default_delete<gl::GPUTiming>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, 1, true>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'gl::GLApiBase::glUniformMatrix4fvFn' [ 0 4 15]
'gl::DebugGLApi::glUniform3uivFn' [ 0 4 16]
'gl::NoContextGLApi::glInsertEventMarkerEXTFn' [ 0 4 20]
'gl::glBlendEquationSeparateProc' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLApi, std::__1::default_delete<gl::GLApi>, false>' [ 0 5 10 30]
'base::time_internal::TimeBase<base::TimeTicks>::TimeBase' [ 0 6 21 48]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *>::__nat, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'base::internal::FunctorTraits<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), void>::Invoke<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), const base::WeakPtr<gl::GLSurfacePresentationHelper> &, base::TimeTicks, base::TimeDelta>' [ 0 6 16 114]
'base::DeleteHelper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::deallocate' [ 0 5 10 63]
'gl::GLSurfaceFormat::SetDefaultPixelLayout' [ 0 4 21]
'gl::glGetActiveUniformBlockivProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::max_size' [ 0 5 10 74]
'gl::TraceGLApi::glGetProgramivRobustANGLEFn' [ 0 4 16]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::begin' [ 0 6 59]
'std::__1::forward<angle::(anonymous namespace)::PlatformContext *>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__recommend' [ 0 5 10 82]
'gl::GPUTimingImpl' [ 0 4]
'std::__1::move<ui::GpuSwitchingObserver **, ui::GpuSwitchingObserver **>' [ 0 5 10]
'GLeglImageOES' [ 0]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::operator bool' [ 0 5 10 77]
'XConfigureEvent' [ 0]
'base::FileDescriptor' [ 0 6]
'GLubyte' [ 0]
'gl::glGetQueryObjectuivProc' [ 0 4]
'std::__1::__compressed_pair_elem<gl::GPUTiming *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<void *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<void *> &, void>' [ 0 5 10 75]
'gl::DebugGLXApi::glXDestroyPbufferFn' [ 0 4 17]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'gl::glUniform1iProc' [ 0 4]
'std::__1::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> &, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, false>' [ 0 5 10 153]
'gl::glProgramBinaryProc' [ 0 4]
'gl::GLXApiBase::glXGetVisualFromFBConfigFn' [ 0 4 16]
'std::__1::begin<std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> > >' [ 0 5 10]
'gl::RealGLApi::glRenderbufferStorageMultisampleEXTFn' [ 0 4 15]
'gl::EGLApiBase::eglQueryStringFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::circular_deque' [ 0 6 54]
'gl::UnmappedNativeViewGLSurfaceGLX::SwapBuffers' [ 0 4 36]
'gl::GLStubApiBase::glGetActiveUniformBlockNameFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::allocate' [ 0 5 10 67]
'base::BindUnwrapTraits<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6]
'gl::GLImageRefCountedMemory::OnMemoryDump' [ 0 4 29]
'gl::glBindAttribLocationProc' [ 0 4]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::data' [ 0 5 10 66]
'gl::DebugGLApi::glScissorFn' [ 0 4 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::enable_if<true, void>' [ 0 5 10]
'gl::GLApiBase::glMapBufferFn' [ 0 4 15]
'gl::GLStubApiBase::glStencilMaskFn' [ 0 4 19]
'gl::TraceGLApi::glUniformMatrix3x2fvFn' [ 0 4 16]
'std::__1::remove_cv<TimeNamePair>' [ 0 5 10]
'gl::glGetFragDataLocationProc' [ 0 4]
'gl::DebugGLApi::glTexSubImage2DRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glIsShaderFn' [ 0 4 16]
'gl::GLStubApiBase::glInvalidateSubFramebufferFn' [ 0 4 19]
'angle::g_PlatformMethodNames' [ 0 7]
'base::internal::ScopedFDCloseTraits::InvalidValue' [ 0 6 16 37]
'std::__1::move<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*&)()>' [ 0 5 10]
'gl::GLSurface::GetCurrent' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<int> >' [ 0 5 10]
'gl::NoContextGLApi::glVertexAttrib4fvFn' [ 0 4 20]
'gl::TraceGLApi::glTestFenceAPPLEFn' [ 0 4 16]
'gl::GLStubApiBase::glLineWidthFn' [ 0 4 19]
'gl::ScopedVertexAttribArray::~ScopedVertexAttribArray' [ 0 4 29]
'gl::WillUseGLGetStringForExtensions' [ 0 4]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::ClearRetainCapacity' [ 0 6 62]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'base::SplitResult' [ 0 6]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp<long>' [ 0 22]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>::__nat, std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<void *, std::__1::allocator<void *>, true>' [ 0 5 10 30]
'gl::NativeViewGLSurfaceGLX::SupportsPostSubBuffer' [ 0 4 28]
'base::internal::Unwrap<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 16]
'gl::TraceGLApi::glBindSamplerFn' [ 0 4 16]
'gl::glTexStorage3DProc' [ 0 4]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::~vector' [ 0 5 10 66]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::second' [ 0 5 10 338]
'gfx::BufferFormat' [ 0 5]
'gl::DebugGLApi::glCoverFillPathInstancedNVFn' [ 0 4 16]
'SkMatrix44' [ 0]
'gl::NativeViewGLSurfaceGLX::GetCompatibilityKey' [ 0 4 28]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__alloc' [ 0 5 10 81]
'base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::__construct<scoped_refptr<gl::GLImage>, scoped_refptr<gl::GLImage> &>' [ 0 5 10 79]
'gl::DebugGLApi::glDebugMessageCallbackFn' [ 0 4 16]
'gl::GPUTimingImpl::DecElapsedQueryCount' [ 0 4 19]
'std::__1::move<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, false>::~__tuple_leaf' [ 0 5 10 103]
'gl::NoContextGLApi::glMemoryBarrierEXTFn' [ 0 4 20]
'gl::GLImageNativePixmap::CopyTexImage' [ 0 4 25]
'gl::EGLApiBase::eglGetCurrentContextFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 109]
'std::__1::__vector_base<long, std::__1::allocator<long> >::~__vector_base' [ 0 5 10 59]
'gl::NoContextGLApi::glIsFramebufferEXTFn' [ 0 4 20]
'base::CallbackCancellationTraits<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void>' [ 0 6]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'gl::RealGLXApi::Initialize' [ 0 4 16]
'gl::GPUTimer::QueryTimeStamp' [ 0 4 14]
'__s32' [ 0]
'gl::GLStubApiBase::glSampleCoverageFn' [ 0 4 19]
'base::ProtectedMemoryStart' [ 0 6]
'std::__1::vector<int, std::__1::allocator<int> >::__make_iter' [ 0 5 10 50]
'gl::GPUTimingImpl::SetCpuTimeForTesting' [ 0 4 19]
'gl::TraceGLApi::glCopyTexSubImage3DFn' [ 0 4 16]
'gl::GLApiBase::glGetTexParameterivRobustANGLEFn' [ 0 4 15]
'gl::GLApiBase::glUniform1ivFn' [ 0 4 15]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >' [ 0 5 10]
'gl::GLApiBase::glGetShaderPrecisionFormatFn' [ 0 4 15]
'gl::EGLApi' [ 0 4]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::capacity' [ 0 6 62]
'std::__1::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLApiBase::glDisableFn' [ 0 4 15]
'gl::TraceEGLApi::eglExportDMABUFImageQueryMESAFn' [ 0 4 17]
'gl::DebugGLApi::glUniform1ivFn' [ 0 4 16]
'gl::RealGLApi::glGetStringFn' [ 0 4 15]
'gl::DebugGLXApi::glXGetFBConfigFromVisualSGIXFn' [ 0 4 17]
'gl::glBindUniformLocationCHROMIUMProc' [ 0 4]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >::RefCounted' [ 0 6 84]
'scoped_refptr<gl::GLImage>::operator->' [ 0 28]
'std::__1::allocator<void *>::construct<void *, void *const &>' [ 0 5 10 29]
'gl::GLStubApi::glCheckFramebufferStatusEXTFn' [ 0 4 15]
'gl::DebugGLApi::glVertexAttribI4uivFn' [ 0 4 16]
'std::__1::__tree_key_value_types<std::__1::__value_type<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'base::subtle::Acquire_Load' [ 0 6 14]
'std::__1::__pointer_type_imp::__pointer_type<ContextCreationInfo, std::__1::allocator<ContextCreationInfo>, true>' [ 0 5 10 30]
'decltype(nullptr)' [ 0]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__vector_base' [ 0 5 10 77]
'gl::GLApiBase::glCoverageModulationNVFn' [ 0 4 15]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::destroy<scoped_refptr<gl::GLImage> >' [ 0 5 10 79]
'gl::PbufferGLSurfaceEGL::GetHandle' [ 0 4 25]
'gl::GetGLImplementation' [ 0 4]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::~__hash_table' [ 0 5 10 466]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__annotate_new' [ 0 5 10 68]
'gl::GLApiBase::glDeleteTexturesFn' [ 0 4 15]
'base::internal::ApplyCancellationTraitsImpl<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, 0>' [ 0 6 16]
'std::__1::__add_lvalue_reference_impl<ui::ScopedMakeCurrent, true>' [ 0 5 10]
'gl::GLShareGroup::RemoveContext' [ 0 4 18]
'gl::GLSurfaceAdapter::SwapBuffers' [ 0 4 22]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<TimeNamePair> &, 1, false>::__get' [ 0 5 10 81]
'std::__1::__compressed_pair<gl::DebugGLApi *, std::__1::default_delete<gl::DebugGLApi> >' [ 0 5 10]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'scoped_refptr<gl::TimeElapsedTimerQuery>::~scoped_refptr' [ 0 42]
'gl::GLApiBase::glEnableFn' [ 0 4 15]
'double' [ 0]
'gl::TraceGLApi::glBeginTransformFeedbackFn' [ 0 4 16]
'std::__1::allocator<const char *>::construct<const char *, const char *const &>' [ 0 5 10 35]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::release' [ 0 5 10 65]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::operator bool' [ 0 5 10 71]
'gl::GLStubApiBase::glCheckFramebufferStatusEXTFn' [ 0 4 19]
'gl::glVertexAttrib3fvProc' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, 0, 1>::is_weak_call' [ 0 6 16 365 701]
'gl::GLContextOSMesa::MakeCurrent' [ 0 4 21]
'std::__1::default_delete<gl::GLFenceEGL>' [ 0 5 10]
'gl::g_debug_osmesa' [ 0 4]
'std::__1::__compressed_pair<std::__1::__tree_node<gl::GLContext *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::second' [ 0 5 10 185]
'std::__1::swap<int *>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::get' [ 0 5 10 91]
'gl::GLFence::Create' [ 0 4 13]
'gl::GLSurfaceAdapter::PostSubBufferAsync' [ 0 4 22]
'gl::NoContextGLApi::glDrawBufferFn' [ 0 4 20]
'gl::DebugGLApi::glVertexAttrib3fFn' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'gl::DebugGLApi::glGetTranslatedShaderSourceANGLEFn' [ 0 4 16]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::MoveRange<gl::GLSurfacePresentationHelper::Frame, 0>' [ 0 6 16 70]
'gfx::Rect::height' [ 0 5 11]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'EGLConfig' [ 0]
'gl::GLStubApi::glIsSyncFn' [ 0 4 15]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::push_back' [ 0 6 54]
'base::circular_deque<base::TimeDelta>::back' [ 0 6 39]
'std::__1::tuple_element<0, std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > >' [ 0 5 10]
'gl::TraceGLApi::glGetBooleanvRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glGetQueryObjectui64vFn' [ 0 4 20]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::__end_cap' [ 0 5 10 63]
'gl::GLApiBase::glReleaseShaderCompilerFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<TimeNamePair *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10 30]
'gl::glGetQueryObjecti64vRobustANGLEProc' [ 0 4]
'gl::TraceGLApi::glFramebufferTexture2DEXTFn' [ 0 4 16]
'gl::GLSurfaceGLXX11' [ 0 4]
'gl::GLImageStub::Flush' [ 0 4 17]
'gl::g_debug_bindings_enabled' [ 0 4]
'std::__1::remove_const<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10]
'gl::NoContextGLApi::glDeleteProgramFn' [ 0 4 20]
'std::__1::__compressed_pair<gl::CurrentGL *, std::__1::default_delete<gl::CurrentGL> >::__compressed_pair<gl::CurrentGL *, true>' [ 0 5 10 88]
'gl::GLContextGLX::ReleaseCurrent' [ 0 4 18]
'std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'base::WeakPtr<gl::GLSurfacePresentationHelper>' [ 0 6]
'gl::NoContextGLApi::glBlendFuncSeparateFn' [ 0 4 20]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>' [ 0 5 10]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator bool' [ 0 5 10 89]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__construct_node<gl::GLContext *const &>' [ 0 5 10 107]
'base::internal::CheckedNumeric<long>::operator/=<double>' [ 0 6 16 38]
'gl::GLSurface::GetCompatibilityKey' [ 0 4 15]
'gl::GLStubApiBase::glDeleteFramebuffersEXTFn' [ 0 4 19]
'gl::GLSurface::ExtensionsContain' [ 0 4 15]
'std::__1::remove_reference<const std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> &>' [ 0 5 10]
'gl::DebugEGLApi::eglDestroySurfaceFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >' [ 0 5 10]
'gl::GLSurface::SupportsSwapTimestamps' [ 0 4 15]
'gl::NoContextGLApi::glGetUniformfvRobustANGLEFn' [ 0 4 20]
'std::__1::__unwrap_iter<std::__1::reverse_iterator<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<float, 0, false>::__compressed_pair_elem<float, void>' [ 0 5 10 51]
'scoped_refptr<gfx::NativePixmap>::operator bool' [ 0 34]
'std::__1::__tree_next_iter<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__destruct_at_end' [ 0 5 10 77]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::GLSurfacePresentationHelper>, false>::~__tuple_leaf' [ 0 5 10 82]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::unique_ptr<unsigned char *, true, void, void>' [ 0 5 10 85]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'gl::TraceGLApi::glUniform1iFn' [ 0 4 16]
'gl::NoContextGLApi::glUnmapBufferFn' [ 0 4 20]
'std::__1::pointer_traits<ContextCreationInfo *>' [ 0 5 10]
'gl::GLSurface::SwapBuffersAsync' [ 0 4 15]
'gl::GLApiBase::glGenVertexArraysOESFn' [ 0 4 15]
'gl::DebugGLXApi::glXSwapBuffersFn' [ 0 4 17]
'gl::GLFenceARB::HandleClientWaitFailure' [ 0 4 16]
'gl::DebugEGLApi::eglCreateStreamKHRFn' [ 0 4 17]
'logging::CheckEQImpl<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 9]
'gl::GLSurfaceAdapter::SetEnableSwapTimestamps' [ 0 4 22]
'std::__1::__compressed_pair<const char **, std::__1::allocator<const char *> >' [ 0 5 10]
'gl::DebugEGLApi::eglReleaseTexImageFn' [ 0 4 17]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::__tuple_impl<0, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> , base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10 124]
'unsigned short' [ 0]
'gl::GLSurfacePresentationHelper::ScopedSwapBuffers::set_result' [ 0 4 33 52]
'gl::NoContextGLApi::glAttachShaderFn' [ 0 4 20]
'gl::NoContextGLApi::glTexParameterivFn' [ 0 4 20]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::capacity' [ 0 5 10 68]
'gl::DebugGLApi::glClientWaitSyncFn' [ 0 4 16]
'gl::GLXApiBase::glXCreateContextFn' [ 0 4 16]
'gl::TraceGLXApi::glXGetVisualFromFBConfigFn' [ 0 4 17]
'std::__1::get<0, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'std::__1::allocator<base::BasicStringPiece<std::string> >::construct<base::BasicStringPiece<std::string>, const base::BasicStringPiece<std::string> &>' [ 0 5 10 59]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >' [ 0 5 10]
'gl::GLApiBase::glResumeTransformFeedbackFn' [ 0 4 15]
'gl::glPauseTransformFeedbackProc' [ 0 4]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__alloc' [ 0 5 10 91]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::release' [ 0 5 10 119]
'gl::NoContextGLApi::glGetnUniformfvRobustANGLEFn' [ 0 4 20]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::CheckValidIndex' [ 0 6 62]
'std::__1::__pointer_type_imp::__pointer_type<const char *, std::__1::allocator<const char *>, true>' [ 0 5 10 30]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__alloc' [ 0 5 10 89]
'__uintmax_t' [ 0]
'base::internal::circular_deque_const_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6 16]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::~__split_buffer' [ 0 5 10 105]
'gl::GLEnums::enum_to_string_table_len_' [ 0 4 13]
'gl::(anonymous namespace)::g_glx_get_msc_rate_oml_supported' [ 0 4 27]
'base::internal::CheckedNumeric<unsigned long>::operator+=<unsigned long>' [ 0 6 16 47]
'gl::TraceGLApi::glUniform1ivFn' [ 0 4 16]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::get' [ 0 5 10 95]
'std::__1::__compressed_pair_elem<void **, 0, false>' [ 0 5 10]
'gl::NativeViewGLSurfaceEGLX11' [ 0 4]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>::~unique_ptr' [ 0 5 10 85]
'gl::glGenVertexArraysOESProc' [ 0 4]
'std::__1::unique_ptr<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >::unique_ptr<true, void>' [ 0 5 10 81]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >::DeleteInternal<gl::(anonymous namespace)::SGIVideoSyncThread>' [ 0 6 144]
'gl::ExtensionsOSMESA' [ 0 4]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::capacity' [ 0 5 10 91]
'gl::EGLApiBase::eglDupNativeFenceFDANDROIDFn' [ 0 4 16]
'scoped_refptr<gl::TimeElapsedTimerQuery>::operator->' [ 0 42]
'gl::TraceGLApi::glClearBufferuivFn' [ 0 4 16]
'std::__1::__compressed_pair<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo> &>::__compressed_pair<nullptr_t, std::__1::allocator<ContextCreationInfo> &>' [ 0 5 10 96]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::ShrinkCapacityIfNecessary' [ 0 6 54]
'gl::TraceGLApi::glGetVertexAttribIivRobustANGLEFn' [ 0 4 16]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::~EGLSyncControlVSyncProvider' [ 0 4 27 56]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6]
'gl::GLImageStub::GetInternalFormat' [ 0 4 17]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 5 10]
'gl::DebugGLApi::glCoverStrokePathInstancedNVFn' [ 0 4 16]
'gl::(anonymous namespace)::g_use_direct_composition' [ 0 4 27]
'std::__1::__rebind_pointer<void *, std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::GLSurfaceEGL::GetDisplay' [ 0 4 18]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator=<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>, void, void>' [ 0 5 10 89]
'ui::DCRendererLayerParams::DCRendererLayerParams' [ 0 4 27]
'gl::NoContextGLApi::glGetTexParameterivFn' [ 0 4 20]
'std::__1::get<0, const gfx::ColorSpace &>' [ 0 5 10]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>::Adjust<int, nullptr>' [ 0 6 16 68]
'std::__1::__compressed_pair_elem<gl::DisplayType *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 63]
'std::__1::pointer_traits<gfx::NativePixmapPlane *>' [ 0 5 10]
'base::internal::CheckedNumeric<int>::IsValid<int>' [ 0 6 16 37]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >::deallocate' [ 0 5 10 116]
'gl::GLContext::AdjustGpuPreference' [ 0 4 15]
'gl::DebugEGLApi::eglProgramCacheQueryANGLEFn' [ 0 4 17]
'gl::GLShareGroup::~GLShareGroup' [ 0 4 18]
'gl::DebugGLXApi::glXCreateGLXPixmapFn' [ 0 4 17]
'gl::DebugGLXApi::glXCreatePbufferFn' [ 0 4 17]
'std::__1::forward<const char *const &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> &>' [ 0 5 10]
'std::__1::once_flag' [ 0 5 10]
'std::__1::forward<gl::GLApi *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::DriverGL *, 0, false>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__value_type<void *, std::__1::basic_string<char> > *>' [ 0 5 10]
'gl::GLSurfacePresentationHelper::PostSwapBuffers' [ 0 4 33]
'gl::GLStubApiBase::glTexBufferFn' [ 0 4 19]
'gl::GLApiBase::glGetQueryObjecti64vRobustANGLEFn' [ 0 4 15]
'gl::GLSurfaceStub::Destroy' [ 0 4 19]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::queue' [ 0 5 10 116]
'gl::GPUTimingImpl::SetLastElapsedQuery' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::__construct<std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 145]
'base::ThreadLocalPointer<gl::GLContext>::Set' [ 0 6 41]
'std::__1::remove_reference<gl::GLSurfacePresentationHelper *>' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>::BindState<const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &, base::TimeTicks &, const base::TimeDelta &>' [ 0 6 16 127]
'gl::DebugGLApi::glApplyFramebufferAttachmentCMAAINTELFn' [ 0 4 16]
'gl::glBlendColorProc' [ 0 4]
'switches::kOverrideUseSoftwareGLForTests' [ 0 10]
'base::circular_deque<base::TimeDelta>::IncrementGeneration' [ 0 6 39]
'std::__1::forward<std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10]
'gl::DebugGLApi::glGetTexLevelParameterfvRobustANGLEFn' [ 0 4 16]
'std::__1::unary_function<unsigned long, unsigned long>' [ 0 5 10]
'gl::NoContextGLApi::glPathParameterfNVFn' [ 0 4 20]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'gl::TraceGLApi::glSamplerParameterivRobustANGLEFn' [ 0 4 16]
'std::__1::forward<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &)>' [ 0 5 10]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::push_back' [ 0 6 62]
'gl::GLApiBase::glStencilThenCoverFillPathNVFn' [ 0 4 15]
'gl::NoContextGLApi::glSamplerParameterivFn' [ 0 4 20]
'switches::kEnableSwapBuffersWithBounds' [ 0 10]
'gl::DebugGLApi::glGetSamplerParameterfvFn' [ 0 4 16]
'std::__1::__compressed_pair<scoped_refptr<gl::GLImage> *, std::__1::allocator<scoped_refptr<gl::GLImage> > >' [ 0 5 10]
'angle::HistogramCustomCountsFunc' [ 0 7]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'std::__1::operator==<const std::__1::basic_string<char> *, const std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__swap_out_circular_buffer' [ 0 5 10 66]
'gl::TraceGLApi::glUniformMatrix3fvFn' [ 0 4 16]
'gl::GLStubApiBase::glGetSamplerParameterIuivRobustANGLEFn' [ 0 4 19]
'gl::EGLApiBase::eglGetConfigAttribFn' [ 0 4 16]
'gl::NanoToMicro' [ 0 4]
'gl::GLApiBase::glUniform4uivFn' [ 0 4 15]
'gl::TraceGLApi::glRenderbufferStorageMultisampleFn' [ 0 4 16]
'gl::NoContextGLApi::glCompressedCopyTextureCHROMIUMFn' [ 0 4 20]
'gl::GLApiBase::glDepthRangefFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<gfx::GpuFence *, 0, false>::__compressed_pair_elem<gfx::GpuFence *&, void>' [ 0 5 10 61]
'std::__1::conditional<false, std::__1::pointer_traits<int *>::__nat, int>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned char>, 1, true>' [ 0 5 10]
'gl::GLStubApiBase::glWaitSyncFn' [ 0 4 19]
'gl::GLApiBase::glDeleteShaderFn' [ 0 4 15]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >::reset' [ 0 5 10 91]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::CheckValidIndex' [ 0 6 54]
'gl::glVertexAttrib1fvProc' [ 0 4]
'gl::DebugGLApi::glGetRenderbufferParameterivRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<int>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glGetProgramInfoLogFn' [ 0 4 16]
'gl::NoContextGLApi::glGetActiveUniformsivFn' [ 0 4 20]
'gl::glPointParameteriProc' [ 0 4]
'gl::NoContextGLApi::glTexParameteriFn' [ 0 4 20]
'gl::SyncControlVSyncProvider::GetVSyncParametersIfAvailable' [ 0 4 30]
'gl::GPUTimingImpl::UpdateMaxTimeStamp' [ 0 4 19]
'base::time_internal::TimeBase<base::TimeTicks>::operator>' [ 0 6 21 48]
'gl::RealEGLApi::RealEGLApi' [ 0 4 16]
'gl::DebugGLApi::glStencilThenCoverFillPathInstancedNVFn' [ 0 4 16]
'std::__1::forward<const long &>' [ 0 5 10]
'gl::NoContextGLApi' [ 0 4]
'gl::GLStubApiBase::glGetRenderbufferParameterivEXTFn' [ 0 4 19]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>::allocate' [ 0 5 10 145]
'std::__1::__compressed_pair<ui::CARendererLayerParams::FilterEffect *, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::CARendererLayerParams::FilterEffect> &>' [ 0 5 10 135]
'gl::GLContext::ScopedReleaseCurrent::ScopedReleaseCurrent' [ 0 4 15 37]
'gl::TraceGLApi::glGetMultisamplefvRobustANGLEFn' [ 0 4 16]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > >::num_bound_args' [ 0 6 16 237]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'trace_event_internal::AddTraceEvent<int, int>' [ 0 22]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::unique_ptr<true, void>' [ 0 5 10 75]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >::construct<std::__1::pair<const unsigned long, gl::GLContext *>, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned long &&>, std::__1::tuple<> >' [ 0 5 10 114]
'std::__1::__atomic_base<unsigned int, false>::operator unsigned int' [ 0 5 10 46]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'gl::glValidateProgramProc' [ 0 4]
'std::__1::__unwrap_iter<ui::GpuSwitchingObserver **>' [ 0 5 10]
'gl::GLSurfaceGLX::IsCreateContextSupported' [ 0 4 18]
'gl::GLStubApiBase::glGetTexParameterfvRobustANGLEFn' [ 0 4 19]
'gl::glBindBufferProc' [ 0 4]
'scoped_refptr<gfx::NativePixmap>::swap' [ 0 34]
'gl::TraceGLApi::glPushDebugGroupFn' [ 0 4 16]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::operator bool' [ 0 5 10 85]
'scoped_refptr<gl::TimerQuery>::get' [ 0 31]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::~__tree' [ 0 5 10 107]
'std::__1::forward<std::__1::allocator<void *> &>' [ 0 5 10]
'std::__1::advance<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::FixedVSyncProvider *, std::__1::default_delete<gfx::FixedVSyncProvider> >::__compressed_pair<gfx::FixedVSyncProvider *&, true>' [ 0 5 10 108]
'gl::GLApiBase::glGetProgramivRobustANGLEFn' [ 0 4 15]
'gl::(anonymous namespace)::g_glx_create_context_robustness_supported' [ 0 4 27]
'gl::DebugGLXApi::glXMakeContextCurrentFn' [ 0 4 17]
'std::__1::vector<long, std::__1::allocator<long> >::allocate' [ 0 5 10 52]
'std::__1::move<gfx::NativePixmapPlane &>' [ 0 5 10]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::~__vector_base' [ 0 5 10 63]
'std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<void>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::~__split_buffer' [ 0 5 10 83]
'base::internal::ApplyCancellationTraitsImpl<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, 0>' [ 0 6 16]
'base::internal::PassingTraitsType<base::TimeDelta>' [ 0 6 16]
'std::__1::__upper_bound<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::(anonymous namespace)::g_egl_display' [ 0 4 27]
'pid_t' [ 0]
'gl::OSMesaMakeCurrentProc' [ 0 4]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'gl::NoContextGLApi::glStencilStrokePathInstancedNVFn' [ 0 4 20]
'gl::glUniformMatrix4x3fvProc' [ 0 4]
'scoped_refptr<gl::QueryResult>::~scoped_refptr' [ 0 32]
'gl::glGetShaderSourceProc' [ 0 4]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'gl::(anonymous namespace)::kVertexShader' [ 0 4 27]
'base::circular_deque<base::TimeDelta>::DestructRange' [ 0 6 39]
'std::__1::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10 128]
'gl::GLStubApiBase::glStencilStrokePathNVFn' [ 0 4 19]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'std::__1::unique_ptr<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >::unique_ptr<true, void>' [ 0 5 10 161]
'gl::EGLApiBase::eglImageFlushExternalEXTFn' [ 0 4 16]
'gl::DebugGLApi::glPolygonModeFn' [ 0 4 16]
'gl::glUniformMatrix2x4fvProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::__construct<XVisualInfo, const XVisualInfo &>' [ 0 5 10 63]
'gl::(anonymous namespace)::kVertexHeaderCompatiblityProfile' [ 0 4 27]
'gl::GLStubApiBase::glDeleteBuffersARBFn' [ 0 4 19]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__swap_out_circular_buffer' [ 0 5 10 74]
'std::__1::forward<long>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<void *> >::__construct_backward<void *>' [ 0 5 10 58]
'std::__1::conditional<false, std::__1::pointer_traits<TimeNamePair *>::__nat, TimeNamePair>' [ 0 5 10]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'gl::DriverEGL::InitializeExtensionBindings' [ 0 4 15]
'std::__1::forward<const std::__1::less<void> &>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::GpuFence *, std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10]
'gl::ClearBindingsOSMESA' [ 0 4]
'std::__1::get<0, base::TimeTicks, base::TimeDelta>' [ 0 5 10]
'gl::GLStubApiBase::glCompressedTexSubImage2DRobustANGLEFn' [ 0 4 19]
'std::__1::binary_function<gl::GLContext *, gl::GLContext *, bool>' [ 0 5 10]
'gl::GLStubApiBase::glBlendFuncSeparateFn' [ 0 4 19]
'base::Singleton<gl::GLVisualPickerGLX, base::DefaultSingletonTraits<gl::GLVisualPickerGLX>, gl::GLVisualPickerGLX>' [ 0 6]
'gl::GLXApiBase::glXDestroyGLXPixmapFn' [ 0 4 16]
'gl::DebugGLApi::glReadnPixelsRobustANGLEFn' [ 0 4 16]
'gfx' [ 0]
'gl::DebugGLApi::glGetFramebufferAttachmentParameterivEXTFn' [ 0 4 16]
'std::__1::forward<const gfx::PresentationFeedback &>' [ 0 5 10]
'gl::DebugGLXApi::glXChooseVisualFn' [ 0 4 17]
'gl::TraceGLApi::glTexParameterfvFn' [ 0 4 16]
'gl::TraceGLXApi::glXQueryServerStringFn' [ 0 4 17]
'gl::GLStubApiBase::glGetSyncivFn' [ 0 4 19]
'gl::glGetIntegeri_vProc' [ 0 4]
'gl::NoContextGLApi::glGetProgramBinaryFn' [ 0 4 20]
'std::__1::__size_type<std::__1::allocator<gl::GLSurface::CALayerInUseQuery>, long, true>' [ 0 5 10]
'base::internal::CheckedDivOp<long, double, void>::Do<long>' [ 0 6 16 50]
'long long unsigned int' [ 0]
'gl::NoContextGLApi::glBlendBarrierKHRFn' [ 0 4 20]
'gl::EGLApiBase::eglStreamConsumerGLTextureExternalKHRFn' [ 0 4 16]
'std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::__construct<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const gfx::ColorSpace &>, std::__1::tuple<> >' [ 0 5 10 219]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::capacity' [ 0 5 10 75]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__alloc' [ 0 5 10 59]
'std::__1::addressof<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >' [ 0 5 10]
'base::SequenceChecker::~SequenceChecker' [ 0 6 23]
'gl::GLApiBase::glGenSamplersFn' [ 0 4 15]
'base::internal::CheckedAddOp<unsigned long, unsigned long, void>' [ 0 6 16]
'gl::GLSurfaceEGL::InitializeOneOffForTesting' [ 0 4 18]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__move_assign' [ 0 5 10 115]
'XDisplay' [ 0]
'scoped_refptr<gl::GLSurface>::operator bool' [ 0 30]
'gl::NoContextGLApi::glResumeTransformFeedbackFn' [ 0 4 20]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__destruct_at_end' [ 0 5 10 57]
'std::__1::__compressed_pair<gl::GLFenceEGL *, std::__1::default_delete<gl::GLFenceEGL> >::__compressed_pair<gl::GLFenceEGL *, std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10 90]
'gl::DebugGLApi::glFramebufferTexture2DMultisampleEXTFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::Resize' [ 0 4 28]
'gl::GLStubApiBase::glVertexAttrib2fFn' [ 0 4 19]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::operator=' [ 0 5 10 95]
'gl::GLImageNativePixmap::ValidFormat' [ 0 4 25]
'gl::GLStubApiBase::glSetFenceAPPLEFn' [ 0 4 19]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::remove_reference<base::internal::VectorBuffer<base::TimeDelta> &>' [ 0 5 10]
'std::__1' [ 0 5]
'std::__1::__compressed_pair<gfx::FixedVSyncProvider *, std::__1::default_delete<gfx::FixedVSyncProvider> >' [ 0 5 10]
'gl::DebugGLXApi::glXMakeCurrentFn' [ 0 4 17]
'base::Version::components' [ 0 6 15]
'gl::GLApiBase::glIsEnabledFn' [ 0 4 15]
'logging::MakeCheckOpString<base::TimeTicks::Clock, base::TimeTicks::Clock>' [ 0 9]
'gl::DebugGLApi::glDrawArraysInstancedANGLEFn' [ 0 4 16]
'gl::glXDestroyPixmapProc' [ 0 4]
'gl::kANGLEImplementationOpenGLESName' [ 0 4]
'std::__1::atomic<int>' [ 0 5 10]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::map' [ 0 5 10 160]
'std::__1::enable_if_t<FunctorTraits<void (SGIVideoSyncProviderThreadShim::*)(const RepeatingCallback<void (TimeTicks, TimeDelta)> &)>::is_nullable, bool>' [ 0 5 10]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::__end_cap' [ 0 5 10 91]
'gl::DebugEGLApi::eglStreamPostD3DTextureANGLEFn' [ 0 4 17]
'gl::glGetQueryObjectui64vProc' [ 0 4]
'gl::GLApiBase::glBlendColorFn' [ 0 4 15]
'gl::NoContextGLApi::glBlendFuncFn' [ 0 4 20]
'gl::GLApiBase::glGetInteger64i_vFn' [ 0 4 15]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *>::__nat, std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'gl::DebugGLApi::glGetMultisamplefvFn' [ 0 4 16]
'gl::TraceOSMESAApi::OSMesaCreateContextFn' [ 0 4 20]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<long>' [ 0 6 16 76]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::deallocate' [ 0 5 10 115]
'std::__1::operator==<gl::DisplayType *, gl::DisplayType *>' [ 0 5 10]
'gfx::Size::Size' [ 0 5 11]
'gl::DebugGLApi::glSamplerParameterivRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glViewportFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::__nat, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 5 10]
'gl::TraceGLApi::glEGLImageTargetTexture2DOESFn' [ 0 4 16]
'gl::GLApiBase::glTexStorage3DFn' [ 0 4 15]
'std::__1::default_delete<gfx::ColorTransform>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >::operator*' [ 0 5 10 219]
'std::__1::conditional<true, std::__1::pair<unsigned long, gl::GLContext *>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 81]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::find' [ 0 5 10 160]
'std::__1::swap<gfx::NativePixmap *>' [ 0 5 10]
'gl::eglGetPlatformDisplayEXTProc' [ 0 4]
'ui::GpuSwitchingManager::RemoveObserver' [ 0 4 25]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, false>' [ 0 5 10]
'gl::DebugGLApi::glIsBufferFn' [ 0 4 16]
'gl::GLStubApiBase::glBeginTransformFeedbackFn' [ 0 4 19]
'gl::DebugOSMESAApi' [ 0 4]
'gl::TraceGLApi::glUniform4uivFn' [ 0 4 16]
'gl::DebugEGLApi::eglWaitNativeFn' [ 0 4 17]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 77]
'gl::glPopDebugGroupProc' [ 0 4]
'gl::TraceGLApi::glDepthRangefFn' [ 0 4 16]
'gl::GLXApiBase::InitializeBase' [ 0 4 16]
'trace_event_internal::ScopedTracer' [ 0 22]
'std::__1::remove_reference<gl::DebugGLApi *>' [ 0 5 10]
'std::__1::remove_reference<void *>' [ 0 5 10]
'gl::ClearBindingsEGL' [ 0 4]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, void>' [ 0 6]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::begin' [ 0 5 10 96]
'gl::GLStubApiBase::glGetTexParameterivFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::default_delete<unsigned char []>, 1, true>' [ 0 5 10]
'gl::GPUTimer' [ 0 4]
'gl::GLSurfaceAdapter::PostSubBuffer' [ 0 4 22]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__root' [ 0 5 10 107]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__construct_at_end<scoped_refptr<gl::GLImage> *>' [ 0 5 10 97]
'_XEvent' [ 0]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::DeleteInternal<base::RefCountedMemory>' [ 0 6 118]
'gl::NoContextGLApi::glApplyFramebufferAttachmentCMAAINTELFn' [ 0 4 20]
'gl::InitializeDebugGLBindingsEGL' [ 0 4]
'gl::TimerQuery::TimerQuery' [ 0 4 16]
'std::__1::remove_cv<base::BasicStringPiece<std::string> >' [ 0 5 10]
'base::DefaultRefCountedTraits<gl::GLContext>' [ 0 6]
'std::__1::__extract_key_first_tag' [ 0 5 10]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::operator()' [ 0 5 10 149]
'std::__1::__compressed_pair_elem<ui::DCRendererLayerParams::FilterEffect *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 87]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'gl::glXSwapIntervalEXTProc' [ 0 4]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer>::reset' [ 0 5 10 96]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >::DeleteInternal<gl::GLContext>' [ 0 6 80]
'scoped_refptr<gl::QueryResult>' [ 0]
'gl::DebugGLApi::glMatrixLoadIdentityEXTFn' [ 0 4 16]
'gl::InitializeStaticGLBindingsEGL' [ 0 4]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, false>' [ 0 5 10 30]
'std::__1::pair<const unsigned long, gl::GLContext *>::pair<unsigned long &&>' [ 0 5 10 54]
'gl::EGLApiBase::eglGetErrorFn' [ 0 4 16]
'gl::GLApiBase::glFramebufferTexture2DEXTFn' [ 0 4 15]
'gl::UnmappedNativeViewGLSurfaceGLX::GetHandle' [ 0 4 36]
'gl::NoContextGLApi::glGetProgramResourceNameFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, false>' [ 0 5 10 30]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::get_deleter' [ 0 5 10 416]
'std::__1::__tuple_leaf<0, const gfx::ColorSpace &, false>::__tuple_leaf<const gfx::ColorSpace &, void>' [ 0 5 10 59]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::allocate' [ 0 5 10 115]
'std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'std::__1::remove_reference<const base::WeakPtr<gl::GLSurfacePresentationHelper> &>' [ 0 5 10]
'gl::GLXApiBase::glXIsDirectFn' [ 0 4 16]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::begin' [ 0 6 62]
'gl::DebugGLApi::glTexSubImage3DFn' [ 0 4 16]
'gl::GetDebugGLBindingsInitializedGL' [ 0 4]
'std::__1::remove_reference<std::__1::tuple<unsigned long &&> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >' [ 0 5 10]
'std::__1::add_lvalue_reference<gl::YUVToRGBConverter>' [ 0 5 10]
'SkMatrix44::SkMatrix44' [ 0 12]
'logging::CheckEQImpl<void *, void *>' [ 0 9]
'base::internal::circular_deque_iterator<base::TimeDelta>' [ 0 6 16]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> > &>' [ 0 5 10]
'gl::NoContextGLApi::glPathCommandsNVFn' [ 0 4 20]
'gl::NoContextGLApi::glFlushFn' [ 0 4 20]
'gl::NoContextGLApi::glGetQueryObjectuivRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glDeleteVertexArraysOESFn' [ 0 4 19]
'gl::GLFence::ResetSupported' [ 0 4 13]
'gl::GLApiBase::glTexImage2DRobustANGLEFn' [ 0 4 15]
'gl::NoContextGLApi::glStencilThenCoverFillPathInstancedNVFn' [ 0 4 20]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, true>' [ 0 5 10]
'gl::eglGetConfigsProc' [ 0 4]
'gl::glXQueryVersionProc' [ 0 4]
'gl::glGetUniformfvProc' [ 0 4]
'std::__1::__size_type<std::__1::allocator<base::FileDescriptor>, long, true>' [ 0 5 10]
'std::__1::forward<gl::GPUTiming *>' [ 0 5 10]
'gl::GLApiBase::glUniformMatrix2x4fvFn' [ 0 4 15]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), void>' [ 0 6 16]
'gl::NoContextGLApi::glBlitFramebufferFn' [ 0 4 20]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::__alloc' [ 0 5 10 73]
'gl::GLContextStub::Initialize' [ 0 4 19]
'gl::glGetProgramBinaryProc' [ 0 4]
'gl::GLWindowSystemBindingInfo::~GLWindowSystemBindingInfo' [ 0 4 31]
'gl::GLApiBase::glBindFragDataLocationFn' [ 0 4 15]
'base::Lock' [ 0 6]
'std::__1::tuple<unsigned long &&>' [ 0 5 10]
'gl::GLStubApiBase::glUniformMatrix3x4fvFn' [ 0 4 19]
'std::__1::__compressed_pair<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo> &>::second' [ 0 5 10 96]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > &>' [ 0 5 10]
'gl::SurfacelessEGL::IsSurfaceless' [ 0 4 20]
'std::__1::__compressed_pair<gl::GLFenceEGL *, std::__1::default_delete<gl::GLFenceEGL> >::__compressed_pair<gl::GLFenceEGL *, true>' [ 0 5 10 90]
'gl::GLSurfaceAdapter::CommitOverlayPlanesAsync' [ 0 4 22]
'base::subtle::AdoptRefTag' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceEGL>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceEGL>, void>' [ 0 5 10 85]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::~vector' [ 0 5 10 122]
'base::LazyInstance<gl::(anonymous namespace)::TraceSwapEventsInitializer, base::internal::LeakyLazyInstanceTraits<gl::(anonymous namespace)::TraceSwapEventsInitializer> >' [ 0 6]
'base::RepeatingCallback<void (const gfx::PresentationFeedback &)>::RepeatingCallback' [ 0 6 67]
'gl::DebugGLApi::glColorMaskFn' [ 0 4 16]
'gl::GLContext::SetSwitchableGPUsSupported' [ 0 4 15]
'gl::glDebugMessageControlProc' [ 0 4]
'gl::GLStubApi::glIsFenceAPPLEFn' [ 0 4 15]
'gl::(anonymous namespace)::AddInitDisplay' [ 0 4 27]
'gl::GLApiBase::glUniform2iFn' [ 0 4 15]
'gl::TraceGLApi::glGenSamplersFn' [ 0 4 16]
'gl::NoContextGLApi::glSamplerParameterfFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::__construct_backward<const char *>' [ 0 5 10 64]
'std::__1::forward<std::__1::__destruct_n &>' [ 0 5 10]
'gl::EGLApiBase::eglDestroySurfaceFn' [ 0 4 16]
'gl::OSMesaPixelStoreProc' [ 0 4]
'gl::TraceEGLApi::eglCreatePixmapSurfaceFn' [ 0 4 17]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider::~OMLSyncControlVSyncProvider' [ 0 4 27 56]
'gl::GLSurfaceEGL::GetNativeDisplay' [ 0 4 18]
'std::__1::vector<void *, std::__1::allocator<void *> >::data' [ 0 5 10 56]
'gl::TraceGLApi::glGenFramebuffersEXTFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, 0>::is_weak_call' [ 0 6 16 227 422]
'gl::GLImageNativePixmap::Flush::attribs' [ 0 4 25 32]
'gl::NoContextGLApi::glSampleCoverageFn' [ 0 4 20]
'gl::DebugGLApi::DebugGLApi' [ 0 4 16]
'std::__1::max<long>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::clear' [ 0 5 10 87]
'gl::NativeViewGLSurfaceGLX::CanHandleEvent' [ 0 4 28]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *, 0, false>::__compressed_pair_elem<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *&, void>' [ 0 5 10 102]
'std::__1::move<gl::TimeElapsedTimerQuery *&>' [ 0 5 10]
'gl::(anonymous namespace)::g_libraries' [ 0 4 27]
'gl::TraceGLApi::glDeleteTransformFeedbacksFn' [ 0 4 16]
'gl::TraceEGLApi::eglGetPlatformDisplayEXTFn' [ 0 4 17]
'base::internal::CheckedNumeric<long>::operator/=<long>' [ 0 6 16 38]
'std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>::operator*' [ 0 5 10 192]
'gl::NoContextGLApi::~NoContextGLApi' [ 0 4 20]
'std::__1::pointer_traits<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *>' [ 0 5 10]
'std::__1::__compressed_pair<const char **, std::__1::allocator<const char *> &>::second' [ 0 5 10 81]
'std::__1::__compressed_pair<gl::DisplayType *, std::__1::allocator<gl::DisplayType> >' [ 0 5 10]
'gl::TraceGLApi::glGetDebugMessageLogFn' [ 0 4 16]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>' [ 0 6 16]
'base::internal::FunctorTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, void>' [ 0 6 16]
'gl::NoContextGLApi::glCompressedTexSubImage2DFn' [ 0 4 20]
'base::WrapUnique<gl::GPUTimer>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<int> >::max_size' [ 0 5 10 55]
'gl::GLXApiBase::glXDestroyPixmapFn' [ 0 4 16]
'gl::NoContextGLApi::glDrawElementsInstancedANGLEFn' [ 0 4 20]
'std::__1::forward<bool>' [ 0 5 10]
'std::__1::forward<__GLXFBConfigRec **&>' [ 0 5 10]
'std::__1::char_traits<char>::find' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<gl::GPUTimer *, 0, false>' [ 0 5 10]
'gl::NoContextGLApi::glFenceSyncFn' [ 0 4 20]
'gl::DebugGLApi::glGetBufferPointervRobustANGLEFn' [ 0 4 16]
'std::__1::forward<const XVisualInfo &>' [ 0 5 10]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Compact' [ 0 6 59]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::flat_tree' [ 0 6 16 203]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >::AddRef' [ 0 6 80]
'gl::GLStubApiBase::glGetFragDataIndexFn' [ 0 4 19]
'base::DefaultSingletonTraits<ui::GpuSwitchingManager>' [ 0 6]
'base::ThreadLocalPointer<gl::CurrentGL>' [ 0 6]
'gl::DebugGLApi::glGetObjectPtrLabelFn' [ 0 4 16]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<gl::GLContext *, void *>, true>' [ 0 5 10]
'gl::GLApiBase::glUniformMatrix3fvFn' [ 0 4 15]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::operator+=' [ 0 5 10 62]
'AnnotateBenignRaceSized' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::GpuFence>, 1, true>' [ 0 5 10]
'base::circular_deque<base::TimeDelta>::circular_deque' [ 0 6 39]
'std::__1::__compressed_pair_elem<void **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 53]
'sync_wait' [ 0]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::get_key_comp' [ 0 6 16 203 209]
'std::__1::allocator<std::__1::basic_string<char> >::destroy' [ 0 5 10 52]
'gl::GLSurfaceEGL::ShutdownOneOff' [ 0 4 18]
'std::__1::__pointer_type<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<int *, 0, false>::__compressed_pair_elem<int *, void>' [ 0 5 10 51]
'gl::NoContextGLApi::glClearFn' [ 0 4 20]
'gl::GLApiBase::glSetFenceAPPLEFn' [ 0 4 15]
'gl::glDrawArraysProc' [ 0 4]
'std::__1::unique_ptr<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >::unique_ptr<true, void>' [ 0 5 10 83]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'gl::TraceGLApi::glIsTransformFeedbackFn' [ 0 4 16]
'ui::CARendererLayerParams::~CARendererLayerParams' [ 0 4 27]
'base::internal::UnsanitizedCfiCall<bool (*)(void *, const char *const *, unsigned int, void *, void *)>::operator()<void *, const char *const (&)[14], const unsigned int &, angle::(anonymous namespace)::PlatformContext *, angle::PlatformMethods **>' [ 0 6 16 105]
'std::__1::allocator<ContextCreationInfo>::construct<ContextCreationInfo, int, std::__1::pair<int, int> >' [ 0 5 10 42]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 264]
'std::__1::__tuple_types<base::TimeTicks, base::TimeDelta>' [ 0 5 10]
'gl::g_current_egl_context' [ 0 4]
'std::__1::vector<int, std::__1::allocator<int> >::~vector' [ 0 5 10 50]
'gl::GLVersionInfo::ParseVersionString::kMaliPrefix' [ 0 4 19 39]
'gl::glCopySubTextureCHROMIUMProc' [ 0 4]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true> >' [ 0 5 10]
'gl::(anonymous namespace)::ValidateEglConfig' [ 0 4 27]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'gl::DebugEGLApi::eglBindAPIFn' [ 0 4 17]
'base::Version' [ 0 6]
'long int' [ 0]
'gl::DebugGLApi::glGetInteger64i_vRobustANGLEFn' [ 0 4 16]
'gl::SurfacelessEGL::GetHandle' [ 0 4 20]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__node_alloc' [ 0 5 10 107]
'gl::TraceGLApi::glGetQueryObjectivFn' [ 0 4 16]
'gl::glMatrixLoadfEXTProc' [ 0 4]
'base::internal::CheckedNumeric<long>::MathOp<CheckedDivOp, long>' [ 0 6 16 38]
'gl::glActiveTextureProc' [ 0 4]
'std::__1::default_delete<gfx::VSyncProvider>::operator()' [ 0 5 10 46]
'trace_event_internal::ScopedTracer::~ScopedTracer' [ 0 22 36]
'gl::TraceGLApi::glFlushMappedBufferRangeFn' [ 0 4 16]
'gl::GLSurface::SetCurrent' [ 0 4 15]
'std::__1::__compressed_pair_elem<__GLXFBConfigRec **, 0, false>::__compressed_pair_elem<__GLXFBConfigRec **&, void>' [ 0 5 10 65]
'va_list' [ 0]
'std::__1::__pointer_type<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::__construct<const char *, const char *const &>' [ 0 5 10 64]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >, void>' [ 0 5 10 195]
'gl::GLStubApiBase::glFramebufferRenderbufferEXTFn' [ 0 4 19]
'gl::EGLApiBase::eglQueryContextFn' [ 0 4 16]
'gl::GLApiBase::glGetSamplerParameterIuivRobustANGLEFn' [ 0 4 15]
'gl::EGLApiBase::eglBindAPIFn' [ 0 4 16]
'gl::DebugGLApi::glAttachShaderFn' [ 0 4 16]
'gl::TraceGLApi::glBindAttribLocationFn' [ 0 4 16]
'std::__1::unique_ptr<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >::get' [ 0 5 10 83]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 16 153]
'gl::TraceGLApi::glGetUniformuivFn' [ 0 4 16]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__make_iter' [ 0 5 10 115]
'gl::DriverOSMESA::ClearBindings' [ 0 4 18]
'gl::NoContextGLApi::glVertexAttrib3fvFn' [ 0 4 20]
'gl::GLImageMemory::ScheduleOverlayPlane' [ 0 4 19]
'gl::GLStubApiBase::glUniform1uivFn' [ 0 4 19]
'gl::GPUTiming' [ 0 4]
'gl::(anonymous namespace)::g_egl_sync_control_supported' [ 0 4 27]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>::operator++' [ 0 5 10 58]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::construct<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const gfx::ColorSpace &>, std::__1::tuple<> >' [ 0 5 10 219]
'trace_event_internal::ScopedTraceBinaryEfficient' [ 0 22]
'gl::glGetMultisamplefvRobustANGLEProc' [ 0 4]
'gl::TraceEGLApi::eglGetProcAddressFn' [ 0 4 17]
'gl::GLApiBase::glPushGroupMarkerEXTFn' [ 0 4 15]
'gl::glVertexAttribI4uivProc' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'GLuint64' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'gl::RealGLApi::glTexStorage2DEXTFn' [ 0 4 15]
'gl::glGetFenceivNVProc' [ 0 4]
'std::__1::pair<base::BasicStringPiece<std::string> *, long>::pair<true, false>' [ 0 5 10 61]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'gl::GLStubApiBase::glPolygonModeFn' [ 0 4 19]
'gl::DebugGLApi::glLineWidthFn' [ 0 4 16]
'gl::(anonymous namespace)::GetGLExtensionsFromCurrentContext' [ 0 4 27]
'gl::glCompressedTexImage3DProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::max_size' [ 0 5 10 81]
'gl::TraceEGLApi::eglQuerySurfaceFn' [ 0 4 17]
'std::__1::__stable_sort_switch<base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'std::__1::__next_hash_pow2' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<scoped_refptr<gl::GLImage> > &>' [ 0 5 10]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::allocate' [ 0 5 10 122]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::GLSurfacePresentationHelper>, false>::__tuple_leaf<base::WeakPtr<gl::GLSurfacePresentationHelper>, void>' [ 0 5 10 82]
'gl::SurfacelessEGL::IsOffscreen' [ 0 4 20]
'gl::GLSurfaceAdapter::Initialize' [ 0 4 22]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::clear' [ 0 5 10 59]
'gl::NoContextGLApi::glGetTexParameterIivRobustANGLEFn' [ 0 4 20]
'gfx::VSyncProvider::~VSyncProvider' [ 0 5 20]
'std::__1::tuple<base::TimeTicks, base::TimeDelta>::tuple<base::TimeTicks &, const base::TimeDelta &, false, false>' [ 0 5 10 51]
'gl::(anonymous namespace)::ActualPixmapSize' [ 0 4 27]
'gl::NoContextGLApi::glPushGroupMarkerEXTFn' [ 0 4 20]
'scoped_refptr<base::SingleThreadTaskRunner>::AddRef' [ 0 45]
'std::__1::forward<base::TimeTicks>' [ 0 5 10]
'base::internal::ApplyCancellationTraitsImpl<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, 0>' [ 0 6 16]
'gl::DebugGLApi::glUniform3fFn' [ 0 4 16]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16 331]
'__va_list_tag' [ 0]
'gl::GLStubApiBase::glDrawBuffersARBFn' [ 0 4 19]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_shrink' [ 0 5 10 50]
'gfx::Size' [ 0 5]
'gl::NoContextGLApi::glGetTexLevelParameterivRobustANGLEFn' [ 0 4 20]
'gl::glFramebufferRenderbufferEXTProc' [ 0 4]
'gl::RealGLApi::glTexSubImage2DFn' [ 0 4 15]
'gl::GLApiBase::glReadPixelsFn' [ 0 4 15]
'std::__1::hash<unsigned long>' [ 0 5 10]
'gl::DebugEGLApi::eglDestroyStreamKHRFn' [ 0 4 17]
'base::ThreadLocalPointer<gl::CurrentGL>::ThreadLocalPointer' [ 0 6 41]
'std::__1::__compressed_pair_elem<base::BasicStringPiece<std::string> *, 0, false>::__compressed_pair_elem<base::BasicStringPiece<std::string> *&, void>' [ 0 5 10 83]
'std::__1::iterator_traits<int *>' [ 0 5 10]
'gl::GLStubApiBase::glStencilOpFn' [ 0 4 19]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::begin' [ 0 5 10 466]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *>' [ 0 5 10]
'std::__1::remove_reference<gl::GLFenceAndroidNativeFenceSync *&>' [ 0 5 10]
'gl::DebugGLApi::glReadPixelsFn' [ 0 4 16]
'std::__1::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *&, true>' [ 0 5 10 128]
'std::__1::remove_reference<std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > > >' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::clear' [ 0 5 10 83]
'gl::GLSurfaceOSMesaX11' [ 0 4]
'std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>::operator()' [ 0 5 10 132]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, true>' [ 0 5 10]
'gl::(anonymous namespace)::g_get_proc_address' [ 0 4 27]
'gl::GLContext::InitializeDynamicBindings' [ 0 4 15]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::~unique_ptr' [ 0 5 10 157]
'gl::NoContextGLApi::glCompileShaderFn' [ 0 4 20]
'gl::NoContextGLApi::glIsBufferFn' [ 0 4 20]
'gl::glUniform3ivProc' [ 0 4]
'gl::GLStubApiBase::glGetObjectLabelFn' [ 0 4 19]
'gl::TraceEGLApi::eglSurfaceAttribFn' [ 0 4 17]
'gl::(anonymous namespace)::kSwapEventTraceCategories' [ 0 4 27]
'base::LazyInstance<base::Lock, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<base::Lock> >' [ 0 6]
'gl::glBeginTransformFeedbackProc' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>, false>' [ 0 5 10 30]
'gl::GLApiBase::glGetFloatvRobustANGLEFn' [ 0 4 15]
'gfx::VSyncProvider::VSyncProvider' [ 0 5 20]
'gl::eglGetFrameTimestampSupportedANDROIDProc' [ 0 4]
'std::__1::add_lvalue_reference<XVisualInfo>' [ 0 5 10]
'base::internal::checked_cast<int, base::internal::CheckOnFailure, unsigned long>' [ 0 6 16]
'gl::GLStubApiBase::glGetShaderSourceFn' [ 0 4 19]
'base::internal::UnderlyingType<long>' [ 0 6 16]
'gl::GLSurfaceEGL::IsCreateContextRobustnessSupported' [ 0 4 18]
'std::__1::forward<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> >' [ 0 5 10]
'gl::glXQueryDrawableProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::ColorTransform>, 1, true>' [ 0 5 10]
'std::__1::unique_ptr<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent> >::~unique_ptr' [ 0 5 10 95]
'std::__1::vector<void *, std::__1::allocator<void *> >::max_size' [ 0 5 10 56]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, true>' [ 0 5 10 338]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::clear' [ 0 5 10 75]
'gl::GLImageGLX::ValidFormat' [ 0 4 16]
'gl::TraceGLXApi::glXCreateNewContextFn' [ 0 4 17]
'gl::eglCreateStreamKHRProc' [ 0 4]
'gl::DebugEGLApi::eglProgramCacheGetAttribANGLEFn' [ 0 4 17]
'gl::GLStubApiBase::glMatrixLoadIdentityEXTFn' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign_alloc' [ 0 5 10 87]
'gl::GLStubApiBase::glGetFragDataLocationFn' [ 0 4 19]
'gl::NoContextGLApi::glUniform1fFn' [ 0 4 20]
'gl::GLStubApi::glUnmapBufferFn' [ 0 4 15]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>::deallocate' [ 0 5 10 145]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'scoped_refptr<gl::GLShareGroup>::get' [ 0 33]
'base::PlatformFile' [ 0 6]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'gl::DebugGLXApi::glXCreateContextFn' [ 0 4 17]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >' [ 0 5 10]
'gl::DebugEGLApi::eglQuerySurfacePointerANGLEFn' [ 0 4 17]
'std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'gl::DebugGLApi::glIsProgramFn' [ 0 4 16]
'std::__1::pointer_traits<gl::GLSurface::CALayerInUseQuery *>' [ 0 5 10]
'std::__1::__compressed_pair<gl::DisplayType *, std::__1::allocator<gl::DisplayType> &>::second' [ 0 5 10 88]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >' [ 0 6 16]
'gl::TraceGLApi::glTexSubImage2DRobustANGLEFn' [ 0 4 16]
'gl::OSMESAApiBase::OSMesaPixelStoreFn' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'gl::GLWindowSystemBindingInfo::GLWindowSystemBindingInfo' [ 0 4 31]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::clear' [ 0 5 10 318]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'gl::glGetTexLevelParameterfvProc' [ 0 4]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::~vector' [ 0 5 10 97]
'gl::TraceGLApi::glUniform4iFn' [ 0 4 16]
'gl::GLStubApi::glIsBufferFn' [ 0 4 15]
'gl::GLApiBase::glGetStringiFn' [ 0 4 15]
'AnnotateRWLockDestroy' [ 0]
'gl::glXCreateContextProc' [ 0 4]
'gl::GLStubApi::glGetQueryObjectuivFn' [ 0 4 15]
'gl::GLApiBase::glBindBufferRangeFn' [ 0 4 15]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__construct_at_end<ui::CARendererLayerParams::FilterEffect *>' [ 0 5 10 122]
'gl::DebugGLApi::glGetStringiFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__destroy<base::BasicStringPiece<std::string> >' [ 0 5 10 88]
'gl::ExtensionsEGL' [ 0 4]
'gl::DebugOSMESAApi::OSMesaGetColorBufferFn' [ 0 4 20]
'base::internal::OptionalStorageBase<unsigned long, true>' [ 0 6 16]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__make_iter' [ 0 5 10 66]
'gl::NoContextGLApi::glGetQueryObjecti64vFn' [ 0 4 20]
'std::__1::add_lvalue_reference<int>' [ 0 5 10]
'gl::GLApiBase::glTexStorage2DEXTFn' [ 0 4 15]
'gl::GLSurfaceAdapter::GLSurfaceAdapter' [ 0 4 22]
'gl::(anonymous namespace)' [ 0 4]
'gl::TraceGLApi::glCoverFillPathInstancedNVFn' [ 0 4 16]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::IsSupported' [ 0 4 27 56]
'std::__1::iterator_traits<const XVisualInfo *>' [ 0 5 10]
'gl::GLWindowSystemBindingInfo' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<scoped_refptr<gl::GLImage> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<scoped_refptr<gl::GLImage> > &, void>' [ 0 5 10 93]
'gl::YUVToRGBConverter::CopyYUV420ToRGB' [ 0 4 23]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *>' [ 0 5 10]
'gl::DebugGLApi::glUniform4uivFn' [ 0 4 16]
'gl::GLApiBase::glDeleteFramebuffersEXTFn' [ 0 4 15]
'Depth' [ 0]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::unique_ptr' [ 0 5 10 89]
'gl::DebugGLApi::glDepthRangefFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >' [ 0 5 10]
'gl::glIsProgramProc' [ 0 4]
'base' [ 0]
'gl::MakeExtensionString' [ 0 4]
'base::SequenceChecker::SequenceChecker' [ 0 6 23]
'std::__1::vector<long, std::__1::allocator<long> >::~vector' [ 0 5 10 52]
'gl::glPathParameterfNVProc' [ 0 4]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::CheckUnstableUsage' [ 0 6 16 87]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >' [ 0 5 10]
'base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >' [ 0 6 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::CheckValidIndexOrEnd' [ 0 6 54]
'gl::EGLApiBase::eglWaitClientFn' [ 0 4 16]
'gl::eglSwapBuffersWithDamageKHRProc' [ 0 4]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__emplace_back_slow_path<base::FileDescriptor>' [ 0 5 10 84]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::get_value_comp' [ 0 6 16 203 209]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >' [ 0 5 10]
'std::__1::move<gl::DisplayType &>' [ 0 5 10]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::operator[]' [ 0 5 10 68]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::pointer_to' [ 0 5 10 93]
'angle::(anonymous namespace)::ANGLEPlatformImpl_monotonicallyIncreasingTime' [ 0 7 30]
'gl::TraceOSMESAApi::OSMesaGetIntegervFn' [ 0 4 20]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::operator()<TimeNamePair, TimeNamePair>' [ 0 4 28 45]
'std::__1::pointer_traits<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *>' [ 0 5 10]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::~circular_deque' [ 0 6 54]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>::__get' [ 0 5 10 72]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::max_size' [ 0 5 10 63]
'gl::GPUTimingImpl::ForceTimeElapsedQuery' [ 0 4 19]
'gl::GLApiBase::glGetQueryObjectuivRobustANGLEFn' [ 0 4 15]
'gl::GLStubApiBase::glGetUniformIndicesFn' [ 0 4 19]
'gl::TraceEGLApi::eglGetFrameTimestampSupportedANDROIDFn' [ 0 4 17]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::__split_buffer' [ 0 5 10 97]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::begin' [ 0 5 10 68]
'gl::DebugGLApi::glFramebufferTextureLayerFn' [ 0 4 16]
'std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::~tuple' [ 0 5 10 87]
'switches::kDisableGLExtensions' [ 0 10]
'gl::kANGLEImplementationD3D9Name' [ 0 4]
'gl::TraceGLApi::glIsEnabledFn' [ 0 4 16]
'gl::TraceGLApi::glReadPixelsFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::construct<scoped_refptr<gl::GLImage>, scoped_refptr<gl::GLImage> &>' [ 0 5 10 79]
'logging::LOG_INFO' [ 0 9]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver **>::base' [ 0 5 10 52]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::~__tree' [ 0 5 10 539]
'gl::glGenPathsNVProc' [ 0 4]
'std::__1::max<int, std::__1::__less<int, int> >' [ 0 5 10]
'gl::GLApiBase::glUniform1uiFn' [ 0 4 15]
'gl::glIsShaderProc' [ 0 4]
'gl::GLFenceARB::Invalidate' [ 0 4 16]
'std::__1::vector<void *, std::__1::allocator<void *> >::vector' [ 0 5 10 56]
'base::TimeDelta::FromDouble' [ 0 6 17]
'gl::DebugEGLApi::eglSurfaceAttribFn' [ 0 4 17]
'ui::GpuSwitchingManager::GetInstance' [ 0 4 25]
'gl::GLSurfaceAdapter::ScheduleOverlayPlane' [ 0 4 22]
'std::__1::conditional<true, std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, std::__1::__nat>' [ 0 5 10]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::context_' [ 0 4 27 59]
'std::__1::__vector_base<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'std::__1::__const_void_pointer<ui::DCRendererLayerParams::FilterEffect *, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, false>' [ 0 5 10]
'std::__1::__pointer_type<void *, std::__1::allocator<void *> >' [ 0 5 10]
'std::__1::__const_void_pointer<gl::GLSurfaceOverlay *, std::__1::allocator<gl::GLSurfaceOverlay>, false>' [ 0 5 10]
'gl::glFlushMappedBufferRangeProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>, 1, true>' [ 0 5 10]
'gl::GLContext::~GLContext' [ 0 4 15]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__end_cap' [ 0 5 10 95]
'gl::eglGetNextFrameIdANDROIDProc' [ 0 4]
'std::__1::__wrap_iter<gl::DisplayType *>::operator++' [ 0 5 10 42]
'logging::LOG_DCHECK' [ 0 9]
'gl::glSamplerParameterfProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::allocate' [ 0 5 10 74]
'gl::GLApiBase::glGetIntegervFn' [ 0 4 15]
'gl::GLStubApi::glGetQueryObjectivFn' [ 0 4 15]
'gl::TraceGLApi::glCopyBufferSubDataFn' [ 0 4 16]
'gl::GLStubApiBase::glGetSamplerParameterIivRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glGetBooleani_vRobustANGLEFn' [ 0 4 20]
'std::__1::tuple_element<1, std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'gl::GLStubApiBase::glGetProgramResourceLocationFn' [ 0 4 19]
'gl::DebugGLApi::glGetIntegeri_vRobustANGLEFn' [ 0 4 16]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>, bool &, false>' [ 0 5 10 214]
'std::__1::__compressed_pair_elem<gl::DisplayType *, 0, false>' [ 0 5 10]
'gl::DebugGLApi::glStencilFuncSeparateFn' [ 0 4 16]
'gl::SetDisabledExtensionsEGL' [ 0 4]
'gl::NoContextGLApi::glDrawRangeElementsFn' [ 0 4 20]
'gl::NoContextGLApi::glIsTextureFn' [ 0 4 20]
'gl::NoContextGLApi::glGetQueryivFn' [ 0 4 20]
'gl::GLSurfaceAdapter::SwapBuffersWithBounds' [ 0 4 22]
'gl::TraceGLApi::glGetQueryObjecti64vRobustANGLEFn' [ 0 4 16]
'gl::eglCreateContextProc' [ 0 4]
'gl::EGLApiBase::eglGetCurrentSurfaceFn' [ 0 4 16]
'features::kDirectCompositionComplexOverlays' [ 0 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> > >' [ 0 5 10]
'gl::GLApiBase::InitializeBase' [ 0 4 15]
'std::__1::unique_ptr<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >::get' [ 0 5 10 81]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::capacity' [ 0 5 10 74]
'std::__1::forward<base::SharedMemory *>' [ 0 5 10]
'gl::GLContext::WasAllocatedUsingRobustnessExtension' [ 0 4 15]
'base::ProtectedMemory<void (*)(void *)>' [ 0 6]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::begin' [ 0 5 10 107]
'gfx::XScopedPtr<GLXFBConfig>' [ 0 5]
'gl::glTexSubImage2DProc' [ 0 4]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::vector' [ 0 5 10 122]
'std::__1::move_backward<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::NoContextGLApi::glTexStorage3DFn' [ 0 4 20]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>::RunOnce::num_bound_args' [ 0 6 16 155 164]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::vector' [ 0 5 10 97]
'gl::glIsTextureProc' [ 0 4]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__annotate_shrink' [ 0 5 10 96]
'gl::glUniform1ivProc' [ 0 4]
'gl::TraceGLApi::glUniformMatrix2fvFn' [ 0 4 16]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::~__split_buffer' [ 0 5 10 77]
'gl::GLXApiBase::glXCreateNewContextFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >' [ 0 5 10]
'gl::GLStubApiBase::glPushDebugGroupFn' [ 0 4 19]
'gl::GLImageMemory::GLImageMemory' [ 0 4 19]
'gl::glGetUniformuivProc' [ 0 4]
'gl::TraceGLXApi::glXWaitVideoSyncSGIFn' [ 0 4 17]
'gl::GLContext::ScopedReleaseCurrent::Cancel' [ 0 4 15 37]
'gl::DebugGLApi::glGenSamplersFn' [ 0 4 16]
'gl::NoContextGLApi::glVertexAttribI4ivFn' [ 0 4 20]
'gl::TraceGLApi::glGetStringiFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::allocate' [ 0 5 10 143]
'gl::GLContextEGL::GetHandle' [ 0 4 18]
'base::internal::CheckedNumeric<long>::IsValid<long>' [ 0 6 16 38]
'std::__1::__to_raw_pointer<int>' [ 0 5 10]
'gl::DebugGLApi::glCopyTexImage2DFn' [ 0 4 16]
'gl::RealGLApi::glTexImage2DFn' [ 0 4 15]
'gl::glEGLImageTargetRenderbufferStorageOESProc' [ 0 4]
'gl::DebugGLApi::glGetPointervRobustANGLERobustANGLEFn' [ 0 4 16]
'gl::GLStubApiBase::glCreateShaderFn' [ 0 4 19]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::data' [ 0 5 10 68]
'std::__1::__pointer_type_imp::__pointer_type<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter>, false>' [ 0 5 10 30]
'base::internal::InvokeHelper<true, void>' [ 0 6 16]
'std::__1::conditional<true, const gfx::NativePixmapPlane &, gfx::NativePixmapPlane &&>' [ 0 5 10]
'gl::kGLImplementationStubName' [ 0 4]
'gl::GLApiBase::glValidateProgramFn' [ 0 4 15]
'gl::DebugGLApi::glBindUniformLocationCHROMIUMFn' [ 0 4 16]
'gl::glTexParameterfProc' [ 0 4]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>' [ 0 5 10]
'gl::GLApiBase::glGenTexturesFn' [ 0 4 15]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::GetVSyncParameters::trace_event_unique_atomic284' [ 0 4 27 59 79]
'base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>::~BindState' [ 0 6 16 121]
'std::__1::__compressed_pair<XVisualInfo *, gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'std::__1::__move<ui::GpuSwitchingObserver *, ui::GpuSwitchingObserver *>' [ 0 5 10]
'gl::(anonymous namespace)::g_glx_create_context_profile_es2_supported' [ 0 4 27]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long> >' [ 0 5 10]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::size' [ 0 5 10 122]
'std::__1::remove<std::__1::__wrap_iter<ui::GpuSwitchingObserver **>, nullptr_t>' [ 0 5 10]
'gl::GLApiBase::glCompressedTexImage3DFn' [ 0 4 15]
'base::internal::IsValueInRangeForNumericType<int, unsigned long>' [ 0 6 16]
'std::__1::__pointer_type<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'gl::GLImageStub::OnMemoryDump' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct_backward<std::__1::basic_string<char> *>' [ 0 5 10 81]
'std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >::reverse_iterator' [ 0 5 10 91]
'std::__1::pair<base::BasicStringPiece<std::string> *, long>::operator=' [ 0 5 10 61]
'gl::GLImageStub::ScheduleOverlayPlane' [ 0 4 17]
'gl::DebugGLApi::glMapBufferRangeFn' [ 0 4 16]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >::Release' [ 0 6 76]
'gl::NoContextGLApi::glDeleteQueriesFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<std::__1::allocator<scoped_refptr<gl::GLImage> >, 1, true>' [ 0 5 10]
'gfx::GenericSharedMemoryId' [ 0 5]
'std::__1::unique_ptr<XVisualInfo [], gfx::XObjectDeleter<void, int, &XFree> >::reset' [ 0 5 10 79]
'gl::ProcsOSMESA' [ 0 4]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >' [ 0 6]
'gl::(anonymous namespace)::g_glx_texture_from_pixmap_supported' [ 0 4 27]
'scoped_refptr<base::SingleThreadTaskRunner>::operator->' [ 0 45]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >' [ 0 5 10]
'gl::DebugGLApi::glIsRenderbufferEXTFn' [ 0 4 16]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::erase' [ 0 5 10 115]
'gl::DebugEGLApi::eglGetSyncValuesCHROMIUMFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<int> >::deallocate' [ 0 5 10 55]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__annotate_new' [ 0 5 10 97]
'gl::NativeViewGLSurfaceEGLX11::NativeViewGLSurfaceEGLX11' [ 0 4 31]
'gl::GLApiBase::glGetQueryObjectivFn' [ 0 4 15]
'gl::GLStubApiBase::glShaderBinaryFn' [ 0 4 19]
'gl::GLApiBase::glVertexAttrib3fFn' [ 0 4 15]
'std::__1::__compressed_pair<gl::GPUTimer *, std::__1::default_delete<gl::GPUTimer> >::__compressed_pair<gl::GPUTimer *&, true>' [ 0 5 10 86]
'std::__1::forward<gl::GLStateRestorer *>' [ 0 5 10]
'gl::GLApiBase::glUniformMatrix4x3fvFn' [ 0 4 15]
'std::__1::forward<const std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &>' [ 0 5 10]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::RangesOverlap' [ 0 6 16 68]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__tree' [ 0 5 10 539]
'std::__1::less<gfx::ColorSpace>::operator()' [ 0 5 10 33]
'gl::GLStubApiBase::glFlushMappedBufferRangeFn' [ 0 4 19]
'XExtData' [ 0]
'base::ThreadLocalPointer<gl::GLSurface>::ThreadLocalPointer' [ 0 6 41]
'std::__1::unique_ptr<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >::reset' [ 0 5 10 81]
'base::StringPiece' [ 0 6]
'gfx::NativePixmapHandle' [ 0 5]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::capacity' [ 0 5 10 73]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>::RunOnce::num_bound_args' [ 0 6 16 161 170]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::max_size' [ 0 5 10 91]
'gl::EGLApiBase::eglWaitSyncKHRFn' [ 0 4 16]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider::GetMscRate' [ 0 4 27 56]
'gl::GLFenceEGL::SetIgnoreFailures' [ 0 4 16]
'scoped_refptr<gl::GLImage>::scoped_refptr' [ 0 28]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> > >::num_bound_args' [ 0 6 16 195]
'gl::TraceGLXApi::glXGetFBConfigFromVisualSGIXFn' [ 0 4 17]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__destruct_at_end' [ 0 5 10 81]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::unique_ptr<true, void>' [ 0 5 10 89]
'gl::TraceGLApi::glTexParameterivFn' [ 0 4 16]
'base::internal::IsValueInRangeForNumericType<long, double>' [ 0 6 16]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::ObserverList' [ 0 6 59]
'gl::eglTerminateProc' [ 0 4]
'gl::glVertexAttrib2fProc' [ 0 4]
'gl::NativeViewGLSurfaceEGLX11::CanDispatchEvent' [ 0 4 31]
'gl::TraceGLApi::glIsFenceAPPLEFn' [ 0 4 16]
'base::subtle::RefCountedThreadSafeBase::AddRefImpl' [ 0 6 14 40]
'AnnotateIgnoreReadsBegin' [ 0]
'std::__1::get<1, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::find<unsigned long>' [ 0 5 10 466]
'base::internal::circular_deque_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::circular_deque_iterator' [ 0 6 16 79]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::vsync_lock' [ 0 4 27 59]
'gl::GLContextStub::GetHandle' [ 0 4 19]
'Screen' [ 0]
'std::__1::__compressed_pair_elem<gl::GLFenceEGL *, 0, false>' [ 0 5 10]
'gl::GLSurfaceOSMesaX11::InitializeOneOff::initialized' [ 0 4 24 42]
'XKeymapEvent' [ 0]
'gl::glXGetFBConfigFromVisualSGIXProc' [ 0 4]
'std::__1::forward<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'gl::GLSurfaceOSMesa::IsOffscreen' [ 0 4 21]
'gl::GLStubApiBase::glGetnUniformuivRobustANGLEFn' [ 0 4 19]
'std::__1::__compressed_pair<long *, std::__1::allocator<long> >' [ 0 5 10]
'std::__1::__pointer_type<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'gl::glColorMaskProc' [ 0 4]
'angle::g_NumPlatformMethods' [ 0 7]
'GLsync' [ 0]
'std::__1::allocator<scoped_refptr<gl::GLImage> >::deallocate' [ 0 5 10 50]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::max_size' [ 0 5 10 64]
'gl::TraceGLApi::glGetFramebufferAttachmentParameterivEXTFn' [ 0 4 16]
'base::internal::NarrowingRange<long, double, numeric_limits>::lowest' [ 0 6 16 62]
'gl::NoContextGLApi::glGetnUniformivRobustANGLEFn' [ 0 4 20]
'angle::(anonymous namespace)::ANGLEPlatformImpl_addTraceEvent' [ 0 7 30]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::capacity' [ 0 5 10 129]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::operator*' [ 0 5 10 68]
'gl::GLApiBase::glClientWaitSyncFn' [ 0 4 15]
'gl::DebugGLApi::glDeleteRenderbuffersEXTFn' [ 0 4 16]
'scoped_refptr<gl::GPUTimingClient>::AddRef' [ 0 36]
'gl::TraceGLApi::glGetIntegervFn' [ 0 4 16]
'gl::NoContextGLApi::glCopyTexSubImage3DFn' [ 0 4 20]
'gl::NoContextGLApi::glGetTexParameterfvFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::allocator<unsigned char>, true>' [ 0 5 10 30]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>, bool, false>' [ 0 5 10 241]
'base::internal::NarrowingRange<int, unsigned long, numeric_limits>' [ 0 6 16]
'gl::glXCreatePixmapProc' [ 0 4]
'gl::GLApiBase::glDeletePathsNVFn' [ 0 4 15]
'gl::GLImageStub::ReleaseTexImage' [ 0 4 17]
'gl::DebugGLApi::glGetBooleani_vRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>' [ 0 5 10]
'gl::DebugGLApi::glDebugMessageInsertFn' [ 0 4 16]
'gl::NoContextGLApi::glGetTransformFeedbackVaryingFn' [ 0 4 20]
'std::__1::move<gl::GLSurfacePresentationHelper::Frame &>' [ 0 5 10]
'std::__1::__vector_base<long, std::__1::allocator<long> >::__vector_base' [ 0 5 10 59]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, 0, 1>::is_method' [ 0 6 16 365 701]
'gl::GLContextEGL::ReleaseYUVToRGBConverters' [ 0 4 18]
'gl::DebugGLXApi::glXGetCurrentContextFn' [ 0 4 17]
'gl::GLStubApiBase::glGetQueryivFn' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > &>' [ 0 5 10]
'gl::GLStubApiBase::glStencilMaskSeparateFn' [ 0 4 19]
'gl::GLXApi' [ 0 4]
'gl::GLApiBase::glUniform4fFn' [ 0 4 15]
'std::__1::remove_reference<ui::GpuSwitchingObserver **&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *, 0, false>' [ 0 5 10]
'gl::DebugGLApi::glClearBufferfvFn' [ 0 4 16]
'std::__1::add_lvalue_reference<base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::move<base::RefCountedMemory *&>' [ 0 5 10]
'gl::GLContextReal::ResetExtensions' [ 0 4 19]
'gl::GLSurfaceAdapter::Resize' [ 0 4 22]
'std::__1::forward<base::BasicStringPiece<std::string> *&>' [ 0 5 10]
'std::__1::unique_ptr<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::forward<gl::GPUTimer *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gl::DriverGL, std::__1::default_delete<gl::DriverGL>, false>' [ 0 5 10 30]
'gl::kANGLEImplementationDefaultName' [ 0 4]
'std::__1::__pointer_type<void *, std::__1::default_delete<void *[]> >' [ 0 5 10]
'trace_event_internal::AddTraceEvent<void *, gl::GLSurface *>' [ 0 22]
'gl::GLStubApiBase::glCompressedTexSubImage3DFn' [ 0 4 19]
'std::__1::remove_reference<gl::CurrentGL *>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::max_size' [ 0 5 10 82]
'gl::glGetSamplerParameterfvRobustANGLEProc' [ 0 4]
'std::__1::allocator<ContextCreationInfo>::allocate' [ 0 5 10 42]
'gl::GLStubApi::glGenPathsNVFn' [ 0 4 15]
'std::__1::__const_void_pointer<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >, false>' [ 0 5 10]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'gl::TraceGLXApi::~TraceGLXApi' [ 0 4 17]
'std::__1::__const_pointer<XVisualInfo, XVisualInfo *, std::__1::allocator<XVisualInfo>, true>' [ 0 5 10]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__vector_base' [ 0 5 10 81]
'gl::DebugGLApi::glHintFn' [ 0 4 16]
'gl::TraceGLApi::glMemoryBarrierEXTFn' [ 0 4 16]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::destroy' [ 0 5 10 299]
'std::__1::__wrap_iter<const XVisualInfo *>::base' [ 0 5 10 44]
'gl::TraceGLApi::glIsFramebufferEXTFn' [ 0 4 16]
'std::__1::__wrap_iter<gl::DisplayType *>::__wrap_iter' [ 0 5 10 42]
'gl::GLContext::SetSafeToForceGpuSwitch' [ 0 4 15]
'gl::DebugGLApi::glTexParameterfvRobustANGLEFn' [ 0 4 16]
'std::__1::default_delete<gl::DriverGL>::operator()' [ 0 5 10 40]
'gl::DebugGLApi::glGetShaderivRobustANGLEFn' [ 0 4 16]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::__alloc' [ 0 5 10 77]
'gl::TraceGLApi::glClearBufferfiFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct<base::BasicStringPiece<std::string>>' [ 0 5 10 88]
'gl::GLImageMemory::ReleaseTexImage' [ 0 4 19]
'uint_fast16_t' [ 0]
'std::__1::remove_reference<XVisualInfo *&>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >' [ 0 5 10]
'gl::ProcsGLX' [ 0 4]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::value' [ 0 6 16 47 71]
'gl::TraceGLApi::glGenTexturesFn' [ 0 4 16]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::operator bool' [ 0 6 69]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >' [ 0 6]
'gl::TraceGLApi::glGetBufferPointervRobustANGLEFn' [ 0 4 16]
'std::__1::less<gfx::ColorSpace>' [ 0 5 10]
'trace_event_internal::kZeroNumArgs' [ 0 22]
'gl::GPUTimingClient::CheckAndResetTimerErrors' [ 0 4 21]
'gl::glFinishFenceAPPLEProc' [ 0 4]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver **>::__wrap_iter' [ 0 5 10 52]
'std::__1::__rebind_pointer<void *, gl::GLContext *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *, 0, false>' [ 0 5 10]
'gl::SurfacelessEGL::~SurfacelessEGL' [ 0 4 20]
'gl::GLStubApiBase::glIsQueryFn' [ 0 4 19]
'std::__1::move<base::BasicStringPiece<std::string> &>' [ 0 5 10]
'gl::DebugGLApi::glTestFenceAPPLEFn' [ 0 4 16]
'gl::GLStubApiBase::glDrawRangeElementsFn' [ 0 4 19]
'std::__1::forward<const gl::DisplayType &>' [ 0 5 10]
'std::__1::allocator<long>::deallocate' [ 0 5 10 27]
'gl::DebugGLApi::glPauseTransformFeedbackFn' [ 0 4 16]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::__alloc' [ 0 5 10 65]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >::unique_ptr<true, void>' [ 0 5 10 77]
'base::internal::DsoSpecific<int>::value' [ 0 6 16 34]
'std::__1::forward<unsigned char *>' [ 0 5 10]
'gl::GLStubApiBase::glTexParameterIivRobustANGLEFn' [ 0 4 19]
'__int8_t' [ 0]
'gl::DebugGLApi::glGetSamplerParameterfvRobustANGLEFn' [ 0 4 16]
'gl::GLSurfaceGLX::GetDisplay' [ 0 4 18]
'std::__1::__move<std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>, std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence>, false>' [ 0 5 10 30]
'gl::GLSurface::GetShareHandle' [ 0 4 15]
'gl::glObjectPtrLabelProc' [ 0 4]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::reset<int *>' [ 0 5 10 65]
'khronos_int32_t' [ 0]
'gl::NoContextGLApi::glTexParameterivRobustANGLEFn' [ 0 4 20]
'scoped_refptr<gl::GLShareGroup>::AddRef' [ 0 33]
'std::__1::next<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'base::subtle::NoBarrier_Load' [ 0 6 14]
'scoped_refptr<const base::internal::WeakReference::Flag>' [ 0]
'std::__1::atomic_int' [ 0 5 10]
'base::internal::IsValueInRangeForNumericType<long, int>' [ 0 6 16]
'gl::NoContextGLApi::glDeleteFramebuffersEXTFn' [ 0 4 20]
'gl::TraceGLApi::glBlendEquationFn' [ 0 4 16]
'gl::DebugGLApi::glBindRenderbufferEXTFn' [ 0 4 16]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::__tree_next<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::ColorTransform>' [ 0 5 10]
'running_on_valgrind' [ 0]
'std::__1::move<ui::GpuSwitchingObserver *&>' [ 0 5 10]
'base::TimeDelta' [ 0 6]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::vector' [ 0 5 10 101]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'gl::TraceGLXApi::glXQueryDrawableFn' [ 0 4 17]
'std::__1::remove_reference<base::FileDescriptor *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<XVisualInfo> &, 1, false>' [ 0 5 10]
'gl::NoContextGLApi::glPrimitiveRestartIndexFn' [ 0 4 20]
'gl::SurfacelessEGL::GetShareHandle' [ 0 4 20]
'gl::GLApiBase::glBindUniformLocationCHROMIUMFn' [ 0 4 15]
'gl::glViewportProc' [ 0 4]
'gl::GLApiBase::glUniformMatrix2x3fvFn' [ 0 4 15]
'std::__1::remove_reference<scoped_refptr<gl::TimerQuery> >' [ 0 5 10]
'gl::DriverGLX::InitializeExtensionBindings' [ 0 4 15]
'base::SupportsWeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::~SupportsWeakPtr' [ 0 6 83]
'gl::(anonymous namespace)::kFragmentShader' [ 0 4 27]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::clear' [ 0 5 10 77]
'std::__1::add_lvalue_reference<gl::GLVersionInfo>' [ 0 5 10]
'GLenum' [ 0]
'gl::GLSurface::ScheduleCALayerInUseQuery' [ 0 4 15]
'gl::GLApiBase::glInvalidateFramebufferFn' [ 0 4 15]
'gl::NoContextGLApi::glTexParameterfvRobustANGLEFn' [ 0 4 20]
'gl::eglProgramCacheGetAttribANGLEProc' [ 0 4]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >, long, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<gl::TraceGLApi>' [ 0 5 10]
'gl::TraceGLApi::glDrawArraysInstancedANGLEFn' [ 0 4 16]
'std::__1::__const_void_pointer<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, false>' [ 0 5 10]
'gl::InitializeGLSurface' [ 0 4]
'gl::DebugGLApi::glGetVertexAttribPointervFn' [ 0 4 16]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> *>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<' [ 0 5 10 61]
'std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >' [ 0 5 10]
'gl::GLApiBase::glDeleteVertexArraysOESFn' [ 0 4 15]
'gl::NoContextGLApi::glTexImage2DFn' [ 0 4 20]
'gl::glGetFragDataIndexProc' [ 0 4]
'gl::GLImageEGL::GetSize' [ 0 4 16]
'gl::GPUTimingClient::GetCurrentCPUTime' [ 0 4 21]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__find_equal<gl::GLContext *>' [ 0 5 10 107]
'gl::glXGetCurrentReadDrawableProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<void *> >::__destroy<void *>' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GPUTimer>, 1, true>' [ 0 5 10]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'gl::glGetSyncivProc' [ 0 4]
'std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>::__tree_iterator' [ 0 5 10 192]
'std::__1::default_delete<gl::GPUTimer>' [ 0 5 10]
'gl::GLContext::GetGLVersion' [ 0 4 15]
'base::TimeDelta::Max' [ 0 6 17]
'std::__1::__pointer_type<TimeNamePair, std::__1::allocator<TimeNamePair> >' [ 0 5 10]
'float_t' [ 0]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::operator*' [ 0 5 10 61]
'gl::GLStubApiBase::glEGLImageTargetRenderbufferStorageOESFn' [ 0 4 19]
'gl::GLSurfaceAdapter::SupportsAsyncSwap' [ 0 4 22]
'gl::glResumeTransformFeedbackProc' [ 0 4]
'base::Feature' [ 0 6]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::size' [ 0 5 10 466]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringstream' [ 0 5 10 93]
'std::__1::move<gl::NativeViewGLSurfaceEGL::SwapInfo &>' [ 0 5 10]
'std::__1::operator!=<const base::BasicStringPiece<std::string> *>' [ 0 5 10]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::KeyValueCompare::KeyValueCompare' [ 0 6 16 203 220]
'base::internal::BigEnoughPromotion<long, long, true, true>' [ 0 6 16]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::clear' [ 0 5 10 115]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'gl::GLFenceAndroidNativeFenceSync::~GLFenceAndroidNativeFenceSync' [ 0 4 35]
'gl::TraceGLApi::glDeleteVertexArraysOESFn' [ 0 4 16]
'gl::glSamplerParameterivProc' [ 0 4]
'std::__1::conditional<true, std::__1::pair<base::BasicStringPiece<std::string> *, long>, std::__1::__nat>' [ 0 5 10]
'gl::DebugGLXApi::glXCreateContextAttribsARBFn' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree>, false>' [ 0 5 10 30]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >::AddRef' [ 0 6 82]
'gl::NativeViewGLSurfaceGLX::SetVSyncEnabled' [ 0 4 28]
'gl::glXBindTexImageEXTProc' [ 0 4]
'std::__1::__pointer_type<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >' [ 0 5 10]
'gl::DebugOSMESAApi::DebugOSMESAApi' [ 0 4 20]
'scoped_refptr<gl::GPUTimingClient>::~scoped_refptr' [ 0 36]
'logging' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::unique_ptr<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >::release' [ 0 5 10 161]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::deallocate' [ 0 5 10 78]
'gl::glHintProc' [ 0 4]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::__end_cap' [ 0 5 10 91]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::__wrap_iter' [ 0 5 10 62]
'gfx::Transform' [ 0 5]
'gl::DebugGLApi::glGenFramebuffersEXTFn' [ 0 4 16]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__ptr' [ 0 5 10 122]
'gl::GLImageEGL::~GLImageEGL' [ 0 4 16]
'gl::SurfacelessEGL::SwapBuffers' [ 0 4 20]
'gl::GLSurfaceOSMesa::Initialize' [ 0 4 21]
'gl::GLApiBase::glUniformMatrix2fvFn' [ 0 4 15]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, gfx::PresentationFeedback>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::FixedVSyncProvider *, 0, false>' [ 0 5 10]
'gl::QueryResult::SetStartValue' [ 0 4 17]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'gl::TimeStampTimerQuery::TimeStampTimerQuery' [ 0 4 25]
'std::__1::__size_type<std::__1::allocator<gl::GLSurfaceOverlay>, long, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gl::GPUTimer, true>' [ 0 5 10]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >::~BindState' [ 0 6 16 121]
'gl::glGetFramebufferAttachmentParameterivRobustANGLEProc' [ 0 4]
'gl::g_driver_glx' [ 0 4]
'std::__1::move<std::__1::basic_string<char> *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::__vector_base<long, std::__1::allocator<long> >::clear' [ 0 5 10 59]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'base::WeakPtr<gl::GLSurfacePresentationHelper>::operator bool' [ 0 6 48]
'gl::kGLImplementationMockName' [ 0 4]
'gl::NoContextGLApi::glGetStringFn' [ 0 4 20]
'std::__1::__return_temporary_buffer::operator()<base::BasicStringPiece<std::string> >' [ 0 5 10 37]
'gl::DebugGLApi::glGetActiveUniformBlockivFn' [ 0 4 16]
'gl::NoContextGLApi::glGetProgramInfoLogFn' [ 0 4 20]
'GetRunningOnValgrind' [ 0]
'std::__1::tuple<const gfx::ColorSpace &>::tuple<true, false>' [ 0 5 10 42]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'base::Singleton<ui::GpuSwitchingManager, base::DefaultSingletonTraits<ui::GpuSwitchingManager>, ui::GpuSwitchingManager>::OnExit' [ 0 6 122]
'gl::NoContextGLApi::glUniform1uivFn' [ 0 4 20]
'gl::GLSurfaceEGL::IsEGLSurfacelessContextSupported' [ 0 4 18]
'scoped_refptr<gl::GLImage>::AddRef' [ 0 28]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 233]
'scoped_refptr<base::RefCountedMemory>::swap' [ 0 39]
'AnnotateCondVarWait' [ 0]
'gl::GLApiBase::glGenQueriesFn' [ 0 4 15]
'gl::GLStubApiBase::glSamplerParameterIuivRobustANGLEFn' [ 0 4 19]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, base::TimeTicks, base::TimeDelta>' [ 0 5 10]
'gl::GLImageNativePixmap::Flush' [ 0 4 25]
'gl::TraceGLXApi::glXReleaseTexImageEXTFn' [ 0 4 17]
'std::__1::__tuple_leaf<0, unsigned long &&, false>::get' [ 0 5 10 52]
'gl::HasExtension<12>' [ 0 4]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'gl::DebugGLApi::glGenQueriesFn' [ 0 4 16]
'gl::GLApiBase::glTexParameterIuivRobustANGLEFn' [ 0 4 15]
'gl::GLXApiBase::glXDestroyContextFn' [ 0 4 16]
'gl::TraceGLApi::glPathParameterfNVFn' [ 0 4 16]
'gl::GLContextAttribs' [ 0 4]
'base::PlatformThread' [ 0 6]
'gl::(anonymous namespace)::g_glx_context_create' [ 0 4 27]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::operator()' [ 0 5 10 105]
'gl::(anonymous namespace)::g_glx_mesa_swap_control_supported' [ 0 4 27]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>::__get_np' [ 0 5 10 340]
'std::__1::forward<std::__1::pair<int, int> >' [ 0 5 10]
'std::__1::vector<long, std::__1::allocator<long> >::operator[]' [ 0 5 10 52]
'gl::DebugGLApi::glClearBufferuivFn' [ 0 4 16]
'gl::glBlendEquationProc' [ 0 4]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__root_ptr' [ 0 5 10 539]
'base::TimeTicks::FromInternalValue' [ 0 6 17]
'gl::GLXApiBase::glXQueryExtensionFn' [ 0 4 16]
'gl::GLStubApiBase::glTexBufferRangeFn' [ 0 4 19]
'base::WrapUnique<gl::GLStateRestorer>' [ 0 6]
'gl::NoContextGLApi::glVertexAttrib2fvFn' [ 0 4 20]
'gl::TraceEGLApi::eglMakeCurrentFn' [ 0 4 17]
'gl::GLSurfaceAdapter' [ 0 4]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver **>::operator*' [ 0 5 10 52]
'gl::GLStubApiBase::glGenRenderbuffersEXTFn' [ 0 4 19]
'std::__1::move<std::__1::allocator<base::BasicStringPiece<std::string> > &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::__construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'gl::NativeViewGLSurfaceGLX::OnMakeCurrent' [ 0 4 28]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::forward<gl::GLSurfacePresentationHelper::Frame>' [ 0 5 10]
'base::CancellationFlag' [ 0 6]
'gl::GLContextOSMesa::GLContextOSMesa' [ 0 4 21]
'gl::TraceGLApi::glGetSamplerParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::DebugGLApi::glUniform2fFn' [ 0 4 16]
'gl::GLFenceARB::~GLFenceARB' [ 0 4 16]
'gl::NoContextGLApi::glRenderbufferStorageMultisampleEXTFn' [ 0 4 20]
'gl::NativeViewGLSurfaceEGL::SetVSyncEnabled' [ 0 4 28]
'gl::DebugGLXApi::glXGetClientStringFn' [ 0 4 17]
'gl::TraceEGLApi::eglDestroyStreamKHRFn' [ 0 4 17]
'gl::TraceGLApi::glPathCommandsNVFn' [ 0 4 16]
'std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>::operator()' [ 0 5 10 82]
'gl::GLApiBase::glColorMaskFn' [ 0 4 15]
'gl::DebugGLApi::glEGLImageTargetTexture2DOESFn' [ 0 4 16]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetUniformLocationFn' [ 0 4 20]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >::~unique_ptr' [ 0 5 10 79]
'std::__1::remove_reference<const std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> &>' [ 0 5 10]
'gl::GLXApiBase::glXMakeContextCurrentFn' [ 0 4 16]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::release' [ 0 5 10 115]
'gl::glGetUniformIndicesProc' [ 0 4]
'gl::NoContextGLApi::glVertexAttrib4fFn' [ 0 4 20]
'gl::GLStubApiBase::glTexImage2DFn' [ 0 4 19]
'gl::GLApiBase::glFramebufferRenderbufferEXTFn' [ 0 4 15]
'base::circular_deque<base::TimeDelta>::end' [ 0 6 39]
'gl::GLStubApiBase::glQueryCounterFn' [ 0 4 19]
'gl::GLApiBase::glGetUniformuivFn' [ 0 4 15]
'gl::DebugGLApi::glGetnUniformivRobustANGLEFn' [ 0 4 16]
'gl::OSMESAApiBase::OSMesaGetProcAddressFn' [ 0 4 19]
'gl::GLContext::GetRealCurrent' [ 0 4 15]
'gl::TraceEGLApi::eglSwapBuffersFn' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >, true>' [ 0 5 10 30]
'gl::HasExtension<14>' [ 0 4]
'gl::GLApiBase::glGenerateMipmapEXTFn' [ 0 4 15]
'gl::GLHelper::CompileShader' [ 0 4 14]
'base::trace_event::MemoryDumpLevelOfDetail' [ 0 6 19]
'gl::GLSurfaceOSMesa::GLSurfaceOSMesa' [ 0 4 21]
'std::__1::find<std::__1::__wrap_iter<gl::DisplayType *>, gl::DisplayType>' [ 0 5 10]
'gl::DebugGLApi::glVertexAttribDivisorANGLEFn' [ 0 4 16]
'gl::GLApiBase::glGetSyncivFn' [ 0 4 15]
'std::__1::add_lvalue_reference<std::__1::__tree_node<gl::GLContext *, void *> >' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__annotate_new' [ 0 5 10 82]
'std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>::operator()' [ 0 5 10 61]
'gl::DebugGLApi::glSamplerParameterIuivRobustANGLEFn' [ 0 4 16]
'std::__1::allocator<int>::construct<int>' [ 0 5 10 26]
'gl::GLStubApiBase::glDeleteFencesNVFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<gl::GPUTiming *, 0, false>::__compressed_pair_elem<gl::GPUTiming *, void>' [ 0 5 10 61]
'gl::RealEGLApi' [ 0 4]
'std::__1::allocator<void *>' [ 0 5 10]
'gl::glFrontFaceProc' [ 0 4]
'gl::NoContextGLApi::glTexSubImage2DFn' [ 0 4 20]
'gl::GLSurfaceFormat::IsCompatible' [ 0 4 21]
'std::__1::remove_reference<const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &>' [ 0 5 10]
'gl::TraceGLApi::glBlendFuncFn' [ 0 4 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >' [ 0 5 10]
'std::__1::make_unique<gl::GLSurfacePresentationHelper, gfx::VSyncProvider *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::BasicStringPiece<std::string> >, 1, true>::__compressed_pair_elem<const std::__1::allocator<base::BasicStringPiece<std::string> > &, void>' [ 0 5 10 102]
'logging::CheckEQImpl<const base::circular_deque<scoped_refptr<gl::TimerQuery> > *, const base::circular_deque<scoped_refptr<gl::TimerQuery> > *>' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::GpuSwitchingObserver *>, 1, true>' [ 0 5 10]
'gl::GLApiBase::glGetFramebufferParameterivRobustANGLEFn' [ 0 4 15]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >::Destroy' [ 0 6 16 121]
'std::__1::literals' [ 0 5 10]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::ShrinkCapacityIfNecessary' [ 0 6 62]
'gl::CurrentGL' [ 0 4]
'gl::GLXApiBase::glXGetFBConfigsFn' [ 0 4 16]
'std::__1::add_lvalue_reference<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>' [ 0 5 10]
'gl::DebugGLApi::glFinishFn' [ 0 4 16]
'gl::DebugEGLApi::eglChooseConfigFn' [ 0 4 17]
'gl::TraceGLApi::glSampleCoverageFn' [ 0 4 16]
'SkColor' [ 0]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<unsigned long>::is_valid' [ 0 6 16 47 71]
'gl::GLStubApiBase::glRenderbufferStorageMultisampleFn' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<gl::GLContext **>::__nat, gl::GLContext *>' [ 0 5 10]
'gl::TraceGLApi::glBindBufferBaseFn' [ 0 4 16]
'base::CharTraits<char>::compare' [ 0 6 24]
'gl::DebugGLApi::glTexStorage3DFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::destroy<std::__1::basic_string<char> >' [ 0 5 10 81]
'gl::HasExtension<15>' [ 0 4]
'base::internal::VectorBuffer<base::TimeDelta>::MoveRange<base::TimeDelta, 0>' [ 0 6 16 47]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::__destruct_at_end' [ 0 5 10 65]
'gl::NoContextGLApi::glUniform4fFn' [ 0 4 20]
'gl::QueryResult::IsAvailable' [ 0 4 17]
'gl::g_current_gl_context_tls' [ 0 4]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::reset' [ 0 5 10 416]
'std::__1::__add_lvalue_reference_impl<void *, true>' [ 0 5 10]
'_G_fpos64_t' [ 0]
'base::UnsanitizedCfiCall<bool (*)(void *, const char *const *, unsigned int, void *, void *)>' [ 0 6]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >' [ 0 5 10]
'gl::NoContextGLApi::glDeleteBuffersARBFn' [ 0 4 20]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__erase_unique<gl::GLContext *>' [ 0 5 10 107]
'gl::NativeViewGLSurfaceEGLX11::DispatchEvent' [ 0 4 31]
'base::subtle::RefCountedBase' [ 0 6 14]
'gl::TraceGLApi::glPopGroupMarkerEXTFn' [ 0 4 16]
'gl::TraceGLApi::glRenderbufferStorageMultisampleEXTFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::allocator<const char *> &>' [ 0 5 10]
'gl::glGetProgramInfoLogProc' [ 0 4]
'gl::TraceGLApi::glGetUniformfvRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glProgramParameteriFn' [ 0 4 20]
'angle::LogWarningFunc' [ 0 7]
'gl::DebugGLApi::glPushDebugGroupFn' [ 0 4 16]
'gl::TraceGLApi::glGenQueriesFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::__destroy<std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10 145]
'gl::DebugGLApi::glGetVertexAttribivFn' [ 0 4 16]
'std::__1::move<std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &>' [ 0 5 10]
'gl::GLApiBase::glMemoryBarrierEXTFn' [ 0 4 15]
'gl::GLApiBase::glBeginTransformFeedbackFn' [ 0 4 15]
'gl::TraceEGLApi::eglProgramCacheResizeANGLEFn' [ 0 4 17]
'std::__1::forward<bool &>' [ 0 5 10]
'gl::DebugGLApi::glGetIntegervFn' [ 0 4 16]
'gl::TraceGLApi::glGetQueryObjectuivFn' [ 0 4 16]
'gl::GLApiBase::glIsFramebufferEXTFn' [ 0 4 15]
'gl::GLApiBase::glGetAttribLocationFn' [ 0 4 15]
'gl::glStencilThenCoverStrokePathInstancedNVProc' [ 0 4]
'gl::NoContextGLApi::glProgramBinaryFn' [ 0 4 20]
'std::__1::forward<gl::GLVersionInfo *&>' [ 0 5 10]
'gl::EGLApiBase::eglQueryStreamu64KHRFn' [ 0 4 16]
'gl::NoContextGLApi::glBindBufferBaseFn' [ 0 4 20]
'std::__1::operator!=<gl::DisplayType *>' [ 0 5 10]
'gl::GLStubApiBase::glIsVertexArrayOESFn' [ 0 4 19]
'EGLnsecsANDROID' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<int, std::__1::allocator<int>, true>' [ 0 5 10 30]
'gl::TraceEGLApi' [ 0 4]
'base::internal::DstRangeRelationToSrcRangeImpl<long, double, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::release' [ 0 5 10 89]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'gl::glGetFloatvProc' [ 0 4]
'gl::GLStubApiBase::glIsBufferFn' [ 0 4 19]
'std::__1::unique_ptr<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >::unique_ptr<true, void>' [ 0 5 10 99]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::back' [ 0 5 10 68]
'gl::GLContextGLX::display' [ 0 4 18]
'gl::NoContextGLApi::glGetVertexAttribIivRobustANGLEFn' [ 0 4 20]
'gl::MakeExtensionSet' [ 0 4]
'gl::GLApiBase::glGetBooleanvRobustANGLEFn' [ 0 4 15]
'gl::glGetIntegervProc' [ 0 4]
'std::__1::operator!=<std::__1::basic_string<char> *>' [ 0 5 10]
'gl::GPUTimingImpl::GetMaxTimeStamp' [ 0 4 19]
'base::DefaultRefCountedTraits<gl::GLContext>::Destruct' [ 0 6 46]
'base::internal::VectorBuffer<base::TimeDelta>::operator[]' [ 0 6 16 47]
'angle' [ 0]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__upcast' [ 0 5 10 122]
'std::__1::remove_reference<std::__1::tuple<gfx::PresentationFeedback> >' [ 0 5 10]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::unordered_map' [ 0 5 10 200]
'gl::TraceGLApi::glGetInteger64i_vFn' [ 0 4 16]
'gl::GLStubApiBase::glUniform4uivFn' [ 0 4 19]
'gl::HasExtension<17>' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>::Run::num_bound_args' [ 0 6 16 261 266]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16]
'gl::DebugGLApi::glTexParameterfvFn' [ 0 4 16]
'gl::NoContextGLApi::glDeleteSyncFn' [ 0 4 20]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::__size_type<std::__1::allocator<gl::DisplayType>, long, true>' [ 0 5 10]
'gl::GLApiBase::glDisableVertexAttribArrayFn' [ 0 4 15]
'scoped_refptr<gfx::NativePixmap>::scoped_refptr' [ 0 34]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>::~RepeatingCallback' [ 0 6 66]
'base::TimeDelta::Min' [ 0 6 17]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__swap_out_circular_buffer' [ 0 5 10 68]
'scoped_refptr<gfx::NativePixmap>::operator=' [ 0 34]
'scoped_refptr<gl::TimerQuery>::AddRef' [ 0 31]
'gl::GLSurfaceOSMesaX11::InitializeOneOff' [ 0 4 24]
'gl::GLApiBase::glLineWidthFn' [ 0 4 15]
'gl::glDiscardFramebufferEXTProc' [ 0 4]
'gl::DebugGLApi::glGenTexturesFn' [ 0 4 16]
'std::__1::__value_type<void *, std::__1::basic_string<char> >' [ 0 5 10]
'gl::GLApiBase::glVertexAttrib4fvFn' [ 0 4 15]
'gl::DebugGLApi::glFrontFaceFn' [ 0 4 16]
'gl::GLSurfaceEGL::IsCreateContextClientArraysSupported' [ 0 4 18]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::__return_temporary_buffer>::__compressed_pair<base::BasicStringPiece<std::string> *, true>' [ 0 5 10 105]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::capacity' [ 0 5 10 81]
'gl::TraceEGLApi::eglStreamConsumerGLTextureExternalAttribsNVFn' [ 0 4 17]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<void *const, std::__1::basic_string<char> > *>::__nat, std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::(anonymous namespace)::GetConfigForWindow' [ 0 4 27]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::begin' [ 0 6 16 70]
'gl::GLContextStub::IsCurrent' [ 0 4 19]
'gl::GLWindowSystemBindingInfo::operator=' [ 0 4 31]
'base::Location' [ 0 6]
'gl::DriverOSMESA' [ 0 4]
'std::__1::__constrain_hash' [ 0 5 10]
'gl::YUVToRGBConverter::YUVToRGBConverter' [ 0 4 23]
'gl::EGLApiBase::eglQuerySurfaceFn' [ 0 4 16]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider' [ 0 4 27]
'gl::TraceGLApi::glGetIntegeri_vFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> , false, false>' [ 0 5 10 66]
'gl::GLStubApiBase::glGetUniformuivRobustANGLEFn' [ 0 4 19]
'gl::TraceEGLApi::eglQueryStringFn' [ 0 4 17]
'std::__1::__to_raw_pointer<scoped_refptr<gl::GLImage> >' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>::operator-' [ 0 6 21 48]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__root_ptr' [ 0 5 10 299]
'gl::TraceEGLApi::eglReleaseThreadFn' [ 0 4 17]
'gl::(anonymous namespace)::g_egl_extensions' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__construct<gfx::NativePixmapPlane, const gfx::NativePixmapPlane &>' [ 0 5 10 74]
'gl::GLFenceEGL::GLFenceEGL' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::release' [ 0 5 10 176]
'gl::ScopedBufferBinder' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::allocate' [ 0 5 10 91]
'gl::GLApiBase::glSamplerParameterfvFn' [ 0 4 15]
'gl::(anonymous namespace)::DataType' [ 0 4 27]
'std::__1::remove_reference<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *&>' [ 0 5 10]
'gl::glFenceSyncProc' [ 0 4]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::AddRef' [ 0 6 70]
'gl::TraceGLApi::glIsTextureFn' [ 0 4 16]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::~__tuple_impl' [ 0 5 10 124]
'gl::NoContextGLApi::glBeginTransformFeedbackFn' [ 0 4 20]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::clear' [ 0 5 10 122]
'base::internal::CheckedDivOp<long, long, void>' [ 0 6 16]
'gl::GLApiBase::glBindFramebufferEXTFn' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>, true>' [ 0 5 10 30]
'gl::TraceGLApi::glGetFramebufferParameterivRobustANGLEFn' [ 0 4 16]
'gl::glIsVertexArrayOESProc' [ 0 4]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::__alloc' [ 0 5 10 91]
'gl::GLContextOSMesa::IsCurrent' [ 0 4 21]
'base::AutoWritableMemory::Create<void (*(*)(const char *))()>' [ 0 6 26]
'gl::HasExtension<19>' [ 0 4]
'gl::TraceGLApi::glVertexAttrib1fFn' [ 0 4 16]
'gl::GLStubApiBase::glUniform3fFn' [ 0 4 19]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__lower_bound<gl::GLContext *>' [ 0 5 10 107]
'angle::(anonymous namespace)::g_angle_get_platform' [ 0 7 30]
'std::__1::swap<gl::GLShareGroup *>' [ 0 5 10]
'std::__1::default_delete<ui::ScopedMakeCurrent>::operator()' [ 0 5 10 49]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'gl::TraceGLXApi::glXWaitGLFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::allocate' [ 0 5 10 71]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::allocate' [ 0 5 10 99]
'std::__1::remove_reference<int &>' [ 0 5 10]
'gl::GLSurfaceOSMesaX11::IsOffscreen' [ 0 4 24]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::is_end' [ 0 6 59 65]
'std::__1::vector<int, std::__1::allocator<int> >::data' [ 0 5 10 50]
'gl::RealGLApi::SetDisabledExtensions' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::construct<std::__1::pair<const unsigned long, gl::GLContext *>, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned long &&>, std::__1::tuple<> >' [ 0 5 10 143]
'gl::TraceGLApi::glFenceSyncFn' [ 0 4 16]
'gl::NoContextGLApi::glGetBooleanvRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glClearBufferfiFn' [ 0 4 19]
'std::__1::forward<void **&>' [ 0 5 10]
'gl::glGetActiveAttribProc' [ 0 4]
'std::__1::pointer_traits<std::__1::__tree_node<gl::GLContext *, void *> *>' [ 0 5 10]
'base::TaskToken' [ 0 6]
'gl::glDrawRangeElementsProc' [ 0 4]
'std::__1::allocator<gl::GLSurface::CALayerInUseQuery>' [ 0 5 10]
'base::DefaultSingletonTraits<ui::GpuSwitchingManager>::New' [ 0 6 55]
'gl::GLStubApiBase::glDeleteShaderFn' [ 0 4 19]
'gl::GLApiBase::glIsProgramFn' [ 0 4 15]
'std::__1::unique_ptr<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >::reset' [ 0 5 10 161]
'std::__1::__pointer_type_imp::__pointer_type<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >, void>' [ 0 5 10 193]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'gl::DebugGLApi::glGetActiveUniformsivFn' [ 0 4 16]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 52]
'gl::GLApiBase::glStencilFuncSeparateFn' [ 0 4 15]
'gl::GLSurface::~GLSurface' [ 0 4 15]
'gl::(anonymous namespace)::current_real_context_' [ 0 4 27]
'std::__1::__size_type<std::__1::allocator<gfx::NativePixmapPlane>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10]
'gl::eglQueryContextProc' [ 0 4]
'gl::GLApiBase::glGetProgramResourceLocationFn' [ 0 4 15]
'gl::glXDestroyContextProc' [ 0 4]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__destruct_at_end' [ 0 5 10 89]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'switches::kGpuNoContextLost' [ 0 10]
'gl::GLStubApiBase::glGetRenderbufferParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::__size_type<std::__1::allocator<scoped_refptr<gl::GLImage> >, long, true>' [ 0 5 10]
'std::__1::remove_reference<gl::DisplayType &>' [ 0 5 10]
'scoped_refptr<gl::QueryResult>::get' [ 0 32]
'std::__1::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >' [ 0 5 10]
'base::SequencedTaskRunner::DeleteSoon<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 6 27]
'std::__1::__compressed_pair<XVisualInfo *, std::__1::allocator<XVisualInfo> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::unique_ptr<true, void>' [ 0 5 10 115]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::reset' [ 0 5 10 91]
'std::__1::__compressed_pair<gl::GLSurfacePresentationHelper *, std::__1::default_delete<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__end_cap' [ 0 5 10 129]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>::RunImpl<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, 0>::is_weak_call' [ 0 6 16 155 278]
'gl::EGLApiBase::eglGetPlatformDisplayEXTFn' [ 0 4 16]
'gl::GLStubApiBase::glGetProgramResourceivFn' [ 0 4 19]
'EGLuint64CHROMIUM' [ 0]
'base::internal' [ 0 6]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::value_comp' [ 0 5 10 539]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::begin' [ 0 5 10 115]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::~BindState' [ 0 6 16 195]
'gl::DebugGLApi::glGenVertexArraysOESFn' [ 0 4 16]
'gl::GLStubApiBase::glBlendEquationFn' [ 0 4 19]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::operator->' [ 0 5 10 77]
'gl::DebugOSMESAApi::OSMesaGetProcAddressFn' [ 0 4 20]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, const gfx::ColorSpace &, false>' [ 0 5 10]
'std::__1::swap<gfx::NativePixmapPlane *>' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<ui::GpuSwitchingObserver *>, ui::GpuSwitchingObserver **, true>' [ 0 5 10]
'gl::DriverGL::ClearBindings' [ 0 4 14]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >::RefCounted' [ 0 6 86]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned int *>::__nat, unsigned int>' [ 0 5 10]
'gl::eglCreateSyncKHRProc' [ 0 4]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<angle::(anonymous namespace)::PlatformContext> >' [ 0 6]
'gl::DebugGLApi::glPrimitiveRestartIndexFn' [ 0 4 16]
'gl::(anonymous namespace)::IsArgbVisual' [ 0 4 27]
'AnnotateCondVarSignalAll' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'gl::TraceGLApi::glGetInteger64vFn' [ 0 4 16]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::operator bool' [ 0 5 10 79]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::construct<unsigned char>' [ 0 5 10 65]
'gl::NativeViewGLSurfaceEGL::CommitOverlayPlanes' [ 0 4 28]
'gl::GLApiBase::glUniformMatrix4x2fvFn' [ 0 4 15]
'gl::PbufferGLSurfaceEGL::PbufferGLSurfaceEGL' [ 0 4 25]
'gl::TraceGLApi::glGetProgramInterfaceivFn' [ 0 4 16]
'std::__1::__rotate_right<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLApiBase::glPathParameterfNVFn' [ 0 4 15]
'gl::TraceGLApi::glCompressedTexImage3DRobustANGLEFn' [ 0 4 16]
'gl::glAttachShaderProc' [ 0 4]
'std::__1::__const_void_pointer<const char **, std::__1::allocator<const char *>, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::__construct<gl::GLContext *, gl::GLContext *const &>' [ 0 5 10 99]
'gl::GLContextEGL::~GLContextEGL' [ 0 4 18]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >' [ 0 5 10]
'scoped_refptr<base::SingleThreadTaskRunner>' [ 0]
'base::internal::OptionalBase<unsigned long>' [ 0 6 16]
'gl::GLStubApiBase::glTexParameterfvRobustANGLEFn' [ 0 4 19]
'std::__1::__distance<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLApiBase::glDebugMessageCallbackFn' [ 0 4 15]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__end_cap' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'gl::DebugGLXApi::glXQueryServerStringFn' [ 0 4 17]
'gl::GLShareGroup' [ 0 4]
'std::__1::remove_reference<std::__1::__tree_node<gl::GLContext *, void *> *&>' [ 0 5 10]
'gl::GLSurfacePresentationHelper::ScopedSwapBuffers::~ScopedSwapBuffers' [ 0 4 33 52]
'gl::OSMesaGetIntegervProc' [ 0 4]
'std::__1::iterator_traits<void **>' [ 0 5 10]
'gl::NoContextGLApi::glGetFragDataIndexFn' [ 0 4 20]
'gl::TraceGLApi::glAttachShaderFn' [ 0 4 16]
'gl::GLApiBase::glProgramPathFragmentInputGenNVFn' [ 0 4 15]
'std::__1::__size_type<std::__1::allocator<ContextCreationInfo>, long, true>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::get' [ 0 5 10 87]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >' [ 0 5 10]
'gl::TraceGLXApi::glXGetClientStringFn' [ 0 4 17]
'gl::TraceGLApi::glGetIntegeri_vRobustANGLEFn' [ 0 4 16]
'gl::GLImageMemory::Flush' [ 0 4 19]
'gl::GLContextReal::GetExtensions' [ 0 4 19]
'gl::GLSurfaceStub::BuffersFlipped' [ 0 4 19]
'std::__1::__compressed_pair_elem<gl::GLFenceEGL *, 0, false>::__compressed_pair_elem<gl::GLFenceEGL *, void>' [ 0 5 10 62]
'gl::EGLApiBase::eglGetConfigsFn' [ 0 4 16]
'std::__1::allocator<unsigned char>' [ 0 5 10]
'std::__1::add_lvalue_reference<ui::ScopedMakeCurrent>' [ 0 5 10]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::__destruct_at_end' [ 0 5 10 97]
'gl::NoContextGLApi::glGetSamplerParameterIivRobustANGLEFn' [ 0 4 20]
'gl::DebugGLApi::glDiscardFramebufferEXTFn' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<unsigned char, std::__1::default_delete<unsigned char []>, false>' [ 0 5 10 30]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext> >' [ 0 6]
'gl::InitializeGLContext' [ 0 4]
'uint32_t' [ 0]
'base::BindOnce<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &, gfx::PresentationFeedback>' [ 0 6]
'std::__1::__compressed_pair<void **, std::__1::allocator<void *> &>' [ 0 5 10]
'gl::NoContextGLApi::glBindFragDataLocationIndexedFn' [ 0 4 20]
'gl::GLApiBase::glGetnUniformuivRobustANGLEFn' [ 0 4 15]
'GLXContext' [ 0]
'std::__1::default_delete<base::SharedMemory>' [ 0 5 10]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::operator=' [ 0 5 10 77]
'std::__1::__sort<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'gl::glIsBufferProc' [ 0 4]
'gl::GetNamedGLImplementation' [ 0 4]
'gl::RealGLApi::RealGLApi' [ 0 4 15]
'logging::MakeCheckOpString<void *, void *>' [ 0 9]
'gl::DebugGLApi::glClearBufferivFn' [ 0 4 16]
'angle::TraceEventHandle' [ 0 7]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::~__split_buffer' [ 0 5 10 91]
'gl::GLImageEGL::GLImageEGL' [ 0 4 16]
'XNoExposeEvent' [ 0]
'std::__1::__wrap_iter<int *>::base' [ 0 5 10 30]
'gl::NoContextGLApi::glIsTransformFeedbackFn' [ 0 4 20]
'gl::glStencilStrokePathInstancedNVProc' [ 0 4]
'gl::DebugGLApi::glStencilOpSeparateFn' [ 0 4 16]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<TimeNamePair> &>' [ 0 5 10]
'std::__1::__tuple_indices<0, 1>' [ 0 5 10]
'gl::TraceEGLApi::eglPostSubBufferNVFn' [ 0 4 17]
'angle::(anonymous namespace)::ANGLEPlatformImpl_logWarning' [ 0 7 30]
'gl::glUniform2uivProc' [ 0 4]
'gl::NoContextGLApi::glFramebufferTextureLayerFn' [ 0 4 20]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::find<base::BasicStringPiece<std::string> >' [ 0 6 16 203]
'base::BindOnce<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::operator*' [ 0 6 69]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::__destroy<ContextCreationInfo>' [ 0 5 10 71]
'gl::DebugEGLApi::eglGetSyncAttribKHRFn' [ 0 4 17]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__make_iter' [ 0 5 10 101]
'gl::GLSurfaceAdapter::GetVSyncProvider' [ 0 4 22]
'gl::NoContextGLApi::glInvalidateSubFramebufferFn' [ 0 4 20]
'gl::DebugGLApi::glGetBufferParameteri64vRobustANGLEFn' [ 0 4 16]
'gl::GLApiBase::glCompressedTexImage3DRobustANGLEFn' [ 0 4 15]
'AnnotatePCQDestroy' [ 0]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::__destruct_at_end' [ 0 5 10 91]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >' [ 0 5 10]
'gl::GLApiBase::glBindTextureFn' [ 0 4 15]
'std::__1::__compressed_pair<gl::GPUTiming *, std::__1::default_delete<gl::GPUTiming> >' [ 0 5 10]
'gl::NoContextGLApi::glBindVertexArrayOESFn' [ 0 4 20]
'std::__1::__const_pointer<ContextCreationInfo, ContextCreationInfo *, std::__1::allocator<ContextCreationInfo>, true>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::capacity' [ 0 5 10 82]
'AnnotateMutexIsNotPHB' [ 0]
'gl::TraceGLApi::glUniform1fFn' [ 0 4 16]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >::operator->' [ 0 5 10 91]
'gl::GLSurfaceGLX::IsMESASwapControlSupported' [ 0 4 18]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<gl::GLContext *, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<gl::GLContext *, void *> *&, void>' [ 0 5 10 94]
'std::__1::vector<int, std::__1::allocator<int> >::size' [ 0 5 10 50]
'gl::GPUTimingImpl::HandleBadQuery' [ 0 4 19]
'gl::GLApiBase::glCopyTexSubImage2DFn' [ 0 4 15]
'std::__1::make_unique<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, unsigned long &>' [ 0 5 10]
'gl::glUniform3uiProc' [ 0 4]
'base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>::Destroy' [ 0 6 16 127]
'std::__1::__tuple_leaf<0, gfx::PresentationFeedback, false>::__tuple_leaf<gfx::PresentationFeedback, void>' [ 0 5 10 61]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *, 0, false>::__compressed_pair_elem<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *&, void>' [ 0 5 10 102]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::unique_ptr' [ 0 5 10 79]
'gl::(anonymous namespace)::IgnoreX11Errors' [ 0 4 27]
'gl::GLApiBase::glGetProgramBinaryFn' [ 0 4 15]
'gfx::Size::SetSize' [ 0 5 11]
'gl::glBindRenderbufferEXTProc' [ 0 4]
'std::__1::__compressed_pair<int *, std::__1::default_delete<int []> >' [ 0 5 10]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'switches::kEnableSgiVideoSync' [ 0 10]
'gl::GLFence::CreateFromGpuFence' [ 0 4 13]
'gl::TraceGLXApi::glXDestroyPbufferFn' [ 0 4 17]
'gl::GLApiBase::glGetUniformfvRobustANGLEFn' [ 0 4 15]
'gl::eglQuerySurfacePointerANGLEProc' [ 0 4]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::empty' [ 0 5 10 96]
'std::__1::pointer_traits<ui::DCRendererLayerParams::FilterEffect *>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<unsigned long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glBindRenderbufferEXTFn' [ 0 4 16]
'gl::DebugGLApi::glGetQueryObjecti64vRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair<gl::GLFence *, std::__1::default_delete<gl::GLFence> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >::deallocate' [ 0 5 10 70]
'gl::GLStubApiBase::glValidateProgramFn' [ 0 4 19]
'gl::TraceGLApi::glHintFn' [ 0 4 16]
'__int16_t' [ 0]
'base::AsserterBase::AsserterBase' [ 0 6 20]
'gl::GLVisualPickerGLX::PickBestSystemVisual' [ 0 4 23]
'std::__1::__const_void_pointer<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>, false>' [ 0 5 10]
'gl::GLSurfaceAdapter::GetHandle' [ 0 4 22]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::__destroy<TimeNamePair>' [ 0 5 10 64]
'gl::GLStubApiBase::glFramebufferTexture2DMultisampleEXTFn' [ 0 4 19]
'gl::TraceEGLApi::eglQueryStreamKHRFn' [ 0 4 17]
'gl::TraceOSMESAApi::~TraceOSMESAApi' [ 0 4 20]
'angle::ResetDisplayPlatformFunc' [ 0 7]
'gl::GLSurfaceAdapter::GetBackingFramebufferObject' [ 0 4 22]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::~VectorBuffer' [ 0 6 16 70]
'base::internal::CheckedMulOp<unsigned long, int, void>::Do<unsigned long>' [ 0 6 16 56]
'std::__1::__compressed_pair<gl::GLSurfaceOverlay *, std::__1::allocator<gl::GLSurfaceOverlay> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 97]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::get' [ 0 5 10 167]
'gl::GLApiBase::glPathStencilFuncNVFn' [ 0 4 15]
'gl::GLXApiBase::glXWaitVideoSyncSGIFn' [ 0 4 16]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >' [ 0 5 10]
'gl::DebugGLApi::glGetInternalformativFn' [ 0 4 16]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'gl::g_real_osmesa' [ 0 4]
'base::Callback<void (const base::TimeTicks, const base::TimeDelta)>' [ 0 6]
'std::__1::__add_lvalue_reference_impl<base::trace_event::MemoryAllocatorDump, true>' [ 0 5 10]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::vector' [ 0 5 10 122]
'gl::glGetStringProc' [ 0 4]
'gl::GLApiBase::glCopyTexImage2DFn' [ 0 4 15]
'gl::glUniform4uivProc' [ 0 4]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::is_valid' [ 0 6 63]
'std::__1::__size_type<std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, long, true>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>, bool>' [ 0 5 10]
'gl::GLContext::SetCurrent' [ 0 4 15]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'gl::glBindVertexArrayOESProc' [ 0 4]
'base::subtle::NoBarrier_AtomicIncrement' [ 0 6 14]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__split_buffer' [ 0 5 10 110]
'std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >::pair<const gfx::ColorSpace &, 0>' [ 0 5 10 135]
'std::__1::operator!=<ContextCreationInfo *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::empty' [ 0 6 62]
'gl::glPolygonModeProc' [ 0 4]
'gl::TraceGLApi::glVertexAttribI4uivFn' [ 0 4 16]
'std::__1::forward<base::SharedMemory *&>' [ 0 5 10]
'gl::GLVersionInfo::ParseVersionString' [ 0 4 19]
'gl::NoContextGLApi::glMapBufferFn' [ 0 4 20]
'gl::NoContextGLApi::glGetMultisamplefvRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::unique_ptr<true, void>' [ 0 5 10 65]
'gl::DebugGLApi::glGetFramebufferParameterivRobustANGLEFn' [ 0 4 16]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::size' [ 0 5 10 101]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp<void *, gl::GLSurface *>' [ 0 22]
'AnnotatePublishMemoryRange' [ 0]
'gl::GLStubApi::glIsQueryFn' [ 0 4 15]
'gl::GLApiBase::glTexParameterIivRobustANGLEFn' [ 0 4 15]
'std::__1::unique_ptr<XVisualInfo [], gfx::XObjectDeleter<void, int, &XFree> >::unique_ptr<XVisualInfo *, true, void, void>' [ 0 5 10 79]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::__destroy<const char *>' [ 0 5 10 64]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::push_back' [ 0 5 10 68]
'gl::GLApiBase::glMapBufferRangeFn' [ 0 4 15]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >::reset' [ 0 5 10 77]
'gl::GLContext::ForceGpuSwitchIfNeeded' [ 0 4 15]
'gl::GetGLColorSpace' [ 0 4]
'gl::GLStubApiBase::glGetPointervRobustANGLERobustANGLEFn' [ 0 4 19]
'gl::DebugEGLApi::SetDisabledExtensions' [ 0 4 17]
'std::__1::__less<int, int>::operator()' [ 0 5 10 28]
'gl::GLApiBase::glBlendEquationFn' [ 0 4 15]
'std::__1::allocator<XVisualInfo>::allocate' [ 0 5 10 34]
'gl::GLStubApiBase::glMatrixLoadfEXTFn' [ 0 4 19]
'base::subtle::AtomicLocation64' [ 0 6 14]
'gl::glDeleteTransformFeedbacksProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<long> >::destroy<long>' [ 0 5 10 56]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::~unique_ptr' [ 0 5 10 119]
'gl::DebugGLXApi::glXDestroyWindowFn' [ 0 4 17]
'gl::GLContext::GetCurrentGL' [ 0 4 15]
'gl::GLImageGLX::OnMemoryDump' [ 0 4 16]
'gl::NoContextGLApi::glCompressedTexSubImage3DRobustANGLEFn' [ 0 4 20]
'gl::TraceGLApi::glCompressedTexSubImage2DFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>' [ 0 6 16]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::__end_cap' [ 0 5 10 97]
'logging::MakeCheckOpValueString<gl::GLContext *>' [ 0 9]
'gl::GLApiBase::glBlendBarrierKHRFn' [ 0 4 15]
'gl::GLStubApiBase::glGetPointervFn' [ 0 4 19]
'std::__1::__compressed_pair<scoped_refptr<gl::GLImage> *, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__compressed_pair<nullptr_t, const std::__1::allocator<scoped_refptr<gl::GLImage> > &>' [ 0 5 10 110]
'gl::GLSurface::GetConfig' [ 0 4 15]
'std::__1::__compressed_pair_elem<ui::CARendererLayerParams::FilterEffect *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 87]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::~__vector_base' [ 0 5 10 73]
'std::__1::allocator<TimeNamePair>::deallocate' [ 0 5 10 35]
'base::internal::WeakPtrBase::WeakPtrBase' [ 0 6 16 29]
'gl::TraceGLApi::glTexStorage2DEXTFn' [ 0 4 16]
'gl::NoContextGLApi::glCreateProgramFn' [ 0 4 20]
'gl::GLStubApiBase::glFenceSyncFn' [ 0 4 19]
'gl::GLApiBase::glCreateShaderFn' [ 0 4 15]
'std::__1::forward<std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'std::__1::forward<unsigned long>' [ 0 5 10]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::CheckValidIndex' [ 0 6 60]
'std::__1::swap<const char **>' [ 0 5 10]
'trace_event_internal::kGlobalScope' [ 0 22]
'base::internal::WeakPtrBase' [ 0 6 16]
'gl::glPolygonOffsetProc' [ 0 4]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 85]
'gl::NoContextGLApi::glCopyBufferSubDataFn' [ 0 4 20]
'std::__1::default_delete<gl::YUVToRGBConverter>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >' [ 0 5 10]
'std::__1::make_unique<gl::GLSurfacePresentationHelper, const base::TimeTicks &, const base::TimeDelta &>' [ 0 5 10]
'std::__1::__less<long, long>' [ 0 5 10]
'gl::eglReleaseThreadProc' [ 0 4]
'gl::GLSurfaceEGL::InitializeExtensionSettingsOneOff' [ 0 4 18]
'std::__1::get<0, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'gl::DebugGLApi::glDepthFuncFn' [ 0 4 16]
'std::__1::allocator<gfx::NativePixmapPlane>::deallocate' [ 0 5 10 45]
'std::__1::operator==<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::glTestFenceNVProc' [ 0 4]
'gl::NoContextGLApi::glBlendColorFn' [ 0 4 20]
'gl::NoContextGLApi::glClearStencilFn' [ 0 4 20]
'base::CommandLine' [ 0 6]
'gl::NoContextGLApi::glIsQueryFn' [ 0 4 20]
'base::internal::PassingTraitsType<const gfx::PresentationFeedback &>' [ 0 6 16]
'std::__1::__compressed_pair_elem<base::trace_event::ConvertableToTraceFormat *, 0, false>' [ 0 5 10]
'std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>::operator()' [ 0 5 10 147]
'gl::eglCreateStreamProducerD3DTextureANGLEProc' [ 0 4]
'base::internal::circular_deque_iterator<base::TimeDelta>::circular_deque_iterator' [ 0 6 16 58]
'gl::TraceGLApi::glBindTextureFn' [ 0 4 16]
'std::nullptr_t' [ 0 5]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::__compressed_pair<base::SharedMemory *, std::__1::default_delete<base::SharedMemory> >::__compressed_pair<base::SharedMemory *, true>' [ 0 5 10 98]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'base::RepeatingCallback<long ()>::~RepeatingCallback' [ 0 6 34]
'gl::DebugGLApi::glGenBuffersARBFn' [ 0 4 16]
'gl::DebugGLApi::glGetUniformIndicesFn' [ 0 4 16]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_shrink' [ 0 5 10 101]
'gl::TraceEGLApi::eglCreateStreamKHRFn' [ 0 4 17]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::push' [ 0 5 10 116]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::capacity' [ 0 5 10 83]
'gl::GLStubApiBase::glCoverFillPathNVFn' [ 0 4 19]
'gl::TraceGLApi::glCoverFillPathNVFn' [ 0 4 16]
'std::__1::map<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'gl::GLApiBase::glShaderBinaryFn' [ 0 4 15]
'gl::RealGLXApi::RealGLXApi' [ 0 4 16]
'gl::eglPostSubBufferNVProc' [ 0 4]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*&)()>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__recommend' [ 0 5 10 101]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::~__vector_base' [ 0 5 10 104]
'std::__1::forward<std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 5 10]
'gl::TraceGLApi::glGetQueryivFn' [ 0 4 16]
'gl::GLSurfaceFormat::SetRGB565' [ 0 4 21]
'std::__1::forward<gl::GLSurfacePresentationHelper *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > &>' [ 0 5 10]
'gl::NoContextGLApi::glUseProgramFn' [ 0 4 20]
'gl::GLFenceARB' [ 0 4]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__nat, std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 108]
'div_t' [ 0]
'gl::GLStubApiBase::glGetStringFn' [ 0 4 19]
'std::__1::enable_if_t<FunctorTraits<void (GLSurfacePresentationHelper::*)()>::is_nullable, bool>' [ 0 5 10]
'base::DefaultRefCountedTraits<gl::GPUTimingClient>::Destruct' [ 0 6 52]
'gl::GLStubApiBase::glVertexAttribIPointerFn' [ 0 4 19]
'gl::GLStubApiBase::glIsFenceAPPLEFn' [ 0 4 19]
'gl::glXChooseVisualProc' [ 0 4]
'std::__1::__const_void_pointer<long *, std::__1::allocator<long>, false>' [ 0 5 10]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::PendingCallbackRunner' [ 0 4 27 54]
'gl::NoContextGLApi::glUniform4uiFn' [ 0 4 20]
'gl::glUniform1fProc' [ 0 4]
'gl::GLSurfaceEGL::GetConfig' [ 0 4 18]
'gl::NoContextGLApi::glPixelStoreiFn' [ 0 4 20]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >::DeleteInternal<gfx::NativePixmap>' [ 0 6 108]
'gl::GLSurface::Resize' [ 0 4 15]
'base::PlatformThreadHandle' [ 0 6]
'gl::DebugGLApi::glTexSubImage3DRobustANGLEFn' [ 0 4 16]
'gl::DebugGLApi::glDrawElementsFn' [ 0 4 16]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::~unique_ptr' [ 0 5 10 115]
'base::TimeDelta::is_zero' [ 0 6 17]
'std::__1::operator!=<ui::GpuSwitchingObserver *const *>' [ 0 5 10]
'gl::kANGLEImplementationOpenGLName' [ 0 4]
'std::__1::remove_reference<int *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::__construct_backward<TimeNamePair>' [ 0 5 10 64]
'__pthread_internal_list' [ 0]
'gl::GLSurfaceAdapter::SupportsCommitOverlayPlanes' [ 0 4 22]
'std::__1::move<base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo> &>' [ 0 5 10]
'gl::TraceGLApi::glMatrixLoadfEXTFn' [ 0 4 16]
'gl::DebugGLApi::glCullFaceFn' [ 0 4 16]
'gl::EGLApiBase::eglGetSyncAttribKHRFn' [ 0 4 16]
'angle::(anonymous namespace)::ANGLEPlatformImpl_updateTraceEventDuration' [ 0 7 30]
'uint_least32_t' [ 0]
'gl::SyncControlVSyncProvider::GetVSyncParameters' [ 0 4 30]
'gl::NoContextGLApi::glSamplerParameterIivRobustANGLEFn' [ 0 4 20]
'gl::NoContextGLApi::glGetVertexAttribfvRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glCopyTextureCHROMIUMFn' [ 0 4 19]
'gl::DebugGLApi::glUniformMatrix2x4fvFn' [ 0 4 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'gl::NoContextGLApi::glVertexAttrib1fvFn' [ 0 4 20]
'gl::GLShareGroup::GLShareGroup' [ 0 4 18]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__swap_out_circular_buffer' [ 0 5 10 84]
'gl::GLXApiBase::glXQueryExtensionsStringFn' [ 0 4 16]
'long unsigned int' [ 0]
'std::__1::piecewise_construct_t' [ 0 5 10]
'gl::eglGetCompositorTimingSupportedANDROIDProc' [ 0 4]
'gl::TraceGLApi::glVertexAttribI4ivFn' [ 0 4 16]
'sync_file_info' [ 0]
'gl::(anonymous namespace)::g_colormap' [ 0 4 27]
'gl::GLXApiBase::glXMakeCurrentFn' [ 0 4 16]
'gl::glGetIntegeri_vRobustANGLEProc' [ 0 4]
'gl::GLSurfaceOSMesaX11::SupportsPostSubBuffer' [ 0 4 24]
'base::internal::CheckedNumeric<long>::operator/=<int>' [ 0 6 16 38]
'gl::GLSurfacePresentationHelper::ScheduleCheckPendingFrames' [ 0 4 33]
'gl::GLApiBase::glFlushMappedBufferRangeFn' [ 0 4 15]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::emplace_back<int, std::__1::pair<int, int> >' [ 0 5 10 82]
'base::BindUnwrapTraits<base::WeakPtr<gl::GLSurfacePresentationHelper> >::Unwrap<const base::WeakPtr<gl::GLSurfacePresentationHelper> &>' [ 0 6 73]
'gl::GLStubApiBase::glCopyBufferSubDataFn' [ 0 4 19]
'gl::GLApiBase::glGetnUniformfvRobustANGLEFn' [ 0 4 15]
'std::__1::enable_if_t<FunctorTraits<RepeatingCallback<void (TimeTicks, TimeDelta)> >::is_nullable, bool>' [ 0 5 10]
'gl::DebugGLApi::glRenderbufferStorageEXTFn' [ 0 4 16]
'gl::InitializeExtensionSettingsOneOffGLX' [ 0 4]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::operator->' [ 0 5 10 167]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::allocate' [ 0 5 10 88]
'gl::GLApiBase::glTestFenceAPPLEFn' [ 0 4 15]
'gl::GLApiBase::glGetObjectLabelFn' [ 0 4 15]
'base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 6 16]
'std::__1::allocator<ContextCreationInfo>::deallocate' [ 0 5 10 42]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::max_size' [ 0 5 10 84]
'gfx::GenericSharedMemoryId::GenericSharedMemoryId' [ 0 5 28]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >' [ 0 5 10]
'gl::(anonymous namespace)::GLES2RGBData<(lambda at ../../ui/gl/gl_image_memory.cc:296:27)>' [ 0 4 27]
'base::trace_event::MemoryAllocatorDump' [ 0 6 19]
'base::internal::SafeUnsignedAbs<int>' [ 0 6 16]
'gl::GLApiBase::glBlitFramebufferFn' [ 0 4 15]
'gl::TraceGLApi::glValidateProgramFn' [ 0 4 16]
'gl::GLStubApiBase::glClearDepthfFn' [ 0 4 19]
'gl::GLStubApiBase::glDeleteProgramFn' [ 0 4 19]
'base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap>::Destruct' [ 0 6 60]
'gl::GLStubApiBase::glUniform3fvFn' [ 0 4 19]
'gl::GLApiBase::glInsertEventMarkerEXTFn' [ 0 4 15]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::__destruct_n &>::__compressed_pair<base::BasicStringPiece<std::string> *&, std::__1::__destruct_n &>' [ 0 5 10 94]
'gl::GLApiBase::glSetFenceNVFn' [ 0 4 15]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::__add_lvalue_reference_impl<int, true>' [ 0 5 10]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glGetInteger64vRobustANGLEFn' [ 0 4 20]
'base::internal::CallbackBase::operator bool' [ 0 6 16 30]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::CheckValidIndexOrEnd' [ 0 6 60]
'gl::DebugEGLApi::eglProgramCachePopulateANGLEFn' [ 0 4 17]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFence>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, void>' [ 0 5 10 82]
'gl::DebugGLApi::glSetFenceNVFn' [ 0 4 16]
'std::__1::forward<const std::__1::less<gl::GLContext *> &>' [ 0 5 10]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::~queue' [ 0 5 10 116]
'std::__1::__add_lvalue_reference_impl<gl::GLVersionInfo, true>' [ 0 5 10]
'gl::TraceGLApi::glUniformMatrix2x3fvFn' [ 0 4 16]
'gl::GLStubApiBase::glIsSamplerFn' [ 0 4 19]
'std::__1::default_delete<base::SharedMemory>::operator()' [ 0 5 10 46]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare::operator()' [ 0 6 16 203 218]
'std::__1::__wrap_iter<gl::DisplayType *>::base' [ 0 5 10 42]
'gl::(anonymous namespace)::g_egl_display_texture_share_group_supported' [ 0 4 27]
'gl::GLSurfaceAdapter::GetConfig' [ 0 4 22]
'std::__1::remove_reference<std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::release' [ 0 5 10 416]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<const unsigned long, gl::GLContext *> *>' [ 0 5 10]
'gl::GLImageNativePixmap::OnMemoryDump' [ 0 4 25]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::clamped_max_index' [ 0 6 59 65]
'XResizeRequestEvent' [ 0]
'base::WrapUnique<gl::GLFenceEGL>' [ 0 6]
'std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> , false, false>' [ 0 5 10 178]
'gl::DriverGL::DriverGL' [ 0 4 14]
'std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::empty' [ 0 6 54]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append' [ 0 5 10 87]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__emplace_back_slow_path<int &, int &, int, unsigned long &>' [ 0 5 10 88]
'std::__1::__add_lvalue_reference_impl<gl::TraceGLApi, true>' [ 0 5 10]
'gl::glProgramPathFragmentInputGenNVProc' [ 0 4]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'gl::NoContextGLApi::glGetVertexAttribPointervFn' [ 0 4 20]
'std::__1::forward<const std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > &>' [ 0 5 10]
'gl::TraceGLApi::glStencilFillPathInstancedNVFn' [ 0 4 16]
'gl::GLFenceAndroidNativeFenceSync::GetGpuFence' [ 0 4 35]
'std::__1::adjacent_find<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../base/containers/flat_tree.h:453:23) &>' [ 0 5 10]
'std::__1::__unique_if<gl::GLVersionInfo>' [ 0 5 10]
'gl::NoContextGLApi::glGetBooleanvFn' [ 0 4 20]
'gl::GLStubApiBase::glGetInteger64i_vRobustANGLEFn' [ 0 4 19]
'gl::TraceGLApi::glTexSubImage3DFn' [ 0 4 16]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__emplace_back_slow_path<int, std::__1::pair<int, int> >' [ 0 5 10 82]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >' [ 0 5 10]
'gl::GLStubApiBase::glBlendColorFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<void *> >::allocate' [ 0 5 10 58]
'base::DefaultRefCountedTraits<gl::GLShareGroup>' [ 0 6]
'gl::GLStubApi::glGetShaderivFn' [ 0 4 15]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, true>' [ 0 5 10]
'gl::DebugGLXApi::glXQueryContextFn' [ 0 4 17]
'std::__1::vector<void *, std::__1::allocator<void *> >::__make_iter' [ 0 5 10 56]
'gl::GLSurfacePresentationHelper::OnMakeCurrent' [ 0 4 33]
'XGravityEvent' [ 0]
'AnnotateBarrierWaitAfter' [ 0]
'base::internal::CheckOnFailure::HandleFailure<long>' [ 0 6 16 32]
'float' [ 0]
'__off64_t' [ 0]
'std::__1::__compressed_pair_elem<gl::GLFenceEGL *, 0, false>::__compressed_pair_elem<gl::GLFenceEGL *&, void>' [ 0 5 10 62]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::base' [ 0 5 10 61]
'scoped_refptr<gl::TimeElapsedTimerQuery>::swap' [ 0 42]
'base::DefaultRefCountedTraits<gl::GLSurface>' [ 0 6]
'std::__1::forward<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > >' [ 0 5 10]
'gl::glGetTexParameterIivRobustANGLEProc' [ 0 4]
'gl::GLStubApiBase::glDepthRangeFn' [ 0 4 19]
'gl::GLFenceARB::HasCompleted' [ 0 4 16]
'std::__1::allocator<gl::DisplayType>::construct<gl::DisplayType, const gl::DisplayType &>' [ 0 5 10 38]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::set' [ 0 5 10 104]
'gl::EGLApiBase::eglCreateImageKHRFn' [ 0 4 16]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::__end_cap' [ 0 5 10 75]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::operator++' [ 0 5 10 62]
'base::internal::DstRangeRelationToSrcRangeImpl<long, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 210]
'gl::DebugGLApi::glIsShaderFn' [ 0 4 16]
'gl::GLSurfacePresentationHelper::~GLSurfacePresentationHelper' [ 0 4 33]
'gl::TraceGLApi::glDebugMessageControlFn' [ 0 4 16]
'gl::GLSurfaceOverlay::~GLSurfaceOverlay' [ 0 4 22]
'gl::DebugGLApi::glTexParameterivFn' [ 0 4 16]
'gl::GLXApiBase::glXChooseFBConfigFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<base::trace_event::MemoryAllocatorDump::Entry *>::__nat, base::trace_event::MemoryAllocatorDump::Entry>' [ 0 5 10]
'gl::GLStubApiBase::glDrawArraysFn' [ 0 4 19]
'gl::GLContext::total_gl_contexts_' [ 0 4 15]
'std::__1::__less<long, long>::operator()' [ 0 5 10 30]
'std::__1::forward<std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'std::__1::remove_reference<const gl::DisplayType &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'gl::GetGLRenderbufferGUIDForTracing' [ 0 4]
'gl::glStencilMaskProc' [ 0 4]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'gl::NoContextGLApi::glFlushMappedBufferRangeFn' [ 0 4 20]
'std::__1::vector<int, std::__1::allocator<int> >' [ 0 5 10]
'gl::GLImageMemory' [ 0 4]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::~__tuple_impl' [ 0 5 10 218]
'base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >::operator()' [ 0 6 16 79]
'gl::GLSurfaceEGL::HasEGLExtension' [ 0 4 18]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::construct<ui::GpuSwitchingObserver *, ui::GpuSwitchingObserver *const &>' [ 0 5 10 78]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::~unique_ptr' [ 0 5 10 268]
'base::internal::BindStateBase' [ 0 6 16]
'AnnotateBarrierDestroy' [ 0]
'gl::GLStubApiBase::glGetInteger64vFn' [ 0 4 19]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::construct<int, int>' [ 0 5 10 55]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::capacity' [ 0 5 10 95]
'gl::GLHelper::SetupProgram' [ 0 4 14]
'gl::GLStubApiBase::glUniform4uiFn' [ 0 4 19]
'std::__1::vector<int, std::__1::allocator<int> >::max_size' [ 0 5 10 50]
'std::__1::unique_ptr<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >::~unique_ptr' [ 0 5 10 81]
'std::__1::__return_temporary_buffer' [ 0 5 10]
'gl::GLStubApiBase::glHintFn' [ 0 4 19]
'std::__1::__compressed_pair<XVisualInfo *, std::__1::allocator<XVisualInfo> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 79]
'gl::GLStubApiBase::glDeleteSamplersFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::destroy<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10 91]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__rehash' [ 0 5 10 466]
'gl::TraceGLApi::glGetFramebufferAttachmentParameterivRobustANGLEFn' [ 0 4 16]
'base::internal::MaxExponentPromotion<unsigned long, int, base::internal::LEFT_PROMOTION>' [ 0 6 16]
'gl::GLSurface::SupportsPresentationCallback' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::allocate' [ 0 5 10 79]
'gl::GLSurfaceOSMesa::GetHandle' [ 0 4 21]
'gl::RealEGLApi::SetDisabledExtensions' [ 0 4 16]
'gl::NoContextGLApi::glGetSamplerParameterfvRobustANGLEFn' [ 0 4 20]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__recommend' [ 0 5 10 84]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::size' [ 0 6 62]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::destroy<base::FileDescriptor>' [ 0 5 10 72]
'uint64_t' [ 0]
'std::__1::input_iterator_tag' [ 0 5 10]
'gl::glCheckFramebufferStatusEXTProc' [ 0 4]
'std::__1::tuple_element<0, std::__1::__tuple_types<gfx::PresentationFeedback> >' [ 0 5 10]
'gl::DebugEGLApi::eglGetCurrentContextFn' [ 0 4 17]
'base::ThreadChecker::~ThreadChecker' [ 0 6 21]
'gl::GLSurfaceFormat::GLSurfaceFormat' [ 0 4 21]
'gl::GLShareGroup::SetSharedContext' [ 0 4 18]
'base::BindUnwrapTraits<gfx::PresentationFeedback>::Unwrap<gfx::PresentationFeedback>' [ 0 6 51]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::__vector_base' [ 0 5 10 63]
'gl::DebugGLApi::glPushGroupMarkerEXTFn' [ 0 4 16]
'gl::DisableNullDrawGLBindings::DisableNullDrawGLBindings' [ 0 4 31]
'gl::GLStubApiBase::glGetGraphicsResetStatusARBFn' [ 0 4 19]
'gl::NoContextGLApi::glGetSamplerParameterIuivRobustANGLEFn' [ 0 4 20]
'gl::GLSurfaceGLXX11::UnregisterEvents' [ 0 4 21]
'gl::GLStubApiBase::glUniform1fFn' [ 0 4 19]
'timespec' [ 0]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::~ScopedGeneric' [ 0 6 63]
'std::__1::__const_void_pointer<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, false>' [ 0 5 10]
'gl::eglDestroyImageKHRProc' [ 0 4]
'gl::TraceGLApi::glDeleteProgramFn' [ 0 4 16]
'logging::MakeCheckOpString<gl::GpuPreference, gl::GpuPreference>' [ 0 9]
'gl::GLStubApiBase::glObjectLabelFn' [ 0 4 19]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, 0, 1>' [ 0 6 16 365]
'gl::TraceGLApi::glGetnUniformivRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glSetFenceNVFn' [ 0 4 16]
'XConfigureRequestEvent' [ 0]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__insert_node_at' [ 0 5 10 299]
'scoped_refptr<gl::GLShareGroup>::Release' [ 0 33]
'gl::NoContextGLApi::glUniform2uivFn' [ 0 4 20]
'gl::NoContextGLApi::glGetActiveUniformBlockivFn' [ 0 4 20]
'gl::NoContextGLApi::glGetActiveUniformBlockivRobustANGLEFn' [ 0 4 20]
'std::__1::pair<int, int>' [ 0 5 10]
'gl::GLApiBase::glVertexAttrib3fvFn' [ 0 4 15]
'gl::OSMESAApi::OSMESAApi' [ 0 4 15]
'AnnotateUnpublishMemoryRange' [ 0]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::operator--' [ 0 5 10 62]
'std::__1::find_if<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../ui/gl/gl_implementation.cc:217:22) &>' [ 0 5 10]
'std::__1::__const_pointer<gl::DisplayType, gl::DisplayType *, std::__1::allocator<gl::DisplayType>, true>' [ 0 5 10]
'gl::DebugGLApi::glGetIntegeri_vFn' [ 0 4 16]
'gl::DebugGLXApi::SetDisabledExtensions' [ 0 4 17]
'OSMesaContext' [ 0]
'gl::DebugGLApi::glTexParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::glStencilOpSeparateProc' [ 0 4]
'std::__1::forward<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *&>' [ 0 5 10]
'kMaxVsyncIntervalUs' [ 0]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::RemoveObserver' [ 0 6 59]
'gl::NativeViewGLSurfaceGLX' [ 0 4]
'std::__1::__str_find<char, unsigned long, std::__1::char_traits<char>, 18446744073709551615>' [ 0 5 10]
'base::WhitespaceHandling' [ 0 6]
'logging::LogMessage' [ 0 9]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::__end_cap' [ 0 5 10 105]
'base::internal::NarrowingRange<long, double, numeric_limits>::Adjust<long, nullptr>' [ 0 6 16 62]
'gl::EGLApiBase::eglTerminateFn' [ 0 4 16]
'gl::DebugGLApi::glFinishFenceAPPLEFn' [ 0 4 16]
'gl::TraceGLApi::glStencilFuncFn' [ 0 4 16]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::end' [ 0 5 10 66]
'gl::GLStubApiBase::glGetUniformuivFn' [ 0 4 19]
'gl::DebugGLApi::glGetTexLevelParameterfvFn' [ 0 4 16]
'std::__1::find<std::__1::__wrap_iter<ui::GpuSwitchingObserver **>, const ui::GpuSwitchingObserver *>' [ 0 5 10]
'GLbitfield' [ 0]
'base::Thread::Init' [ 0 6 14]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback> >::num_bound_args' [ 0 6 16 163]
'gl::GLApiBase::glClearBufferuivFn' [ 0 4 15]
'gl::GLStubApiBase::glBeginQueryFn' [ 0 4 19]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >, long, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<XVisualInfo, std::__1::allocator<XVisualInfo>, true>' [ 0 5 10 30]
'gl::TraceGLApi::glVertexAttrib4fFn' [ 0 4 16]
'gl::NoContextGLApi::glIsPathNVFn' [ 0 4 20]
'std::__1::allocator<std::__1::basic_string<char> >::deallocate' [ 0 5 10 52]
'khronos_utime_nanoseconds_t' [ 0]
'gl::glReadPixelsRobustANGLEProc' [ 0 4]
'std::__1::array<unsigned char, 20>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::allocate' [ 0 5 10 72]
'gl::GLApiBase::glGetTexParameterIivRobustANGLEFn' [ 0 4 15]
'switches::kDisableES3GLContext' [ 0 10]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::operator bool' [ 0 5 10 89]
'gl::DebugGLApi::glGetSamplerParameterIivRobustANGLEFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >' [ 0 6]
'std::__1::__const_void_pointer<ui::CARendererLayerParams::FilterEffect *, std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'uint16_t' [ 0]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::release' [ 0 5 10 79]
'std::__1::__compressed_pair_elem<base::FileDescriptor *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'sync_fence_info_free' [ 0]
'gl::GetGLTextureClientGUIDForTracing' [ 0 4]
'angle::LogInfoFunc' [ 0 7]
'gl::GLApiBase::glCompressedTexSubImage2DFn' [ 0 4 15]
'gl::RealGLApi::glDrawArraysFn' [ 0 4 15]
'gl::GLStubApiBase::glPrimitiveRestartIndexFn' [ 0 4 19]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim' [ 0 4 27]
'std::__1::conditional<false, std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<void *> >' [ 0 5 10]
'std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>' [ 0 5 10]
'gl::GPUTimer::~GPUTimer' [ 0 4 14]
'gl::TraceGLApi::glBindImageTextureEXTFn' [ 0 4 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::max_size' [ 0 5 10 68]
'gl::GLStubApiBase::glCoverStrokePathInstancedNVFn' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<gl::DriverGL, true>' [ 0 5 10]
'gl::GLApiBase::glUniform3fvFn' [ 0 4 15]
'gl::DriverOSMESA::InitializeExtensionBindings' [ 0 4 18]
'std::__1::forward<const gfx::NativePixmapPlane &>' [ 0 5 10]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta> >' [ 0 6 16]
'gl::TraceEGLApi::eglInitializeFn' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >, true>' [ 0 5 10 30]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::__destruct_at_end' [ 0 5 10 75]
'std::__1::__compressed_pair<TimeNamePair *, std::__1::allocator<TimeNamePair> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__pointer_type<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >' [ 0 5 10]
'XUnmapEvent' [ 0]
'gl::EGLApiBase::eglGetSyncValuesCHROMIUMFn' [ 0 4 16]
'gl::EGLApiBase::eglSwapIntervalFn' [ 0 4 16]
'gl::glBindBufferRangeProc' [ 0 4]
'std::__1::operator==<ui::GpuSwitchingObserver **, ui::GpuSwitchingObserver **>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >, true>' [ 0 5 10 30]
'gl::TraceGLApi::glDeleteFencesNVFn' [ 0 4 16]
'XSetWindowAttributes' [ 0]
'base::internal::CheckedNumeric<int>::MathOp<CheckedMulOp, int>' [ 0 6 16 37]
'gl::DebugOSMESAApi::OSMesaCreateContextFn' [ 0 4 20]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 209]
'gl::NativeViewGLSurfaceGLX::GetHandle' [ 0 4 28]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *&, void>' [ 0 5 10 214]
'gl::UnmappedNativeViewGLSurfaceGLX::UnmappedNativeViewGLSurfaceGLX' [ 0 4 36]
'gl::(anonymous namespace)::g_ignore_egl_sync_failures' [ 0 4 27]
'gl::glGetBooleani_vRobustANGLEProc' [ 0 4]
'gl::GLImageSharedMemory::OnMemoryDump' [ 0 4 25]
'gl::NoContextGLApi::glGetTranslatedShaderSourceANGLEFn' [ 0 4 20]
'gl::GLStubApi::glIsPathNVFn' [ 0 4 15]
'std::__1::back_insert_iterator<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >::operator=' [ 0 5 10 99]
'std::__1::vector<int, std::__1::allocator<int> >::vector' [ 0 5 10 50]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'gl::OSMesaGetProcAddressProc' [ 0 4]
'std::__1::add_lvalue_reference<gl::GLFence>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, long, true>' [ 0 5 10]
'std::__1::swap<std::__1::basic_string<char> *>' [ 0 5 10]
'gl::DebugEGLApi::eglQueryAPIFn' [ 0 4 17]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::~__split_buffer' [ 0 5 10 77]
'std::__1::add_lvalue_reference<base::trace_event::MemoryAllocatorDump>' [ 0 5 10]
'GLXWindow' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::DebugGLApi>, 1, true>' [ 0 5 10]
'gl::InitializeDebugGLBindingsOSMESA' [ 0 4]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 75]
'gl::glTexParameterivRobustANGLEProc' [ 0 4]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>' [ 0 5 10]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >::DeleteInternal<gl::GLShareGroup>' [ 0 6 86]
'std::__1::default_delete<gl::CurrentGL>::operator()' [ 0 5 10 41]
'EGLSyncKHR' [ 0]
'EGLenum' [ 0]
'gl::glCopyTextureCHROMIUMProc' [ 0 4]
'__mbstate_t' [ 0]
'GLfloat' [ 0]
'gl::GLStubApiBase::glGetBufferPointervRobustANGLEFn' [ 0 4 19]
'gl::GPUTimingImpl::GetLastElapsedQuery' [ 0 4 19]
'gl::NoContextGLApi::glCullFaceFn' [ 0 4 20]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'gl::GLApiBase::glGetActiveUniformsivFn' [ 0 4 15]
'gl::eglCreatePbufferSurfaceProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::GLSurface::CALayerInUseQuery>, 1, true>' [ 0 5 10]
'XGenericEvent' [ 0]
'base::internal::DstRangeRelationToSrcRange<int, std::numeric_limits, unsigned long>' [ 0 6 16]
'std::__1::forward<angle::PlatformMethods **>' [ 0 5 10]
'std::__1::remove_reference<const char *const &>' [ 0 5 10]
'gl::glUniform2iProc' [ 0 4]
'base::internal::IsValueNegative<int, nullptr>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::allocate' [ 0 5 10 65]
'std::__1::vector<void *, std::__1::allocator<void *> >::capacity' [ 0 5 10 56]
'gl::GLXApiBase::glXGetSyncValuesOMLFn' [ 0 4 16]
'gl::GLImageNativePixmap::GetInternalFormatForTesting' [ 0 4 25]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::size' [ 0 5 10 115]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__max_size' [ 0 5 10 74]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::IncrementGeneration' [ 0 6 60]
'gl::NoContextGLApi::glStencilThenCoverFillPathNVFn' [ 0 4 20]
'gl::GLStubApi::glGetStringFn' [ 0 4 15]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::data' [ 0 5 10 122]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>::second' [ 0 5 10 64]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__move_assign' [ 0 5 10 87]
'gl::GLApiBase::glQueryCounterFn' [ 0 4 15]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >::operator[]' [ 0 5 10 69]
'gl::EGLApiBase::eglWaitNativeFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'gl::GLApiBase::glPushDebugGroupFn' [ 0 4 15]
'gl::GLApiBase::glFrontFaceFn' [ 0 4 15]
'std::__1::allocator<gl::DisplayType>::construct<gl::DisplayType, gl::DisplayType>' [ 0 5 10 38]
'base::string16' [ 0 6]
'gl::glStencilMaskSeparateProc' [ 0 4]
'sync_legacy_merge_data' [ 0]
'__FILE' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10 30]
'base::internal::CheckedNumeric<unsigned long>::operator*=<int>' [ 0 6 16 47]
'std::__1::iterator_traits<const std::__1::basic_string<char> *>' [ 0 5 10]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::Unwrap' [ 0 6 119]
'std::__1::forward<scoped_refptr<gl::TimerQuery> >' [ 0 5 10]
'std::__1::__const_pointer<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> *, std::__1::allocator<base::BasicStringPiece<std::string> >, true>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::get' [ 0 5 10 71]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::construct<gl::GLContext *, gl::GLContext *const &>' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform>, false>' [ 0 5 10 30]
'gl::GLApiBase::glGetVertexAttribfvRobustANGLEFn' [ 0 4 15]
'std::__1::addressof<char>' [ 0 5 10]
'gl::TraceGLApi::glEGLImageTargetRenderbufferStorageOESFn' [ 0 4 16]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign_alloc' [ 0 5 10 108]
'gl::DebugGLApi::glUniformBlockBindingFn' [ 0 4 16]
'gfx::PresentationFeedback::PresentationFeedback' [ 0 5 27]
'XColormapEvent' [ 0]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__end_cap' [ 0 5 10 59]
'gl::GLApiBase::glVertexAttribI4ivFn' [ 0 4 15]
'std::__1::__pointer_type<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<long>' [ 0 6 16 76]
'gfx::Transform::Transform' [ 0 5 16]
'std::__1::__pointer_type<gl::GLContext *, std::__1::allocator<gl::GLContext *> >' [ 0 5 10]
'std::__1::__tuple_types<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glPopDebugGroupFn' [ 0 4 20]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >' [ 0 5 10]
'gl::glDrawElementsInstancedANGLEProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::allocate' [ 0 5 10 78]
'base::CancellationFlag::~CancellationFlag' [ 0 6 24]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >, 1, false>' [ 0 5 10]
'gl::GLApiBase::glCoverStrokePathInstancedNVFn' [ 0 4 15]
'gl::NoContextGLApi::glVertexAttrib3fFn' [ 0 4 20]
'gl::GLApiBase::glGetInteger64vFn' [ 0 4 15]
'gl::GPUTimer::Reset' [ 0 4 14]
'gl::DebugGLXApi::glXGetConfigFn' [ 0 4 17]
'std::__1::bidirectional_iterator_tag' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::destroy<std::__1::pair<const unsigned long, gl::GLContext *> >' [ 0 5 10 143]
'gfx::PresentationFeedback' [ 0 5]
'gl::TraceGLApi::glGenTransformFeedbacksFn' [ 0 4 16]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::empty' [ 0 6 60]
'gl::TraceGLApi::glDebugMessageInsertFn' [ 0 4 16]
'gl::DebugGLXApi::glXGetSelectedEventFn' [ 0 4 17]
'gl::GLXApiBase::glXWaitXFn' [ 0 4 16]
'base::internal::Unwrap<base::TimeTicks>' [ 0 6 16]
'base::AtomicRefCount::Decrement' [ 0 6 22]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::EGLSyncControlVSyncProvider' [ 0 4 27 56]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider::GetSyncValues' [ 0 4 27 56]
'std::__1::vector<void *, std::__1::allocator<void *> >::~vector' [ 0 5 10 56]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<void *, std::__1::basic_string<char> > >, true>' [ 0 5 10]
'gl::SurfacelessEGL::Destroy' [ 0 4 20]
'base::internal::StrictNumeric<unsigned long>::operator unsigned long<unsigned long, nullptr>' [ 0 6 16 46]
'gl::EGLApiBase::eglCreatePixmapSurfaceFn' [ 0 4 16]
'gl::EGLApiBase::eglBindTexImageFn' [ 0 4 16]
'gl::GLApiBase::glUniform2fFn' [ 0 4 15]
'std::__1::__size_type<std::__1::allocator<XVisualInfo>, long, true>' [ 0 5 10]
'gl::GLApiBase::glTexParameterfvFn' [ 0 4 15]
'gl::glStencilOpProc' [ 0 4]
'base::circular_deque<base::TimeDelta>::ShrinkCapacityIfNecessary' [ 0 6 39]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::clear' [ 0 5 10 65]
'gl::TraceGLApi::glGetObjectPtrLabelFn' [ 0 4 16]
'gl::GLStubApiBase::glBindFragDataLocationFn' [ 0 4 19]
'gl::eglGetErrorProc' [ 0 4]
'std::__1::__compressed_pair_elem<void **, 0, false>::__compressed_pair_elem<void **&, void>' [ 0 5 10 53]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::swap<gl::GLContext *>' [ 0 5 10]
'std::__1::__compressed_pair<__GLXFBConfigRec **, gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'scoped_refptr<gl::GPUTimingClient>::Release' [ 0 36]
'scoped_refptr<gl::GLContext>::get' [ 0 30]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::GLSurfacePresentationHelper> >::__tuple_impl<0, base::WeakPtr<gl::GLSurfacePresentationHelper> , base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10 103]
'Colormap' [ 0]
'gl::GLStubApi::glGenTransformFeedbacksFn' [ 0 4 15]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::~unique_ptr' [ 0 5 10 332]
'std::__1::remove_reference<gfx::NativePixmapPlane *&>' [ 0 5 10]
'gl::NoContextGLApi::glCreateShaderFn' [ 0 4 20]
'std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::OSMESAApiBase::OSMesaDestroyContextFn' [ 0 4 19]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const gfx::ColorSpace &>::__tuple_impl<0, const gfx::ColorSpace &, const gfx::ColorSpace &>' [ 0 5 10 79]
'gl::NoContextGLApi::glUniform2iFn' [ 0 4 20]
'gl::TraceGLXApi::glXQueryContextFn' [ 0 4 17]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::vector' [ 0 5 10 66]
'std::__1::remove_reference<std::__1::allocator<TimeNamePair> &>' [ 0 5 10]
'gl::NoContextGLApi::glGetUniformivFn' [ 0 4 20]
'gl::GLContextGLX::~GLContextGLX' [ 0 4 18]
'std::__1::forward<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'base::FlatContainerDupes' [ 0 6]
'gl::DebugEGLApi::eglCreatePixmapSurfaceFn' [ 0 4 17]
'gl::DebugGLApi::glGetVertexAttribPointervRobustANGLEFn' [ 0 4 16]
'gl::GLStubApi::glIsSamplerFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::deallocate' [ 0 5 10 72]
'gl::TraceEGLApi::eglQueryAPIFn' [ 0 4 17]
'gl::TraceGLApi::glUniform4fFn' [ 0 4 16]
'std::__1::allocator<int>::construct<int, const int &>' [ 0 5 10 26]
'gl::TraceEGLApi::eglGetSyncAttribKHRFn' [ 0 4 17]
'std::__1::remove_reference<std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::capacity' [ 0 6 60]
'std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>' [ 0 5 10]
'gl::NoContextGLApi::glIsShaderFn' [ 0 4 20]
'SkSize' [ 0]
'std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::BasicStringPiece<std::string> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 83]
'gl::GLFenceEGL' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, 0>' [ 0 6 16 227]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > *>::__nat, std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext>::New' [ 0 6 16 99]
'base::RepeatingCallback<void ()>' [ 0 6]
'gl::GetGLTextureServiceGUIDForTracing' [ 0 4]
'std::__1::remove_reference<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *&>' [ 0 5 10]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::allocator<base::BasicStringPiece<std::string> > >::__compressed_pair<nullptr_t, const std::__1::allocator<base::BasicStringPiece<std::string> > &>' [ 0 5 10 128]
'gl::DebugGLApi::glGetVertexAttribIivRobustANGLEFn' [ 0 4 16]
'gl::glSamplerParameterIivRobustANGLEProc' [ 0 4]
'gl::GLStubApiBase::glUnmapBufferFn' [ 0 4 19]
'base::Callback<void (gfx::SwapResult)>' [ 0 6]
'scoped_refptr<gl::GPUTimingClient>::scoped_refptr' [ 0 36]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct_backward<int>' [ 0 5 10 55]
'gl::glBindSamplerProc' [ 0 4]
'gl::SetGLGetProcAddressProc' [ 0 4]
'std::__1::distance<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>' [ 0 5 10]
'gl::TraceGLApi::glTexStorage3DFn' [ 0 4 16]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::__end_cap' [ 0 5 10 75]
'gl::GLStubApiBase::glGetDebugMessageLogFn' [ 0 4 19]
'std::__1::__compressed_pair<gl::GLStateRestorer *, std::__1::default_delete<gl::GLStateRestorer> >::__compressed_pair<gl::GLStateRestorer *, true>' [ 0 5 10 100]
'gl::NoContextGLApi::glShaderBinaryFn' [ 0 4 20]
'gl::(anonymous namespace)::g_glx_ext_swap_control_supported' [ 0 4 27]
'std::__1::operator==<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'gl::NoContextGLApi::glPopGroupMarkerEXTFn' [ 0 4 20]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext> >::OnExit' [ 0 6 167]
'std::__1::remove_reference<int>' [ 0 5 10]
'gl::glBindBufferBaseProc' [ 0 4]
'base::subtle::GetOrCreateLazyPointer<base::ThreadLocalPointer<gl::GLContext> >' [ 0 6 14]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::get' [ 0 5 10 268]
'std::__1::remove_reference<base::BasicStringPiece<std::string> *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<void *[]>, 1, true>' [ 0 5 10]
'base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>::get' [ 0 6 16 94]
'gl::NativeViewGLSurfaceGLX::Resize' [ 0 4 28]
'gl::glVertexAttribIPointerProc' [ 0 4]
'gl::glGetBufferPointervRobustANGLEProc' [ 0 4]
'std::__1::add_lvalue_reference<gl::DriverGL>' [ 0 5 10]
'gl::GLStubApiBase::GLStubApiBase' [ 0 4 19]
'std::__1::__to_raw_pointer<gfx::NativePixmapPlane>' [ 0 5 10]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__destruct_at_end' [ 0 5 10 59]
'std::__1::__const_void_pointer<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, false>' [ 0 5 10]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::unique_ptr<true, void>' [ 0 5 10 95]
'gl::NoContextGLApi::glGetQueryObjectuivFn' [ 0 4 20]
'gl::RealGLApi::glClearColorFn' [ 0 4 15]
'gl::eglGetFrameTimestampsANDROIDProc' [ 0 4]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GLVersionInfo *, std::__1::default_delete<gl::GLVersionInfo> >::__compressed_pair<gl::GLVersionInfo *, true>' [ 0 5 10 96]
'gl::RealOSMESAApi' [ 0 4]
'base::subtle::Release_Store' [ 0 6 14]
'gl::GLSurfaceEGL::InitializeOneOff' [ 0 4 18]
'std::__1::default_delete<unsigned char []>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GLFence *, std::__1::default_delete<gl::GLFence> >::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10 84]
'gl::glStencilThenCoverFillPathInstancedNVProc' [ 0 4]
'gl::GLFenceEGL::ClientWait' [ 0 4 16]
'gl::GLSurfaceAdapter::SetRelyOnImplicitSync' [ 0 4 22]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::data' [ 0 5 10 84]
'gl::DebugGLApi::glUniformMatrix4x3fvFn' [ 0 4 16]
'gl::GLStubApi::glIsShaderFn' [ 0 4 15]
'gl::glGetSamplerParameterivRobustANGLEProc' [ 0 4]
'angle::(anonymous namespace)::PlatformContext::~PlatformContext' [ 0 7 30 47]
'gl::DebugGLApi::glPathCommandsNVFn' [ 0 4 16]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'XMotionEvent' [ 0]
'gl::NativeViewGLSurfaceEGL::InitializeNativeWindow' [ 0 4 28]
'gl::GLStubApiBase::glGetBooleani_vRobustANGLEFn' [ 0 4 19]
'std::__1::default_delete<gl::GLFence>' [ 0 5 10]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'gl::GLSurfaceAdapter::ScheduleDCLayer' [ 0 4 22]
'gl::GLStubApiBase::glPointParameteriFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::GLSurfaceOverlay>, 1, true>' [ 0 5 10]
'gl::GetGLWindowSystemBindingInfoEGL' [ 0 4]
'gl::glXWaitVideoSyncSGIProc' [ 0 4]
'base::ThreadCollisionWarner::~ThreadCollisionWarner' [ 0 6 29]
'std::__1::allocator_traits<std::__1::allocator<int> >::__max_size' [ 0 5 10 55]
'gl::TraceGLXApi' [ 0 4]
'gl::GLApiBase::glGetErrorFn' [ 0 4 15]
'std::__1::enable_if<true, ui::GpuSwitchingObserver **>' [ 0 5 10]
'gl::NoContextGLApi::glDrawArraysFn' [ 0 4 20]
'gl::DriverEGL::GetPlatformExtensions' [ 0 4 15]
'std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'operator==<gl::TimeElapsedTimerQuery, gl::TimeElapsedTimerQuery>' [ 0]
'gl::TraceGLApi::glDeleteBuffersARBFn' [ 0 4 16]
'gl::NoContextGLApi::glBeginQueryFn' [ 0 4 20]
'gl::glIsFenceAPPLEProc' [ 0 4]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, false>' [ 0 5 10]
'gl::OSMESAApiBase::OSMesaMakeCurrentFn' [ 0 4 19]
'gl::DebugGLApi::glCompressedTexImage2DRobustANGLEFn' [ 0 4 16]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > >' [ 0 5 10]
'gl::(anonymous namespace)::GetDisplayFromType' [ 0 4 27]
'std::__1::__pointer_type<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, true>' [ 0 5 10 30]
'gl::DebugGLApi::glStencilStrokePathNVFn' [ 0 4 16]
'scoped_refptr<gl::TimeElapsedTimerQuery>::operator=' [ 0 42]
'gl::eglGetCurrentSurfaceProc' [ 0 4]
'logging::CheckNEImpl' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__destroy<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10 91]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >' [ 0 5 10]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__annotate_delete' [ 0 5 10 74]
'gl::GLContext::GetVersionInfo' [ 0 4 15]
'gl::NoContextGLApi::glCompressedTexImage2DRobustANGLEFn' [ 0 4 20]
'angle::(anonymous namespace)::ANGLEPlatformImpl_histogramEnumeration' [ 0 7 30]
'std::__1::__const_void_pointer<std::__1::__tree_node<gl::GLContext *, void *> *, std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'gl::EGLApiBase::eglCreateStreamKHRFn' [ 0 4 16]
'std::__1::operator==<const base::BasicStringPiece<std::string> *, const base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'gl::GLApiBase::glGetInternalformativFn' [ 0 4 15]
'gl::GLStubApiBase::glBindAttribLocationFn' [ 0 4 19]
'base::internal::CheckedNumeric<long>::CheckedNumeric<long>' [ 0 6 16 38]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::capacity' [ 0 5 10 101]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >::operator->' [ 0 5 10 79]
'gl::glXGetVisualFromFBConfigProc' [ 0 4]
'gl::TraceEGLApi::eglBindAPIFn' [ 0 4 17]
'std::__1::__stable_sort<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<ui::CARendererLayerParams::FilterEffect> &>' [ 0 5 10]
'base::ThreadChecker' [ 0 6]
'base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext>' [ 0 6 16]
'std::__1::conditional<true, std::__1::pair<int, int>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 76]
'base::ThreadLocalStorage' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &, 0>::is_method' [ 0 6 16 219 389]
'gl::DebugGLApi::glSampleCoverageFn' [ 0 4 16]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >::~RefCounted' [ 0 6 86]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::capacity' [ 0 6 16 68]
'gl::TraceGLXApi::glXCreatePixmapFn' [ 0 4 17]
'base::LazyInstance<base::Lock, base::internal::LeakyLazyInstanceTraits<base::Lock> >' [ 0 6]
'base::internal::CheckedMulFastOp<int, int>' [ 0 6 16]
'gl::DebugGLApi::glGetShaderPrecisionFormatFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::capacity' [ 0 6 54]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GLSurfacePresentationHelper *, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::__compressed_pair<gl::GLSurfacePresentationHelper *, true>' [ 0 5 10 124]
'std::__1::forward<int>' [ 0 5 10]
'gl::glUniform4fvProc' [ 0 4]
'gl::GLApiBase::glUniform1uivFn' [ 0 4 15]
'gl::TraceEGLApi::eglChooseConfigFn' [ 0 4 17]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *, 0, false>' [ 0 5 10]
'gl::GLStubApiBase::glGetFramebufferAttachmentParameterivRobustANGLEFn' [ 0 4 19]
'gl::glXQueryContextProc' [ 0 4]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__clear_and_shrink' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<XVisualInfo *, 0, false>::__compressed_pair_elem<XVisualInfo *&, void>' [ 0 5 10 59]
'lldiv_t' [ 0]
'gl::SetNullDrawGLBindingsEnabled' [ 0 4]
'gl::DebugGLApi::glStencilOpFn' [ 0 4 16]
'gfx::Vector2d::Vector2d' [ 0 5 15]
'gl::RealEGLApi::Initialize' [ 0 4 16]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::capacity' [ 0 6 16 70]
'std::__1::__compressed_pair_elem<std::__1::allocator<TimeNamePair> &, 1, false>' [ 0 5 10]
'angle::EGLDisplayType' [ 0 7]
'gl::TraceEGLApi::eglWaitSyncKHRFn' [ 0 4 17]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::__alloc' [ 0 5 10 97]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true> >' [ 0 5 10]
'gl::GLStubApiBase::glBindFragDataLocationIndexedFn' [ 0 4 19]
'gl::glCompressedTexSubImage2DProc' [ 0 4]
'base::internal::NumericRangeRepresentation' [ 0 6 16]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__move_assign_alloc' [ 0 5 10 122]
'gl::(anonymous namespace)::g_egl_khr_colorspace' [ 0 4 27]
'gl::QueryResult::GetStartValue' [ 0 4 17]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLFence, std::__1::default_delete<gl::GLFence>, false>' [ 0 5 10 30]
'scoped_refptr<base::RefCountedMemory>::Release' [ 0 39]
'gl::TraceGLApi::glGetVertexAttribfvFn' [ 0 4 16]
'gl::DriverGL::InitializeStaticBindings' [ 0 4 14]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >' [ 0 6]
'std::__1::tuple<unsigned long &&>::tuple<unsigned long, false, false>' [ 0 5 10 35]
'gl::EGLApiBase::eglReleaseTexImageFn' [ 0 4 16]
'gl::GLStubApiBase::glVertexAttrib2fvFn' [ 0 4 19]
'gl::GLApiBase::glGetRenderbufferParameterivEXTFn' [ 0 4 15]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::__alloc' [ 0 5 10 91]
'scoped_refptr<base::RefCountedMemory>::get' [ 0 39]
'base::internal::RangeCheck::IsValid' [ 0 6 16 28]
'switches::kGLSwitchesCopiedFromGpuProcessHostNumSwitches' [ 0 10]
'gl::GLImageNativePixmap' [ 0 4]
'gl::eglDestroySurfaceProc' [ 0 4]
'gl::GLApiBase::glEndQueryFn' [ 0 4 15]
'std::__1::__compressed_pair<gl::DriverGL *, std::__1::default_delete<gl::DriverGL> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::~NativeViewGLSurfaceEGL' [ 0 4 28]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >::Release' [ 0 6 108]
'base::internal::IsNull<void (gl::GLSurfacePresentationHelper::*)()>' [ 0 6 16]
'base::subtle::RefCountedBase::AddRefImpl' [ 0 6 14 30]
'std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::__hash_node_destructor' [ 0 5 10 149]
'gl::NativeViewGLSurfaceEGLX11::~NativeViewGLSurfaceEGLX11' [ 0 4 31]
'gl::GLStubApiBase::glDeleteSyncFn' [ 0 4 19]
'gl::TraceGLApi::glVertexAttrib4fvFn' [ 0 4 16]
'std::__1::vector<int, std::__1::allocator<int> >::begin' [ 0 5 10 50]
'gl::DebugGLApi::glStencilFuncFn' [ 0 4 16]
'gl::TimeElapsedTimerQuery' [ 0 4]
'gl::glGetInternalformativProc' [ 0 4]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__recommend' [ 0 5 10 88]
'std::__1::forward<void *const &>' [ 0 5 10]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::find' [ 0 5 10 200]
'gl::GLImageMemory::CopyTexSubImage' [ 0 4 19]
'scoped_refptr<gl::QueryResult>::operator->' [ 0 32]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >' [ 0 5 10]
'std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::operator++' [ 0 5 10 106]
'std::__1::begin<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>::__get_np' [ 0 5 10 192]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::back' [ 0 6 60]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::operator()' [ 0 5 10 225]
'gl::DebugGLApi::glGetInternalformativRobustANGLEFn' [ 0 4 16]
'gl::glGetUniformLocationProc' [ 0 4]
'gl::glUniform4iProc' [ 0 4]
'base::internal::VectorBuffer<base::TimeDelta>::begin' [ 0 6 16 47]
'gl::glRenderbufferStorageEXTProc' [ 0 4]
'gl::glPixelStoreiProc' [ 0 4]
'gl::NoContextGLApi::glSamplerParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::remove_reference<std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'gl::eglQueryStringProc' [ 0 4]
'gl::DebugEGLApi::eglProgramCacheResizeANGLEFn' [ 0 4 17]
'base::DefaultRefCountedTraits<gl::GLShareGroup>::Destruct' [ 0 6 49]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__construct_at_end<ui::DCRendererLayerParams::FilterEffect *>' [ 0 5 10 122]
'angle::ResetCacheProgramCallback' [ 0 7]
'gl::GPUTimingImpl::IsGoodQueryID' [ 0 4 19]
'std::__1::tuple_element<0, std::__1::tuple<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__alloc' [ 0 5 10 95]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::glBlendFuncProc' [ 0 4]
'gl::GLImageNativePixmap::Initialize::kLinuxDrmModifiers' [ 0 4 25 37]
'gl::NoContextGLApi::glUniform3uiFn' [ 0 4 20]
'XDestroyWindowEvent' [ 0]
'std::__1::remove_reference<gl::GPUTimer *>' [ 0 5 10]
'gl::GLContextStub::CreateGLApi' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >' [ 0 5 10]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::~__vector_base' [ 0 5 10 81]
'logging::CheckEQImpl<int, unsigned char>' [ 0 9]
'gl::GLFenceAndroidNativeFenceSync' [ 0 4]
'gl::HasExtension' [ 0 4]
'gl::(anonymous namespace)::CreateContextAttribs' [ 0 4 27]
'gl::QueryResult::~QueryResult' [ 0 4 17]
'std::__1::forward<std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >' [ 0 5 10]
'scoped_refptr<gl::TimeElapsedTimerQuery>::get' [ 0 42]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::capacity' [ 0 5 10 122]
'gl::GLStubApi::glGetProgramivFn' [ 0 4 15]
'gl::GLSurfaceOSMesa::~GLSurfaceOSMesa' [ 0 4 21]
'base::CallbackCancellationTraits<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, void>::IsCancelled<base::WeakPtr<gl::GLSurfacePresentationHelper>>' [ 0 6 151]
'Cursor' [ 0]
'std::__1::move<std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> > &>' [ 0 5 10]
'int_fast8_t' [ 0]
'gl::TraceGLApi::glSamplerParameterfvRobustANGLEFn' [ 0 4 16]
'base::circular_deque<base::TimeDelta>::CheckValidIndex' [ 0 6 39]
'std::__1::remove_reference<base::SharedMemory *&>' [ 0 5 10]
'gl::EGLApiBase::eglStreamConsumerAcquireKHRFn' [ 0 4 16]
'std::__1::remove_reference<gl::GLFenceAndroidNativeFenceSync *>' [ 0 5 10]
'std::__1::allocator<ContextCreationInfo>' [ 0 5 10]
'gl::GLWorkarounds' [ 0 4]
'gl::DebugGLApi::glUniformMatrix2x3fvFn' [ 0 4 16]
'ui::ScopedReleaseCurrent::~ScopedReleaseCurrent' [ 0 4 26]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *>' [ 0 5 10]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'std::__1::forward<std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'gfx::RectF' [ 0 5]
'gl::HasExtension<41>' [ 0 4]
'gl::GLStubApiBase::glProgramParameteriFn' [ 0 4 19]
'std::__1::__compressed_pair<gl::GLSurfacePresentationHelper *, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::__compressed_pair<gl::GLSurfacePresentationHelper *&, true>' [ 0 5 10 124]
'gl::DebugGLApi::glGetIntegervRobustANGLEFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >' [ 0 5 10]
'char' [ 0]
'std::__1::allocator<std::__1::basic_string<char> >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 52]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 93]
'gl::GLApiBase::glIsFenceNVFn' [ 0 4 15]
'std::__1::forward<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *&>' [ 0 5 10]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >::get' [ 0 5 10 77]
'scoped_refptr<gl::GLImage>::Release' [ 0 28]
'base::internal::circular_deque_const_iterator<base::TimeDelta>::operator*' [ 0 6 16 64]
'gl::NoContextGLApi::glGenFencesAPPLEFn' [ 0 4 20]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >::Release' [ 0 6 80]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::end' [ 0 5 10 82]
'std::__1::unique_ptr<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >::reset' [ 0 5 10 81]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::Decrement' [ 0 6 16 87]
'gl::GLStubApiBase::glPopGroupMarkerEXTFn' [ 0 4 19]
'gl::glIsFramebufferEXTProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::construct<gl::DisplayType, gl::DisplayType>' [ 0 5 10 67]
'gl::DebugEGLApi::eglStreamConsumerAcquireKHRFn' [ 0 4 17]
'std::__1::forward_as_tuple<unsigned long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>, 1, true>' [ 0 5 10]
'gl::DebugGLXApi::glXCopyContextFn' [ 0 4 17]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'gl::GLImageNativePixmap::GetInternalFormat' [ 0 4 25]
'gl::TraceGLXApi::glXCopySubBufferMESAFn' [ 0 4 17]
'gl::PbufferGLSurfaceEGL::GetSize' [ 0 4 25]
'base::Thread::task_runner' [ 0 6 14]
'gl::ScopedActiveTexture::ScopedActiveTexture' [ 0 4 25]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *&>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >' [ 0 5 10]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp' [ 0 22]
'base::internal::LeakyLazyInstanceTraits<base::Lock>' [ 0 6 16]
'gl::GLSurfaceGLX' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::destroy<ContextCreationInfo>' [ 0 5 10 71]
'gl::GLSurfaceFormat::GetStencilBits' [ 0 4 21]
'gl::DebugGLApi::glGetQueryObjectui64vFn' [ 0 4 16]
'gl::DebugGLApi::glVertexAttrib1fFn' [ 0 4 16]
'switches::kEnableGPUServiceLogging' [ 0 10]
'std::__1::remove_reference<gl::GPUTiming *>' [ 0 5 10]
'gl::GLContextStub::GLContextStub' [ 0 4 19]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::front' [ 0 5 10 74]
'gl::DebugGLXApi::glXChooseFBConfigFn' [ 0 4 17]
'std::__1::remove_reference<gl::GLSurfacePresentationHelper::Frame>' [ 0 5 10]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::~SGIVideoSyncVSyncProvider' [ 0 4 27 54]
'std::__1::forward<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long> >' [ 0 5 10]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::operator=' [ 0 6 16 203 209]
'std::__1::__pointer_type_imp::__pointer_type<void *, std::__1::default_delete<void *[]>, false>' [ 0 5 10 30]
'XGenericEventCookie' [ 0]
'gl::g_current_osmesa_context' [ 0 4]
'gl::NoContextGLApi::glClearColorFn' [ 0 4 20]
'gl::DebugGLApi::glGetSamplerParameterivRobustANGLEFn' [ 0 4 16]
'gl::glUniformBlockBindingProc' [ 0 4]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >' [ 0 5 10]
'logging::LOG_FATAL' [ 0 9]
'gl::GLApiBase::glDepthFuncFn' [ 0 4 15]
'gl::NoContextGLApi::glActiveTextureFn' [ 0 4 20]
'gl::glGetErrorProc' [ 0 4]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >::DeleteInternal<gl::GPUTimingClient>' [ 0 6 92]
'std::__1::forward<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'gl::DriverOSMESA::GetPlatformExtensions' [ 0 4 18]
'AnnotateIgnoreSyncEnd' [ 0]
'gl::TraceGLApi::glVertexAttribDivisorANGLEFn' [ 0 4 16]
'gl::GLApiBase::glGetBooleani_vRobustANGLEFn' [ 0 4 15]
'gl::eglCreatePbufferFromClientBufferProc' [ 0 4]
'gl::GLContextGLX::MakeCurrent::trace_event_unique_atomic221' [ 0 4 18 31]
'gl::kANGLEImplementationOpenGLNULLName' [ 0 4]
'std::__1::iterator_traits<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'int16_t' [ 0]
'std::__1::ios_base::unsetf' [ 0 5 10 20]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<gl::GLContext *> >, std::__1::__tree_node<gl::GLContext *, void *> >' [ 0 5 10]
'std::__1::__apply_cv<unsigned int, int, false, false>' [ 0 5 10]
'gl::GLContext::GLContext' [ 0 4 15]
'std::__1::allocator<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10]
'gl::glXGetFBConfigsProc' [ 0 4]
'gl::glGetAttachedShadersProc' [ 0 4]
'gl::DebugOSMESAApi::OSMesaGetDepthBufferFn' [ 0 4 20]
'gl::DebugEGLApi::eglGetFrameTimestampsANDROIDFn' [ 0 4 17]
'gl::NoContextGLApi::glIsVertexArrayOESFn' [ 0 4 20]
'base::PlatformThreadRef' [ 0 6]
'gl::GLContext::GetGLRenderer' [ 0 4 15]
'gl::NativeViewGLSurfaceGLX::ForwardExposeEvent' [ 0 4 28]
'gl::glXGetCurrentDisplayProc' [ 0 4]
'std::__1::addressof<std::__1::__value_type<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::forward<ui::GpuSwitchingObserver *const &>' [ 0 5 10]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__push_back_slow_path<gl::DisplayType>' [ 0 5 10 74]
'gl::GLStubApiBase::glDeleteTransformFeedbacksFn' [ 0 4 19]
'scoped_refptr<gfx::NativePixmap>' [ 0]
'gl::TraceGLApi::glIsRenderbufferEXTFn' [ 0 4 16]
'gl::TraceGLApi::glIsBufferFn' [ 0 4 16]
'std::__1::forward<std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10]
'scoped_refptr<gl::GLContext>::~scoped_refptr' [ 0 30]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::get' [ 0 5 10 264]
'std::__1::sort<TimeNamePair *, (lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &>' [ 0 5 10]
'gl::TraceGLApi::glBindFragDataLocationIndexedFn' [ 0 4 16]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >::operator*' [ 0 5 10 153]
'scoped_refptr<gl::GLShareGroup>::scoped_refptr' [ 0 33]
'gl::(anonymous namespace)::g_glx_create_context_profile_supported' [ 0 4 27]
'base::time_internal' [ 0 6]
'base::FilePath' [ 0 6]
'std::__1::__size_type<std::__1::allocator<void *>, long, true>' [ 0 5 10]
'AnnotateRWLockAcquired' [ 0]
'base::internal::ArithmeticOrUnderlyingEnum<long, false>' [ 0 6 16]
'gl::GPUTimer::GetStartEndTimestamps' [ 0 4 14]
'std::__1::__destruct_n' [ 0 5 10]
'gl::GLImageGLX::CopyTexSubImage' [ 0 4 16]
'gl::DebugGLApi::glGetActiveAttribFn' [ 0 4 16]
'std::__1::move<gfx::NativePixmap *&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__destruct_n &>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, gl::GLContext *const>' [ 0 5 10]
'gl::TraceGLApi::glCompileShaderFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::pop_front' [ 0 6 54]
'gl::DebugEGLApi::~DebugEGLApi' [ 0 4 17]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'base::File' [ 0 6]
'gl::GLSurfaceGLX::IsTextureFromPixmapSupported' [ 0 4 18]
'gl::TraceGLApi::~TraceGLApi' [ 0 4 16]
'gl::GLSurfaceOSMesa::SwapBuffers' [ 0 4 21]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<unsigned char *&, void>' [ 0 5 10 61]
'gl::GLApiBase::glGetInteger64i_vRobustANGLEFn' [ 0 4 15]
'std::__1::map<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>' [ 0 6]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::__end_cap' [ 0 5 10 73]
'gl::GLApiBase::glDetachShaderFn' [ 0 4 15]
'gl::glFinishProc' [ 0 4]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::~__vector_base' [ 0 5 10 129]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >, 1, false>' [ 0 5 10]
'gl::GLStubApiBase::glUniform3uiFn' [ 0 4 19]
'ScreenFormat' [ 0]
'std::__1::addressof<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'gl::NoContextGLApi::glGetFragDataLocationFn' [ 0 4 20]
'std::__1::__vector_base<int, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<ui::DCRendererLayerParams::FilterEffect *>::__nat, ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10]
'gl::GLStubApiBase::glTexParameteriFn' [ 0 4 19]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__annotate_delete' [ 0 5 10 88]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **, 0, false>' [ 0 5 10]
'base::RepeatingCallback<long ()>::Run' [ 0 6 34]
'base::circular_deque<base::TimeDelta>::push_back' [ 0 6 39]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::emplace_back<int &, int &, int, unsigned long &>' [ 0 5 10 88]
'XClientMessageEvent' [ 0]
'base::internal::CallbackBase::CallbackBase' [ 0 6 16 30]
'std::__1::make_unique<gfx::GpuFence, gfx::GpuFenceHandle &>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 5 10]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::ExpandCapacityIfNecessary' [ 0 6 54]
'gl::DebugGLApi::glPathParameteriNVFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<gl::CurrentGL *, 0, false>::__compressed_pair_elem<gl::CurrentGL *, void>' [ 0 5 10 61]
'base::ThreadLocalPointer<gl::GLContext>' [ 0 6]
'std::__1::vector<void *, std::__1::allocator<void *> >::__annotate_new' [ 0 5 10 56]
'gl::glXGetCurrentDrawableProc' [ 0 4]
'std::__1::__pointer_type<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >' [ 0 5 10]
'base::Time' [ 0 6]
'std::__1::pointer_traits<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'gl::TraceGLApi::glGetSamplerParameterfvRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glGetTexParameterfvRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >::unique_ptr<true, void>' [ 0 5 10 81]
'std::__1::less<gl::GLContext *>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >, false>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >, long, true>' [ 0 5 10]
'gl::GLContextEGL::Destroy' [ 0 4 18]
'gl::NoContextGLApi::glGetVertexAttribPointervRobustANGLEFn' [ 0 4 20]
'gl::TraceGLApi::glMapBufferFn' [ 0 4 16]
'gl::GLApi::GLApi' [ 0 4 11]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLContext *, std::__1::allocator<gl::GLContext *>, true>' [ 0 5 10 30]
'gl::GLApiBase::glDeleteBuffersARBFn' [ 0 4 15]
'Atom' [ 0]
'std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>' [ 0 5 10]
'gl::GLApiBase::glVertexAttrib2fvFn' [ 0 4 15]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true> >' [ 0 5 10]
'gl::ScopedColorMask::~ScopedColorMask' [ 0 4 21]
'gl::glUniform2fProc' [ 0 4]
'std::__1::addressof<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'gl::GLSurfaceEGL::IsEGLContextPrioritySupported' [ 0 4 18]
'scoped_refptr<gl::GLSurface>::Release' [ 0 30]
'std::__1::forward<std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::__construct_backward<gl::DisplayType>' [ 0 5 10 67]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::get' [ 0 5 10 115]
'std::__1::operator==<ui::GpuSwitchingObserver *const *, ui::GpuSwitchingObserver *const *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::TraceGLApi *, 0, false>::__compressed_pair_elem<gl::TraceGLApi *, void>' [ 0 5 10 62]
'gl::NoContextGLApi::glVertexAttribI4uivFn' [ 0 4 20]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'logging::CheckNEImpl<unsigned int, unsigned long>' [ 0 9]
'gl::DebugGLApi::glIsPathNVFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::VSyncProvider>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::VSyncProvider>, void>' [ 0 5 10 89]
'base::internal::IsValueNegative<long, nullptr>' [ 0 6 16]
'gl::glUniform4uiProc' [ 0 4]
'gl::glGetObjectLabelProc' [ 0 4]
'gl::glStencilFillPathInstancedNVProc' [ 0 4]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::operator++' [ 0 5 10 121]
'gl::GLApiBase::glIsRenderbufferEXTFn' [ 0 4 15]
'std::__1::forward<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'__vtbl_ptr_type' [ 0]
'base::internal::FunctorTraits<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), void>' [ 0 6 16]
'AnnotateBenignRace' [ 0]
'std::__1::forward<unsigned long &>' [ 0 5 10]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), void>' [ 0 6 16]
'std::__1::forward<base::FileDescriptor>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'base::SharedMemory::mapped_id' [ 0 6 20]
'base::internal::DstRangeRelationToSrcRange<unsigned long, std::numeric_limits, unsigned long>' [ 0 6 16]
'std::__1::unique_ptr<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >::unique_ptr<true, void>' [ 0 5 10 161]
'gl::GLApiBase::glDeleteProgramFn' [ 0 4 15]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::end' [ 0 5 10 96]
'base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory>::Destruct' [ 0 6 65]
'gl::glXGetMscRateOMLProc' [ 0 4]
'gl::TraceGLApi::glReadPixelsRobustANGLEFn' [ 0 4 16]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::clear' [ 0 5 10 105]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, long, true>' [ 0 5 10]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::operator bool' [ 0 5 10 75]
'gl::GLStubApiBase::glUniform4iFn' [ 0 4 19]
'std::__1::remove_reference<const std::__1::allocator<ui::CARendererLayerParams::FilterEffect> &>' [ 0 5 10]
'std::__1::allocator<TimeNamePair>' [ 0 5 10]
'gl::GLStubApiBase::glClearColorFn' [ 0 4 19]
'gl::GLApiBase::glSamplerParameteriFn' [ 0 4 15]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__annotate_new' [ 0 5 10 96]
'gl::DebugEGLApi::eglMakeCurrentFn' [ 0 4 17]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, false>::__tuple_leaf<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, void>' [ 0 5 10 103]
'std::__1::default_delete<gl::GLVersionInfo>' [ 0 5 10]
'gl::TraceGLApi::glFramebufferTexture2DMultisampleEXTFn' [ 0 4 16]
'gl::DebugGLApi::glCreateShaderFn' [ 0 4 16]
'std::__1::allocator<long>' [ 0 5 10]
'gl::RealGLApi::glRenderbufferStorageMultisampleFn' [ 0 4 15]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >' [ 0 5 10]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::value_comp' [ 0 5 10 107]
'trace_event_internal::AddTraceEvent' [ 0 22]
'gl::glGetTexParameterfvProc' [ 0 4]
'gl::DebugGLApi::glPolygonOffsetFn' [ 0 4 16]
'gl::TraceGLApi::glGetTexParameterIivRobustANGLEFn' [ 0 4 16]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::remove_reference<base::TimeTicks>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'std::__1::__compressed_pair<gfx::GpuFence *, std::__1::default_delete<gfx::GpuFence> >::__compressed_pair<gfx::GpuFence *, std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10 88]
'gl::glGetObjectPtrLabelProc' [ 0 4]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >::allocate' [ 0 5 10 116]
'gl::NoContextGLApi::glBindRenderbufferEXTFn' [ 0 4 20]
'gl::FilterGLExtensionList::operator()' [ 0 4 27]
'angle::ProgramKeyType' [ 0 7]
'gl::TraceEGLApi::~TraceEGLApi' [ 0 4 17]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer>::unique_ptr<true, void>' [ 0 5 10 96]
'gl::DebugGLApi::glGetQueryObjectuivFn' [ 0 4 16]
'gl::DebugGLXApi::glXQueryVersionFn' [ 0 4 17]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::__return_temporary_buffer>' [ 0 5 10]
'base::internal::CheckedNumeric<int>::CheckedNumeric<int>' [ 0 6 16 37]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::clear' [ 0 5 10 73]
'gl::EGLApiBase::~EGLApiBase' [ 0 4 16]
'base::SupportsWeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::~SupportsWeakPtr' [ 0 6 77]
'std::__1::__inplace_merge<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::__destruct_at_end' [ 0 5 10 73]
'std::__1::__compressed_pair_elem<gfx::GpuFence *, 0, false>' [ 0 5 10]
'base::CallbackCancellationTraits<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void>::IsCancelled<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>>' [ 0 6 225]
'gl::TraceGLApi::glReleaseShaderCompilerFn' [ 0 4 16]
'gl::TraceGLApi::glStencilOpFn' [ 0 4 16]
'base::subtle::RefCountedBase::~RefCountedBase' [ 0 6 14 30]
'std::__1::forward<const gfx::ColorSpace &>' [ 0 5 10]
'scoped_refptr<gl::GLShareGroup>::operator=' [ 0 33]
'std::__1::__compressed_pair<gl::GPUTimer *, std::__1::default_delete<gl::GPUTimer> >::__compressed_pair<gl::GPUTimer *, std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10 86]
'gl::glIsTransformFeedbackProc' [ 0 4]
'gl::GLApiBase::glPrimitiveRestartIndexFn' [ 0 4 15]
'std::__1::numeric_limits<unsigned long>' [ 0 5 10]
'gl::GLContextOSMesa::ReleaseCurrent' [ 0 4 21]
'gl::TraceGLApi::glGenVertexArraysOESFn' [ 0 4 16]
'gl::GLSurfaceOSMesa::GetSize' [ 0 4 21]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::remove' [ 0 5 10 466]
'ui::ScopedMakeCurrent::ScopedMakeCurrent' [ 0 4 23]
'gl::GLApiBase::glSamplerParameterIuivRobustANGLEFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'gl::DebugGLApi::glVertexAttribI4iFn' [ 0 4 16]
'gl::DebugGLApi::glShaderBinaryFn' [ 0 4 16]
'ui::PostDispatchAction' [ 0 4]
'gl::DebugGLApi::glCompressedTexSubImage3DFn' [ 0 4 16]
'gl::DebugGLApi::glDrawElementsInstancedANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glFinishFenceNVFn' [ 0 4 20]
'base::LazyInstance<gl::(anonymous namespace)::TraceSwapEventsInitializer, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<gl::(anonymous namespace)::TraceSwapEventsInitializer> >' [ 0 6]
'gl::TraceGLApi::glGetActiveUniformFn' [ 0 4 16]
'gl::EGLApiBase::eglSwapBuffersWithDamageKHRFn' [ 0 4 16]
'gl::GLSurfaceEGL::IsRobustResourceInitSupported' [ 0 4 18]
'gl::GLStubApiBase::glIsPathNVFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::destroy<gfx::NativePixmapPlane>' [ 0 5 10 74]
'gl::glPopGroupMarkerEXTProc' [ 0 4]
'gl::GLApiBase::glGetTexLevelParameterivRobustANGLEFn' [ 0 4 15]
'gl::GLSurfaceOSMesaHeadless::~GLSurfaceOSMesaHeadless' [ 0 4 29]
'gl::glBindFramebufferEXTProc' [ 0 4]
'std::__1::__move_backward<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::(anonymous namespace)::GLES2RGBData<(lambda at ../../ui/gl/gl_image_memory.cc:307:27)>' [ 0 4 27]
'gl::glGetInternalformativRobustANGLEProc' [ 0 4]
'gl::GLFenceAndroidNativeFenceSync::GLFenceAndroidNativeFenceSync' [ 0 4 35]
'gl::glTexSubImage3DProc' [ 0 4]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::get' [ 0 5 10 79]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'gl::GLStubApiBase::glGetInternalformativRobustANGLEFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::destroy<base::BasicStringPiece<std::string> >' [ 0 5 10 88]
'gl::TraceGLApi::glBlendBarrierKHRFn' [ 0 4 16]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> > >::num_bound_args' [ 0 6 16 163]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::operator++' [ 0 5 10 68]
'gl::GLApiBase::glGetUniformivRobustANGLEFn' [ 0 4 15]
'std::__1::__to_raw_pointer<TimeNamePair>' [ 0 5 10]
'gl::GLSurfacePresentationHelper::ScopedSwapBuffers::result' [ 0 4 33 52]
'std::__1::move<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &>' [ 0 5 10]
'gl::GLXApiBase::glXCreatePixmapFn' [ 0 4 16]
'gl::TraceGLXApi::glXUseXFontFn' [ 0 4 17]
'gl::GLStubApiBase::glGetActiveAttribFn' [ 0 4 19]
'gl::DebugGLApi::glUniform3iFn' [ 0 4 16]
'base::internal::ApplyCancellationTraitsImpl<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, 0, 1>' [ 0 6 16]
'gl::GLVersionInfo::IsAtLeastGL' [ 0 4 19]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::operator+=' [ 0 5 10 68]
'base::RepeatingCallback<void (const std::__1::basic_string<char> &, const std::__1::basic_string<char> &)>' [ 0 6]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::release' [ 0 5 10 167]
'std::__1::forward<const base::WeakPtr<gl::GLSurfacePresentationHelper> &>' [ 0 5 10]
'base::internal::ArithmeticPromotionCategory' [ 0 6 16]
'base::UnsanitizedCfiCall<void (*)(void *)>' [ 0 6]
'gl::glDepthMaskProc' [ 0 4]
'gl::GLStubApiBase::glTexSubImage2DRobustANGLEFn' [ 0 4 19]
'std::__1::move<TimeNamePair &>' [ 0 5 10]
'gl::NoContextGLApi::glEGLImageTargetRenderbufferStorageOESFn' [ 0 4 20]
'gl::GLImageMemory::CopyTexSubImage::trace_event_unique_atomic455' [ 0 4 19 36]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >::DeleteInternal<gl::TimerQuery>' [ 0 6 82]
'std::__1::remove_reference<gfx::VSyncProvider *>' [ 0 5 10]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::reset' [ 0 5 10 65]
'gl::TraceGLApi::glInvalidateFramebufferFn' [ 0 4 16]
'gl::NoContextGLApi::glGetShaderInfoLogFn' [ 0 4 20]
'gl::DebugGLApi::glVertexAttribI4uiFn' [ 0 4 16]
'gl::DebugGLApi::glDepthMaskFn' [ 0 4 16]
'gl::InitializeStaticGLBindingsGL' [ 0 4]
'gl::GLStubApiBase::glCompressedTexImage2DFn' [ 0 4 19]
'gl::TraceGLApi::glUniformMatrix3x4fvFn' [ 0 4 16]
'std::__1::unique_ptr<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >::~unique_ptr' [ 0 5 10 81]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__split_buffer' [ 0 5 10 93]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator=' [ 0 5 10 101]
'std::__1::__tuple_types<const gfx::ColorSpace &>' [ 0 5 10]
'gl::GLApiBase::glGetObjectPtrLabelFn' [ 0 4 15]
'gl::RealEGLApi::~RealEGLApi' [ 0 4 16]
'logging::LogSeverity' [ 0 9]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__vector_base' [ 0 5 10 129]
'gl::DebugEGLApi::eglTerminateFn' [ 0 4 17]
'std::__1::vector<void *, std::__1::allocator<void *> >::__push_back_slow_path<void *const &>' [ 0 5 10 56]
'gl::GLStubApiBase::glCoverFillPathInstancedNVFn' [ 0 4 19]
'gl::DebugGLApi::glStencilFillPathInstancedNVFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<int> >::construct<int>' [ 0 5 10 55]
'gl::GLApiBase::glStencilThenCoverStrokePathInstancedNVFn' [ 0 4 15]
'ptrdiff_t' [ 0]
'base::RepeatingCallback<void (const std::__1::basic_string<char> &, const std::__1::basic_string<char> &)>::RepeatingCallback' [ 0 6 108]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::make_unsigned<int>' [ 0 5 10]
'std::__1::allocator<gl::DisplayType>::deallocate' [ 0 5 10 38]
'std::__1::operator!=' [ 0 5 10]
'std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::operator*' [ 0 5 10 100]
'gl::TraceGLApi::glDeleteQueriesFn' [ 0 4 16]
'gl::TraceEGLApi::eglCreatePbufferSurfaceFn' [ 0 4 17]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__recommend' [ 0 5 10 68]
'std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>' [ 0 5 10]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'std::__1::allocator<base::BasicStringPiece<std::string> >::construct<base::BasicStringPiece<std::string>>' [ 0 5 10 59]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::erase' [ 0 5 10 104]
'gl::GLStubApiBase::glCullFaceFn' [ 0 4 19]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >, true>' [ 0 5 10 30]
'gl::DebugGLApi::glSamplerParameterfvFn' [ 0 4 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::push_back' [ 0 5 10 68]
'gl::GLApiBase::glTexParameterivFn' [ 0 4 15]
'gl::GLStubApiBase::glDeletePathsNVFn' [ 0 4 19]
'std::__1::move<base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> > &>' [ 0 5 10]
'gl::GLApiBase::glTexParameteriFn' [ 0 4 15]
'gl::NoContextGLApi::glGetProgramInterfaceivFn' [ 0 4 20]
'gl::TraceGLApi::glFramebufferTextureLayerFn' [ 0 4 16]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::~__vector_base' [ 0 5 10 89]
'gl::DebugGLApi::glBindFramebufferEXTFn' [ 0 4 16]
'std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::allocate' [ 0 5 10 219]
'gl::DebugEGLApi::eglCreateImageKHRFn' [ 0 4 17]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::clear' [ 0 5 10 299]
'std::__1::__pointer_type<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >' [ 0 5 10]
'gl::GLImageRefCountedMemory' [ 0 4]
'gl::PbufferGLSurfaceEGL' [ 0 4]
'base::trace_event::MemoryDumpManager::system_allocator_pool_name' [ 0 6 19 38]
'gl::TraceGLApi::glStencilStrokePathInstancedNVFn' [ 0 4 16]
'gl::NoContextGLApi::glDeleteShaderFn' [ 0 4 20]
'gl::GLApiBase::glUniformBlockBindingFn' [ 0 4 15]
'std::__1::unique_ptr<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >::~unique_ptr' [ 0 5 10 161]
'gl::GLImageMemory::~GLImageMemory' [ 0 4 19]
'base::AtomicRefCount::Increment' [ 0 6 22]
'gl::GLStubApi::glGenBuffersARBFn' [ 0 4 15]
'gl::eglProgramCachePopulateANGLEProc' [ 0 4]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::__destruct_at_end' [ 0 5 10 105]
'Font' [ 0]
'std::__1::forward<std::__1::default_delete<gfx::FixedVSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glUniform3uivFn' [ 0 4 20]
'gl::TraceEGLApi::eglDupNativeFenceFDANDROIDFn' [ 0 4 17]
'gfx::operator==' [ 0 5]
'gl::g_real_egl' [ 0 4]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >::Destroy' [ 0 6 16 153]
'gl::ExtensionSet' [ 0 4]
'std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>' [ 0 5 10]
'base::DefaultSingletonTraits<gl::GLVisualPickerGLX>::Delete' [ 0 6 53]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::operator bool' [ 0 5 10 95]
'gl::GLApiBase::glSamplerParameterivFn' [ 0 4 15]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::__vector_base' [ 0 5 10 91]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::insert' [ 0 5 10 104]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::get' [ 0 5 10 176]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__destruct_at_end' [ 0 5 10 93]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'gl::GLSurface::DeferDraws' [ 0 4 15]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::operator->' [ 0 5 10 119]
'gl::GLStubApiBase::glTestFenceNVFn' [ 0 4 19]
'gl::DriverGL' [ 0 4]
'base::trace_event::TraceCategory' [ 0 6 19]
'gl::glXCopySubBufferMESAProc' [ 0 4]
'base::internal::OptionalStorage<unsigned long, true, true>' [ 0 6 16]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >, 1, true>' [ 0 5 10]
'scoped_refptr<gl::QueryResult>::operator=' [ 0 32]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__max_size' [ 0 5 10 65]
'gl::GLContext::HasExtension' [ 0 4 15]
'std::__1::__compressed_pair_elem<__GLXFBConfigRec **, 0, false>' [ 0 5 10]
'gfx::GpuFence' [ 0 5]
'gl::TraceGLApi::glGetFragDataLocationFn' [ 0 4 16]
'gl::TraceGLApi::glCompressedTexImage2DFn' [ 0 4 16]
'gl::DebugGLApi::glUniformMatrix4fvFn' [ 0 4 16]
'gl::GLXApiBase::glXGetCurrentReadDrawableFn' [ 0 4 16]
'gl::GLApiBase::glGetFragDataIndexFn' [ 0 4 15]
'std::__1::iterator_traits<ui::GpuSwitchingObserver *const *>' [ 0 5 10]
'scoped_refptr<gl::TimeElapsedTimerQuery>::AddRef' [ 0 42]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::size' [ 0 6 54]
'gl::TraceGLApi::glWindowRectanglesEXTFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::FlipsVertically' [ 0 4 28]
'std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >::allocate' [ 0 5 10 70]
'__pthread_list_t' [ 0]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__end_cap' [ 0 5 10 89]
'gl::GLSurfaceOverlay::Flush' [ 0 4 22]
'gl::NativeViewGLSurfaceEGL::IsOffscreen' [ 0 4 28]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::destroy' [ 0 5 10 539]
'gl::glCopyTexSubImage2DProc' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare::value_compare<const std::__1::less<void> &>' [ 0 6 16 203 218]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), void>::Invoke<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16 180]
'gl::DebugGLApi::glStencilThenCoverStrokePathNVFn' [ 0 4 16]
'gl::TraceEGLApi::eglQueryContextFn' [ 0 4 17]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>::operator+' [ 0 6 21 48]
'std::__1::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *, 0, false>::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *&, void>' [ 0 5 10 81]
'gl::GLApiBase::glStencilMaskFn' [ 0 4 15]
'scoped_refptr<gl::GLShareGroup>' [ 0]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::operator bool' [ 0 5 10 81]
'gl::GLStubApiBase::glVertexAttribI4iFn' [ 0 4 19]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::__compressed_pair<true, void>' [ 0 5 10 211]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__destruct_at_end' [ 0 5 10 96]
'gl::ExtensionsGL' [ 0 4]
'base::time_internal::TimeBase<base::TimeTicks>::operator<' [ 0 6 21 48]
'gl::glGenTransformFeedbacksProc' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::sort_and_unique' [ 0 6 16 203]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::reset' [ 0 5 10 115]
'gl::GPUTimingImpl::GetElapsedQueryCount' [ 0 4 19]
'base::internal::LockImpl::Unlock' [ 0 6 16 26]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1184' [ 0 4 28 45]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::clear' [ 0 5 10 91]
'angle::(anonymous namespace)::ANGLEPlatformImpl_histogramBoolean' [ 0 7 30]
'gl::glSamplerParameterfvRobustANGLEProc' [ 0 4]
'gl::DebugGLApi::glUniformMatrix4x2fvFn' [ 0 4 16]
'gl::glVertexAttribI4ivProc' [ 0 4]
'std::__1::__vector_base<XVisualInfo, std::__1::allocator<XVisualInfo> >::__vector_base' [ 0 5 10 73]
'std::__1::remove_reference<const unsigned int &>' [ 0 5 10]
'gl::GLApiBase::glStencilFillPathNVFn' [ 0 4 15]
'gl::DebugGLApi::glCompressedTexSubImage2DRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glTexParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::GLStubApiBase::glCopySubTextureCHROMIUMFn' [ 0 4 19]
'gl::DebugEGLApi::eglStreamAttribKHRFn' [ 0 4 17]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >' [ 0 5 10]
'gl::GLStubApiBase::glIsShaderFn' [ 0 4 19]
'std::__1::allocator<base::FileDescriptor>::construct<base::FileDescriptor, base::FileDescriptor>' [ 0 5 10 43]
'gl::GLFenceNV::ClientWait' [ 0 4 15]
'std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >' [ 0 5 10]
'scoped_refptr<gfx::NativePixmap>::operator->' [ 0 34]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> &>' [ 0 5 10 177]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::deallocate' [ 0 5 10 74]
'gl::glClearProc' [ 0 4]
'gl::TraceGLApi::glGetUniformIndicesFn' [ 0 4 16]
'gl::(anonymous namespace)::SGIVideoSyncThread::Create' [ 0 4 27 47]
'base::internal::FunctorTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, void>::Invoke<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>' [ 0 6 16 103]
'base::internal::ApplyCancellationTraitsImpl<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, 0>' [ 0 6 16]
'std::__1::__pointer_type<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10]
'gl::GLSurfaceStub::GetSize' [ 0 4 19]
'angle::(anonymous namespace)::ANGLEPlatformImpl_histogramCustomCounts' [ 0 7 30]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::size' [ 0 5 10 68]
'base::TimeDelta::FromMicroseconds' [ 0 6 17]
'gl::GPUTimingClient::GetTimerTypeName' [ 0 4 21]
'gl::NativeViewGLSurfaceEGL::Destroy' [ 0 4 28]
'std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>::operator()' [ 0 5 10 224]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::construct<TimeNamePair, TimeNamePair>' [ 0 5 10 64]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<unsigned long>' [ 0 6 16 75]
'gl::DebugGLApi::glTexImage3DFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane> &, 1, false>::__get' [ 0 5 10 91]
'XMapRequestEvent' [ 0]
'std::__1::__const_void_pointer<gl::GLSurface::CALayerInUseQuery *, std::__1::allocator<gl::GLSurface::CALayerInUseQuery>, false>' [ 0 5 10]
'gfx::Rect::width' [ 0 5 11]
'gl::GLContext::gl_api' [ 0 4 15]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct<int>' [ 0 5 10 55]
'gl::g_debug_glx' [ 0 4]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__push_back_slow_path<const gl::DisplayType &>' [ 0 5 10 74]
'std::__1::add_lvalue_reference<unsigned char>' [ 0 5 10]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'gl::(anonymous namespace)::g_egl_create_context_bind_generates_resource_supported' [ 0 4 27]
'gl::GLApiBase::glCoverStrokePathNVFn' [ 0 4 15]
'gl::GLApiBase::glGetTexParameterfvRobustANGLEFn' [ 0 4 15]
'gl::GLSurfaceOSMesaX11::SwapBuffers' [ 0 4 24]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::WeakPtr' [ 0 6 75]
'Window' [ 0]
'gl::PbufferGLSurfaceEGL::SwapBuffers' [ 0 4 25]
'std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>' [ 0 5 10]
'base::TimeDelta::magnitude' [ 0 6 17]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::__atomic_base<unsigned int, false>::store' [ 0 5 10 46]
'base::internal::Unwrap<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 6 16]
'std::__1::unique_ptr<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >' [ 0 5 10]
'gl::TimerQuery' [ 0 4]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, false>' [ 0 5 10]
'gl::GLApiBase::glGetProgramInterfaceivRobustANGLEFn' [ 0 4 15]
'base::subtle::GetOrCreateLazyPointer<gl::(anonymous namespace)::TraceSwapEventsInitializer>' [ 0 6 14]
'gl::kANGLEImplementationNullName' [ 0 4]
'gl::GLApiBase::glFramebufferTexture2DMultisampleEXTFn' [ 0 4 15]
'gl::glCoverStrokePathNVProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::__construct<base::FileDescriptor, base::FileDescriptor>' [ 0 5 10 72]
'gl::NoContextGLApi::glPathStencilFuncNVFn' [ 0 4 20]
'gl::glClearStencilProc' [ 0 4]
'std::__1::__half_inplace_merge<std::__1::__invert<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &>, std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>, std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >, std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'gl::TraceGLXApi::glXGetCurrentReadDrawableFn' [ 0 4 17]
'std::__1::__size_type<std::__1::allocator<base::BasicStringPiece<std::string> >, long, true>' [ 0 5 10]
'base::internal::DsoSpecific<int>' [ 0 6 16]
'gl::GLSurface::ScheduleDCLayer' [ 0 4 15]
'logging::MakeCheckOpValueString<base::TimeTicks::Clock>' [ 0 9]
'base::internal::CheckedNumeric<long>::Wrapper<long>::value' [ 0 6 16 38 53]
'gl::GLStubApiBase::glGetQueryObjectuivFn' [ 0 4 19]
'std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>' [ 0 5 10]
'base::internal::CheckedDivOp<long, int, void>::Do<long>' [ 0 6 16 47]
'scoped_refptr<base::internal::WeakReference::Flag>' [ 0]
'std::__1::ios_base::setf' [ 0 5 10 20]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, void>' [ 0 5 10 98]
'std::__1::__insertion_sort_move<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::NoContextGLApi::glColorMaskFn' [ 0 4 20]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::end' [ 0 5 10 101]
'gl::GLApiBase::glStencilStrokePathNVFn' [ 0 4 15]
'std::__1::allocator<unsigned char>::construct<unsigned char>' [ 0 5 10 36]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::remove_reference<gl::TraceGLApi *>' [ 0 5 10]
'base::PlatformThreadId' [ 0 6]
'std::__1::find<std::__1::__wrap_iter<const std::__1::basic_string<char> *>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::NoContextGLApi::glDebugMessageControlFn' [ 0 4 20]
'std::__1::__vector_base<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::capacity' [ 0 5 10 91]
'gl::DebugGLApi::glGenFencesNVFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::SwapBuffers' [ 0 4 28]
'gl::NoContextGLApi::glDisableFn' [ 0 4 20]
'std::__1::remove_reference<base::TimeDelta &>' [ 0 5 10]
'gl::TraceGLApi::glGetVertexAttribivFn' [ 0 4 16]
'base::internal::BigEnoughPromotion<unsigned long, int, true, false>' [ 0 6 16]
'std::__1::move<std::__1::tuple<base::TimeTicks, base::TimeDelta> &>' [ 0 5 10]
'gl::TraceEGLApi::eglClientWaitSyncKHRFn' [ 0 4 17]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'gl::GLStubApiBase::glBlitFramebufferFn' [ 0 4 19]
'base::ThreadLocalPointer<gl::CurrentGL>::~ThreadLocalPointer' [ 0 6 41]
'gl::(anonymous namespace)::GLES2Data::operator()' [ 0 4 27 38]
'base::WeakPtrFactory<gl::GLSurfacePresentationHelper>::~WeakPtrFactory' [ 0 6 55]
'gl::GpuPreference' [ 0 4]
'gl::GLEnums::GetStringBool' [ 0 4 13]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>' [ 0 6 16]
'std::__1::__less<int, int>' [ 0 5 10]
'scoped_refptr<gl::GLContext>::scoped_refptr' [ 0 30]
'gl::GLStubApiBase::glGetBufferParameterivFn' [ 0 4 19]
'std::__1::default_delete<gl::YUVToRGBConverter>::operator()' [ 0 5 10 49]
'angle::HistogramEnumerationFunc' [ 0 7]
'gl::TraceGLApi::glReadnPixelsRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair<gfx::VSyncProvider *, std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::clear' [ 0 5 10 50]
'std::__1::__compressed_pair<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >::__compressed_pair<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *&, true>' [ 0 5 10 170]
'base::internal::IsValueInRangeForNumericType<unsigned long, int>' [ 0 6 16]
'gl::EGLApi::SetDisabledExtensions' [ 0 4 12]
'gl::NativeViewGLSurfaceGLX::PostSubBuffer' [ 0 4 28]
'gl::TraceGLApi::glIsVertexArrayOESFn' [ 0 4 16]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::queue' [ 0 5 10 74]
'std::__1::remove_reference<std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &>' [ 0 5 10]
'gfx::XObjectDeleter<void, int, &XFree>' [ 0 5]
'gl::ScopedTextureBinder::ScopedTextureBinder' [ 0 4 25]
'base::internal::kCircularBufferInitialCapacity' [ 0 6 16]
'base::BasePathKey' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>::__get' [ 0 5 10 98]
'std::__1::__to_raw_pointer<ui::GpuSwitchingObserver *>' [ 0 5 10]
'std::__1::swap<gl::GPUTimingClient *>' [ 0 5 10]
'gl::TraceEGLApi::eglStreamConsumerReleaseKHRFn' [ 0 4 17]
'gl::TraceGLApi::glGetRenderbufferParameterivEXTFn' [ 0 4 16]
'gl::DebugGLApi::glProgramPathFragmentInputGenNVFn' [ 0 4 16]
'gl::TraceGLApi::glVertexAttrib3fvFn' [ 0 4 16]
'base::ThreadLocalPointer<gl::GLSurface>::Get' [ 0 6 41]
'base::internal::CheckedMulOp<int, int, void>' [ 0 6 16]
'logging::MakeCheckOpString<const base::circular_deque<scoped_refptr<gl::TimerQuery> > *, const base::circular_deque<scoped_refptr<gl::TimerQuery> > *>' [ 0 9]
'gl::GLStubApiBase::glIsEnabledFn' [ 0 4 19]
'std::__1::forward<const base::BasicStringPiece<std::string> &>' [ 0 5 10]
'scoped_refptr<gl::QueryResult>::AddRef' [ 0 32]
'gl::glCoverFillPathNVProc' [ 0 4]
'std::__1::__pointer_type<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >' [ 0 5 10]
'gl::TraceGLXApi::glXIsDirectFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::max_size' [ 0 5 10 71]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >' [ 0 6]
'std::__1::copy_if<std::__1::__wrap_iter<const XVisualInfo *>, std::__1::back_insert_iterator<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >, (lambda at ../../ui/gl/gl_visual_picker_glx.cc:105:7)>' [ 0 5 10]
'std::__1::remove_reference<ui::ScopedMakeCurrent *>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__construct_at_end' [ 0 5 10 50]
'std::__1::__pointer_type_imp::__pointer_type<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> >, true>' [ 0 5 10 30]
'gl::TraceGLApi::glDrawElementsInstancedANGLEFn' [ 0 4 16]
'gl::GPUTimer::GPUTimer' [ 0 4 14]
'gl::NativeViewGLSurfaceEGL::Initialize' [ 0 4 28]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'gl::TraceGLXApi::glXGetSelectedEventFn' [ 0 4 17]
'gl::GLStubApiBase::glDeleteTexturesFn' [ 0 4 19]
'base::RepeatingCallback<long ()>' [ 0 6]
'gl::TraceGLApi::glStencilMaskFn' [ 0 4 16]
'gl::GLStubApiBase::glCompressedCopyTextureCHROMIUMFn' [ 0 4 19]
'gl::RealGLXApi::glXQueryExtensionsStringFn' [ 0 4 16]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::base' [ 0 5 10 68]
'gl::glTexBufferProc' [ 0 4]
'std::__1::forward<gl::GLFenceEGL *>' [ 0 5 10]
'gl::GLApiBase::glTexParameterivRobustANGLEFn' [ 0 4 15]
'gl::NoContextGLApi::glGetUniformuivRobustANGLEFn' [ 0 4 20]
'gl::NativeViewGLSurfaceEGL::SetEnableSwapTimestamps::all_timestamps' [ 0 4 28 53]
'std::__1::unique_ptr<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent> >::unique_ptr<true, void>' [ 0 5 10 95]
'gl::TraceGLApi::glUniformMatrix2x4fvFn' [ 0 4 16]
'std::__1::__const_pointer<ui::CARendererLayerParams::FilterEffect, ui::CARendererLayerParams::FilterEffect *, std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, true>' [ 0 5 10]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >' [ 0 5 10]
'gl::NoContextGLApi::glGenFencesNVFn' [ 0 4 20]
'logging::CheckEQImpl<unsigned long, unsigned int>' [ 0 9]
'std::__1::__clz' [ 0 5 10]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'gl::TraceGLXApi::glXGetCurrentContextFn' [ 0 4 17]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::~vector' [ 0 5 10 74]
'angle::HistogramBooleanFunc' [ 0 7]
'gl::GLApiBase::glGetUniformLocationFn' [ 0 4 15]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>::RunImpl<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, 0, 1>::is_weak_call' [ 0 6 16 161 293]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'gl::TraceGLApi::glSamplerParameterIivRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<ContextCreationInfo *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<gl::DisplayType *, std::__1::allocator<gl::DisplayType> &>::__compressed_pair<nullptr_t, std::__1::allocator<gl::DisplayType> &>' [ 0 5 10 88]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::data' [ 0 5 10 97]
'gl::glIsPathNVProc' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)()>' [ 0 5 10]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::reset' [ 0 5 10 85]
'std::__1::pointer_traits<ui::CARendererLayerParams::FilterEffect *>' [ 0 5 10]
'gl::GLApiBase::glTestFenceNVFn' [ 0 4 15]
'base::internal::Unwrap<base::TimeDelta>' [ 0 6 16]
'base::internal::UnsanitizedCfiCall<void (*(*)(const char *))()>::operator()<const char *&>' [ 0 6 16 65]
'gl::GLImageNativePixmap::InitializeFromTexture' [ 0 4 25]
'base::internal::circular_deque_const_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::Decrement' [ 0 6 16 85]
'base::SupportsWeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::SupportsWeakPtr' [ 0 6 83]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::__tuple_impl<0, 1, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> , base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10 218]
'gl::NoContextGLApi::glVertexAttribIPointerFn' [ 0 4 20]
'gl::GLImageMemory::GetType' [ 0 4 19]
'gl::GLContextStub::GetGLVersion' [ 0 4 19]
'gl::NoContextGLApi::glGetShaderSourceFn' [ 0 4 20]
'gl::GLApiBase::glRenderbufferStorageMultisampleEXTFn' [ 0 4 15]
'gl::eglCreateImageKHRProc' [ 0 4]
'scoped_refptr<gl::GPUTimingClient>::operator bool' [ 0 36]
'gl::NativeViewGLSurfaceEGLX11::InitializeNativeWindow' [ 0 4 31]
'scoped_refptr<gl::GLContext>::swap' [ 0 30]
'gl::DebugGLApi::glGetQueryObjectui64vRobustANGLEFn' [ 0 4 16]
'logging::LOG_WARNING' [ 0 9]
'base::internal::CheckedNumeric<long>::Wrapper<int>::is_valid' [ 0 6 16 38 52]
'std::__1::remove_reference<unsigned char *>' [ 0 5 10]
'SkISize' [ 0]
'gl::GLSurfaceGLXX11::CanDispatchEvent' [ 0 4 21]
'std::__1::remove_reference<const base::TimeDelta &>' [ 0 5 10]
'gl::QueryResult::QueryResult' [ 0 4 17]
'base::internal::DstRangeRelationToSrcRangeImpl<long, double, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 217]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 16 121]
'sw_sync_fence_create' [ 0]
'gl::glGetUniformfvRobustANGLEProc' [ 0 4]
'gl::TraceGLApi::glGetShaderPrecisionFormatFn' [ 0 4 16]
'gl::GLSurfaceOSMesaX11::SwapBuffers::trace_event_unique_atomic128' [ 0 4 24 37]
'gl::DebugGLApi::glGetFragDataIndexFn' [ 0 4 16]
'trace_event_internal::TraceID' [ 0 22]
'ui::PlatformEvent' [ 0 4]
'gl::DebugGLApi::glVertexAttrib4fFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryAllocatorDump::Entry *, 0, false>' [ 0 5 10]
'base::circular_deque<base::TimeDelta>::size' [ 0 6 39]
'std::__1::remove_reference<const long &>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterivRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glBindImageTextureEXTFn' [ 0 4 20]
'gl::GLStubApiBase::glGetUniformivRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glObjectPtrLabelFn' [ 0 4 20]
'gl::GLFenceNV::~GLFenceNV' [ 0 4 15]
'gl::GLSurfaceOSMesaX11::SupportsPresentationCallback' [ 0 4 24]
'switches::kEnableDirectCompositionLayers' [ 0 10]
'gl::TraceGLApi' [ 0 4]
'gl::kGLImplementationANGLEName' [ 0 4]
'gl::glGetProgramResourceNameProc' [ 0 4]
'gl::GLStubApi::glGenRenderbuffersEXTFn' [ 0 4 15]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'gl::NoContextGLApi::glLineWidthFn' [ 0 4 20]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::~BindState' [ 0 6 16 331]
'std::__1::forward<gfx::GpuFence *>' [ 0 5 10]
'std::__1::__pointer_type<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >' [ 0 5 10]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::__vector_base' [ 0 5 10 75]
'Display' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::__construct_backward<ContextCreationInfo>' [ 0 5 10 71]
'gl::TraceGLApi::glGetVertexAttribPointervFn' [ 0 4 16]
'kMinVsyncIntervalUs' [ 0]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<int>::value' [ 0 6 16 47 61]
'gl::eglBindTexImageProc' [ 0 4]
'gl::glDeleteBuffersARBProc' [ 0 4]
'gl::glStencilFuncSeparateProc' [ 0 4]
'std::__1::remove_reference<float>' [ 0 5 10]
'std::__1::allocator<gl::GLContext *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<int *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 51]
'std::__1::forward<const std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::push_back' [ 0 5 10 50]
'std::__1::__compressed_pair_elem<std::__1::allocator<const char *> &, 1, false>' [ 0 5 10]
'gl::glDeleteRenderbuffersEXTProc' [ 0 4]
'gl::DebugGLApi::glGetSyncivFn' [ 0 4 16]
'gl::glInvalidateFramebufferProc' [ 0 4]
'std::__1::__const_void_pointer<scoped_refptr<gl::GLImage> *, std::__1::allocator<scoped_refptr<gl::GLImage> >, false>' [ 0 5 10]
'gfx::Vector2dF' [ 0 5]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>::pointer_to' [ 0 5 10 150]
'std::__1::__compressed_pair<gl::GLApi *, std::__1::default_delete<gl::GLApi> >::__compressed_pair<gl::GLApi *, true>' [ 0 5 10 80]
'gl::TraceGLApi::glUniform2iFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::SupportsCommitOverlayPlanes' [ 0 4 28]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *>' [ 0 5 10]
'scoped_refptr<gl::GPUTimingClient>::operator->' [ 0 36]
'gl::SyncControlVSyncProvider::SyncControlVSyncProvider' [ 0 4 30]
'std::__1::remove_reference<gl::YUVToRGBConverter *>' [ 0 5 10]
'gl::GLApiBase::glFramebufferTextureLayerFn' [ 0 4 15]
'std::__1::vector<int, std::__1::allocator<int> >::__recommend' [ 0 5 10 50]
'gl::TraceGLApi::glStencilMaskSeparateFn' [ 0 4 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'gl::NoContextGLApi::glGetObjectPtrLabelFn' [ 0 4 20]
'gl::GLApiBase::glVertexAttrib4fFn' [ 0 4 15]
'gl::InitializeGLSurfaceWithFormat' [ 0 4]
'gl::glBlitFramebufferProc' [ 0 4]
'gl::eglGetProcAddressProc' [ 0 4]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, false>' [ 0 5 10 30]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >::~unique_ptr' [ 0 5 10 77]
'gl::GLApiBase::glDrawElementsFn' [ 0 4 15]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::~VectorBuffer' [ 0 6 16 68]
'base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>::UnretainedWrapper' [ 0 6 16 94]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::~__vector_base' [ 0 5 10 75]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<__GLXFBConfigRec *, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>' [ 0 6 16]
'base::UnsanitizedCfiCall<void (*(*)(const char *))()>' [ 0 6]
'gl::DebugOSMESAApi::OSMesaGetCurrentContextFn' [ 0 4 20]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::push' [ 0 5 10 74]
'std::__1::operator==<std::__1::basic_string<char> *, std::__1::basic_string<char> *>' [ 0 5 10]
'logging::MakeCheckOpValueString<bool>' [ 0 9]
'gfx::Size::width' [ 0 5 11]
'std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> , false, false>' [ 0 5 10 87]
'gl::GLStubApiBase::glPathParameteriNVFn' [ 0 4 19]
'base::internal::PassingTraits<base::TimeTicks, false>' [ 0 6 16]
'gl::GLStubApi::glTestFenceAPPLEFn' [ 0 4 15]
'gl::GLApiBase::glSampleCoverageFn' [ 0 4 15]
'std::__1::__vector_base<long, std::__1::allocator<long> >::__destruct_at_end' [ 0 5 10 59]
'base::CancellationFlag::CancellationFlag' [ 0 6 24]
'gl::GLContextReal::~GLContextReal' [ 0 4 19]
'gl::GetEGLInitDisplays' [ 0 4]
'SkPoint' [ 0]
'XVisibilityEvent' [ 0]
'gfx::PresentationFeedback::Failure' [ 0 5 27]
'gl::TraceEGLApi::eglGetCurrentDisplayFn' [ 0 4 17]
'gl::DebugGLApi::glGetVertexAttribivRobustANGLEFn' [ 0 4 16]
'gl::DebugGLApi::glBindBufferBaseFn' [ 0 4 16]
'gl::GLImageGLX::SetColorSpace' [ 0 4 16]
'gl::TraceGLApi::glTexSubImage2DFn' [ 0 4 16]
'gl::GLXApiBase::glXGetSelectedEventFn' [ 0 4 16]
'base::internal::CheckedNumeric<int>::Wrapper<int>::is_valid' [ 0 6 16 37 51]
'gl::GLApiBase::glSamplerParameterIivRobustANGLEFn' [ 0 4 15]
'gl::GLContextStub::MakeCurrent' [ 0 4 19]
'gl::DebugGLApi::glPathStencilFuncNVFn' [ 0 4 16]
'gl::GLApiBase::glViewportFn' [ 0 4 15]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'std::__1::remove_reference<gl::GLShareGroup *&>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__root' [ 0 5 10 539]
'gl::glGetProgramInterfaceivRobustANGLEProc' [ 0 4]
'gl::glCompressedTexSubImage3DProc' [ 0 4]
'gl::NoContextGLApi::glIsProgramFn' [ 0 4 20]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 6 16 193]
'gl::NoContextGLApi::glPolygonModeFn' [ 0 4 20]
'std::__1::__tuple_leaf<0, unsigned long &&, false>::__tuple_leaf<unsigned long, void>' [ 0 5 10 52]
'gl::NoContextGLApi::glBindUniformLocationCHROMIUMFn' [ 0 4 20]
'gl::TraceGLApi::glTexImage2DRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glPushGroupMarkerEXTFn' [ 0 4 16]
'gl::DebugGLApi::glGetVertexAttribIuivRobustANGLEFn' [ 0 4 16]
'gl::glMapBufferProc' [ 0 4]
'gl::GLGetProcAddressProc' [ 0 4]
'base::internal::CheckedMulFastOp<unsigned long, unsigned long>' [ 0 6 16]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, long>' [ 0 6 16]
'gl::glInvalidateSubFramebufferProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >' [ 0 5 10]
'gl::(anonymous namespace)::g_egl_surface_orientation_supported' [ 0 4 27]
'gl::(anonymous namespace)::IsCompressedFormat' [ 0 4 27]
'gl::TraceGLApi::glGetActiveUniformBlockivFn' [ 0 4 16]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback> >' [ 0 6 16]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::reset' [ 0 5 10 75]
'gl::GLApiBase::glGetSamplerParameterfvFn' [ 0 4 15]
'gl::TraceGLApi::glGetQueryivRobustANGLEFn' [ 0 4 16]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__annotate_new' [ 0 5 10 66]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'gl::TraceGLApi::glTestFenceNVFn' [ 0 4 16]
'gl::(anonymous namespace)::PixmapDepth' [ 0 4 27]
'std::__1::__to_raw_pointer<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::~__split_buffer' [ 0 5 10 97]
'std::__1::allocator<ui::GpuSwitchingObserver *>::allocate' [ 0 5 10 49]
'gl::TimeElapsedTimerQuery::Destroy' [ 0 4 27]
'std::__1::__tuple_leaf<0, gfx::PresentationFeedback, false>' [ 0 5 10]
'gl::TraceGLApi::glBlendEquationSeparateFn' [ 0 4 16]
'std' [ 0]
'gl::glUniform3uivProc' [ 0 4]
'std::__1::__const_void_pointer<std::__1::pair<void *const, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >::__compressed_pair<unsigned char *&, true>' [ 0 5 10 91]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >::RefCounted' [ 0 6 82]
'scoped_refptr<base::RefCountedMemory>::AddRef' [ 0 39]
'gl::GLApiBase::glCompileShaderFn' [ 0 4 15]
'gl::GLStubApiBase::glDeleteQueriesFn' [ 0 4 19]
'std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>::allocate' [ 0 5 10 62]
'std::__1::__compressed_pair_elem<gl::GLSurfacePresentationHelper *, 0, false>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'gl::TraceGLApi::glGetBufferParameterivRobustANGLEFn' [ 0 4 16]
'gl::(anonymous namespace)::DisplayTypeString' [ 0 4 27]
'gl::GetSoftwareGLImplementation' [ 0 4]
'gl::PbufferGLSurfaceEGL::Initialize' [ 0 4 25]
'std::__1::remove_reference<angle::PlatformMethods **>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::get_deleter' [ 0 5 10 176]
'gl::GLApiBase::glEGLImageTargetTexture2DOESFn' [ 0 4 15]
'AnnotateEnableRaceDetection' [ 0]
'gl::GLApiBase::glVertexAttrib1fvFn' [ 0 4 15]
'gl::EGLApiBase::eglGetNativeClientBufferANDROIDFn' [ 0 4 16]
'gl::GLApiBase::glStencilStrokePathInstancedNVFn' [ 0 4 15]
'base::ProtectedMemory<bool (*)(void *, const char *const *, unsigned int, void *, void *)>' [ 0 6]
'__time_t' [ 0]
'gl::DebugGLApi::glGetProgramInterfaceivFn' [ 0 4 16]
'gl::GLSurfaceStub::~GLSurfaceStub' [ 0 4 19]
'gl::DebugGLApi::glGetAttachedShadersFn' [ 0 4 16]
'gl::GPUTimingImpl::IsForceTimeElapsedQuery' [ 0 4 19]
'base::subtle::GetOrCreateLazyPointer<gl::GLVisualPickerGLX>' [ 0 6 14]
'base::subtle::Atomic32' [ 0 6 14]
'gl::NoContextGLApi::glBindSamplerFn' [ 0 4 20]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'base::internal::NumericRepresentation' [ 0 6 16]
'gfx::FixedVSyncProvider::FixedVSyncProvider' [ 0 5 25]
'std::__1::__wrap_iter<const XVisualInfo *>' [ 0 5 10]
'std::__1::__pointer_type<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>' [ 0 5 10]
'gl::RealGLApi::set_gl_workarounds' [ 0 4 15]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'gl::glClearBufferfiProc' [ 0 4]
'gl::GLSurfaceFormat::SetDepthBits' [ 0 4 21]
'std::__1::remove_reference<std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> > &>' [ 0 5 10]
'gl::TraceGLApi::glGenFencesAPPLEFn' [ 0 4 16]
'std::__1::get<1, base::TimeTicks, base::TimeDelta>' [ 0 5 10]
'std::__1::add_lvalue_reference<gfx::GpuFence>' [ 0 5 10]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::end' [ 0 6 54]
'base::AutoWritableMemory::~AutoWritableMemory' [ 0 6 26]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'std::__1::__pointer_type<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::select_on_container_copy_construction' [ 0 5 10 91]
'gl::GLContextAttribs::GLContextAttribs' [ 0 4 22]
'std::__1::remove_reference<std::__1::default_delete<gfx::FixedVSyncProvider> >' [ 0 5 10]
'base::BindUnwrapTraits<gfx::PresentationFeedback>' [ 0 6]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__destruct_at_end' [ 0 5 10 129]
'gl::NativeViewGLSurfaceEGL' [ 0 4]
'gl::GLSurfaceAdapter::GetDrawOffset' [ 0 4 22]
'scoped_refptr<base::SingleThreadTaskRunner>::scoped_refptr' [ 0 45]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::empty' [ 0 5 10 318]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::deallocate' [ 0 5 10 99]
'std::__1::vector<void *, std::__1::allocator<void *> >' [ 0 5 10]
'gl::DebugGLApi::glDeleteShaderFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::~unique_ptr' [ 0 5 10 416]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >' [ 0 5 10]
'ui::GpuSwitchingManager::~GpuSwitchingManager' [ 0 4 25]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::unique_ptr<int *, true, void, void>' [ 0 5 10 65]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> &, void>' [ 0 5 10 267]
'gl::DebugGLApi::glSamplerParameterfvRobustANGLEFn' [ 0 4 16]
'gl::GLStubApiBase::glEndTransformFeedbackFn' [ 0 4 19]
'gl::GLApiBase::glTransformFeedbackVaryingsFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GPUTimer>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gl::GPUTimer>, void>' [ 0 5 10 83]
'base::WeakPtr<gl::GLSurfacePresentationHelper>::~WeakPtr' [ 0 6 48]
'gl::OSMESAApiBase::OSMesaCreateContextExtFn' [ 0 4 19]
'gl::NativeViewGLSurfaceGLX::IsOffscreen' [ 0 4 28]
'angle::(anonymous namespace)' [ 0 7]
'gl::eglStreamConsumerGLTextureExternalKHRProc' [ 0 4]
'std::__1::__pointer_type<unsigned char, std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'gl::GLXApiBase::glXCreateContextAttribsARBFn' [ 0 4 16]
'gl::ScopedActiveTexture::~ScopedActiveTexture' [ 0 4 25]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'scoped_refptr<gfx::NativePixmap>::Release' [ 0 34]
'gl::GLApiBase::glGetQueryivFn' [ 0 4 15]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::max_load_factor' [ 0 5 10 466]
'std::__1::remove_reference<std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<XVisualInfo> &>' [ 0 5 10]
'gl::NoContextGLApi::glReadPixelsRobustANGLEFn' [ 0 4 20]
'XKeyEvent' [ 0]
'gl::TraceEGLApi::eglWaitGLFn' [ 0 4 17]
'gl::DebugGLApi::glGetQueryivFn' [ 0 4 16]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLContext>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<base::ThreadLocalPointer<gl::GLContext> > >' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<gl::GLContext *> >' [ 0 5 10]
'gl::TraceGLApi::glBindFragDataLocationFn' [ 0 4 16]
'gl::GLVersionInfo::GLVersionInfo' [ 0 4 19]
'std::__1::move<ContextCreationInfo *&>' [ 0 5 10]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__emplace_unique_extract_key<std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 299]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::capacity' [ 0 5 10 84]
'std::__1::__wrap_iter<void **>::operator*' [ 0 5 10 32]
'gl::TimerQuery::~TimerQuery' [ 0 4 16]
'gl::GLFence::GLFence' [ 0 4 13]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'ui::GpuSwitchingManager::AddObserver' [ 0 4 25]
'std::__1::conditional<true, std::__1::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >, std::__1::__nat>' [ 0 5 10]
'gl::ScopedUseProgram' [ 0 4]
'gl::glProgramParameteriProc' [ 0 4]
'std::__1::conditional<false, std::__1::pointer_traits<scoped_refptr<gl::GLImage> *>::__nat, scoped_refptr<gl::GLImage> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > &, 0>::is_weak_call' [ 0 6 16 261 473]
'gl::GLApiBase::glVertexAttrib1fFn' [ 0 4 15]
'gl::TraceGLApi::glGetTranslatedShaderSourceANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >, 1, true>' [ 0 5 10]
'x11::False' [ 0 5]
'gl::GLStubApiBase::glReadnPixelsRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glGetVertexAttribfvFn' [ 0 4 20]
'gl::GLApiBase::glInvalidateSubFramebufferFn' [ 0 4 15]
'gl::OSMESAApi::SetDisabledExtensions' [ 0 4 15]
'gl::GLApiBase::glGetBufferParameterivRobustANGLEFn' [ 0 4 15]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct_at_end<base::BasicStringPiece<std::string> *>' [ 0 5 10 115]
'gl::GLApiBase::glIsVertexArrayOESFn' [ 0 4 15]
'base::BindOnce<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &, gfx::PresentationFeedback &>' [ 0 6]
'gl::eglCopyBuffersProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::allocate' [ 0 5 10 81]
'base::internal::CheckedMulFastOp<unsigned long, unsigned long>::Do<unsigned long>' [ 0 6 16 64]
'base::RefCountedThreadSafe<gfx::NativePixmap, base::DefaultRefCountedThreadSafeTraits<gfx::NativePixmap> >::AddRef' [ 0 6 108]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::reset' [ 0 5 10 77]
'gl::(anonymous namespace)::SGIVideoSyncThread::~SGIVideoSyncThread' [ 0 4 27 47]
'strlcpy' [ 0]
'gl::DebugEGLApi::eglGetPlatformDisplayEXTFn' [ 0 4 17]
'scoped_refptr<gl::GPUTimingClient>::swap' [ 0 36]
'std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::operator++' [ 0 5 10 100]
'std::__1::integer_sequence<unsigned long, 0>' [ 0 5 10]
'gl::glGenTexturesProc' [ 0 4]
'gl::glGetTransformFeedbackVaryingProc' [ 0 4]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::clear' [ 0 5 10 77]
'gl::GLVisualPickerGLX::GetInstance' [ 0 4 23]
'gl::SurfacelessEGL::Initialize' [ 0 4 20]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::CheckedNumericState<unsigned long>' [ 0 6 16 75]
'gl::GLSurfaceEGL::GLSurfaceEGL' [ 0 4 18]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::Release' [ 0 6 118]
'gl::glMapBufferRangeProc' [ 0 4]
'std::__1::allocator<gl::GLSurfaceOverlay>::deallocate' [ 0 5 10 43]
'std::__1::__pointer_type<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::__sort5<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'gl::GLVisualPickerGLX::PickBestSystemVisual::operator()' [ 0 4 23 45]
'gl::TraceGLApi::glGetErrorFn' [ 0 4 16]
'gl::TimeStampTimerQuery::~TimeStampTimerQuery' [ 0 4 25]
'gl::glSetFenceAPPLEProc' [ 0 4]
'gl::GLStubApi::glIsEnabledFn' [ 0 4 15]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::rehash' [ 0 5 10 466]
'std::__1::__compressed_pair<base::FileDescriptor *, std::__1::allocator<base::FileDescriptor> &>::second' [ 0 5 10 98]
'gl::GLSurfaceAdapter::WaitForSnapshotRendering' [ 0 4 22]
'base::internal::UnsanitizedCfiCall<bool (*)(void *, const char *const *, unsigned int, void *, void *)>' [ 0 6 16]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >::get' [ 0 5 10 69]
'gl::DebugEGLApi::eglCopyBuffersFn' [ 0 4 17]
'gfx::Point::x' [ 0 5 12]
'std::__1::allocator<scoped_refptr<gl::GLImage> >::destroy' [ 0 5 10 50]
'base::subtle::Atomic64' [ 0 6 14]
'gl::GLStubApiBase::glVertexAttrib3fFn' [ 0 4 19]
'GLclampd' [ 0]
'std::__1::make_unique<gl::GLVersionInfo, const char *, const char *, const base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> > &>' [ 0 5 10]
'GLclampf' [ 0]
'std::__1::__const_void_pointer<XVisualInfo *, std::__1::allocator<XVisualInfo>, false>' [ 0 5 10]
'gl::GLStubApiBase::glGetObjectPtrLabelFn' [ 0 4 19]
'gl::glGetIntegervRobustANGLEProc' [ 0 4]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::__vector_base' [ 0 5 10 75]
'std::__1::__const_void_pointer<unsigned int *, std::__1::allocator<unsigned int>, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::size' [ 0 5 10 299]
'std::__1::pair<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool &, false>' [ 0 5 10 122]
'base::BindRepeating<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 6]
'gl::EGLApiBase::eglStreamAttribKHRFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, 0, false>' [ 0 5 10]
'gl::TraceGLApi::glStencilThenCoverStrokePathNVFn' [ 0 4 16]
'std::__1::unique_ptr<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >::~unique_ptr' [ 0 5 10 161]
'gl::GLStubApi::GLStubApi' [ 0 4 15]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::HasObserver' [ 0 6 59]
'gl::EGLApiBase' [ 0 4]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::__split_buffer' [ 0 5 10 105]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::reset' [ 0 5 10 79]
'std::__1::allocator<unsigned char>::allocate' [ 0 5 10 36]
'gl::GLStubApiBase::glGetTexLevelParameterivFn' [ 0 4 19]
'gl::TraceGLApi::glGenRenderbuffersEXTFn' [ 0 4 16]
'base::BindUnwrapTraits<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 6]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__destruct_at_end' [ 0 5 10 122]
'gl::NoContextGLApi::glVertexAttrib1fFn' [ 0 4 20]
'std::__1::conditional<false, std::__1::pointer_traits<ui::CARendererLayerParams::FilterEffect *>::__nat, ui::CARendererLayerParams::FilterEffect>' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<base::TimeTicks, base::TimeDelta>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<const char *>, 1, true>' [ 0 5 10]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::~__vector_base' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::CARendererLayerParams::FilterEffect> &, void>' [ 0 5 10 105]
'gl::GLStubApi::glIsVertexArrayOESFn' [ 0 4 15]
'EGLint' [ 0]
'gl::GPUTimingClient::~GPUTimingClient' [ 0 4 21]
'gl::DriverEGL::GetClientExtensions' [ 0 4 15]
'std::__1::__rotate<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>::RunOnce' [ 0 6 16 161]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::~unordered_map' [ 0 5 10 200]
'gl::glUniform2fvProc' [ 0 4]
'gl::DebugGLApi::glSamplerParameterivFn' [ 0 4 16]
'gl::DebugGLApi::glStencilMaskFn' [ 0 4 16]
'gl::GLSurface::GetDisplay' [ 0 4 15]
'std::__1::remove_reference<int *>' [ 0 5 10]
'gl::glGetQueryObjectui64vRobustANGLEProc' [ 0 4]
'std::__1::__const_void_pointer<gl::GLContext **, std::__1::allocator<gl::GLContext *>, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::VSyncProvider *, 0, false>' [ 0 5 10]
'std::__1::__hash_node_types<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >' [ 0 5 10]
'gl::glGetUniformivProc' [ 0 4]
'std::__1::conditional<true, std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::capacity' [ 0 5 10 50]
'gl::TraceOSMESAApi::OSMesaGetColorBufferFn' [ 0 4 20]
'gl::ScopedViewport' [ 0 4]
'gl::TraceGLXApi::glXCreateContextAttribsARBFn' [ 0 4 17]
'gl::TraceGLApi::glGetUniformBlockIndexFn' [ 0 4 16]
'gl::GLStubApiBase::glClientWaitSyncFn' [ 0 4 19]
'gl::GLStubApiBase::glVertexAttribI4ivFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<TimeNamePair>, 1, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >' [ 0 5 10]
'gl::GLStubApiBase::~GLStubApiBase' [ 0 4 19]
'std::__1::forward<std::__1::allocator<ui::GpuSwitchingObserver *> &>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLSurface> >::New' [ 0 6 16 83]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'std::__1::__tuple_leaf<0, unsigned long &&, false>' [ 0 5 10]
'std::__1::default_delete<gl::CurrentGL>' [ 0 5 10]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >::allocate' [ 0 5 10 114]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, true>' [ 0 5 10 30]
'gl::GetGLBufferGUIDForTracing' [ 0 4]
'gl::TraceEGLApi::eglGetFrameTimestampsANDROIDFn' [ 0 4 17]
'std::__1::forward<const std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> &>' [ 0 5 10]
'gl::GLApiBase::glBindVertexArrayOESFn' [ 0 4 15]
'gl::DebugGLApi::glGenerateMipmapEXTFn' [ 0 4 16]
'std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>::operator++' [ 0 5 10 67]
'std::__1::less<void *>::operator()' [ 0 5 10 24]
'int_least16_t' [ 0]
'gl::TraceGLApi::glEndQueryFn' [ 0 4 16]
'gl::DebugGLXApi::~DebugGLXApi' [ 0 4 17]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::get' [ 0 5 10 79]
'std::__1::__compressed_pair<std::__1::__tree_node<gl::GLContext *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'gl::GLStubApiBase::glCompressedTexImage2DRobustANGLEFn' [ 0 4 19]
'ClientGpuFence' [ 0]
'std::__1::__compressed_pair_elem<ContextCreationInfo *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 67]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'gl::HasExtension<20>' [ 0 4]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::hash_function' [ 0 5 10 466]
'base::internal::VectorBuffer<base::TimeDelta>::operator=' [ 0 6 16 47]
'std::__1::__compressed_pair<base::trace_event::ConvertableToTraceFormat *, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat> >' [ 0 5 10]
'gl::GLApiBase::glGetTranslatedShaderSourceANGLEFn' [ 0 4 15]
'std::__1::allocator<gfx::NativePixmapPlane>' [ 0 5 10]
'gl::DebugGLXApi::glXWaitGLFn' [ 0 4 17]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::~unique_ptr' [ 0 5 10 77]
'gl::glUniform3fProc' [ 0 4]
'base::internal::LastUnique<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../base/containers/flat_tree.h:453:23)>' [ 0 6 16]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >' [ 0 5 10]
'gl::GLApiBase::glDeleteQueriesFn' [ 0 4 15]
'gl::GLStubApiBase::glSamplerParameterfvFn' [ 0 4 19]
'gl::glSampleCoverageProc' [ 0 4]
'gl::GLApiBase::glGetVertexAttribPointervFn' [ 0 4 15]
'base::circular_deque<base::TimeDelta>' [ 0 6]
'gl::InitializeDebugGLBindingsGL' [ 0 4]
'gl::glStencilFuncProc' [ 0 4]
'std::__1::__compressed_pair_elem<gl::TraceGLApi *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::~unique_ptr' [ 0 5 10 79]
'base::DefaultRefCountedTraits<gl::GLSurface>::Destruct' [ 0 6 46]
'std::__1::remove_reference<std::__1::tuple<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'gl::glDeletePathsNVProc' [ 0 4]
'std::__1::forward<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &>' [ 0 5 10]
'gl::glPushGroupMarkerEXTProc' [ 0 4]
'gl::NoContextGLApi::glGenTransformFeedbacksFn' [ 0 4 20]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > >' [ 0 5 10]
'gl::glXCreateWindowProc' [ 0 4]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, bool>::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, bool &, false>' [ 0 5 10 143]
'std::__1::forward<gfx::PresentationFeedback>' [ 0 5 10]
'gl::TraceGLApi::glStencilThenCoverFillPathInstancedNVFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<gl::GLSurfaceOverlay *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 68]
'base::internal::IsNull<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &)>' [ 0 6 16]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__annotate_new' [ 0 5 10 122]
'gl::GLStubApiBase::glGetQueryObjectui64vFn' [ 0 4 19]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::Destroy' [ 0 6 16 195]
'gl::glGetVertexAttribPointervRobustANGLEProc' [ 0 4]
'base::AutoLock::AutoLock' [ 0 6 16]
'gl::HasExtension<21>' [ 0 4]
'std::__1::default_delete<gl::DebugGLApi>' [ 0 5 10]
'gl::GLStubApiBase::glGetSamplerParameterfvRobustANGLEFn' [ 0 4 19]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'gl::GLStubApiBase::glEnableFn' [ 0 4 19]
'gl::EGLApiBase::eglProgramCacheGetAttribANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>, 1, true>' [ 0 5 10]
'gl::InitializeStaticGLBindingsOSMESA' [ 0 4]
'base::RepeatingCallback<void (const gfx::PresentationFeedback &)>::operator=' [ 0 6 67]
'gl::SyncControlVSyncProvider::~SyncControlVSyncProvider' [ 0 4 30]
'gl::GLStubApiBase::glPixelStoreiFn' [ 0 4 19]
'gl::TraceGLApi::glUniformMatrix4x3fvFn' [ 0 4 16]
'gl::NoContextGLApi::glIsRenderbufferEXTFn' [ 0 4 20]
'gl::DebugGLApi::glGetAttribLocationFn' [ 0 4 16]
'gl::NoContextGLApi::glFinishFn' [ 0 4 20]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >::operator bool' [ 0 5 10 79]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::operator->' [ 0 6 75]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> *>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::unique_ptr<true, void>' [ 0 5 10 81]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::__construct<std::__1::pair<const unsigned long, gl::GLContext *>, const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned long &&>, std::__1::tuple<> >' [ 0 5 10 143]
'std::__1::remove_reference<const base::BasicStringPiece<std::string> &>' [ 0 5 10]
'gl::GLSurfaceGLX::initialized_' [ 0 4 18]
'std::__1::__add_lvalue_reference_impl<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<const char *> &>' [ 0 5 10]
'gl::GLApiBase::glUniform3iFn' [ 0 4 15]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::push_back' [ 0 6 60]
'std::__1::__add_lvalue_reference_impl<base::SharedMemory, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::destroy<ui::GpuSwitchingObserver *>' [ 0 5 10 78]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::max_size' [ 0 5 10 72]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >::__hash_map_iterator' [ 0 5 10 153]
'gl::GLContextStub' [ 0 4]
'base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>::BindState<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &, gfx::PresentationFeedback>' [ 0 6 16 121]
'gl::(anonymous namespace)::g_egl_surfaceless_context_supported' [ 0 4 27]
'gl::glUniform3iProc' [ 0 4]
'std::__1::forward<std::__1::allocator<XVisualInfo> &>' [ 0 5 10]
'gl::glShaderBinaryProc' [ 0 4]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::~SGIVideoSyncProviderThreadShim' [ 0 4 27 59]
'gl::HasExtension<22>' [ 0 4]
'std::__1::sort<TimeNamePair, (lambda at ../../ui/gl/gl_surface_egl.cc:1190:13)>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterIivRobustANGLEFn' [ 0 4 16]
'gl::GLStubApiBase::glBlendFuncFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gl::GLSurfaceOverlay> >::__destroy<gl::GLSurfaceOverlay>' [ 0 5 10 72]
'gl::GLSurfaceOSMesaHeadless::SupportsPresentationCallback' [ 0 4 29]
'gl::GLSurfacePresentationHelper::UpdateVSyncCallback' [ 0 4 33]
'gl::GLApiBase::glDepthMaskFn' [ 0 4 15]
'gl::DebugEGLApi::eglGetCompositorTimingANDROIDFn' [ 0 4 17]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'gl::(anonymous namespace)::g_egl_context_priority_supported' [ 0 4 27]
'base::internal::UnderlyingType<unsigned long>' [ 0 6 16]
'std::__1::remove_reference<gl::GLSurfacePresentationHelper *&>' [ 0 5 10]
'gl::ScopedCapability' [ 0 4]
'std::__1::__vector_base<long, std::__1::allocator<long> >::__end_cap' [ 0 5 10 59]
'gl::GLApiBase::glClearStencilFn' [ 0 4 15]
'std::__1::forward<const base::TimeDelta &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::YUVToRGBConverter *, 0, false>::__compressed_pair_elem<gl::YUVToRGBConverter *&, void>' [ 0 5 10 69]
'gl::GLStubApiBase::glDetachShaderFn' [ 0 4 19]
'gl::GLVisualPickerGLX::PickBestRgbaVisual' [ 0 4 23]
'gl::glUniformMatrix4fvProc' [ 0 4]
'gl::GLStubApiBase::glGetVertexAttribfvFn' [ 0 4 19]
'base::internal::WeakReferenceOwner' [ 0 6 16]
'gl::NoContextGLApi::glCompressedTexSubImage3DFn' [ 0 4 20]
'base::internal::circular_deque_iterator<scoped_refptr<gl::TimerQuery> >' [ 0 6 16]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>::RunImpl<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, 0>::is_weak_call' [ 0 6 16 155 278]
'gl::NoContextGLApi::glUniform4fvFn' [ 0 4 20]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::__split_buffer' [ 0 5 10 65]
'gl::GLApiBase::glGetActiveUniformBlockivFn' [ 0 4 15]
'gl::glLinkProgramProc' [ 0 4]
'base::AutoWritableMemory::AutoWritableMemory' [ 0 6 26]
'gl::HasExtension<23>' [ 0 4]
'gl::GLStubApiBase::glGetVertexAttribPointervRobustANGLEFn' [ 0 4 19]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >::RefCounted' [ 0 6 80]
'gl::GPUTimer::GetDeltaElapsed' [ 0 4 14]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >, bool>' [ 0 5 10]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, void>::Invoke<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>' [ 0 6 16 104]
'std::__1::__compressed_pair<XVisualInfo *, std::__1::allocator<XVisualInfo> &>::second' [ 0 5 10 80]
'std::__1::vector<base::trace_event::MemoryAllocatorDump::Entry, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry> >' [ 0 5 10]
'std::__1::equal_to<unsigned long>' [ 0 5 10]
'gl::DebugGLApi::glTexParameteriFn' [ 0 4 16]
'gl::GLStubApiBase::glGetMultisamplefvFn' [ 0 4 19]
'std::__1::__advance<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLStubApiBase::glAttachShaderFn' [ 0 4 19]
'XExposeEvent' [ 0]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::get' [ 0 5 10 65]
'gl::glDepthRangeProc' [ 0 4]
'gl::glXSwapBuffersProc' [ 0 4]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >' [ 0 5 10]
'gl::DebugEGLApi::eglGetDisplayFn' [ 0 4 17]
'AnnotateTraceMemory' [ 0]
'gl::glCopyBufferSubDataProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<XVisualInfo> &, 1, false>::__get' [ 0 5 10 80]
'gl::GLApiBase::glTexImage2DFn' [ 0 4 15]
'base::RefCounted<gl::GLSurface, base::DefaultRefCountedTraits<gl::GLSurface> >::~RefCounted' [ 0 6 80]
'gl::NoContextGLApi::glGetTexLevelParameterfvRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::reset' [ 0 5 10 87]
'std::__1::allocator<gl::GLSurfaceOverlay>::destroy' [ 0 5 10 43]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::construct<XVisualInfo, const XVisualInfo &>' [ 0 5 10 63]
'gl::EGLApiBase::eglStreamConsumerReleaseKHRFn' [ 0 4 16]
'std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>::operator()' [ 0 5 10 85]
'gl::GLStubApiBase::glDeleteFencesAPPLEFn' [ 0 4 19]
'std::__1::__half_inplace_merge<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare, base::BasicStringPiece<std::string> *, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::DebugGLApi::glSetFenceAPPLEFn' [ 0 4 16]
'gl::GLStubApiBase::glGetSamplerParameterivFn' [ 0 4 19]
'gl::(anonymous namespace)::g_egl_ext_colorspace_display_p3' [ 0 4 27]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >::operator->' [ 0 5 10 115]
'EGLBoolean' [ 0]
'base::internal::NarrowingRange<long, double, numeric_limits>::max' [ 0 6 16 62]
'gl::DebugGLApi::glVertexAttribIPointerFn' [ 0 4 16]
'gl::glClearBufferivProc' [ 0 4]
'gl::glInsertEventMarkerEXTProc' [ 0 4]
'gl::HasExtension<24>' [ 0 4]
'gl::TraceGLApi::glEnableVertexAttribArrayFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> > &>' [ 0 5 10]
'std::__1::swap<base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::OSMesaCreateContextExtProc' [ 0 4]
'std::__1::operator-<const base::BasicStringPiece<std::string> *, const base::BasicStringPiece<std::string> *>' [ 0 5 10]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::front' [ 0 6 54]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>::__nat, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<base::BasicStringPiece<std::string> *>::__nat, base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'gl::GLApiBase::glGetInteger64vRobustANGLEFn' [ 0 4 15]
'base::internal::InvokeHelper<true, void>::MakeItSo<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta), const base::WeakPtr<gl::GLSurfacePresentationHelper> &, base::TimeTicks, base::TimeDelta>' [ 0 6 16 42]
'switches::kTestGLLib' [ 0 10]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >::__compressed_pair<unsigned char *, true>' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<long> >::__max_size' [ 0 5 10 56]
'std::__1::__compressed_pair<__GLXFBConfigRec **, gfx::XObjectDeleter<void, int, &XFree> >::__compressed_pair<__GLXFBConfigRec **&, true>' [ 0 5 10 91]
'base::FileDescriptor::FileDescriptor' [ 0 6 22]
'std::__1::forward<const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &>' [ 0 5 10]
'gl::GLStubApiBase::glGetIntegeri_vRobustANGLEFn' [ 0 4 19]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::MessageLoop::task_runner' [ 0 6 19]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::begin' [ 0 5 10 66]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::operator[]' [ 0 6 16 62]
'std::__1::make_unique<gl::YUVToRGBConverter, const gl::GLVersionInfo &, const gfx::ColorSpace &>' [ 0 5 10]
'gl::GLStubApi::glIsRenderbufferEXTFn' [ 0 4 15]
'std::__1::__add_lvalue_reference_impl<gfx::ColorTransform, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLSurface::CALayerInUseQuery, std::__1::allocator<gl::GLSurface::CALayerInUseQuery>, true>' [ 0 5 10 30]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo>, false>' [ 0 5 10 30]
'gl::GLContext::share_group' [ 0 4 15]
'gl::glDeleteProgramProc' [ 0 4]
'gl::UnmappedNativeViewGLSurfaceGLX::GetFormat' [ 0 4 36]
'trace_event_internal::SetTraceValue' [ 0 22]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'ui::GetEGLErrorString' [ 0 4]
'gl::DebugGLApi::glGetFragDataLocationFn' [ 0 4 16]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::forward<gl::GLVersionInfo *>' [ 0 5 10]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 70]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::begin' [ 0 6 16 68]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>' [ 0 5 10]
'gl::GLImage::EmulatingRGB' [ 0 4 13]
'std::__1::pointer_traits<gl::DisplayType *>' [ 0 5 10]
'gl::TraceGLApi::glGetAttachedShadersFn' [ 0 4 16]
'gl::HasExtension<25>' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::allocate' [ 0 5 10 91]
'gl::glXMakeContextCurrentProc' [ 0 4]
'gl::(anonymous namespace)::GetTexInternalFormat' [ 0 4 27]
'base::RefCountedThreadSafe<base::RefCountedMemory, base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory> >::AddRef' [ 0 6 118]
'std::__1::remove_reference<const gfx::ColorSpace &>' [ 0 5 10]
'gl::GLFenceAndroidNativeFenceSync::GetStatusChangeTime' [ 0 4 35]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>' [ 0 6]
'gl::GLContextEGL::IsCurrent' [ 0 4 18]
'uintptr_t' [ 0]
'base::internal::MaxExponentPromotion<long, double, base::internal::RIGHT_PROMOTION>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<int, std::__1::default_delete<int []>, false>' [ 0 5 10 30]
'gl::GLStubApiBase::glTexSubImage2DFn' [ 0 4 19]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider' [ 0 4 27]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'gl::TraceGLApi::glCreateShaderFn' [ 0 4 16]
'base::LazyInstance<base::Lock, base::internal::LeakyLazyInstanceTraits<base::Lock> >::Pointer' [ 0 6 86]
'std::__1::conditional<true, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >, 1, false>' [ 0 5 10]
'gl::GLSurfaceStub::SupportsPresentationCallback' [ 0 4 19]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::end' [ 0 5 10 104]
'std::__1::__const_pointer<scoped_refptr<gl::GLImage>, scoped_refptr<gl::GLImage> *, std::__1::allocator<scoped_refptr<gl::GLImage> >, true>' [ 0 5 10]
'gl::GLStubApi::glGenFencesNVFn' [ 0 4 15]
'gl::(anonymous namespace)::ValidInternalFormat' [ 0 4 27]
'gl::TraceGLApi::glVertexAttrib2fvFn' [ 0 4 16]
'gl::GLSurface::GetBackingFramebufferObject' [ 0 4 15]
'gl::NoContextGLApi::glGetIntegeri_vFn' [ 0 4 20]
'std::__1::forward<TimeNamePair>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent>, false>' [ 0 5 10 30]
'std::__1::__unique_if<gl::GLSurfacePresentationHelper>' [ 0 5 10]
'gl::TraceGLApi::glDeleteRenderbuffersEXTFn' [ 0 4 16]
'gl::NoContextGLApi::glUniform4uivFn' [ 0 4 20]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::SupportGetVSyncParametersIfAvailable' [ 0 4 27 54]
'gl::GLSurfaceGLXX11::RegisterEvents' [ 0 4 21]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::max_size' [ 0 5 10 97]
'base::CallbackCancellationTraits<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, void>::IsCancelled<base::WeakPtr<gl::GLSurfacePresentationHelper>>' [ 0 6 183]
'gl::NoContextGLApi::glDepthRangefFn' [ 0 4 20]
'std::__1::forward<const base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> > &>' [ 0 5 10]
'gl::TraceGLApi::glCreateProgramFn' [ 0 4 16]
'std::__1::__size_type<std::__1::allocator<ui::GpuSwitchingObserver *>, long, true>' [ 0 5 10]
'scoped_refptr<gl::GLContext>::operator->' [ 0 30]
'gl::TraceGLApi::glGetTexLevelParameterfvRobustANGLEFn' [ 0 4 16]
'gl::glGetQueryObjectivProc' [ 0 4]
'gl::HasExtension<26>' [ 0 4]
'std::__1::remove_reference<scoped_refptr<gl::GLImage> &>' [ 0 5 10]
'gl::TraceGLApi::glTexParameterfFn' [ 0 4 16]
'gl::GLXApiBase::glXSwapIntervalEXTFn' [ 0 4 16]
'std::__1::vector<int, std::__1::allocator<int> >::empty' [ 0 5 10 50]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'SkRect' [ 0]
'std::__1::__to_raw_pointer<gl::GLSurfaceOverlay>' [ 0 5 10]
'base::DefaultRefCountedTraits<gl::QueryResult>::Destruct' [ 0 6 48]
'gl::DebugGLApi::glUniformMatrix3fvFn' [ 0 4 16]
'gl::GLSurface::GetVSyncProvider' [ 0 4 15]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::get' [ 0 6 63]
'gl::GLStubApiBase::glIsTextureFn' [ 0 4 19]
'gl::TraceGLApi::glGetFragDataIndexFn' [ 0 4 16]
'scoped_refptr<base::RefCountedMemory>::scoped_refptr' [ 0 39]
'gl::g_driver_egl' [ 0 4]
'gl::EGLApiBase::eglGetCompositorTimingANDROIDFn' [ 0 4 16]
'gl::NoContextGLApi::glVertexAttrib2fFn' [ 0 4 20]
'gl::glXGetConfigProc' [ 0 4]
'__int64_t' [ 0]
'gl::TraceGLApi::glGetVertexAttribivRobustANGLEFn' [ 0 4 16]
'gl::TraceGLApi::glShaderBinaryFn' [ 0 4 16]
'gl::GLStubApiBase::glStencilFuncSeparateFn' [ 0 4 19]
'gl::glClearBufferfvProc' [ 0 4]
'base::internal::CheckedMulOp<unsigned long, int, void>' [ 0 6 16]
'base::TimeDelta::operator/<long>' [ 0 6 17]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1200' [ 0 4 28 45]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::operator=' [ 0 6 16 68]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *>' [ 0 6 16 43]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > &>' [ 0 5 10]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::clear' [ 0 5 10 68]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'gfx::XObjectDeleter<void, int, &XFree>::operator()' [ 0 5 40]
'gl::glTexStorage2DEXTProc' [ 0 4]
'std::__1::remove_reference<std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10]
'gl::(anonymous namespace)::kVertexHeaderES3' [ 0 4 27]
'base::internal::SupportsWeakPtrBase' [ 0 6 16]
'std::__1::tuple_element<1, std::__1::__tuple_types<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'gl::HasExtension<27>' [ 0 4]
'gl::EGLApiBase::eglClientWaitSyncKHRFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const unsigned long, gl::GLContext *> *>::__nat, std::__1::pair<const unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::glBeginQueryProc' [ 0 4]
'logging::CheckLEImpl<unsigned int, unsigned long>' [ 0 9]
'std::__1::move<gl::GPUTimingClient *&>' [ 0 5 10]
'std::__1::__to_raw_pointer<base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::glShaderSourceProc' [ 0 4]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext> >::Pointer' [ 0 6 167]
'gl::TraceGLApi::glGetShaderivRobustANGLEFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::Recreate' [ 0 4 28]
'logging::CheckEQImpl<base::TimeTicks::Clock, base::TimeTicks::Clock>' [ 0 9]
'gl::TraceGLApi::glTexImage2DFn' [ 0 4 16]
'gl::glCopyTexSubImage3DProc' [ 0 4]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10]
'gl::DebugGLApi::glDisableVertexAttribArrayFn' [ 0 4 16]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::__alloc' [ 0 5 10 75]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::size' [ 0 5 10 116]
'gl::GLStubApiBase::glUniform4fvFn' [ 0 4 19]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::max_size' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::construct<ContextCreationInfo, int, std::__1::pair<int, int> >' [ 0 5 10 71]
'gl::glSetFenceNVProc' [ 0 4]
'gl::NoContextGLApi::glGetQueryObjecti64vRobustANGLEFn' [ 0 4 20]
'std::__1::less<std::__1::basic_string<char> >' [ 0 5 10]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::pop_front' [ 0 6 62]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10 30]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::Increment' [ 0 6 16 87]
'gl::glUniformMatrix2fvProc' [ 0 4]
'std::__1::default_delete<gl::GLStateRestorer>::operator()' [ 0 5 10 47]
'gl::GLStubApiBase::glIsRenderbufferEXTFn' [ 0 4 19]
'std::__1::allocator<base::FileDescriptor>::deallocate' [ 0 5 10 43]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'base::Unretained<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 6]
'gl::GLSurface::OnMakeCurrent' [ 0 4 15]
'std::__1::forward<std::__1::tuple<const gfx::ColorSpace &> >' [ 0 5 10]
'std::__1::__sort4<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'gl::GLSurface::SupportsSwapBuffersWithBounds' [ 0 4 15]
'gl::DebugEGLApi::eglGetNativeClientBufferANDROIDFn' [ 0 4 17]
'gl::NoContextGLApi::glUniform2fFn' [ 0 4 20]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::move<base::BasicStringPiece<std::string> *, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'scoped_refptr<gl::TimeElapsedTimerQuery>::scoped_refptr' [ 0 42]
'gl::(anonymous namespace)::GLES2RGB565Data' [ 0 4 27]
'std::__1::forward<gl::GLFence *>' [ 0 5 10]
'angle::(anonymous namespace)::PlatformContext::PlatformContext' [ 0 7 30 47]
'std::__1::enable_if<true, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::eglGetSyncAttribKHRProc' [ 0 4]
'gl::GLSurfaceStub::SupportsDCLayers' [ 0 4 19]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__emplace_unique_key_args<gfx::ColorSpace, const std::__1::piecewise_construct_t &, std::__1::tuple<const gfx::ColorSpace &>, std::__1::tuple<> >' [ 0 5 10 539]
'gl::GLApiBase::glApplyFramebufferAttachmentCMAAINTELFn' [ 0 4 15]
'std::__1::__tree_key_value_types<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >::__get_ptr' [ 0 5 10 172]
'std::__1::swap<ui::GpuSwitchingObserver **>' [ 0 5 10]
'base::internal::IsValueInRangeForNumericType<long, long>' [ 0 6 16]
'std::__1::pointer_traits<gl::GLSurfaceOverlay *>' [ 0 5 10]
'gl::glPrimitiveRestartIndexProc' [ 0 4]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16 43]
'std::__1::__pointer_type<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'gl::GLVisualPickerGLX::PickBestRgbaVisual::operator()' [ 0 4 23 43]
'base::queue<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6]
'std::__1::__compressed_pair_elem<gl::DebugGLApi *, 0, false>' [ 0 5 10]
'base::Lock::Acquire' [ 0 6 12]
'gl::DebugGLApi::glWindowRectanglesEXTFn' [ 0 4 16]
'std::__1::__rebind_pointer<void *, std::__1::__tree_node_base<void *> >' [ 0 5 10]
'gl::DebugOSMESAApi::OSMesaGetIntegervFn' [ 0 4 20]
'gl::DebugGLApi::glReadPixelsRobustANGLEFn' [ 0 4 16]
'gl::TraceEGLApi::eglReleaseTexImageFn' [ 0 4 17]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glGenSamplersFn' [ 0 4 20]
'std::__1::remove_reference<std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::~map' [ 0 5 10 318]
'gl::GLApiBase::glFinishFn' [ 0 4 15]
'gl::NoContextGLApi::glDepthRangeFn' [ 0 4 20]
'base::Callback<void (const gfx::PresentationFeedback &)>' [ 0 6]
'GLuint' [ 0]
'gl::HasExtension<29>' [ 0 4]
'gfx::ColorSpace' [ 0 5]
'gl::TraceEGLApi::eglCreatePbufferFromClientBufferFn' [ 0 4 17]
'std::__1::streamoff' [ 0 5 10]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::begin' [ 0 6 16 203]
'std::__1::operator==' [ 0 5 10]
'gl::GLApiBase::glTexBufferFn' [ 0 4 15]
'gl::(anonymous namespace)::SGIVideoSyncThread::g_video_sync_thread' [ 0 4 27 47]
'logging::MakeCheckOpValueString<void *>' [ 0 9]
'gl::glXCopyContextProc' [ 0 4]
'std::__1::hash<unsigned long>::operator()' [ 0 5 10 31]
'gl::GLApiBase::glGetQueryObjecti64vFn' [ 0 4 15]
'gl::NoContextGLApi::glGenPathsNVFn' [ 0 4 20]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::clear' [ 0 5 10 539]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'gl::glXSelectEventProc' [ 0 4]
'gl::GLStubApiBase::glCompileShaderFn' [ 0 4 19]
'std::__1::add_lvalue_reference<gl::GLFenceEGL>' [ 0 5 10]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10]
'gl::GLApiBase::glStencilThenCoverFillPathInstancedNVFn' [ 0 4 15]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, gfx::PresentationFeedback>::__tuple_impl<0, gfx::PresentationFeedback, gfx::PresentationFeedback>' [ 0 5 10 81]
'std::__1::conditional<false, std::__1::pointer_traits<gfx::NativePixmapPlane *>::__nat, gfx::NativePixmapPlane>' [ 0 5 10]
'std::__1::unique_ptr<ui::ScopedMakeCurrent, std::__1::default_delete<ui::ScopedMakeCurrent> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::GLApiBase::glBlendFuncSeparateFn' [ 0 4 15]
'std::__1::forward<gfx::GpuFenceHandle &>' [ 0 5 10]
'std::__1::move<base::FileDescriptor *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>::__compressed_pair_elem<int, void>' [ 0 5 10 59]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::empty' [ 0 5 10 68]
'base::AtomicFlag::~AtomicFlag' [ 0 6 18]
'std::__1::forward_iterator_tag' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::~unique_ptr' [ 0 5 10 81]
'gl::NoContextGLApi::glIsFenceAPPLEFn' [ 0 4 20]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::vector' [ 0 5 10 115]
'angle::HistogramSparseFunc' [ 0 7]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, 0, false>::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *&, void>' [ 0 5 10 105]
'gl::DebugGLApi::glCopyTexSubImage2DFn' [ 0 4 16]
'x11::True' [ 0 5]
'std::__1::__compressed_pair<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *> &>' [ 0 5 10]
'gl::GLContextStub::SetUseStubApi' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::GpuFence>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gfx::GpuFence>, void>' [ 0 5 10 84]
'std::__1::__const_void_pointer<gl::DisplayType *, std::__1::allocator<gl::DisplayType>, false>' [ 0 5 10]
'gl::glGetQueryivProc' [ 0 4]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'gl::GLApiBase::glGetAttachedShadersFn' [ 0 4 15]
'std::__1::forward<std::__1::tuple<gfx::PresentationFeedback> >' [ 0 5 10]
'gl::GLContext::SwitchableGPUsSupported' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::default_delete<unsigned char []>, 1, true>::__compressed_pair_elem<std::__1::default_delete<unsigned char []>, void>' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<void>, true>, 1, true>' [ 0 5 10]
'std::__1::true_type' [ 0 5 10]
'gl::GLStubApiBase::glIsSyncFn' [ 0 4 19]
'base::circular_deque<base::TimeDelta>::ExpandCapacityIfNecessary' [ 0 6 39]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::unique_ptr<true, void>' [ 0 5 10 157]
'gl::PbufferGLSurfaceEGL::~PbufferGLSurfaceEGL' [ 0 4 25]
'gl::NativeViewGLSurfaceEGL::SupportsSwapTimestamps' [ 0 4 28]
'base::internal::circular_deque_iterator<gl::GLSurfacePresentationHelper::Frame>::operator++' [ 0 6 16 81]
'angle::(anonymous namespace)::g_angle_reset_platform' [ 0 7 30]
'gl::GLSurface::BuffersFlipped' [ 0 4 15]
'intptr_t' [ 0]
'gl::EGLApiBase::eglCreateSyncKHRFn' [ 0 4 16]
'std::__1::remove_reference<gl::GLFenceEGL *&>' [ 0 5 10]
'std::__1::default_delete<gl::GLApi>::operator()' [ 0 5 10 37]
'base::internal::StrictNumeric<unsigned long>::StrictNumeric<unsigned long>' [ 0 6 16 46]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::vector' [ 0 5 10 68]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::~vector' [ 0 5 10 68]
'std::__1::pointer_traits<XVisualInfo *>' [ 0 5 10]
'max_align_t' [ 0]
'std::__1::__wrap_iter<ContextCreationInfo *>::__wrap_iter' [ 0 5 10 46]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__end_cap' [ 0 5 10 81]
'base::internal::circular_deque_const_iterator<base::TimeDelta>::CheckUnstableUsage' [ 0 6 16 64]
'gl::GLStubApiBase::glGenVertexArraysOESFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<gl::GLStateRestorer *, 0, false>::__compressed_pair_elem<gl::GLStateRestorer *, void>' [ 0 5 10 67]
'std::__1::__compressed_pair<int *, std::__1::default_delete<int []> >::__compressed_pair<int *&, true>' [ 0 5 10 71]
'gl::PbufferGLSurfaceEGL::Destroy' [ 0 4 25]
'gl::DebugGLApi::glGetQueryObjectivFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 416]
'AnnotatePCQPut' [ 0]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::vector' [ 0 5 10 82]
'base::Singleton<ui::GpuSwitchingManager, base::DefaultSingletonTraits<ui::GpuSwitchingManager>, ui::GpuSwitchingManager>::get' [ 0 6 122]
'size_t' [ 0]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__annotate_new' [ 0 5 10 88]
'gl::GLApiBase::glTexSubImage2DFn' [ 0 4 15]
'std::__1::__unique_if<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterIuivRobustANGLEFn' [ 0 4 16]
'gl::DebugGLApi::glGetRenderbufferParameterivEXTFn' [ 0 4 16]
'gl::GLApiBase::glDeleteSyncFn' [ 0 4 15]
'gl::DebugEGLApi::eglInitializeFn' [ 0 4 17]
'std::__1::__split_buffer<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> &>::__split_buffer' [ 0 5 10 91]
'gl::GLImageNativePixmap::ExportHandle' [ 0 4 25]
'gl::GLSurfaceAdapter::GetSize' [ 0 4 22]
'gl::GLApiBase::glCopySubTextureCHROMIUMFn' [ 0 4 15]
'gl::DebugGLXApi::glXReleaseTexImageEXTFn' [ 0 4 17]
'gl::GLApiBase::glMatrixLoadIdentityEXTFn' [ 0 4 15]
'gl::DebugGLApi::glDeleteSyncFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::deallocate' [ 0 5 10 88]
'std::__1::remove_reference<gfx::NativePixmapPlane &>' [ 0 5 10]
'base::SupportsWeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::SupportsWeakPtr' [ 0 6 77]
'gl::DebugGLApi::glEnableVertexAttribArrayFn' [ 0 4 16]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::destroy' [ 0 5 10 107]
'std::__1::remove_reference<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'GLintptr' [ 0]
'gl::GLStubApiBase::glGetProgramInterfaceivRobustANGLEFn' [ 0 4 19]
'gl::GLApiBase::glGetTexParameterivFn' [ 0 4 15]
'gl::glVertexAttribI4uiProc' [ 0 4]
'gl::GLApiBase::glGetStringFn' [ 0 4 15]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, true>' [ 0 5 10]
'gl::GLShareGroup::GetHandle' [ 0 4 18]
'gl::DebugEGLApi::eglGetProcAddressFn' [ 0 4 17]
'std::__1::conditional<true, std::__1::tuple<gfx::PresentationFeedback>, std::__1::__nat>' [ 0 5 10]
'logging::CheckEQImpl' [ 0 9]
'std::__1::remove_reference<std::__1::allocator<base::BasicStringPiece<std::string> > &>' [ 0 5 10]
'std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>' [ 0 5 10]
'base::BindUnwrapTraits<base::TimeTicks>' [ 0 6]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>' [ 0 6]
'gl::GLSurfaceAdapter::Recreate' [ 0 4 22]
'gfx::Size::set_height' [ 0 5 11]
'gl::NoContextGLApi::glFrontFaceFn' [ 0 4 20]
'std::__1::remove_reference<const std::__1::allocator<base::BasicStringPiece<std::string> > &>' [ 0 5 10]
'gl::GLSurfaceOSMesaHeadless::IsOffscreen' [ 0 4 29]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >::__tree_node_destructor' [ 0 5 10 105]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::TraceGLApi>, 1, true>' [ 0 5 10]
'gl::GLSurfaceStub::GetFormat' [ 0 4 19]
'gl::NativeViewGLSurfaceEGL::NativeViewGLSurfaceEGL' [ 0 4 28]
'base::internal::circular_deque_iterator<gl::GLSurfacePresentationHelper::Frame>::operator--' [ 0 6 16 81]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::allocate' [ 0 5 10 64]
'std::__1::pointer_traits<const char **>' [ 0 5 10]
'gl::TraceGLApi::glColorMaskFn' [ 0 4 16]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::GetVSyncParameters' [ 0 4 27 54]
'gl::GLFenceEGL::Invalidate' [ 0 4 16]
'gl::DebugGLXApi::glXQueryDrawableFn' [ 0 4 17]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::clear' [ 0 6 62]
'base::Singleton<ui::GpuSwitchingManager, base::DefaultSingletonTraits<ui::GpuSwitchingManager>, ui::GpuSwitchingManager>::CreatorFunc' [ 0 6 122]
'gl::TraceGLApi::glObjectPtrLabelFn' [ 0 4 16]
'gl::GLApiBase::glProgramBinaryFn' [ 0 4 15]
'gl::glFramebufferTextureLayerProc' [ 0 4]
'gl::NoContextGLApi::glWindowRectanglesEXTFn' [ 0 4 20]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::front' [ 0 5 10 116]
'std::__1::__pointer_type_imp::__pointer_type<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane>, true>' [ 0 5 10 30]
'gl::glXGetCurrentContextProc' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10 30]
'logging::CheckNEImpl<unsigned int, unsigned int>' [ 0 9]
'gl::NativeViewGLSurfaceGLX::Initialize' [ 0 4 28]
'gl::TraceGLXApi::glXSwapBuffersFn' [ 0 4 17]
'logging::MakeCheckOpString<gl::GLStateRestorer *, gl::GLStateRestorer *>' [ 0 9]
'gl::NativeViewGLSurfaceGLX::~NativeViewGLSurfaceGLX' [ 0 4 28]
'std::__1::forward<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **>' [ 0 5 10]
'std::__1::allocator<gl::GLSurfaceOverlay>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__construct_range_forward<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10 91]
'gl::DebugEGLApi::eglQueryContextFn' [ 0 4 17]
'scoped_refptr<gl::GPUTimingClient>' [ 0]
'gl::DebugGLApi::glGenTransformFeedbacksFn' [ 0 4 16]
'gl::GLStubApiBase::glStencilStrokePathInstancedNVFn' [ 0 4 19]
'uint_fast64_t' [ 0]
'std::__1::find<std::__1::__wrap_iter<ui::GpuSwitchingObserver **>, nullptr_t>' [ 0 5 10]
'gl::GLApiBase::glGetVertexAttribPointervRobustANGLEFn' [ 0 4 15]
'std::__1::allocator<ui::GpuSwitchingObserver *>' [ 0 5 10]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >::Release' [ 0 6 84]
'gl::GLStubApiBase::glDebugMessageInsertFn' [ 0 4 19]
'gl::NativeViewGLSurfaceEGL::SetEnableSwapTimestamps' [ 0 4 28]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__alloc' [ 0 5 10 108]
'base::internal::DstRangeRelationToSrcRangeImpl<unsigned long, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct<base::BasicStringPiece<std::string>, const base::BasicStringPiece<std::string> &>' [ 0 5 10 88]
'gl::GLStubApiBase::glGenPathsNVFn' [ 0 4 19]
'std::__1::addressof<std::__1::pair<const unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::NoContextGLApi::glGetVertexAttribivFn' [ 0 4 20]
'gl::DebugGLApi::glGetQueryObjecti64vFn' [ 0 4 16]
'std::__1::swap<base::RefCountedMemory *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>' [ 0 5 10]
'gl::NoContextGLApi::glDrawElementsFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<ui::ScopedMakeCurrent *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__destruct_at_end' [ 0 5 10 129]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >::RefCounted' [ 0 6 144]
'gl::TraceGLApi::glGetnUniformuivRobustANGLEFn' [ 0 4 16]
'gl::glTexBufferRangeProc' [ 0 4]
'std::__1::find<std::__1::__wrap_iter<const std::__1::basic_string<char> *>, const char *>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__value_type<void *, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'gl::SyncControlVSyncProvider::SupportGetVSyncParametersIfAvailable' [ 0 4 30]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__push_back_slow_path<const char *const &>' [ 0 5 10 68]
'gl::GLStubApi::glGetStringiFn' [ 0 4 15]
'base::internal::MaxExponentPromotion<long, int, base::internal::LEFT_PROMOTION>' [ 0 6 16]
'scoped_refptr<base::RefCountedMemory>::operator->' [ 0 39]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *>, true>' [ 0 5 10]
'std::__1::operator!=<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__alloc' [ 0 5 10 104]
'gl::GLStubApiBase::glCoverageModulationNVFn' [ 0 4 19]
'gl::DebugGLApi::glReadBufferFn' [ 0 4 16]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::__compressed_pair<nullptr_t, std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10 115]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >::operator->' [ 0 5 10 77]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::__end_cap' [ 0 5 10 77]
'gl::GLApiBase::glUniform2fvFn' [ 0 4 15]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >' [ 0 5 10]
'std::__1::allocator<ui::CARendererLayerParams::FilterEffect>::deallocate' [ 0 5 10 62]
'switches::kDisableDirectComposition' [ 0 10]
'base::circular_deque<base::TimeDelta>::front' [ 0 6 39]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > >' [ 0 5 10]
'gl::GLApi::~GLApi' [ 0 4 11]
'gl::TraceGLApi::glDisableFn' [ 0 4 16]
'base::WeakPtr<gl::GLSurfacePresentationHelper>::operator*' [ 0 6 48]
'gl::NoContextGLApi::glCopySubTextureCHROMIUMFn' [ 0 4 20]
'std::__1::remove_reference<void **&>' [ 0 5 10]
'std::__1::conditional<false, const std::__1::basic_string<char> &, std::__1::basic_string<char> &&>' [ 0 5 10]
'gfx::Size::set_width' [ 0 5 11]
'AnnotateBarrierInit' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'gl::GLStubApiBase::glDeleteRenderbuffersEXTFn' [ 0 4 19]
'gl::GLContext::LosesAllContextsOnContextLost' [ 0 4 15]
'gl::GPUTimingImpl::IncElapsedQueryCount' [ 0 4 19]
'std::__1::back_inserter<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >' [ 0 5 10]
'gl::GetBitSize' [ 0 4]
'std::__1::operator!=<int *>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::unique_ptr<true, void>' [ 0 5 10 87]
'gl::eglClientWaitSyncKHRProc' [ 0 4]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<TimeNamePair> &, 1, false>::__compressed_pair_elem<std::__1::allocator<TimeNamePair> &, void>' [ 0 5 10 81]
'gl::DebugEGLApi::eglDupNativeFenceFDANDROIDFn' [ 0 4 17]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__end_node' [ 0 5 10 107]
'gl::TraceGLApi::glDeleteSyncFn' [ 0 4 16]
'std::__1::__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true> >::__compressed_pair<int, true>' [ 0 5 10 192]
'gl::TraceGLXApi::glXCreatePbufferFn' [ 0 4 17]
'std::__1::__less<char *, char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::__wrap_iter' [ 0 5 10 68]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::reserve' [ 0 5 10 68]
'XGraphicsExposeEvent' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'gl::GLXApiBase::glXGetCurrentDisplayFn' [ 0 4 16]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__push_back_slow_path<const XVisualInfo &>' [ 0 5 10 66]
'logging::CheckOpResult' [ 0 9]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'gl::TraceGLApi::glTexSubImage3DRobustANGLEFn' [ 0 4 16]
'std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >' [ 0 5 10]
'base::internal::CheckedNumeric<long>::Wrapper<double>::is_valid' [ 0 6 16 38 55]
'ui::ScopedReleaseCurrent' [ 0 4]
'gl::GLSurfaceAdapter::SetUsePlaneGpuFences' [ 0 4 22]
'gl::GetGLExtensionsFromCurrentContext' [ 0 4]
'base::Singleton<gl::GLVisualPickerGLX, base::DefaultSingletonTraits<gl::GLVisualPickerGLX>, gl::GLVisualPickerGLX>::get' [ 0 6 116]
'gl::GLStubApi::glIsTextureFn' [ 0 4 15]
'gl::NoContextGLApi::glGetObjectLabelFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10 30]
'gl::DebugGLApi::glIsTransformFeedbackFn' [ 0 4 16]
'scoped_refptr<base::internal::BindStateBase>::scoped_refptr' [ 0 46]
'std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>::base' [ 0 5 10 67]
'gl::GLContextReal::CreateGPUTimingClient' [ 0 4 19]
'gl::GLApiBase::glBindBufferBaseFn' [ 0 4 15]
'gl::ScopedCapability::ScopedCapability' [ 0 4 22]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'gl::DebugGLXApi::glXSelectEventFn' [ 0 4 17]
'std::__1::remove_reference<base::RefCountedMemory *&>' [ 0 5 10]
'gl::GPUTimingImpl::DoTimeStampQuery' [ 0 4 19]
'gl::TraceGLApi::glDeleteTexturesFn' [ 0 4 16]
'std::__1::__unique_if<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>' [ 0 5 10]
'gl::GLSurfaceGLX::InitializeExtensionSettingsOneOff' [ 0 4 18]
'gl::TraceGLApi::glSamplerParameterfvFn' [ 0 4 16]
'gl::glIsSyncProc' [ 0 4]
'gl::DebugGLXApi::glXGetMscRateOMLFn' [ 0 4 17]
'gl::GLStubApiBase::glGetShaderivRobustANGLEFn' [ 0 4 19]
'base::LazyInstanceTraitsBase<angle::(anonymous namespace)::PlatformContext>::New' [ 0 6 77]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >::AddRef' [ 0 6 86]
'scoped_refptr<gl::GLImage>' [ 0]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__tree' [ 0 5 10 299]
'gl::TraceGLApi::glBindFramebufferEXTFn' [ 0 4 16]
'gl::GLStubApiBase::glUniform4fFn' [ 0 4 19]
'gl::NoContextGLApi::glUniformMatrix3x2fvFn' [ 0 4 20]
'gl::TraceGLApi::glQueryCounterFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::IncrementGeneration' [ 0 6 54]
'gl::glVertexAttribI4iProc' [ 0 4]
'std::__1::remove_reference<const char *const (&)[14]>' [ 0 5 10]
'base::AutoLock' [ 0 6]
'std::__1::forward_as_tuple<const gfx::ColorSpace &>' [ 0 5 10]
'gl::TraceGLApi::glGetProgramResourceivFn' [ 0 4 16]
'gl::glGetActiveUniformProc' [ 0 4]
'gl::TraceGLApi::glLineWidthFn' [ 0 4 16]
'gl::DebugGLApi::glDeleteFencesAPPLEFn' [ 0 4 16]
'base::internal::CheckedNumeric<long>::MathOp<CheckedDivOp, double>' [ 0 6 16 38]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'std::__1::pointer_traits<long *>' [ 0 5 10]
'WTF' [ 0]
'gl::GLVersionInfo' [ 0 4]
'gl::GLSurfaceAdapter::UseOverlaysForVideo' [ 0 4 22]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::construct<gfx::NativePixmapPlane, int &, int &, int, unsigned long &>' [ 0 5 10 74]
'Visual' [ 0]
'gl::TraceGLXApi::glXCopyContextFn' [ 0 4 17]
'gl::eglSwapIntervalProc' [ 0 4]
'gl::GLStubApiBase::glGetBooleanvFn' [ 0 4 19]
'gl::GLContext::ForceReleaseVirtuallyCurrent' [ 0 4 15]
'gl::GLStubApiBase::glGetnUniformivRobustANGLEFn' [ 0 4 19]
'gl::TraceGLApi::glGetQueryObjectui64vRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glInvalidateFramebufferFn' [ 0 4 20]
'std::__1::remove_reference<gfx::PresentationFeedback &>' [ 0 5 10]
'std::__1::remove_reference<gl::GLContext *const &>' [ 0 5 10]
'gl::GLStubApiBase::glVertexAttribDivisorANGLEFn' [ 0 4 19]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >' [ 0 5 10]
'gl::glCompressedTexSubImage2DRobustANGLEProc' [ 0 4]
'gl::GLStubApiBase::glGetQueryObjectivRobustANGLEFn' [ 0 4 19]
'std::__1::operator!=<ui::GpuSwitchingObserver **>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'gl::DebugGLApi::glTexBufferFn' [ 0 4 16]
'angle::OverrideWorkaroundsD3DFunc' [ 0 7]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::capacity' [ 0 5 10 59]
'gl::DisableNullDrawGLBindings::~DisableNullDrawGLBindings' [ 0 4 31]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::ShrinkCapacityIfNecessary' [ 0 6 60]
'std::__1::allocator<void *>::deallocate' [ 0 5 10 29]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6 16]
'base::internal::UnsanitizedCfiCall<void (*(*)(const char *))()>::UnsanitizedCfiCall' [ 0 6 16 65]
'gl::g_current_glx_context' [ 0 4]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer>' [ 0 5 10]
'base::RefCounted<gl::TimerQuery, base::DefaultRefCountedTraits<gl::TimerQuery> >::Release' [ 0 6 82]
'std::__1::__compressed_pair_elem<std::__1::allocator<void *> &, 1, false>' [ 0 5 10]
'base::LazyInstance<gl::(anonymous namespace)::TraceSwapEventsInitializer, base::internal::LeakyLazyInstanceTraits<gl::(anonymous namespace)::TraceSwapEventsInitializer> >::Get' [ 0 6 172]
'gl::(anonymous namespace)::OMLSyncControlVSyncProvider::IsHWClock' [ 0 4 27 56]
'base::RepeatingCallback<void (const std::__1::basic_string<char> &, const std::__1::basic_string<char> &)>::~RepeatingCallback' [ 0 6 108]
'gl::glUniform1uivProc' [ 0 4]
'__gnuc_va_list' [ 0]
'gl::EGLApiBase::eglStreamPostD3DTextureANGLEFn' [ 0 4 16]
'gl::TraceGLXApi::glXGetConfigFn' [ 0 4 17]
'base::ProtectedMemory<void (*(*)(const char *))()>' [ 0 6]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::reset<unsigned char *>' [ 0 5 10 85]
'gl::DebugGLXApi::glXSwapIntervalEXTFn' [ 0 4 17]
'scoped_refptr<gl::GLShareGroup>::~scoped_refptr' [ 0 33]
'gl::EGLApiBase::eglProgramCachePopulateANGLEFn' [ 0 4 16]
'gl::GLApiBase::glGetShaderInfoLogFn' [ 0 4 15]
'gl::ScopedBufferBinder::ScopedBufferBinder' [ 0 4 24]
'gl::(anonymous namespace)::SGIVideoSyncThread::SGIVideoSyncThread' [ 0 4 27 47]
'base::ObserverListPolicy' [ 0 6]
'gl::QueryResult::SetEndValue' [ 0 4 17]
'gl::DebugOSMESAApi::OSMesaDestroyContextFn' [ 0 4 20]
'std::__1::default_delete<gfx::VSyncProvider>' [ 0 5 10]
'std::__1::operator-<ui::GpuSwitchingObserver *const *, ui::GpuSwitchingObserver *const *>' [ 0 5 10]
'std::__1::move<ui::GpuSwitchingObserver **&>' [ 0 5 10]
'gl::GLStubApiBase::glCreateProgramFn' [ 0 4 19]
'gl::GLStubApiBase::glGetTransformFeedbackVaryingFn' [ 0 4 19]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__end_cap' [ 0 5 10 108]
'gl::glGetVertexAttribfvRobustANGLEProc' [ 0 4]
'gl::ProcsGL' [ 0 4]
'std::__1::vector<long, std::__1::allocator<long> >::__annotate_new' [ 0 5 10 52]
'gl::GLStubApiBase::glTexParameterfFn' [ 0 4 19]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_delete' [ 0 5 10 50]
'gl::TraceGLApi::glGetBufferParameterivFn' [ 0 4 16]
'std::__1::__wrap_iter<void **>::base' [ 0 5 10 32]
'gl::DebugGLApi::glUniformMatrix2fvFn' [ 0 4 16]
'gl::GLStubApiBase::glGenFramebuffersEXTFn' [ 0 4 19]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::release' [ 0 5 10 77]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__annotate_shrink' [ 0 5 10 115]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__annotate_delete' [ 0 5 10 68]
'std::__1::operator!=<void **>' [ 0 5 10]
'gl::GLSurfaceFormat::~GLSurfaceFormat' [ 0 4 21]
'gl::GLImageNativePixmap::~GLImageNativePixmap' [ 0 4 25]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>::RunOnce' [ 0 6 16 155]
'gl::DebugGLApi::glObjectPtrLabelFn' [ 0 4 16]
'std::__1::move<base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::__vector_base<long, std::__1::allocator<long> >::__alloc' [ 0 5 10 59]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::__destruct_n &>' [ 0 5 10]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::__split_buffer' [ 0 5 10 77]
'__pthread_mutex_s' [ 0]
'std::__1::allocator<void *>::allocate' [ 0 5 10 29]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::__split_buffer' [ 0 5 10 59]
'gl::DebugGLApi::glShaderSourceFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>::RunImpl<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, 0>::is_method' [ 0 6 16 155 278]
'gl::GLXApiBase::glXSwapBuffersFn' [ 0 4 16]
'std::__1::__compressed_pair<XVisualInfo *, std::__1::allocator<XVisualInfo> &>' [ 0 5 10]
'gl::GetGLProcAddress' [ 0 4]
'gl::TraceGLApi::glIsProgramFn' [ 0 4 16]
'gl::GLContextStub::~GLContextStub' [ 0 4 19]
'base::LazyInstanceTraitsBase<angle::(anonymous namespace)::PlatformContext>::CallDestructor' [ 0 6 77]
'gl::NativeViewGLSurfaceEGL::GetVSyncProvider' [ 0 4 28]
'gl::kGLImplementationAppleName' [ 0 4]
'std::__1::vector<long, std::__1::allocator<long> >::vector' [ 0 5 10 52]
'logging::CheckGTImpl' [ 0 9]
'std::__1::remove_reference<const std::__1::basic_string<char> &>' [ 0 5 10]
'gl::GLSurfacePresentationHelper' [ 0 4]
'gl::GLStubApiBase::glSamplerParameterIivRobustANGLEFn' [ 0 4 19]
'gl::kGLImplementationOSMesaName' [ 0 4]
'gl::GLSurfaceStub::GetHandle' [ 0 4 19]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >, true>' [ 0 5 10 30]
'gl::GLSurface::GetDrawOffset' [ 0 4 15]
'gl::DebugGLXApi::glXGetCurrentDrawableFn' [ 0 4 17]
'gl::GLStubApiBase::glStencilFillPathInstancedNVFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, 0, false>' [ 0 5 10]
'gl::GLStubApiBase::glUniform2uivFn' [ 0 4 19]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::operator()' [ 0 5 10 151]
'std::__1::__compressed_pair_elem<std::__1::less<gl::GLContext *>, 1, true>::__compressed_pair_elem<const std::__1::less<gl::GLContext *> &, void>' [ 0 5 10 76]
'base::ThreadLocalPointer<gl::GLSurface>' [ 0 6]
'gl::DebugGLApi::glGetProgramInterfaceivRobustANGLEFn' [ 0 4 16]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLContext> >::New' [ 0 6 16 83]
'std::__1::allocator_traits<std::__1::allocator<long> >::__construct<long, const long &>' [ 0 5 10 56]
'gl::DebugGLApi::glResumeTransformFeedbackFn' [ 0 4 16]
'std::__1::allocator<XVisualInfo>::construct<XVisualInfo, const XVisualInfo &>' [ 0 5 10 34]
'gl::GLApiBase::glGetProgramInterfaceivFn' [ 0 4 15]
'gl::GLStubApiBase::glCopyTexImage2DFn' [ 0 4 19]
'gl::glGetQueryObjectivRobustANGLEProc' [ 0 4]
'std::__1::ios_base::flags' [ 0 5 10 20]
'gl::DebugOSMESAApi::OSMesaCreateContextExtFn' [ 0 4 20]
'gl::GLStubApiBase::glGetVertexAttribivFn' [ 0 4 19]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >' [ 0 5 10 91]
'std::__1::__const_pointer<TimeNamePair, TimeNamePair *, std::__1::allocator<TimeNamePair>, true>' [ 0 5 10]
'std::__1::forward<std::__1::tuple<unsigned long &&> >' [ 0 5 10]
'gl::TimeStampTimerQuery::Destroy' [ 0 4 25]
'gl::NoContextGLApi::glUniform4ivFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<long> >' [ 0 5 10]
'base::internal::FastIntegerArithmeticPromotion<unsigned long, int, false>' [ 0 6 16]
'std::__1::remove_reference<gfx::PresentationFeedback>' [ 0 5 10]
'__compar_fn_t' [ 0]
'gl::DebugGLApi::glCompressedTexImage3DRobustANGLEFn' [ 0 4 16]
'std::__1::__invert<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &>' [ 0 5 10]
'gl::GLSurface::SetEnableSwapTimestamps' [ 0 4 15]
'base::ThreadLocalPointer<gl::GLContext>::ThreadLocalPointer' [ 0 6 41]
'gl::(anonymous namespace)::GetPlatformANGLEDisplay' [ 0 4 27]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__annotate_new' [ 0 5 10 70]
'gl::DebugGLApi::glUniform1uiFn' [ 0 4 16]
'gl::GLStubApiBase::glGetActiveUniformFn' [ 0 4 19]
'gl::TraceGLXApi::glXGetFBConfigsFn' [ 0 4 17]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::data' [ 0 5 10 101]
'gl::NoContextGLApi::glUniform3fvFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, std::__1::basic_string<char> >' [ 0 5 10 81]
'scoped_refptr<gl::GLContext>' [ 0]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::~vector' [ 0 5 10 115]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> > >' [ 0 5 10]
'gfx::XScopedPtr<XVisualInfo []>' [ 0 5]
'gl::NoContextGLApi::glCompressedTexImage3DRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glUniform2fvFn' [ 0 4 19]
'gl::GLStubApiBase::glMapBufferRangeFn' [ 0 4 19]
'base::TimeDelta::operator/<int>' [ 0 6 17]
'base::ThreadLocalPointer<gl::CurrentGL>::Get' [ 0 6 41]
'std::__1::__compressed_pair<ui::DCRendererLayerParams::FilterEffect *, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> &>' [ 0 5 10 135]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'gl::NoContextGLApi::glStencilMaskSeparateFn' [ 0 4 20]
'std::__1::__compressed_pair<void **, std::__1::default_delete<void *[]> >::__compressed_pair<void **&, true>' [ 0 5 10 75]
'gl::GLApiBase::glSamplerParameterfFn' [ 0 4 15]
'std::__1::remove_reference<const std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> &>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::begin' [ 0 5 10 101]
'gl::glTexImage2DRobustANGLEProc' [ 0 4]
'gl::GetValue' [ 0 4]
'gl::DebugGLApi::glGetnUniformfvRobustANGLEFn' [ 0 4 16]
'XButtonEvent' [ 0]
'std::__1::remove_reference<const gl::GLVersionInfo &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<gfx::GpuFence *, 0, false>::__compressed_pair_elem<gfx::GpuFence *, void>' [ 0 5 10 61]
'gl::NoContextGLApi::glDeleteTransformFeedbacksFn' [ 0 4 20]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::VectorBuffer' [ 0 6 16 70]
'gl::TraceOSMESAApi::OSMesaGetProcAddressFn' [ 0 4 20]
'std::__1::forward<const base::TimeTicks &>' [ 0 5 10]
'gl::GLImageGLX::Flush' [ 0 4 16]
'gl::glGetShaderivRobustANGLEProc' [ 0 4]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::base' [ 0 5 10 55]
'std::__1::__invert<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &>::operator()<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string> >' [ 0 5 10 240]
'gl::DebugGLApi::glGetInteger64i_vFn' [ 0 4 16]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::GPUTimingImpl::BeginElapsedTimeQuery' [ 0 4 19]
'gl::TimeElapsedTimerQuery::PrepareNextUpdate' [ 0 4 27]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'trace_event_internal::ScopedTracer::Initialize' [ 0 22 36]
'std::__1::default_delete<gl::DebugGLApi>::operator()' [ 0 5 10 42]
'std::__1::allocator<char>::deallocate' [ 0 5 10 27]
'gl::NoContextGLApi::glIsFenceNVFn' [ 0 4 20]
'gl::NoContextGLApi::glStencilOpSeparateFn' [ 0 4 20]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::max_size' [ 0 5 10 74]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::clear' [ 0 5 10 81]
'gl::YUVToRGBConverter::~YUVToRGBConverter' [ 0 4 23]
'base::TimeDelta::operator<' [ 0 6 17]
'std::__1::__allocator_traits_rebind<std::__1::allocator<gl::GLContext *>, std::__1::__tree_node<gl::GLContext *, void *>, true>' [ 0 5 10]
'gl::glGetVertexAttribPointervProc' [ 0 4]
'gl::GPUTiming::~GPUTiming' [ 0 4 15]
'gl::GLContextEGL::MakeCurrent::trace_event_unique_atomic287' [ 0 4 18 31]
'std::__1::__compressed_pair_elem<std::__1::allocator<XVisualInfo> &, 1, false>::__compressed_pair_elem<std::__1::allocator<XVisualInfo> &, void>' [ 0 5 10 80]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::operator[]' [ 0 5 10 332]
'gl::glVertexAttrib4fvProc' [ 0 4]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::~unique_ptr' [ 0 5 10 264]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>::RunOnce::num_bound_args' [ 0 6 16 227 236]
'std::__1::pointer_traits<base::FileDescriptor *>' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::SupportsPresentationCallback' [ 0 4 28]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >' [ 0 5 10]
'gl::DebugGLApi::glPathParameterfNVFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<gl::GLSurfacePresentationHelper *, 0, false>::__compressed_pair_elem<gl::GLSurfacePresentationHelper *, void>' [ 0 5 10 79]
'gl::GLApiBase::glScissorFn' [ 0 4 15]
'gl::GLImageRefCountedMemory::GLImageRefCountedMemory' [ 0 4 29]
'std::__1::forward<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> &>' [ 0 5 10]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::__destruct_n::__set<base::BasicStringPiece<std::string> >' [ 0 5 10 24]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__annotate_delete' [ 0 5 10 68]
'gl::GLSurfaceFormat::GetDepthBits' [ 0 4 21]
'gl::UnmappedNativeViewGLSurfaceGLX' [ 0 4]
'base::Singleton<ui::GpuSwitchingManager, base::DefaultSingletonTraits<ui::GpuSwitchingManager>, ui::GpuSwitchingManager>' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > &, 0>' [ 0 6 16 261]
'std::__1::__wrap_iter<TimeNamePair *>::__wrap_iter' [ 0 5 10 39]
'gl::NoContextGLApi::glGetIntegervFn' [ 0 4 20]
'std::__1::make_unsigned<long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__destruct_n &, 1, false>::__get' [ 0 5 10 70]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>::operator->' [ 0 5 10 340]
'gl::GLApiBase::glGetActiveUniformFn' [ 0 4 15]
'gl::TraceEGLApi::eglCreateSyncKHRFn' [ 0 4 17]
'std::__1::addressof<std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::GetVSyncParametersIfAvailable' [ 0 4 27 54]
'std::__1::__compressed_pair<gl::DisplayType *, std::__1::allocator<gl::DisplayType> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 87]
'gl::TraceGLApi::glDeleteShaderFn' [ 0 4 16]
'gl::RealGLApi::glDepthRangeFn' [ 0 4 15]
'gl::kGLImplementationSwiftShaderName' [ 0 4]
'gl::DebugGLApi::glDisableFn' [ 0 4 16]
'base::flat_set<base::StringPiece>' [ 0 6]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::second' [ 0 5 10 277]
'std::__1::conditional<false, std::__1::pointer_traits<gl::DisplayType *>::__nat, gl::DisplayType>' [ 0 5 10]
'std::__1::move<std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> > &>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1208' [ 0 4 28 45]
'ceil' [ 0]
'gl::glGenQueriesProc' [ 0 4]
'gl::DebugGLApi::glBlendColorFn' [ 0 4 16]
'gl::NoContextGLApi::glDepthFuncFn' [ 0 4 20]
'std::__1::__compressed_pair<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::GpuSwitchingObserver *> &>' [ 0 5 10 109]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> &, void>' [ 0 5 10 105]
'gl::GLSurface::SupportsPostSubBuffer' [ 0 4 15]
'gl::RealGLApi' [ 0 4]
'GLDEBUGPROC' [ 0]
'gl::GLSurfaceAdapter::CommitOverlayPlanes' [ 0 4 22]
'gl::TraceGLApi::glVertexAttrib1fvFn' [ 0 4 16]
'std::__1::forward<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 5 10]
'XMapEvent' [ 0]
'gl::DebugGLApi::glIsFenceAPPLEFn' [ 0 4 16]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::capacity' [ 0 5 10 68]
'base::ProtectedMemory<void (*(*)(const char *))()>::operator*' [ 0 6 52]
'std::__1::pair<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>' [ 0 5 10]
'gl::glDebugMessageCallbackProc' [ 0 4]
'gl::GLImageEGL' [ 0 4]
'gl::glGetInteger64vRobustANGLEProc' [ 0 4]
'__uint8_t' [ 0]
'gl::DebugGLApi::glMemoryBarrierEXTFn' [ 0 4 16]
'std::__1::move<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> > &>' [ 0 5 10]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator=<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>, void, void>' [ 0 5 10 89]
'std::__1::__compressed_pair_elem<base::BasicStringPiece<std::string> *, 0, false>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &, 0>::is_weak_call' [ 0 6 16 219 389]
'gl::GLStubApiBase::glGetUniformfvFn' [ 0 4 19]
'std::__1::__size_type<std::__1::allocator<unsigned int>, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::trace_event::MemoryAllocatorDump>, 1, true>' [ 0 5 10]
'gl::GLApiBase::glReadnPixelsRobustANGLEFn' [ 0 4 15]
'gl::glCopyTexImage2DProc' [ 0 4]
'gl::TraceOSMESAApi::OSMesaGetCurrentContextFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<gl::GLSurface::CALayerInUseQuery> >' [ 0 5 10]
'std::__1::remove_reference<gl::GLFenceEGL *>' [ 0 5 10]
'gl::NoContextGLApi::glCompressedTexImage2DFn' [ 0 4 20]
'gl::glUniform4fProc' [ 0 4]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::~unique_ptr' [ 0 5 10 85]
'gl::TraceEGLApi::eglGetErrorFn' [ 0 4 17]
'std::__1::remove_reference<gl::NativeViewGLSurfaceEGL::SwapInfo &>' [ 0 5 10]
'gl::TraceGLApi::glGetProgramBinaryFn' [ 0 4 16]
'gl::GLStubApiBase::glTexImage3DFn' [ 0 4 19]
'base::DefaultSingletonTraits<gl::GLVisualPickerGLX>' [ 0 6]
'gl::DebugGLApi::glGetUniformuivFn' [ 0 4 16]
'std::__1::forward<std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10]
'gl::glClearDepthProc' [ 0 4]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>' [ 0 5 10]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::__destruct_at_end' [ 0 5 10 75]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::forward<gl::(anonymous namespace)::OMLSyncControlVSyncProvider *&>' [ 0 5 10]
'gl::GLXApi::GLXApi' [ 0 4 12]
'gl::GLFenceAndroidNativeFenceSync::CreateInternal' [ 0 4 35]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::value_comp' [ 0 5 10 299]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::reset' [ 0 5 10 157]
'gl::GLApiBase::glUniform4uiFn' [ 0 4 15]
'std::__1::vector<long, std::__1::allocator<long> >::size' [ 0 5 10 52]
'std::__1::__hash_map_pointer_types<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *, std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >, true>' [ 0 5 10]
'gl::TraceGLApi::glGetSamplerParameterivFn' [ 0 4 16]
'uintmax_t' [ 0]
'gl::GLSurfaceOSMesa' [ 0 4]
'std::__1::pointer_traits<ui::GpuSwitchingObserver **>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::VSyncProvider *, std::__1::default_delete<gfx::VSyncProvider> >::__compressed_pair<gfx::VSyncProvider *, std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10 98]
'gl::DebugGLApi::glUniform4uiFn' [ 0 4 16]
'std::__1::default_delete<gfx::FixedVSyncProvider>' [ 0 5 10]
'AnnotateHappensAfter' [ 0]
'gl::GLStubApiBase::glReadPixelsRobustANGLEFn' [ 0 4 19]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >' [ 0 5 10]
'gl::GLImageMemory::BindTexImage' [ 0 4 19]
'gl::GLFence::CreateForGpuFence' [ 0 4 13]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::data' [ 0 5 10 74]
'gl::NoContextGLApi::glTexSubImage3DFn' [ 0 4 20]
'std::__1::remove_reference<const char **&>' [ 0 5 10]
'gl::TraceGLApi::glGetPointervRobustANGLERobustANGLEFn' [ 0 4 16]
'std::__1::pair<std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool>::pair<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>, bool, false>' [ 0 5 10 128]
'std::__1::conditional<false, std::__1::tuple<const gfx::ColorSpace &>, std::__1::__nat>' [ 0 5 10]
'gl::DebugGLApi' [ 0 4]
'gl::TraceGLXApi::glXSwapIntervalMESAFn' [ 0 4 17]
'gl::GLStubApiBase::glUniform4ivFn' [ 0 4 19]
'base::internal::UnsanitizedCfiCall<void (*(*)(const char *))()>' [ 0 6 16]
'gl::GLApiBase::glCreateProgramFn' [ 0 4 15]
'base::subtle::AtomicLocation32' [ 0 6 14]
'gl::GLSurfaceGLX::IsCreateContextProfileSupported' [ 0 4 18]
'gl::glXMakeCurrentProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::__destroy<scoped_refptr<gl::GLImage> >' [ 0 5 10 79]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::VectorBuffer' [ 0 6 16 62]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::select_on_container_copy_construction' [ 0 5 10 88]
'gl::GLApiBase::glTexParameterfFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::construct<const char *, const char *const &>' [ 0 5 10 64]
'base::Lock::Release' [ 0 6 12]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >' [ 0 5 10]
'gl::DebugGLApi::glGenFencesAPPLEFn' [ 0 4 16]
'gl::kGLImplementationEGLName' [ 0 4]
'gl::GLImageMemory::CopyTexImage' [ 0 4 19]
'gl::NoContextGLApi::glGetPointervRobustANGLERobustANGLEFn' [ 0 4 20]
'gl::NoContextGLApi::glUniform2uiFn' [ 0 4 20]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >' [ 0 6]
'base::internal::UnsanitizedCfiCall<void (*)(void *)>::UnsanitizedCfiCall' [ 0 6 16 54]
'gl::GLApi' [ 0 4]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::capacity' [ 0 5 10 110]
'gl::TraceGLApi::glStencilThenCoverStrokePathInstancedNVFn' [ 0 4 16]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::begin' [ 0 5 10 104]
'gl::GLStubApiBase::glGetActiveUniformsivFn' [ 0 4 19]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::__alloc' [ 0 5 10 63]
'gl::TraceGLApi::glStencilOpSeparateFn' [ 0 4 16]
'gl::GLStubApi::glGenSamplersFn' [ 0 4 15]
'gl::NoContextGLApi::glFramebufferRenderbufferEXTFn' [ 0 4 20]
'std::__1::remove_reference<base::SharedMemory *>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__construct_node_hash<const std::__1::piecewise_construct_t &, std::__1::tuple<unsigned long &&>, std::__1::tuple<> >' [ 0 5 10 466]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::capacity' [ 0 5 10 77]
'base::WeakPtrFactory<gl::GLSurfacePresentationHelper>' [ 0 6]
'gl::(anonymous namespace)::TraceSwapEventsInitializer' [ 0 4 27]
'gl::GLSurfaceGLX::InitializeOneOff' [ 0 4 18]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::max_size' [ 0 5 10 122]
'gfx::VSyncProvider' [ 0 5]
'gl::GLSurface::CommitOverlayPlanesAsync' [ 0 4 15]
'gl::glUniform1uiProc' [ 0 4]
'gl::NativeViewGLSurfaceGLX::SwapBuffers::trace_event_unique_atomic679' [ 0 4 28 41]
'SkYUVColorSpace' [ 0]
'gl::eglProgramCacheQueryANGLEProc' [ 0 4]
'std::__1::__merge_move_assign<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >' [ 0 5 10]
'std::__1::__wrap_iter<TimeNamePair *>::base' [ 0 5 10 39]
'std::__1::unique_ptr<XVisualInfo [], gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'gl::NoContextGLApi::glTexParameterIuivRobustANGLEFn' [ 0 4 20]
'std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::operator()' [ 0 5 10 80]
'std::__1::forward<ui::ScopedMakeCurrent *>' [ 0 5 10]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >::AddRef' [ 0 6 144]
'base::LazyInstance<base::Lock, base::internal::LeakyLazyInstanceTraits<base::Lock> >::Get' [ 0 6 86]
'gl::TraceGLXApi::glXQueryVersionFn' [ 0 4 17]
'std::__1::unique_ptr<void *[], std::__1::default_delete<void *[]> >::~unique_ptr' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<gl::GLSurfaceOverlay> >::deallocate' [ 0 5 10 72]
'std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glApplyFramebufferAttachmentCMAAINTELFn' [ 0 4 16]
'std::__1::__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'gl::GLStubApiBase::glGetInteger64i_vFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::select_on_container_copy_construction' [ 0 5 10 91]
'gl::g_null_draw_bindings_enabled' [ 0 4]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::size' [ 0 5 10 68]
'gl::TraceGLApi::glBlendColorFn' [ 0 4 16]
'gl::DebugGLXApi::glXCreatePixmapFn' [ 0 4 17]
'gl::GetGLWindowSystemBindingInfoGLX' [ 0 4]
'gl::NoContextGLApi::glReadnPixelsRobustANGLEFn' [ 0 4 20]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::WeakPtr' [ 0 6 69]
'trace_event_internal' [ 0]
'scoped_refptr<gl::QueryResult>::Release' [ 0 32]
'gl::GLApi::SetDisabledExtensions' [ 0 4 11]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__hash_iterator' [ 0 5 10 121]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::clear' [ 0 5 10 63]
'gl::GLSurfaceAdapter::IsOffscreen' [ 0 4 22]
'std::__1::allocator_traits<std::__1::allocator<long> >::deallocate' [ 0 5 10 56]
'std::__1::__compressed_pair<ui::ScopedMakeCurrent *, std::__1::default_delete<ui::ScopedMakeCurrent> >' [ 0 5 10]
'gl::TraceGLApi::glTexParameterivRobustANGLEFn' [ 0 4 16]
'gl::glGetUniformivRobustANGLEProc' [ 0 4]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::size' [ 0 5 10 96]
'gl::glBufferSubDataProc' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator+=' [ 0 5 10 87]
'XWindowAttributes' [ 0]
'gl::glVertexAttrib2fvProc' [ 0 4]
'SkMScalar' [ 0]
'std::__1::forward<XVisualInfo *&>' [ 0 5 10]
'gl::NoContextGLApi::glGetUniformIndicesFn' [ 0 4 20]
'gl::CurrentGL::CurrentGL' [ 0 4 15]
'gl::GLStubApiBase::glGetTranslatedShaderSourceANGLEFn' [ 0 4 19]
'EGLNativeDisplayType' [ 0]
'gl::TraceGLApi::glEndTransformFeedbackFn' [ 0 4 16]
'gl::ScopedBufferBinder::~ScopedBufferBinder' [ 0 4 24]
'gl::GLApiBase::glGetActiveUniformBlockNameFn' [ 0 4 15]
'gl::GLContextGLX' [ 0 4]
'gl::GLSurfaceAdapter::SupportsSwapTimestamps' [ 0 4 22]
'base::TimeTicks::TimeTicks' [ 0 6 17]
'ui::GpuSwitchingManager' [ 0 4]
'gl::NoContextGLApi::glTexSubImage2DRobustANGLEFn' [ 0 4 20]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::second' [ 0 5 10 425]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__emplace_unique_key_args<void *, std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 299]
'gl::GLApiBase' [ 0 4]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__end_node' [ 0 5 10 539]
'std::__1::add_lvalue_reference<gl::GPUTiming>' [ 0 5 10]
'base::BindUnwrapTraits<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::Unwrap<const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &>' [ 0 6 94]
'gl::(anonymous namespace)::GLES2Data::trace_event_unique_atomic291' [ 0 4 27 38]
'gl::NativeViewGLSurfaceEGL::SwapBuffers::trace_event_unique_atomic1082' [ 0 4 28 41]
'std::__1::remove_reference<void (gl::GLSurfacePresentationHelper::*&)()>' [ 0 5 10]
'gl::GLStubApiBase::glGetProgramivFn' [ 0 4 19]
'std::__1::remove_reference<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'gl::GLSurfaceStub::IsOffscreen' [ 0 4 19]
'gl::GLStubApiBase::glUniformMatrix2x3fvFn' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__construct_backward<gfx::NativePixmapPlane *>' [ 0 5 10 74]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'base::OnceCallback<void ()>' [ 0 6]
'std::__1::basic_istream<char, std::__1::char_traits<char> >::basic_istream' [ 0 5 10 61]
'ui::GetLastEGLErrorString' [ 0 4]
'gl::GLStubApi::glGenQueriesFn' [ 0 4 15]
'gl::GLStubApiBase::glClearBufferivFn' [ 0 4 19]
'gl::DebugEGLApi::eglGetConfigAttribFn' [ 0 4 17]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::Impl' [ 0 6 16 203 209]
'gl::TraceGLApi::glUniform4uiFn' [ 0 4 16]
'std::__1::tuple<>' [ 0 5 10]
'logging::CheckEQImpl<bool, bool>' [ 0 9]
'angle::CacheProgramCallback' [ 0 7]
'gl::GLStubApiBase::glStencilOpSeparateFn' [ 0 4 19]
'gl::TraceGLXApi::glXGetFBConfigAttribFn' [ 0 4 17]
'std::__1::forward<int &>' [ 0 5 10]
'logging::MakeCheckOpString<const base::circular_deque<gl::GLSurfacePresentationHelper::Frame> *, const base::circular_deque<gl::GLSurfacePresentationHelper::Frame> *>' [ 0 9]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::GetSyncValues' [ 0 4 27 56]
'gl::NoContextGLApi::glCoverFillPathInstancedNVFn' [ 0 4 20]
'gl::NoContextGLApi::glGenRenderbuffersEXTFn' [ 0 4 20]
'gl::(anonymous namespace)::g_trace_swap_enabled' [ 0 4 27]
'std::__1::add_lvalue_reference<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>' [ 0 5 10]
'gl::NoContextGLApi::glDiscardFramebufferEXTFn' [ 0 4 20]
'gl::TraceGLApi::glActiveTextureFn' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::__construct<ContextCreationInfo, int, std::__1::pair<int, int> >' [ 0 5 10 71]
'gl::glGetGraphicsResetStatusARBProc' [ 0 4]
'std::__1::remove_reference<ContextCreationInfo *&>' [ 0 5 10]
'std::__1::char_traits<char>::compare' [ 0 5 10 29]
'std::__1::remove_reference<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'base::internal::circular_deque_iterator<scoped_refptr<gl::TimerQuery> >::operator*' [ 0 6 16 73]
'std::__1::__compressed_pair_elem<gl::DriverGL *, 0, false>::__compressed_pair_elem<gl::DriverGL *, void>' [ 0 5 10 60]
'gl::NoContextGLApi::glGetInternalformativRobustANGLEFn' [ 0 4 20]
'gl::glGetInteger64i_vProc' [ 0 4]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::__bucket_list_deallocator' [ 0 5 10 183]
'std::__1::default_delete<void *[]>::operator()<void *>' [ 0 5 10 36]
'std::__1::__compressed_pair_elem<std::__1::__destruct_n &, 1, false>' [ 0 5 10]
'gl::GLStubApi::glIsFramebufferEXTFn' [ 0 4 15]
'std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>' [ 0 5 10]
'gl::DebugGLApi::glGetUniformLocationFn' [ 0 4 16]
'std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>' [ 0 5 10]
'base::NativeLibrary' [ 0 6]
'gl::GLSurfaceOSMesaX11::Resize' [ 0 4 24]
'gl::GLSurface' [ 0 4]
'gl::TraceGLApi::glDisableVertexAttribArrayFn' [ 0 4 16]
'std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10]
'angle::PlatformMethods' [ 0 7]
'base::internal::Unwrap<const base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> &>' [ 0 6 16]
'gl::GLStubApiBase::glSamplerParameterfFn' [ 0 4 19]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > &>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, false>' [ 0 5 10]
'gl::eglQuerySurfaceProc' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >, true>' [ 0 5 10 30]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::__tuple_impl<0, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> , base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10 149]
'gl::GLFence::IsSupported' [ 0 4 13]
'gl::TraceGLApi::glGetTexParameterivRobustANGLEFn' [ 0 4 16]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::end' [ 0 6 60]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, void>' [ 0 6]
'std::__1::__const_pointer<int, int *, std::__1::allocator<int>, true>' [ 0 5 10]
'scoped_refptr<gl::GLContext>::operator bool' [ 0 30]
'gl::EGLApiBase::eglExportDMABUFImageMESAFn' [ 0 4 16]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'scoped_refptr<base::SingleThreadTaskRunner>::~scoped_refptr' [ 0 45]
'std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>' [ 0 5 10]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::push_back' [ 0 5 10 96]
'gl::GLStubApiBase::glGetShaderivFn' [ 0 4 19]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::end' [ 0 5 10 74]
'gl::GLStubApiBase::glGenTransformFeedbacksFn' [ 0 4 19]
'gl::TimeStampTimerQuery::IsAvailable' [ 0 4 25]
'gl::TraceGLApi::glVertexAttrib2fFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceEGL>, 1, true>' [ 0 5 10]
'gl::NoContextGLApi::glClearBufferivFn' [ 0 4 20]
'gl::TraceGLApi::glCopySubTextureCHROMIUMFn' [ 0 4 16]
'std::__1::unique_ptr<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >::unique_ptr<true, void>' [ 0 5 10 79]
'gl::GLStubApiBase::glStencilThenCoverStrokePathNVFn' [ 0 4 19]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::clear' [ 0 5 10 160]
'base::internal::circular_deque_iterator<gl::GLSurfacePresentationHelper::Frame>::operator*' [ 0 6 16 81]
'EGLClientBuffer' [ 0]
'gl::(anonymous namespace)::GetBufferFormatFromFourCCFormat' [ 0 4 27]
'std::__1::binary_function<gfx::ColorSpace, gfx::ColorSpace, bool>' [ 0 5 10]
'gl::GLStubApiBase::glInsertEventMarkerEXTFn' [ 0 4 19]
'EGLuint64KHR' [ 0]
'std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> , false, false>' [ 0 5 10 112]
'gl::NoContextGLApi::glBufferDataFn' [ 0 4 20]
'gl::GLApiBase::glGetShaderSourceFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >, void>' [ 0 5 10 269]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find' [ 0 5 10 87]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::data' [ 0 5 10 122]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::remove_reference<base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame> &>' [ 0 5 10]
'std::__1::__to_raw_pointer<std::__1::basic_string<char> >' [ 0 5 10]
'gl::glCompressedTexSubImage3DRobustANGLEProc' [ 0 4]
'gfx::Rect' [ 0 5]
'std::__1::get<0, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'GLint64' [ 0]
'std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>::operator->' [ 0 5 10 192]
'gl::TraceEGLApi::eglDestroyContextFn' [ 0 4 17]
'gl::GLApiBase::glCheckFramebufferStatusEXTFn' [ 0 4 15]
'gl::DebugGLApi::glInvalidateFramebufferFn' [ 0 4 16]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__node_alloc' [ 0 5 10 299]
'std::__1::remove_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::trace_event::ConvertableToTraceFormat>' [ 0 5 10]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::size' [ 0 5 10 84]
'gl::GLStubApiBase::glBindVertexArrayOESFn' [ 0 4 19]
'gl::DebugGLApi::glEndQueryFn' [ 0 4 16]
'gl::GLStubApiBase::glClearBufferuivFn' [ 0 4 19]
'gl::NoContextGLApi::glGetQueryivRobustANGLEFn' [ 0 4 20]
'std::__1::forward<gfx::GpuFence *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ContextCreationInfo> &, 1, false>' [ 0 5 10]
'AnnotateIgnoreWritesBegin' [ 0]
'gl::TraceEGLApi::eglGetCompositorTimingSupportedANDROIDFn' [ 0 4 17]
'base::CallbackCancellationTraits<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, void>' [ 0 6]
'gl::EGLApiBase::eglMakeCurrentFn' [ 0 4 16]
'gl::GLStubApiBase::glGetTexLevelParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, true>' [ 0 5 10 30]
'std::__1::move<base::internal::VectorBuffer<base::TimeDelta> &>' [ 0 5 10]
'std::__1::__const_void_pointer<void **, std::__1::allocator<void *>, false>' [ 0 5 10]
'gl::GLStubApiBase::glResumeTransformFeedbackFn' [ 0 4 19]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *&>' [ 0 5 10]
'std::__1::pair<const unsigned long, gl::GLContext *>::pair<unsigned long &&, 0>' [ 0 5 10 54]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::operator->' [ 0 5 10 416]
'std::__1::__compressed_pair_elem<long *, 0, false>' [ 0 5 10]
'gl::GLStubApiBase::glShaderSourceFn' [ 0 4 19]
'gl::NoContextGLApi::glReleaseShaderCompilerFn' [ 0 4 20]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::operator=' [ 0 5 10 85]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__end_cap' [ 0 5 10 104]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'gl::TraceGLApi::glTexParameterIivRobustANGLEFn' [ 0 4 16]
'gl::GLApiBase::glReadPixelsRobustANGLEFn' [ 0 4 15]
'std::__1::__compressed_pair<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo> &>' [ 0 5 10]
'gl::GPUTimingClient::GPUTimingClient' [ 0 4 21]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'gl::GLStubApiBase::glPopDebugGroupFn' [ 0 4 19]
'gl::GLXApiBase::glXCopyContextFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLVersionInfo>, 1, true>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >::pair<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> &, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> &, false>' [ 0 5 10 153]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::reset' [ 0 5 10 167]
'std::__1::remove_reference<unsigned long>' [ 0 5 10]
'gl::RealGLApi::glClearFn' [ 0 4 15]
'gl::PbufferGLSurfaceEGL::GetShareHandle' [ 0 4 25]
'gl::glXWaitXProc' [ 0 4]
'gl::GLStubApiBase::glGetInternalformativFn' [ 0 4 19]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'gl::DebugGLApi::glDeletePathsNVFn' [ 0 4 16]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > &>' [ 0 5 10]
'gl::glClearColorProc' [ 0 4]
'std::__1::__wrap_iter<void **>::__wrap_iter' [ 0 5 10 32]
'std::__1::allocator<ui::CARendererLayerParams::FilterEffect>::allocate' [ 0 5 10 62]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >::~RefCounted' [ 0 6 92]
'int64_t' [ 0]
'scoped_refptr<gl::QueryResult>::scoped_refptr' [ 0 32]
'std::__1::pair<void *const, std::__1::basic_string<char> >::~pair' [ 0 5 10 60]
'gl::GLStubApiBase::glCopyTexSubImage3DFn' [ 0 4 19]
'gl::GLStubApiBase::glApplyFramebufferAttachmentCMAAINTELFn' [ 0 4 19]
'gl::NoContextGLApi::glTexBufferRangeFn' [ 0 4 20]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL>, false>' [ 0 5 10 30]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>::RunOnce' [ 0 6 16 227]
'std::__1::remove_reference<gfx::GpuFence *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >, 1, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetProgramResourceLocationFn' [ 0 4 20]
'gl::DebugGLApi::~DebugGLApi' [ 0 4 16]
'std::__1::forward<int *>' [ 0 5 10]
'gl::TraceGLApi::glGetVertexAttribPointervRobustANGLEFn' [ 0 4 16]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>' [ 0 5 10]
'gl::GLContextEGL::ReleaseCurrent' [ 0 4 18]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct_range_forward<base::BasicStringPiece<std::string> >' [ 0 5 10 88]
'base::RefCountedThreadSafe<base::internal::WeakReference::Flag, base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >' [ 0 6]
'std::__1::__tree_node_base_types<void *>' [ 0 5 10]
'gl::DebugGLApi::glBindBufferRangeFn' [ 0 4 16]
'gl::TraceGLApi::glBlitFramebufferFn' [ 0 4 16]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >' [ 0 6]
'std::__1::unique_ptr<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi> >::get' [ 0 5 10 81]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::clear' [ 0 5 10 129]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> >, 1, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetMultisamplefvFn' [ 0 4 20]
'gl::glBindImageTextureEXTProc' [ 0 4]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'gl::DebugGLApi::glTexStorage2DEXTFn' [ 0 4 16]
'std::__1::remove_reference<std::__1::basic_string<char> >' [ 0 5 10]
'gl::TraceEGLApi::eglStreamAttribKHRFn' [ 0 4 17]
'logging::MakeCheckOpString<unsigned int, unsigned int>' [ 0 9]
'std::__1::pointer_traits<int *>' [ 0 5 10]
'std::__1::__compressed_pair<gl::GPUTimer *, std::__1::default_delete<gl::GPUTimer> >::__compressed_pair<gl::GPUTimer *, true>' [ 0 5 10 86]
'std::__1::__compressed_pair_elem<gl::GLSurfacePresentationHelper *, 0, false>::__compressed_pair_elem<gl::GLSurfacePresentationHelper *&, void>' [ 0 5 10 79]
'trace_event_internal::TraceValueUnion' [ 0 22]
'std::__1::__compressed_pair<gl::GLFenceEGL *, std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10]
'std::__1::__compressed_pair<void **, std::__1::allocator<void *> &>::__compressed_pair<nullptr_t, std::__1::allocator<void *> &>' [ 0 5 10 69]
'std::__1::swap<TimeNamePair *>' [ 0 5 10]
'gl::NoContextGLApi::glGetDebugMessageLogFn' [ 0 4 20]
'gl::glXQueryExtensionsStringProc' [ 0 4]
'gl::GLStubApiBase::glGetInteger64vRobustANGLEFn' [ 0 4 19]
'gl::DebugGLApi::glGetProgramBinaryFn' [ 0 4 16]
'gl::DebugGLApi::glEndTransformFeedbackFn' [ 0 4 16]
'gl::NoContextGLApi::glGetBufferParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::remove_reference<const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &>' [ 0 5 10]
'std::__1::forward<base::TimeTicks &>' [ 0 5 10]
'angle::UpdateTraceEventDurationFunc' [ 0 7]
'gl::GLStubApiBase::glGetFloatvRobustANGLEFn' [ 0 4 19]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__tree' [ 0 5 10 107]
'gfx::GpuFenceHandle' [ 0 5]
'std::__1::__tuple_types<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'gl::DebugGLApi::glPointParameteriFn' [ 0 4 16]
'gl::GLStubApiBase::glObjectPtrLabelFn' [ 0 4 19]
'gl::glXGetFBConfigAttribProc' [ 0 4]
'gl::TraceGLXApi::glXDestroyPixmapFn' [ 0 4 17]
'gl::RealGLApi::glClearDepthFn' [ 0 4 15]
'ui::PlatformEventDispatcher' [ 0 4]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned long &&>' [ 0 5 10]
'std::__1::remove_reference<ui::GpuSwitchingObserver *&>' [ 0 5 10]
'gl::TraceGLApi::glGetActiveUniformBlockNameFn' [ 0 4 16]
'gl::GLStubApiBase::glStencilThenCoverFillPathInstancedNVFn' [ 0 4 19]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__end_node' [ 0 5 10 299]
'base::ThreadLocalPointer<gl::GLSurface>::Set' [ 0 6 41]
'base::internal::StrictNumeric<long>::operator long<long, nullptr>' [ 0 6 16 37]
'gl::GLContextEGL::GetYUVToRGBConverter' [ 0 4 18]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::size' [ 0 5 10 88]
'base::SequenceCheckerImpl' [ 0 6]
'gl::GLApiBase::glUniformMatrix3x4fvFn' [ 0 4 15]
'gl::GLApiBase::glCompressedTexSubImage2DRobustANGLEFn' [ 0 4 15]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, void, void>' [ 0 5 10 75]
'gl::NoContextGLApi::glDeleteFencesNVFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::__max_size' [ 0 5 10 71]
'gl::glUniformMatrix4x2fvProc' [ 0 4]
'gl::GLStubApiBase::glTexSubImage3DRobustANGLEFn' [ 0 4 19]
'gl::GLHelper::ShouldTestsUseVAOs' [ 0 4 14]
'gl::glEndQueryProc' [ 0 4]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::clear' [ 0 5 10 110]
'std::__1::unique_ptr<gfx::ColorTransform, std::__1::default_delete<gfx::ColorTransform> >::~unique_ptr' [ 0 5 10 91]
'gl::glTexImage3DRobustANGLEProc' [ 0 4]
'base::internal::UnsanitizedCfiCall<void (*)(void *)>::operator()<void *>' [ 0 6 16 54]
'gl::GLSurfaceOSMesaX11::Destroy' [ 0 4 24]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__alloc' [ 0 5 10 93]
'std::__1::__pointer_type_imp::__pointer_type<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming>, false>' [ 0 5 10 30]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::~unique_ptr' [ 0 5 10 89]
'gl::DebugGLApi::glCoverFillPathNVFn' [ 0 4 16]
'GLXDrawable' [ 0]
'logging::CheckNEImpl<void *, void *>' [ 0 9]
'gl::DebugGLApi::glGetStringFn' [ 0 4 16]
'gl::TraceGLApi::glSamplerParameterivFn' [ 0 4 16]
'gl::GLApiBase::glGetGraphicsResetStatusARBFn' [ 0 4 15]
'std::__1::__compressed_pair<void **, std::__1::allocator<void *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 68]
'std::__1::remove_reference<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &)>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'gl::RealGLXApi::~RealGLXApi' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::release' [ 0 5 10 268]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::OnMakeCurrent' [ 0 4 28]
'std::__1::unique_ptr<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >::reset' [ 0 5 10 83]
'std::__1::forward<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'gl::TraceGLApi::glFinishFenceNVFn' [ 0 4 16]
'base::OnceCallback<void ()>::OnceCallback' [ 0 6 29]
'XCirculateRequestEvent' [ 0]
'gl::(anonymous namespace)::g_egl_create_context_client_arrays_supported' [ 0 4 27]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor>, 1, true>' [ 0 5 10]
'gl::(anonymous namespace)::GLES2RGB565Data::trace_event_unique_atomic258' [ 0 4 27 44]
'gl::GLImageMemory::GetSize' [ 0 4 19]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::erase' [ 0 5 10 200]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::MoveRange<gl::NativeViewGLSurfaceEGL::SwapInfo, 0>' [ 0 6 16 68]
'std::__1::forward<const std::__1::allocator<scoped_refptr<gl::GLImage> > &>' [ 0 5 10]
'gl::EGLApiBase::eglGetCurrentDisplayFn' [ 0 4 16]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::deallocate' [ 0 5 10 101]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer>::~unique_ptr' [ 0 5 10 96]
'gl::GLImage::GetType' [ 0 4 13]
'gl::TraceGLApi::glStencilThenCoverFillPathNVFn' [ 0 4 16]
'gl::NoContextGLApi::glBindFragDataLocationFn' [ 0 4 20]
'int_fast64_t' [ 0]
'__intptr_t' [ 0]
'gl::TraceGLApi::glUniform2fFn' [ 0 4 16]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *>, true>' [ 0 5 10]
'std::__1::__apply_cv<unsigned long, long, false, false>' [ 0 5 10]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<gl::GLSurfaceOverlay *>::__nat, gl::GLSurfaceOverlay>' [ 0 5 10]
'std::__1::back_insert_iterator<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >' [ 0 5 10]
'gl::(anonymous namespace)::kMaxTimestampsSupportable' [ 0 4 27]
'std::__1::__tuple_leaf<1, base::TimeDelta, false>' [ 0 5 10]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'std::__1::__pointer_type<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >' [ 0 5 10]
'__u32' [ 0]
'gl::GLApiBase::glCopyTexSubImage3DFn' [ 0 4 15]
'gl::GLApiBase::glGetPointervFn' [ 0 4 15]
'gl::GLSurfaceAdapter::SupportsSwapBuffersWithBounds' [ 0 4 22]
'wchar_t' [ 0]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::__compressed_pair<int, true>' [ 0 5 10 190]
'GLXPixmap' [ 0]
'gl::NoContextGLApi::glGenBuffersARBFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<gl::YUVToRGBConverter *, 0, false>::__compressed_pair_elem<gl::YUVToRGBConverter *, void>' [ 0 5 10 69]
'gl::GLStubApiBase' [ 0 4]
'std::__1::pointer_traits<void **>' [ 0 5 10]
'gl::GLStubApiBase::glTexParameterfvFn' [ 0 4 19]
'std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >::operator*' [ 0 5 10 91]
'gl::GLContextEGL::GLContextEGL' [ 0 4 18]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::__end_cap' [ 0 5 10 93]
'EGLImageKHR' [ 0]
'std::__1::__tree_key_value_types<std::__1::__value_type<void *, std::__1::basic_string<char> > >::__get_ptr' [ 0 5 10 98]
'gl::OSMesaColorClampProc' [ 0 4]
'gl::ProcsEGL' [ 0 4]
'gl::TraceEGLApi::eglProgramCacheGetAttribANGLEFn' [ 0 4 17]
'gl::GLStubApiBase::glUniform1ivFn' [ 0 4 19]
'gl::DebugEGLApi::eglExportDMABUFImageQueryMESAFn' [ 0 4 17]
'gl::GLContext::SetGLWorkarounds' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFence>, 1, true>' [ 0 5 10]
'XSelectionEvent' [ 0]
'gl::DebugGLApi::glGetFloatvFn' [ 0 4 16]
'gl::DebugEGLApi::eglSwapBuffersFn' [ 0 4 17]
'gl::GLContextStub::WasAllocatedUsingRobustnessExtension' [ 0 4 19]
'std::__1::add_lvalue_reference<gl::GLApi>' [ 0 5 10]
'std::__1::vector<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::~vector' [ 0 5 10 84]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'gl::TraceEGLApi::eglTerminateFn' [ 0 4 17]
'base::internal::SafeUnsignedAbs<long>' [ 0 6 16]
'gl::GLStubApiBase::glBindBufferFn' [ 0 4 19]
'angle::InitializePlatform' [ 0 7]
'gl::NoContextGLApi::glEnableVertexAttribArrayFn' [ 0 4 20]
'gl::GLImageGLX::GetInternalFormat' [ 0 4 16]
'gl::DebugGLApi::glGetVertexAttribfvFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> &, void>' [ 0 5 10 175]
'std::__1::__wrap_iter<int *>::operator*' [ 0 5 10 30]
'gl::glGetSamplerParameterfvProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__destroy<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10 91]
'std::__1::__const_void_pointer<unsigned char *, std::__1::allocator<unsigned char>, false>' [ 0 5 10]
'gl::DebugGLApi::glClearBufferfiFn' [ 0 4 16]
'gl::glLineWidthProc' [ 0 4]
'std::__1::remove_reference<unsigned long &>' [ 0 5 10]
'std::__1::remove_reference<const XVisualInfo &>' [ 0 5 10]
'gl::TraceGLXApi::glXGetMscRateOMLFn' [ 0 4 17]
'gl::NativeViewGLSurfaceGLX::GetSize' [ 0 4 28]
'std::__1::__lower_bound<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::KeyValueCompare &, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::begin' [ 0 5 10 82]
'gl::DebugGLApi::glValidateProgramFn' [ 0 4 16]
'std::__1::__compressed_pair<base::trace_event::MemoryAllocatorDump *, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> >' [ 0 5 10]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >::RefCounted' [ 0 6 76]
'std::__1::__compressed_pair_elem<int *, 0, false>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'gl::DebugGLApi::glIsSamplerFn' [ 0 4 16]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::capacity' [ 0 5 10 103]
'base::SharedMemoryCreateOptions' [ 0 6]
'gl::EGLApiBase::eglSurfaceAttribFn' [ 0 4 16]
'std::__1::unique_ptr<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >::~unique_ptr' [ 0 5 10 99]
'gl::glDeleteShaderProc' [ 0 4]
'gl::GLApiBase::glWaitSyncFn' [ 0 4 15]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_new' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >, 1, false>::__compressed_pair_elem' [ 0 5 10 227]
'gl::DebugGLApi::glGetQueryObjectuivRobustANGLEFn' [ 0 4 16]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLSurface>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLSurface> > >' [ 0 6]
'gl::glGetVertexAttribfvProc' [ 0 4]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'gl::TimerQuery::PrepareNextUpdate' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> > &, 1, false>' [ 0 5 10]
'gl::GLContext::SetGLStateRestorer' [ 0 4 15]
'base::internal::StrictNumeric<unsigned long>' [ 0 6 16]
'gl::TraceGLApi::glGetTexLevelParameterfvFn' [ 0 4 16]
'gl::(anonymous namespace)::GetTexFormat' [ 0 4 27]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'gl::GLSurfaceOSMesa::Resize' [ 0 4 21]
'gl::TraceGLXApi::glXCreateContextFn' [ 0 4 17]
'std::__1::tuple_element<0, std::__1::tuple<gfx::PresentationFeedback> >' [ 0 5 10]
'AnnotateNoOp' [ 0]
'std::__1::pair<void *, std::__1::basic_string<char> >::~pair' [ 0 5 10 55]
'gl::NativeViewGLSurfaceEGL::CommitAndClearPendingOverlays' [ 0 4 28]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'double_t' [ 0]
'gl::glXQueryServerStringProc' [ 0 4]
'gl::TraceGLApi::glVertexAttribIPointerFn' [ 0 4 16]
'std::__1::__compressed_pair<void **, std::__1::allocator<void *> >' [ 0 5 10]
'gl::NoContextGLApi::glGetBufferPointervRobustANGLEFn' [ 0 4 20]
'std::__1::remove_reference<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *&>' [ 0 5 10]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::clear' [ 0 5 10 89]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::operator*' [ 0 5 10 62]
'std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>::operator+' [ 0 5 10 62]
'gl::GLStubApiBase::glBindBufferRangeFn' [ 0 4 19]
'gl::GLSurface::WaitForSnapshotRendering' [ 0 4 15]
'gl::DebugGLApi::glBlendEquationFn' [ 0 4 16]
'std::__1::iterator_traits<ContextCreationInfo *>' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::Wrapper<int>::is_valid' [ 0 6 16 47 61]
'gl::GLApiBase::glPopDebugGroupFn' [ 0 4 15]
'std::__1::__pointer_type<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >' [ 0 5 10]
'gl::glGetTexParameterfvRobustANGLEProc' [ 0 4]
'gl::glGetShaderInfoLogProc' [ 0 4]
'base::internal::circular_deque_iterator<scoped_refptr<gl::TimerQuery> >::circular_deque_iterator' [ 0 6 16 73]
'gl::DebugGLApi::glQueryCounterFn' [ 0 4 16]
'gl::GLStubApiBase::glTexStorage2DEXTFn' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__construct_range_forward<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10 91]
'gl::GLStubApiBase::glDebugMessageControlFn' [ 0 4 19]
'gl::TraceGLApi::glCompressedTexSubImage3DFn' [ 0 4 16]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__make_iter' [ 0 5 10 74]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>' [ 0 6 16]
'gl::GLApiBase::glLinkProgramFn' [ 0 4 15]
'gl::GLSurface::SwapBuffersWithBounds' [ 0 4 15]
'gl::DebugGLApi::glCompressedTexSubImage3DRobustANGLEFn' [ 0 4 16]
'_XPrivDisplay' [ 0]
'gl::DebugGLXApi::glXDestroyGLXPixmapFn' [ 0 4 17]
'gl::GLApiBase::glGetUniformuivRobustANGLEFn' [ 0 4 15]
'base::SupportsWeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::AsWeakPtr' [ 0 6 83]
'gl::NoContextGLApi::glDrawBuffersARBFn' [ 0 4 20]
'gl::GLApiBase::glDeleteFencesAPPLEFn' [ 0 4 15]
'std::__1::forward<gl::GLFenceEGL *&>' [ 0 5 10]
'x11' [ 0]
'base::internal::LeakyLazyInstanceTraits<gl::(anonymous namespace)::TraceSwapEventsInitializer>' [ 0 6 16]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::size' [ 0 6 60]
'std::__1::__compressed_pair_elem<gfx::ColorTransform *, 0, false>' [ 0 5 10]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::max_size' [ 0 5 10 66]
'gl::GLStubApiBase::glGetVertexAttribivRobustANGLEFn' [ 0 4 19]
'gl::NoContextGLApi::glUniform3ivFn' [ 0 4 20]
'gl::NoContextGLApi::glDrawArraysInstancedANGLEFn' [ 0 4 20]
'gl::eglDestroyStreamKHRProc' [ 0 4]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::release' [ 0 5 10 264]
'intmax_t' [ 0]
'gl::GLXApiBase::glXBindTexImageEXTFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::__destroy<gfx::NativePixmapPlane>' [ 0 5 10 74]
'std::__1::__apply_cv<unsigned long, unsigned long, false, false>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::release' [ 0 5 10 87]
'gl::GPUTimingClient::ForceTimeElapsedQuery' [ 0 4 21]
'std::__1::remove_reference<gl::GPUTimingClient *&>' [ 0 5 10]
'gl::DebugOSMESAApi::OSMesaMakeCurrentFn' [ 0 4 20]
'gl::GLApiBase::glDrawArraysFn' [ 0 4 15]
'std::__1::vector<long, std::__1::allocator<long> >::__construct_at_end' [ 0 5 10 52]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::erase' [ 0 6 16 203]
'gl::GLApiBase::glBeginQueryFn' [ 0 4 15]
'gl::GLStubApiBase::glCompressedTexImage3DFn' [ 0 4 19]
'std::__1::__compressed_pair<gl::DebugGLApi *, std::__1::default_delete<gl::DebugGLApi> >::__compressed_pair<gl::DebugGLApi *, true>' [ 0 5 10 90]
'gl::eglGetConfigAttribProc' [ 0 4]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >::~RefCounted' [ 0 6 84]
'gl::GLStubApiBase::glEnableVertexAttribArrayFn' [ 0 4 19]
'gl::NoContextGLApi::glUniform2fvFn' [ 0 4 20]
'gl::GLStubApiBase::glUniformMatrix2x4fvFn' [ 0 4 19]
'gl::GLContext::ReinitializeDynamicBindings' [ 0 4 15]
'gl::DebugGLApi::glDrawArraysFn' [ 0 4 16]
'gl::NoContextGLApi::glTexParameterIivRobustANGLEFn' [ 0 4 20]
'base::circular_deque<base::TimeDelta>::capacity' [ 0 6 39]
'gl::QueryTimestampBits' [ 0 4]
'gl::GLApiBase::glClearDepthfFn' [ 0 4 15]
'gl::DebugGLApi::glBeginQueryFn' [ 0 4 16]
'std::__1::less<void>' [ 0 5 10]
'gl::RealGLApi::InitializeFilteredExtensionsIfNeeded' [ 0 4 15]
'std::__1::remove_reference<std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 5 10]
'gl::DebugGLApi::glBindTextureFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &, 0>' [ 0 6 16 219]
'gl::TraceGLApi::glGetObjectLabelFn' [ 0 4 16]
'gl::glScissorProc' [ 0 4]
'gl::GLApiBase::glStencilFillPathInstancedNVFn' [ 0 4 15]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::end' [ 0 5 10 466]
'std::__1::__pointer_type<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >' [ 0 5 10]
'scoped_refptr<gl::GLSurface>::operator->' [ 0 30]
'gl::GPUTiming::CreateGPUTiming' [ 0 4 15]
'gl::TraceGLApi::glFrontFaceFn' [ 0 4 16]
'std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true>, 1, true>' [ 0 5 10]
'gl::TimeElapsedTimerQuery::IsAvailable' [ 0 4 27]
'base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag>' [ 0 6]
'std::__1::__compressed_pair_elem<base::SharedMemory *, 0, false>' [ 0 5 10]
'gl::GLStubApi::glGetIntegervFn' [ 0 4 15]
'gl::TraceGLApi::glGetPointervFn' [ 0 4 16]
'std::__1::__tree_node_base<void *>::__parent_unsafe' [ 0 5 10 36]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::Release' [ 0 6 14 40]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::operator[]' [ 0 5 10 68]
'base::internal::LeakyLazyInstanceTraits<base::Lock>::New' [ 0 6 16 53]
'gl::DebugGLApi::glBindVertexArrayOESFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'gl::glUniform4ivProc' [ 0 4]
'std::__1::remove_reference<gfx::GpuFenceHandle &>' [ 0 5 10]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >' [ 0 5 10]
'std::__1::__pointer_type<gl::DisplayType, std::__1::allocator<gl::DisplayType> >' [ 0 5 10]
'std::__1::allocator<gfx::NativePixmapPlane>::construct<gfx::NativePixmapPlane, const gfx::NativePixmapPlane &>' [ 0 5 10 45]
'gl::GLStubApiBase::glGetMultisamplefvRobustANGLEFn' [ 0 4 19]
'gl::DriverGL::InitializeDynamicBindings' [ 0 4 14]
'gl::GLSurfaceAdapter::SupportsPostSubBuffer' [ 0 4 22]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, true>' [ 0 5 10]
'std::__1::operator==<const XVisualInfo *, const XVisualInfo *>' [ 0 5 10]
'std::__1::move<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > &>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::size' [ 0 5 10 82]
'gl::glXCreateGLXPixmapProc' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>' [ 0 6 16]
'gl::NoContextGLApi::glGetUniformBlockIndexFn' [ 0 4 20]
'base::ScopedFD' [ 0 6]
'base::TimeDelta::FromSecondsD' [ 0 6 17]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__make_iter' [ 0 5 10 96]
'std::__1::iterator_traits<const base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__max_size' [ 0 5 10 91]
'gl::EGLApiBase::EGLApiBase' [ 0 4 16]
'gl::NoContextGLApi::glClearDepthFn' [ 0 4 20]
'std::__1::remove_reference<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::UpdateSwapEvents' [ 0 4 28]
'gl::TraceEGLApi::eglSwapIntervalFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::__max_size' [ 0 5 10 88]
'gl::GLFenceEGL::Create' [ 0 4 16]
'gl::DebugGLApi::glGetProgramResourceNameFn' [ 0 4 16]
'std::__1::lower_bound<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>, base::BasicStringPiece<std::string>, base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::KeyValueCompare>' [ 0 5 10]
'gl::DebugGLApi::glSamplerParameteriFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::allocate' [ 0 5 10 174]
'std::__1::forward<std::__1::allocator<gl::DisplayType> &>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data::Data' [ 0 6 63 69]
'std::__1::__tree_map_pointer_types<gl::GLContext *, void *, std::__1::__tree_key_value_types<gl::GLContext *>, false>' [ 0 5 10]
'base::AutoWritableMemory' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::~vector' [ 0 5 10 101]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >' [ 0 5 10]
'gl::TraceGLApi::glPathStencilFuncNVFn' [ 0 4 16]
'gl::TraceEGLApi::eglGetCompositorTimingANDROIDFn' [ 0 4 17]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::map' [ 0 5 10 318]
'EGLNativePixmapType' [ 0]
'std::__1::forward<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::__construct_backward<XVisualInfo>' [ 0 5 10 63]
'std::__1::add_lvalue_reference<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>' [ 0 5 10]
'gl::glXQueryExtensionProc' [ 0 4]
'gl::TraceEGLApi::eglCreateContextFn' [ 0 4 17]
'base::SupportsWeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::AsWeakPtr' [ 0 6 77]
'std::__1::__rotate_gcd<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::NoContextGLApi::glStencilOpFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<unsigned int> >' [ 0 5 10]
'gl::GLStubApiBase::glMapBufferFn' [ 0 4 19]
'gl::GLSurfaceAdapter::SetVSyncEnabled' [ 0 4 22]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<XVisualInfo *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 59]
'gl::LoadLibraryAndPrintError' [ 0 4]
'gl::GLStubApiBase::glRenderbufferStorageEXTFn' [ 0 4 19]
'std::__1::__compressed_pair<TimeNamePair *, std::__1::allocator<TimeNamePair> &>::__compressed_pair<nullptr_t, std::__1::allocator<TimeNamePair> &>' [ 0 5 10 82]
'std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::unique_ptr<true, void>' [ 0 5 10 268]
'gl::glStencilStrokePathNVProc' [ 0 4]
'std::__1::remove_reference<const base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> > &>' [ 0 5 10]
'gl::GLStubApiBase::glGetUniformivFn' [ 0 4 19]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **>::__nat, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>' [ 0 5 10]
'gl::RealGLApi::glRenderbufferStorageEXTFn' [ 0 4 15]
'std::__1::__const_void_pointer<TimeNamePair *, std::__1::allocator<TimeNamePair>, false>' [ 0 5 10]
'XEvent' [ 0]
'gl::GLApiBase::glGetProgramInfoLogFn' [ 0 4 15]
'gl::ScopedUseProgram::ScopedUseProgram' [ 0 4 22]
'std::__1::false_type' [ 0 5 10]
'gl::GPUTiming::GPUTiming' [ 0 4 15]
'unsigned char' [ 0]
'gl::NoContextGLApi::glGetRenderbufferParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__root' [ 0 5 10 299]
'gl::GLImageNativePixmap::GLImageNativePixmap' [ 0 4 25]
'gl::glXGetSyncValuesOMLProc' [ 0 4]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>' [ 0 6 16]
'gl::glStencilThenCoverStrokePathNVProc' [ 0 4]
'std::__1::__vector_base<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__alloc' [ 0 5 10 129]
'std::__1::__pointer_type<gl::GLFence, std::__1::default_delete<gl::GLFence> >' [ 0 5 10]
'gl::NoContextGLApi::glQueryCounterFn' [ 0 4 20]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10]
'gl::TraceOSMESAApi::OSMesaCreateContextExtFn' [ 0 4 20]
'gl::GLApiBase::glSamplerParameterfvRobustANGLEFn' [ 0 4 15]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >::~RefCounted' [ 0 6 76]
'std::__1::__compressed_pair_elem<base::trace_event::MemoryAllocatorDump *, 0, false>' [ 0 5 10]
'ui::GpuSwitchingManager::NotifyGpuSwitched' [ 0 4 25]
'std::__1::pointer_traits<std::__1::pair<const unsigned long, gl::GLContext *> *>::pointer_to' [ 0 5 10 82]
'gl::GLFenceAndroidNativeFenceSync::CreateForGpuFence' [ 0 4 35]
'std::__1::allocator_traits<std::__1::allocator<void *> >::destroy<void *>' [ 0 5 10 58]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::DisplayType> &, 1, false>::__get' [ 0 5 10 84]
'logging::GetVlogLevel<28>' [ 0 9]
'std::__1::move<gfx::PresentationFeedback &>' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::~WeakPtr' [ 0 6 69]
'base::LazyInstance<base::ThreadLocalPointer<gl::GLContext>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLContext> > >' [ 0 6]
'gl::glGetActiveUniformBlockivRobustANGLEProc' [ 0 4]
'base::BindRepeating<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6]
'XErrorEvent' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, long, true>' [ 0 5 10]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__alloc' [ 0 5 10 122]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::size' [ 0 5 10 107]
'gl::GLApiBase::glUniform3uiFn' [ 0 4 15]
'std::__1::__compressed_pair<XVisualInfo *, gfx::XObjectDeleter<void, int, &XFree> >::__compressed_pair<XVisualInfo *&, true>' [ 0 5 10 85]
'scoped_refptr<base::SingleThreadTaskRunner>::Release' [ 0 45]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::emplace_back<base::FileDescriptor>' [ 0 5 10 84]
'gl::TraceGLApi::glDrawArraysFn' [ 0 4 16]
'gl::TraceGLApi::glLinkProgramFn' [ 0 4 16]
'std::__1::__atomic_base<int, true>::fetch_sub' [ 0 5 10 36]
'gl::TraceGLApi::glBeginQueryFn' [ 0 4 16]
'std::__1::remove_reference<gl::YUVToRGBConverter *&>' [ 0 5 10]
'gl::GLApiBase::glDeleteRenderbuffersEXTFn' [ 0 4 15]
'gl::GLStubApiBase::glDisableFn' [ 0 4 19]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::is_valid' [ 0 6 16 76]
'gl::DebugGLApi::glUniform3uiFn' [ 0 4 16]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<void *> >::max_size' [ 0 5 10 58]
'gl::GLSurfacePresentationHelper::GLSurfacePresentationHelper' [ 0 4 33]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::size' [ 0 5 10 539]
'gl::GLApiBase::glObjectLabelFn' [ 0 4 15]
'gl::TraceGLApi::glGetTexLevelParameterivRobustANGLEFn' [ 0 4 16]
'gl::g_no_context_current_gl' [ 0 4]
'gl::TraceGLApi::glGetnUniformfvRobustANGLEFn' [ 0 4 16]
'gl::GLContext' [ 0 4]
'std::__1::allocator<std::__1::basic_string<char> >::allocate' [ 0 5 10 52]
'gl::DebugEGLApi::eglQueryStreamKHRFn' [ 0 4 17]
'gl::GLStubApiBase::glUniform3ivFn' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'gl::GLVisualPickerGLX::GLVisualPickerGLX' [ 0 4 23]
'std::__1::__compressed_pair<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *> >' [ 0 5 10]
'gl::DebugGLApi::glTexImage2DRobustANGLEFn' [ 0 4 16]
'base::internal::CheckedNumeric<int>::operator*=<int>' [ 0 6 16 37]
'gl::RealOSMESAApi::Initialize' [ 0 4 19]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__recommend' [ 0 5 10 66]
'std::__1::pointer_traits<gl::GLContext **>' [ 0 5 10]
'gl::GLApiBase::glClearBufferfiFn' [ 0 4 15]
'gl::GLFenceEGL::~GLFenceEGL' [ 0 4 16]
'gl::GLSurfaceAdapter::SetFrontbufferAllocation' [ 0 4 22]
'std::__1::allocator<long>::construct<long, const long &>' [ 0 5 10 27]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::~flat_tree' [ 0 6 16 203]
'gl::GLStubApiBase::glPushGroupMarkerEXTFn' [ 0 4 19]
'gl::GLXApiBase::glXQueryDrawableFn' [ 0 4 16]
'gl::GLSurfaceGLX::~GLSurfaceGLX' [ 0 4 18]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1203' [ 0 4 28 45]
'gl::TraceGLApi::glClearDepthfFn' [ 0 4 16]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::get_deleter' [ 0 5 10 264]
'gl::DebugGLApi::glGetQueryivRobustANGLEFn' [ 0 4 16]
'scoped_refptr<gl::GPUTimingClient>::operator=' [ 0 36]
'std::__1::swap<base::FileDescriptor *>' [ 0 5 10]
'gl::NoContextGLApi::glUniformMatrix3x4fvFn' [ 0 4 20]
'logging::MakeCheckOpValueString<const base::circular_deque<scoped_refptr<gl::TimerQuery> > *>' [ 0 9]
'uint_fast8_t' [ 0]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::key_eq' [ 0 5 10 466]
'gl::GLStubApiBase::glUniform3uivFn' [ 0 4 19]
'std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>' [ 0 5 10]
'gl::DebugGLApi::glBlendEquationSeparateFn' [ 0 4 16]
'std::__1::remove_reference<gl::QueryResult *&>' [ 0 5 10]
'std::__1::enable_if<true, std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const char *> >' [ 0 5 10]
'gl::glGenFencesAPPLEProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<ContextCreationInfo> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ContextCreationInfo> &, void>' [ 0 5 10 88]
'logging::MakeCheckOpValueString<unsigned char>' [ 0 9]
'gl::GLApiBase::glGetShaderivRobustANGLEFn' [ 0 4 15]
'SkScalar' [ 0]
'base::internal::CheckedDivOp<long, double, void>' [ 0 6 16]
'gl::GLSurfacePresentationHelper::Frame::operator=' [ 0 4 33 40]
'gl::GetGLImplementationName' [ 0 4]
'base::AsserterBase::~AsserterBase' [ 0 6 20]
'gl::NoContextGLApi::glGetSamplerParameterfvFn' [ 0 4 20]
'std::__1::make_pair<void *&, std::__1::basic_string<char> >' [ 0 5 10]
'base::TaskRunnerTraits' [ 0 6]
'gl::kGLImplementationSwiftShaderForWebGLName' [ 0 4]
'std::__1::allocator<ui::GpuSwitchingObserver *>::deallocate' [ 0 5 10 49]
'gl::GLImageSharedMemory::~GLImageSharedMemory' [ 0 4 25]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>::AddRef' [ 0 62]
'gl::(anonymous namespace)::g_egl_create_context_robustness_supported' [ 0 4 27]
'gl::(anonymous namespace)::ActualPixmapGeometry' [ 0 4 27]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::operator=' [ 0 6 16 62]
'gl::TraceEGLApi::eglSwapBuffersWithDamageKHRFn' [ 0 4 17]
'gl::NoContextGLApi::glGetBufferParameteri64vRobustANGLEFn' [ 0 4 20]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__lower_bound<void *>' [ 0 5 10 299]
'gl::TraceGLApi::glRequestExtensionANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >, void>' [ 0 5 10 149]
'base::CompareCase' [ 0 6]
'AnnotateExpectRace' [ 0]
'gl::GLStubApiBase::glUniform1uiFn' [ 0 4 19]
'std::__1::__vector_base<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >' [ 0 5 10]
'std::__1::__vector_base<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::capacity' [ 0 5 10 89]
'gl::glApplyFramebufferAttachmentCMAAINTELProc' [ 0 4]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::capacity' [ 0 5 10 97]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>::Do' [ 0 6 16 64]
'std::__1::remove_reference<std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> > &>' [ 0 5 10]
'gl::GLApiBase::glPauseTransformFeedbackFn' [ 0 4 15]
'gl::GLStubApiBase::glClearDepthFn' [ 0 4 19]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__vector_base' [ 0 5 10 129]
'std::__1::__pointer_type_imp::__pointer_type<long, std::__1::allocator<long>, true>' [ 0 5 10 30]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::operator[]' [ 0 5 10 101]
'fpos_t' [ 0]
'gl::GPUTimer::IsAvailable' [ 0 4 14]
'std::__1::memory_order' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > &>::second' [ 0 5 10 115]
'gl::EGLApiBase::eglCreatePbufferFromClientBufferFn' [ 0 4 16]
'gl::glVertexAttrib1fProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::max_size' [ 0 5 10 65]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::EnsureValidIndex' [ 0 6 59 65]
'gl::GLImageStub::SetColorSpace' [ 0 4 17]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__alloc' [ 0 5 10 77]
'std::__1::__size_type<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, long, true>' [ 0 5 10]
'std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::__get_np' [ 0 5 10 106]
'gl::GLImageSharedMemory' [ 0 4]
'gl::GPUTimingImpl::GetCurrentCPUTime' [ 0 4 19]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> > >' [ 0 5 10]
'gl::GLStubApiBase::glEndQueryFn' [ 0 4 19]
'angle::(anonymous namespace)::g_platform_context' [ 0 7 30]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::operator[]' [ 0 6 16 70]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>::get' [ 0 6 69]
'gl::TraceGLApi::glTexBufferFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::DCRendererLayerParams::FilterEffect>, 1, true>' [ 0 5 10]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1225' [ 0 4 28 45]
'base::internal::UnderlyingType<double>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay>, true>' [ 0 5 10 30]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1228' [ 0 4 28 45]
'gl::NoContextGLApi::glDeleteRenderbuffersEXTFn' [ 0 4 20]
'gl::RealOSMESAApi::~RealOSMESAApi' [ 0 4 19]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::__construct<gl::DisplayType, const gl::DisplayType &>' [ 0 5 10 67]
'std::__1::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo> >' [ 0 5 10]
'base::internal::VectorBuffer<base::TimeDelta>' [ 0 6 16]
'base::internal::IsNull<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16]
'gl::eglStreamPostD3DTextureANGLEProc' [ 0 4]
'std::__1::__compressed_pair<void **, std::__1::default_delete<void *[]> >' [ 0 5 10]
'gl::GLStubApiBase::glUniformBlockBindingFn' [ 0 4 19]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'base::internal::circular_deque_const_iterator<base::TimeDelta>::Decrement' [ 0 6 16 64]
'gl::NoContextGLApi::glTexStorage2DEXTFn' [ 0 4 20]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'std::__1::operator==<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::clear' [ 0 5 10 101]
'gl::NoContextGLApi::glCopyTextureCHROMIUMFn' [ 0 4 20]
'gl::NoContextGLApi::glBindTextureFn' [ 0 4 20]
'gl::TraceGLApi::glUniform3uiFn' [ 0 4 16]
'gl::GLContextGLX::GetHandle' [ 0 4 18]
'gl::DebugOSMESAApi::OSMesaColorClampFn' [ 0 4 20]
'gl::DebugGLApi::glGetActiveUniformBlockivRobustANGLEFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>' [ 0 6 16]
'size_type' [ 0]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator=' [ 0 5 10 89]
'gl::GLStubApiBase::glGetTexLevelParameterfvFn' [ 0 4 19]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::WeakPtr<gl::GLSurfacePresentationHelper> >::~__tuple_impl' [ 0 5 10 103]
'logging::CheckGEImpl' [ 0 9]
'gl::TraceGLApi::glTexParameteriFn' [ 0 4 16]
'gl::GLStubApiBase::glInvalidateFramebufferFn' [ 0 4 19]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1231' [ 0 4 28 45]
'pthread_mutex_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::destroy<ui::CARendererLayerParams::FilterEffect>' [ 0 5 10 91]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::GetMscRate' [ 0 4 27 56]
'gl::TraceGLApi::glTexImage3DRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glMatrixLoadfEXTFn' [ 0 4 20]
'base::ContainsValue<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, const char *, 0>' [ 0 6]
'gl::TraceGLApi::glCoverageModulationNVFn' [ 0 4 16]
'gl::GLXApiBase::glXWaitGLFn' [ 0 4 16]
'std::__1::remove_if<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../ui/gl/gl_implementation.cc:217:22)>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer>, false>' [ 0 5 10 30]
'gl::TraceGLApi::glGetBufferParameteri64vRobustANGLEFn' [ 0 4 16]
'gl::GLImageNativePixmap::Initialize' [ 0 4 25]
'gl::GLApiBase::glGetBufferPointervRobustANGLEFn' [ 0 4 15]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::capacity' [ 0 5 10 70]
'std::__1::__compressed_pair<gl::DriverGL *, std::__1::default_delete<gl::DriverGL> >::__compressed_pair<gl::DriverGL *, true>' [ 0 5 10 86]
'gl::GLSurfaceOverlay::GLSurfaceOverlay' [ 0 4 22]
'gl::NoContextGLApi::glTexImage2DRobustANGLEFn' [ 0 4 20]
'gl::GLXApiBase::glXGetMscRateOMLFn' [ 0 4 16]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::WellDefinedConversionOrZero<unsigned long>' [ 0 6 16 85]
'gl::NoContextGLApi::glProgramPathFragmentInputGenNVFn' [ 0 4 20]
'std::__1::vector<void *, std::__1::allocator<void *> >::__swap_out_circular_buffer' [ 0 5 10 56]
'gl::NoContextGLApi::glGetShaderivRobustANGLEFn' [ 0 4 20]
'std::__1::move<TimeNamePair *&>' [ 0 5 10]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::operator=' [ 0 5 10 115]
'gl::NoContextGLApi::glGetProgramInterfaceivRobustANGLEFn' [ 0 4 20]
'std::__1::allocator_traits<std::__1::allocator<int> >::allocate' [ 0 5 10 55]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char> *>::__nat, std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::add_lvalue_reference<base::SharedMemory>' [ 0 5 10]
'gl::TraceGLApi::glObjectLabelFn' [ 0 4 16]
'std::__1::__unwrap_iter<std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> > >' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::remove_reference<base::TimeTicks &>' [ 0 5 10]
'gl::DebugGLApi::glStencilFillPathNVFn' [ 0 4 16]
'gl::GLXApiBase::glXUseXFontFn' [ 0 4 16]
'std::__1::swap_ranges<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLStubApiBase::glActiveTextureFn' [ 0 4 19]
'gl::GLStubApiBase::glVertexAttribPointerFn' [ 0 4 19]
'std::__1::vector<int, std::__1::allocator<int> >::end' [ 0 5 10 50]
'std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::reset' [ 0 5 10 264]
'gl::DebugGLApi::glGetnUniformuivRobustANGLEFn' [ 0 4 16]
'std::__1::less<gl::GLContext *>::operator()' [ 0 5 10 33]
'switches::kEnableGPUServiceTracing' [ 0 10]
'gl::glCompressedTexImage2DRobustANGLEProc' [ 0 4]
'gl::GLApiBase::glActiveTextureFn' [ 0 4 15]
'gl::GLApiBase::glCompressedTexSubImage3DFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<scoped_refptr<gl::GLImage> *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 74]
'sync_merge_data' [ 0]
'gl::glVertexAttribDivisorANGLEProc' [ 0 4]
'gl::GPUTimingClient::IsAvailable' [ 0 4 21]
'std::__1::add_lvalue_reference<gl::GPUTimer>' [ 0 5 10]
'gl::GLStubApiBase::glRenderbufferStorageMultisampleEXTFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<void *>, 1, true>' [ 0 5 10]
'gl::NoContextGLApi::glBufferSubDataFn' [ 0 4 20]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::capacity' [ 0 5 10 97]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true> >' [ 0 5 10]
'std::__1::forward<std::__1::basic_string<char> >' [ 0 5 10]
'gl::NoContextGLApi::glPauseTransformFeedbackFn' [ 0 4 20]
'gl::TraceGLApi::glGenerateMipmapEXTFn' [ 0 4 16]
'std::__1::remove_reference<const std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > &>' [ 0 5 10]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::allocator<base::BasicStringPiece<std::string> > >' [ 0 5 10]
'std::__1::__vector_base<gl::GLSurface::CALayerInUseQuery, std::__1::allocator<gl::GLSurface::CALayerInUseQuery> >' [ 0 5 10]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::clear' [ 0 5 10 93]
'std::__1::piecewise_construct' [ 0 5 10]
'std::__1::default_delete<gl::GLFence>::operator()' [ 0 5 10 39]
'std::__1::remove_reference<__GLXFBConfigRec **&>' [ 0 5 10]
'gl::GLXApiBase::glXReleaseTexImageEXTFn' [ 0 4 16]
'gl::NoContextGLApi::glGetQueryObjectui64vRobustANGLEFn' [ 0 4 20]
'std::__1::__to_raw_pointer<void *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned int, std::__1::allocator<unsigned int>, true>' [ 0 5 10 30]
'gl::GLSurfacePresentationHelper::PreSwapBuffers' [ 0 4 33]
'scoped_refptr<gl::GLSurface>' [ 0]
'gl::DebugGLApi::glVertexAttribI4ivFn' [ 0 4 16]
'gl::DebugGLApi::glCoverStrokePathNVFn' [ 0 4 16]
'gl::GLApiBase::glGenTransformFeedbacksFn' [ 0 4 15]
'gl::glTexParameterivProc' [ 0 4]
'gl::(anonymous namespace)::g_egl_robust_resource_init_supported' [ 0 4 27]
'gl::OSMESAApiBase::~OSMESAApiBase' [ 0 4 19]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'gl::GLStubApiBase::glFlushFn' [ 0 4 19]
'gl::GLApiBase::glVertexAttribIPointerFn' [ 0 4 15]
'gl::TraceGLApi::glClearColorFn' [ 0 4 16]
'std::__1::__vector_base<long, std::__1::allocator<long> >' [ 0 5 10]
'gl::GLSurfaceStub::GetDrawOffset' [ 0 4 19]
'std::__1::__wrap_iter<ContextCreationInfo *>::operator++' [ 0 5 10 46]
'std::__1::allocator<XVisualInfo>' [ 0 5 10]
'std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::operator*' [ 0 5 10 106]
'gl::TraceGLApi::glIsFenceNVFn' [ 0 4 16]
'gl::(anonymous namespace)::CreateHighestVersionContext' [ 0 4 27]
'std::__1::__pointer_type<gfx::GpuFence, std::__1::default_delete<gfx::GpuFence> >' [ 0 5 10]
'scoped_refptr<base::RefCountedMemory>::operator bool' [ 0 39]
'gl::GLStubApi::glGenFramebuffersEXTFn' [ 0 4 15]
'base::trace_event::TraceEventHandle' [ 0 6 19]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>::reset' [ 0 5 10 85]
'gl::RealGLApi::glGetIntegervFn' [ 0 4 15]
'gl::TraceGLXApi::glXMakeCurrentFn' [ 0 4 17]
'std::__1::__to_raw_pointer<ui::DCRendererLayerParams::FilterEffect>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *>' [ 0 5 10]
'uint8_t' [ 0]
'gl::GLStubApiBase::glGetShaderPrecisionFormatFn' [ 0 4 19]
'std::__1::__pointer_type<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >' [ 0 5 10]
'gl::GLSurfaceGLXX11::~GLSurfaceGLXX11' [ 0 4 21]
'gl::(anonymous namespace)::g_glx_sgi_video_sync_supported' [ 0 4 27]
'gl::glGetTexParameterivProc' [ 0 4]
'gl::TraceGLApi::glGetQueryObjecti64vFn' [ 0 4 16]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::~circular_deque' [ 0 6 62]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::erase' [ 0 5 10 96]
'gl::HasInitializedNullDrawGLBindings' [ 0 4]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::GetCurrent' [ 0 6 59 65]
'std::__1::default_delete<ui::ScopedMakeCurrent>' [ 0 5 10]
'gl::GLApiBase::glGenFencesAPPLEFn' [ 0 4 15]
'gl::TraceGLApi::glGetIntegervRobustANGLEFn' [ 0 4 16]
'base::internal::CheckedNumeric<long>::ValueOrDie<long, base::internal::CheckOnFailure>' [ 0 6 16 38]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, 1, true>::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, void>' [ 0 5 10 104]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >::construct<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, const std::__1::piecewise_construct_t &, std::__1::tuple<const gfx::ColorSpace &>, std::__1::tuple<> >' [ 0 5 10 190]
'gl::glEndTransformFeedbackProc' [ 0 4]
'gl::RealGLApi::glDrawElementsFn' [ 0 4 15]
'std::__1::__const_void_pointer<base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >' [ 0 5 10]
'gl::GLApiBase::glGetUniformfvFn' [ 0 4 15]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::operator[]' [ 0 5 10 85]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::__end_cap' [ 0 5 10 77]
'XCirculateEvent' [ 0]
'std::__1::__compressed_pair<gfx::GpuFence *, std::__1::default_delete<gfx::GpuFence> >::__compressed_pair<gfx::GpuFence *, true>' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<int> >::destroy<int>' [ 0 5 10 55]
'gl::TraceGLApi::glGetAttribLocationFn' [ 0 4 16]
'gl::GLSurfaceAdapter::BuffersFlipped' [ 0 4 22]
'gl::ScopedUseProgram::~ScopedUseProgram' [ 0 4 22]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__push_back_slow_path<ui::GpuSwitchingObserver *const &>' [ 0 5 10 96]
'gl::glGetPointervRobustANGLERobustANGLEProc' [ 0 4]
'std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, bool>' [ 0 5 10]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::release' [ 0 5 10 95]
'std::__1::allocator<ui::GpuSwitchingObserver *>::construct<ui::GpuSwitchingObserver *, ui::GpuSwitchingObserver *const &>' [ 0 5 10 49]
'gl::glDeleteTexturesProc' [ 0 4]
'gl::GLApiBase::glUnmapBufferFn' [ 0 4 15]
'gl::GLVersionInfo::ParseVersionString::kVendors' [ 0 4 19 39]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >::allocate' [ 0 5 10 190]
'gl::SurfacelessEGL::SurfacelessEGL' [ 0 4 20]
'gl::glGetUniformuivRobustANGLEProc' [ 0 4]
'gl::DebugGLApi::glUniform1iFn' [ 0 4 16]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >, long, true>' [ 0 5 10]
'std::__1::remove_reference<gl::GLApi *>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::unique_ptr<true, void>' [ 0 5 10 119]
'gl::TraceGLApi::glDepthFuncFn' [ 0 4 16]
'gl::DebugGLApi::glGetPointervFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::SupportsPresentationCallback' [ 0 4 28]
'std::__1::__compressed_pair_elem<std::__1::default_delete<int []>, 1, true>' [ 0 5 10]
'gl::GLApiBase::glCompressedCopyTextureCHROMIUMFn' [ 0 4 15]
'base::internal::VectorBuffer<base::TimeDelta>::RangesOverlap' [ 0 6 16 47]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::SetCapacityTo' [ 0 6 60]
'std::__1::forward<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'gl::GLSurfaceGLX::IsCreateContextRobustnessSupported' [ 0 4 18]
'gl::GLStubApiBase::glGenFencesNVFn' [ 0 4 19]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::__destroy<unsigned char>' [ 0 5 10 65]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<gl::GLSurface> >' [ 0 6]
'base::RepeatingCallback<void (const std::__1::basic_string<char> &, const std::__1::basic_string<char> &)>::Run' [ 0 6 108]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> &>' [ 0 5 10 269]
'std::__1::remove_reference<void *const &>' [ 0 5 10]
'gl::glGetnUniformfvRobustANGLEProc' [ 0 4]
'std::__1::remove_reference<std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long> >' [ 0 5 10]
'gl::GLImageMemory::SetColorSpace' [ 0 4 19]
'gl::GLXApi::~GLXApi' [ 0 4 12]
'gl::NativeViewGLSurfaceEGL::SupportsPostSubBuffer' [ 0 4 28]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::operator[]' [ 0 5 10 115]
'gl::GLFenceEGL::HasCompleted' [ 0 4 16]
'gl::glVertexAttribPointerProc' [ 0 4]
'gl::TraceGLApi::glGetShaderInfoLogFn' [ 0 4 16]
'SkMatrix' [ 0]
'std::__1::make_unique<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, unsigned long &>' [ 0 5 10]
'gl::TraceGLApi::glDeleteFencesAPPLEFn' [ 0 4 16]
'gl::GLContextGLX::Destroy' [ 0 4 18]
'std::__1::__compressed_pair_elem<long *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 52]
'gl::DebugGLApi::glGetInteger64vFn' [ 0 4 16]
'gl::GLFence::~GLFence' [ 0 4 13]
'std::__1::__vector_base<unsigned int, std::__1::allocator<unsigned int> >' [ 0 5 10]
'base::TimeDelta::operator/<double>' [ 0 6 17]
'std::__1::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *&, true>' [ 0 5 10 176]
'std::__1::return_temporary_buffer<base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::TraceGLApi::glGetQueryObjectuivRobustANGLEFn' [ 0 4 16]
'std::__1::__split_buffer<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> &>::__alloc' [ 0 5 10 105]
'gl::glIsEnabledProc' [ 0 4]
'(anonymous namespace)::DesktopCoreCommonCheck' [ 0 23]
'std::__1::__compressed_pair_elem<gl::GLVersionInfo *, 0, false>::__compressed_pair_elem<gl::GLVersionInfo *&, void>' [ 0 5 10 65]
'gl::GLSurfaceGLXX11::DispatchEvent' [ 0 4 21]
'base::internal::UnsanitizedCfiCall<bool (*)(void *, const char *const *, unsigned int, void *, void *)>::UnsanitizedCfiCall' [ 0 6 16 105]
'std::__1::addressof<gl::GLContext *>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRangeImpl<int, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'InvokeFuncStorage' [ 0]
'std::__1::remove_reference<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::pointer_traits<void *>::__nat, void>' [ 0 5 10]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::clear' [ 0 5 10 75]
'std::__1::forward<gl::DebugGLApi *>' [ 0 5 10]
'base::DefaultSingletonTraits<gl::GLVisualPickerGLX>::New' [ 0 6 53]
'gl::TraceOSMESAApi::OSMesaGetDepthBufferFn' [ 0 4 20]
'gl::DebugGLApi::glVertexAttrib4fvFn' [ 0 4 16]
'gl::NoContextGLApi::glGetVertexAttribIuivRobustANGLEFn' [ 0 4 20]
'gl::DebugGLApi::glBindFragDataLocationFn' [ 0 4 16]
'gl::NoContextGLApi::glUniform1uiFn' [ 0 4 20]
'std::__1::__search_substring<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<long>, 1, true>' [ 0 5 10]
'int' [ 0]
'scoped_refptr<base::internal::BindStateBase>::operator bool' [ 0 46]
'gl::GLStubApiBase::glUniformMatrix4x3fvFn' [ 0 4 19]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>::Check' [ 0 6 16 211]
'gl::NoContextGLApi::glGetIntegeri_vRobustANGLEFn' [ 0 4 20]
'gl::glGetVertexAttribIuivRobustANGLEProc' [ 0 4]
'base::internal::InvokeHelper<false, void>::MakeItSo<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>' [ 0 6 16 43]
'gl::NoContextGLApi::glUniform3iFn' [ 0 4 20]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::trace_event_unique_atomic1154' [ 0 4 28 45]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::Iter' [ 0 6 59 65]
'std::__1::__size_type<std::__1::allocator<unsigned char>, long, true>' [ 0 5 10]
'base::internal::IsNull<base::RepeatingCallback<void (const gfx::PresentationFeedback &)> >' [ 0 6 16]
'gl::GLSurfaceOverlay::ScheduleOverlayPlane' [ 0 4 22]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'gl::DebugEGLApi::eglClientWaitSyncKHRFn' [ 0 4 17]
'gl::TraceGLApi::glCompressedTexSubImage2DRobustANGLEFn' [ 0 4 16]
'std::__1::__is_hash_power2' [ 0 5 10]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::~unique_ptr' [ 0 5 10 65]
'std::__1::__unique_if<gfx::GpuFence>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::CARendererLayerParams::FilterEffect *, 0, false>' [ 0 5 10]
'gl::EGLApiBase::eglGetCompositorTimingSupportedANDROIDFn' [ 0 4 16]
'gl::glStencilThenCoverFillPathNVProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >::construct<std::__1::basic_string<char>, const std::__1::basic_string<char> &>' [ 0 5 10 81]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__recommend' [ 0 5 10 68]
'std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>::operator()' [ 0 5 10 150]
'std::__1::allocator<int>::construct<int, int>' [ 0 5 10 26]
'gl::NoContextGLApi::glCoverStrokePathInstancedNVFn' [ 0 4 20]
'gl::NoContextGLApi::glBlendEquationSeparateFn' [ 0 4 20]
'gl::GLStubApiBase::glGetFramebufferParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::empty' [ 0 5 10 74]
'gl::glTexParameterIuivRobustANGLEProc' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::operator=' [ 0 6 16 203]
'gl::glCreateShaderProc' [ 0 4]
'base::FileTracing' [ 0 6]
'AnnotateIgnoreSyncBegin' [ 0]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__swap_out_circular_buffer' [ 0 5 10 96]
'gl::GLFence::GetGpuFence' [ 0 4 13]
'base::LazyInstance<angle::(anonymous namespace)::PlatformContext, base::internal::DestructorAtExitLazyInstanceTraits<angle::(anonymous namespace)::PlatformContext> >::Get' [ 0 6 167]
'angle::ResetPlatform' [ 0 7]
'gl::GLApiBase::glIsQueryFn' [ 0 4 15]
'gl::NoContextGLApi::NoContextGLApi' [ 0 4 20]
'gl::NoContextGLApi::glEndQueryFn' [ 0 4 20]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::operator=' [ 0 6 16 70]
'base::internal::CheckedNumericState<long, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 76]
'gl::DebugEGLApi::eglWaitGLFn' [ 0 4 17]
'base::CallbackCancellationTraits<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, void>' [ 0 6]
'gl::DebugGLApi::glLinkProgramFn' [ 0 4 16]
'std::__1::__wrap_iter<void **>' [ 0 5 10]
'std::__1::vector<ContextCreationInfo, std::__1::allocator<ContextCreationInfo> >::__make_iter' [ 0 5 10 82]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::CheckComparable' [ 0 6 16 79]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >, 1, false>' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> &>' [ 0 5 10]
'gl::DebugEGLApi::eglGetNextFrameIdANDROIDFn' [ 0 4 17]
'gl::GLSurfacePresentationHelper::CheckPendingFramesCallback' [ 0 4 33]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'gl::TraceEGLApi::eglStreamPostD3DTextureANGLEFn' [ 0 4 17]
'ui::DCRendererLayerParams::~DCRendererLayerParams' [ 0 4 27]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::~__vector_base' [ 0 5 10 103]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, true>' [ 0 5 10]
'std::__1::remove_reference<gl::GLStateRestorer *&>' [ 0 5 10]
'gl::TraceEGLApi::eglProgramCachePopulateANGLEFn' [ 0 4 17]
'gl::GLXApiBase::glXGetFBConfigFromVisualSGIXFn' [ 0 4 16]
'std::__1::__compressed_pair<const char **, std::__1::allocator<const char *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 80]
'gl::GLApiBase::glFinishFenceNVFn' [ 0 4 15]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<gl::GLContext *, void *> *>' [ 0 5 10]
'gl::GLApiBase::glGetProgramivFn' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *>, true>' [ 0 5 10 30]
'std::__1::map<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >, std::__1::less<gfx::ColorSpace>, std::__1::allocator<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::operator[]' [ 0 5 10 318]
'gl::EGLApiBase::eglExportDMABUFImageQueryMESAFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<ui::GpuSwitchingObserver **>::__nat, ui::GpuSwitchingObserver *>' [ 0 5 10]
'base::time_internal::TimeBase<base::TimeTicks>::is_null' [ 0 6 21 48]
'gl::glXIsDirectProc' [ 0 4]
'gfx::OverlayTransform' [ 0 5]
'gl::NoContextGLApi::glStencilFuncFn' [ 0 4 20]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__vector_base' [ 0 5 10 108]
'gl::NoContextGLApi::glDeleteSamplersFn' [ 0 4 20]
'int_fast16_t' [ 0]
'gl::glDisableVertexAttribArrayProc' [ 0 4]
'__intmax_t' [ 0]
'gl::DebugGLApi::glClearDepthfFn' [ 0 4 16]
'std::__1::make_signed<unsigned long>' [ 0 5 10]
'XAnyEvent' [ 0]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__alloc' [ 0 5 10 110]
'gl::EGLApiBase::eglCreateStreamProducerD3DTextureANGLEFn' [ 0 4 16]
'gl::EGLApiBase::eglQueryStreamKHRFn' [ 0 4 16]
'std::__1::swap<XVisualInfo *>' [ 0 5 10]
'gl::TimeElapsedTimerQuery::EndQuery' [ 0 4 27]
'gl::GLStubApiBase::glPauseTransformFeedbackFn' [ 0 4 19]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector' [ 0 5 10 70]
'std::__1::remove_volatile<base::BasicStringPiece<std::string> >' [ 0 5 10]
'AnnotatePCQGet' [ 0]
'gfx::Point' [ 0 5]
'gl::TraceGLApi::glUnmapBufferFn' [ 0 4 16]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::__alloc' [ 0 5 10 77]
'gl::GLStubApi::set_version' [ 0 4 15]
'gl::DebugGLApi::glGetErrorFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gfx::FixedVSyncProvider>, 1, true>' [ 0 5 10]
'gl::TraceGLApi::glGetTexLevelParameterivFn' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::front' [ 0 5 10 68]
'std::__1::remove_reference<std::__1::tuple<> >' [ 0 5 10]
'gl::DebugGLApi::glStencilThenCoverStrokePathInstancedNVFn' [ 0 4 16]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::MoveBuffer' [ 0 6 60]
'gl::GLStubApiBase::glGetFenceivNVFn' [ 0 4 19]
'std::__1::__pointer_type_imp::__pointer_type<gl::TraceGLApi, std::__1::default_delete<gl::TraceGLApi>, false>' [ 0 5 10 30]
'std::__1::find_if<std::__1::__wrap_iter<const XVisualInfo *>, (lambda at ../../ui/gl/gl_visual_picker_glx.cc:96:26)>' [ 0 5 10]
'std::__1::__tree_node_base<void *>' [ 0 5 10]
'std::__1::operator==<void **, void **>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >, true>' [ 0 5 10 30]
'std::__1::__pointer_type<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<const int &>' [ 0 5 10 50]
'std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>::operator()' [ 0 5 10 82]
'gl::glDrawArraysInstancedANGLEProc' [ 0 4]
'gl::NoContextGLApi::glSamplerParameterfvRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::reset' [ 0 5 10 71]
'base::internal::DstRangeRelationToSrcRangeImpl<int, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>' [ 0 6 16]
'gl::DebugGLApi::glGetUniformBlockIndexFn' [ 0 4 16]
'std::__1::__merge_move_construct<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::TraceGLApi::glTexBufferRangeFn' [ 0 4 16]
'khronos_uint64_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'gl::NoContextGLApi::glPointParameteriFn' [ 0 4 20]
'gl::glGenerateMipmapEXTProc' [ 0 4]
'gl::GLFunctionPointerType' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper>, false>' [ 0 5 10 30]
'gl::TraceGLApi::glDrawElementsFn' [ 0 4 16]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 6 16]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10 425]
'gl::NoContextGLApi::glHintFn' [ 0 4 20]
'std::__1::__throw_length_error' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >::unique_ptr' [ 0 5 10 81]
'std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'gl::DebugGLApi::glFlushFn' [ 0 4 16]
'gl::DebugGLXApi::glXUseXFontFn' [ 0 4 17]
'gl::OSMesaCreateContextProc' [ 0 4]
'gl::NoContextGLApi::glReadBufferFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<gl::GLFence *, 0, false>' [ 0 5 10]
'gl::GLApiBase::glClearColorFn' [ 0 4 15]
'gl::glTexImage3DProc' [ 0 4]
'std::__1::__pointer_type<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >' [ 0 5 10]
'std::__1::get<0, gfx::PresentationFeedback>' [ 0 5 10]
'base::DefaultRefCountedThreadSafeTraits<base::RefCountedMemory>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::deallocate' [ 0 5 10 145]
'gl::GLSurfaceEGL::GetEGLExtensions' [ 0 4 18]
'base::DefaultRefCountedTraits<gl::TimerQuery>::Destruct' [ 0 6 47]
'std::__1::allocator_traits<std::__1::allocator<base::BasicStringPiece<std::string> > >::construct<base::BasicStringPiece<std::string>, const base::BasicStringPiece<std::string> &>' [ 0 5 10 88]
'std::__1::allocator_traits<std::__1::allocator<long> >::max_size' [ 0 5 10 56]
'gl::glClearDepthfProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::deallocate' [ 0 5 10 174]
'gl::DebugGLApi::glTexImage2DFn' [ 0 4 16]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'XSelectionRequestEvent' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'base::trace_event::MemoryAllocatorDumpGuid' [ 0 6 19]
'gl::GLXApiBase::glXGetCurrentDrawableFn' [ 0 4 16]
'gl::GLStubApiBase::glUniform2iFn' [ 0 4 19]
'gl::TraceGLApi::glGetProgramInterfaceivRobustANGLEFn' [ 0 4 16]
'gl::GLSurfaceEGL::IsAndroidNativeFenceSyncSupported' [ 0 4 18]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >::Release' [ 0 6 92]
'gl::glClientWaitSyncProc' [ 0 4]
'gl::GLApiBase::glIsSamplerFn' [ 0 4 15]
'std::__1::vector<void *, std::__1::allocator<void *> >::begin' [ 0 5 10 56]
'gl::GLStubApiBase::glBindSamplerFn' [ 0 4 19]
'gl::DebugGLApi::glDebugMessageControlFn' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<ContextCreationInfo> >::deallocate' [ 0 5 10 71]
'std::__1::__tuple_leaf<0, base::WeakPtr<gl::GLSurfacePresentationHelper>, false>' [ 0 5 10]
'std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::operator->' [ 0 5 10 121]
'gl::glGetVertexAttribivRobustANGLEProc' [ 0 4]
'gl::NoContextGLApi::glUniform2ivFn' [ 0 4 20]
'base::OnceCallback<void ()>::~OnceCallback' [ 0 6 29]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, true>' [ 0 5 10]
'base::StringPiece16' [ 0 6]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'XPointer' [ 0]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::CheckComparable' [ 0 6 16 87]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::__split_buffer' [ 0 5 10 75]
'std::__1::__wrap_iter<gl::DisplayType *>' [ 0 5 10]
'gl::RealOSMESAApi::RealOSMESAApi' [ 0 4 19]
'gl::GLSurfaceAdapter::GetDisplay' [ 0 4 22]
'gl::GLSurfaceGLXX11::GLSurfaceGLXX11' [ 0 4 21]
'gl::GLContextReal::extension_string' [ 0 4 19]
'base::RepeatingCallback<long ()>::RepeatingCallback' [ 0 6 34]
'std::__1::remove_reference<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'gl::GLApiBase::glShaderSourceFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<int *, 0, false>::__compressed_pair_elem<int *&, void>' [ 0 5 10 51]
'gl::DebugEGLApi::eglCreateSyncKHRFn' [ 0 4 17]
'gl::kANGLEImplementationD3D11NULLName' [ 0 4]
'gl::GLApiBase::glGetSamplerParameterivRobustANGLEFn' [ 0 4 15]
'std::__1::allocator<scoped_refptr<gl::GLImage> >::construct<scoped_refptr<gl::GLImage>, scoped_refptr<gl::GLImage> &>' [ 0 5 10 50]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::operator=' [ 0 5 10 91]
'gl::NoContextGLApi::glUniform1fvFn' [ 0 4 20]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::end' [ 0 5 10 115]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >::~BindState' [ 0 6 16 153]
'angle::AddTraceEventFunc' [ 0 7]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >' [ 0 5 10]
'std::__1::__to_raw_pointer<base::FileDescriptor>' [ 0 5 10]
'std::__1::unique_ptr<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >::reset' [ 0 5 10 99]
'gl::GLApiBase::glGetTexLevelParameterfvRobustANGLEFn' [ 0 4 15]
'scoped_refptr<gl::GLSurface>::scoped_refptr' [ 0 30]
'std::__1::underlying_type<base::TimeTicks::Clock>' [ 0 5 10]
'gl::glPathCommandsNVProc' [ 0 4]
'gl::(anonymous namespace)::GetGLErrors' [ 0 4 27]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'gl::GLSurfacePresentationHelper::Frame::~Frame' [ 0 4 33 40]
'gl::InitializeDebugGLBindingsGLX' [ 0 4]
'gl::glIsFenceNVProc' [ 0 4]
'gl::GLStubApiBase::glDiscardFramebufferEXTFn' [ 0 4 19]
'gl::DebugEGLApi::eglGetCurrentSurfaceFn' [ 0 4 17]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, base::TimeTicks, base::TimeDelta>::__tuple_impl<0, 1, base::TimeTicks, base::TimeDelta, base::TimeTicks &, const base::TimeDelta &>' [ 0 5 10 91]
'std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >::operator++' [ 0 5 10 91]
'gl::DebugGLApi::glGetTexLevelParameterivFn' [ 0 4 16]
'base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >::destroy<unsigned char>' [ 0 5 10 65]
'std::__1::unique_ptr<gl::GPUTiming, std::__1::default_delete<gl::GPUTiming> >::reset' [ 0 5 10 79]
'gl::GLSurface::CALayerInUseQuery::~CALayerInUseQuery' [ 0 4 15 34]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::__destruct_at_end' [ 0 5 10 104]
'std::__1::move<void (gl::GLSurfacePresentationHelper::*&)()>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterfvFn' [ 0 4 16]
'gl::ClearBindingsGLX' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>::RunImpl<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, 0>' [ 0 6 16 155]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'gl::GLApiBase::glGetFloatvFn' [ 0 4 15]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >::Release' [ 0 6 144]
'gl::TraceGLXApi::glXGetCurrentDisplayFn' [ 0 4 17]
'gl::DebugGLApi::glObjectLabelFn' [ 0 4 16]
'gl::HasExtension<13>' [ 0 4]
'base::internal::strict_cast<long, long>' [ 0 6 16]
'gl::DriverGLX' [ 0 4]
'gl::GLStubApiBase::glDebugMessageCallbackFn' [ 0 4 19]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::find' [ 0 5 10 104]
'gl::NoContextGLApi::glGetProgramResourceivFn' [ 0 4 20]
'gl::GLApiBase::glCopyBufferSubDataFn' [ 0 4 15]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::DestructRange<gl::NativeViewGLSurfaceEGL::SwapInfo, 0>' [ 0 6 16 68]
'std::__1::__compressed_pair<gl::TraceGLApi *, std::__1::default_delete<gl::TraceGLApi> >' [ 0 5 10]
'gl::GLStubApiBase::glLinkProgramFn' [ 0 4 19]
'gl::DebugGLApi::glRenderbufferStorageMultisampleFn' [ 0 4 16]
'gl::GLContextGLX::WasAllocatedUsingRobustnessExtension' [ 0 4 18]
'int_least64_t' [ 0]
'std::__1::pointer_traits<std::__1::__value_type<void *, std::__1::basic_string<char> > *>::pointer_to' [ 0 5 10 91]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::operator*' [ 0 6 59 65]
'base::Singleton<gl::GLVisualPickerGLX, base::DefaultSingletonTraits<gl::GLVisualPickerGLX>, gl::GLVisualPickerGLX>::instance_' [ 0 6 116]
'std::__1::__apply_cv<long, unsigned long, false, false>' [ 0 5 10]
'std::__1::__compressed_pair<gfx::NativePixmapPlane *, std::__1::allocator<gfx::NativePixmapPlane> &>::__compressed_pair<nullptr_t, std::__1::allocator<gfx::NativePixmapPlane> &>' [ 0 5 10 102]
'std::__1::allocator<scoped_refptr<gl::GLImage> >::allocate' [ 0 5 10 50]
'std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *>::__wrap_iter<base::BasicStringPiece<std::string> *>' [ 0 5 10 68]
'std::__1::remove_reference<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 5 10]
'std::__1::move<XVisualInfo *&>' [ 0 5 10]
'ui::DCRendererLayerParams' [ 0 4]
'std::__1::__compressed_pair_elem<gl::DebugGLApi *, 0, false>::__compressed_pair_elem<gl::DebugGLApi *, void>' [ 0 5 10 62]
'operator==<gl::GLContext, gl::GLContext>' [ 0]
'gl::TraceGLApi::glCopyTexSubImage2DFn' [ 0 4 16]
'std::__1::pointer_traits<std::__1::__hash_value_type<unsigned long, gl::GLContext *> *>' [ 0 5 10]
'gl::GLContext::SetDisabledGLExtensions' [ 0 4 15]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, false>::__tuple_leaf<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, void>' [ 0 5 10 128]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'scoped_refptr<gl::TimerQuery>' [ 0]
'gl::DebugGLApi::glClearFn' [ 0 4 16]
'std::__1::index_sequence<0UL, 1UL>' [ 0 5 10]
'base::DefaultRefCountedTraits<gl::GPUTimingClient>' [ 0 6]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__move_assign' [ 0 5 10 101]
'gl::GLStubApiBase::glReleaseShaderCompilerFn' [ 0 4 19]
'std::__1::__tree_const_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::__tree_const_iterator' [ 0 5 10 106]
'gl::GLHelper::DrawQuad' [ 0 4 14]
'gl::glFramebufferTexture2DEXTProc' [ 0 4]
'gl::(anonymous namespace)::GetPixelType' [ 0 4 27]
'gl::DebugEGLApi::eglDestroySyncKHRFn' [ 0 4 17]
'gl::GLStubApi::glGenVertexArraysOESFn' [ 0 4 15]
'std::__1::__add_lvalue_reference_impl<gl::GLSurfacePresentationHelper, true>' [ 0 5 10]
'gl::DebugEGLApi::eglStreamConsumerReleaseKHRFn' [ 0 4 17]
'GLvoid' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *&, void>' [ 0 5 10 138]
'std::__1::__compressed_pair<const char **, std::__1::allocator<const char *> &>' [ 0 5 10]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::~__split_buffer' [ 0 5 10 110]
'gl::GPUTimingImpl::GetTimerType' [ 0 4 19]
'std::__1::__compressed_pair_elem<const char **, 0, false>' [ 0 5 10]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta> >::num_bound_args' [ 0 6 16 169]
'base::ProtectedMemoryEnd' [ 0 6]
'gl::GLFence::ResetState' [ 0 4 13]
'base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>::Destroy' [ 0 6 16 121]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__find_equal<gfx::ColorSpace>' [ 0 5 10 539]
'std::__1::__wrap_iter<const XVisualInfo *>::__wrap_iter' [ 0 5 10 44]
'gl::DebugGLApi::glTestFenceNVFn' [ 0 4 16]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::allocator<int>::deallocate' [ 0 5 10 26]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>::scoped_refptr' [ 0 62]
'std::__1::remove_reference<std::__1::tuple<gfx::PresentationFeedback> &>' [ 0 5 10]
'gl::TraceGLApi::glGetShaderSourceFn' [ 0 4 16]
'gl::GLXApiBase' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::KeyValueCompare::extract_if_value_type' [ 0 6 16 203 220]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::default_delete<void *[]>' [ 0 5 10]
'base::ThreadCollisionWarner' [ 0 6]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>::Run' [ 0 6 66]
'gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::SGIVideoSyncVSyncProvider' [ 0 4 27 54]
'gl::NoContextGLApi::glTexBufferFn' [ 0 4 20]
'gl::GLStubApiBase::glGetQueryivRobustANGLEFn' [ 0 4 19]
'gl::EGLApi::~EGLApi' [ 0 4 12]
'gl::DebugGLApi::glClearColorFn' [ 0 4 16]
'gl::TraceGLApi::glGetSamplerParameterIivRobustANGLEFn' [ 0 4 16]
'std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >::deallocate' [ 0 5 10 114]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::IncrementGeneration' [ 0 6 62]
'std::__1::remove_reference<void (gl::GLSurfacePresentationHelper::*const &)(base::TimeTicks, base::TimeDelta)>' [ 0 5 10]
'gl::(anonymous namespace)::g_native_display' [ 0 4 27]
'std::__1::remove_reference<void (gl::GLSurfacePresentationHelper::*)()>' [ 0 5 10]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::circular_deque_const_iterator' [ 0 6 16 79]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > *>::__nat, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'gl::EGLApiBase::eglCreateWindowSurfaceFn' [ 0 4 16]
'std::__1::__const_pointer<gl::GLSurface::CALayerInUseQuery, gl::GLSurface::CALayerInUseQuery *, std::__1::allocator<gl::GLSurface::CALayerInUseQuery>, true>' [ 0 5 10]
'trace_event_internal::TraceID::id_flags' [ 0 22 31]
'gl::GLStubApiBase::glBlendEquationSeparateFn' [ 0 4 19]
'gl::GLFenceNV::Invalidate' [ 0 4 15]
'gl::DebugGLApi::glBindImageTextureEXTFn' [ 0 4 16]
'base::internal::PassingTraits<base::TimeDelta, false>' [ 0 6 16]
'std::__1::forward<void *&>' [ 0 5 10]
'std::__1::default_delete<gl::GLApi>' [ 0 5 10]
'std::__1::remove_reference<bool &>' [ 0 5 10]
'gl::glClearBufferuivProc' [ 0 4]
'gl::GLImageGLX' [ 0 4]
'std::__1::__insertion_sort_3<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'gl::DebugGLApi::glStencilThenCoverFillPathNVFn' [ 0 4 16]
'gl::glCompressedTexImage3DRobustANGLEProc' [ 0 4]
'gl::GLXApiBase::glXSelectEventFn' [ 0 4 16]
'gl::EGLApiBase::eglGetProcAddressFn' [ 0 4 16]
'gl::DebugGLApi::glVertexAttrib2fFn' [ 0 4 16]
'logging::CheckEQImpl<unsigned int, unsigned int>' [ 0 9]
'gl::GLStubApiBase::glUseProgramFn' [ 0 4 19]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'gl::(anonymous namespace)::g_depth' [ 0 4 27]
'gl::GLSurfaceFormat::GetSamples' [ 0 4 21]
'gl::DebugGLApi::glGenPathsNVFn' [ 0 4 16]
'std::__1::default_delete<gl::GPUTiming>::operator()' [ 0 5 10 41]
'gl::TraceGLXApi::glXWaitXFn' [ 0 4 17]
'gl::GLSurfaceOSMesaHeadless::SwapBuffers' [ 0 4 29]
'gl::GLSurface::SetVSyncEnabled' [ 0 4 15]
'gl::GPUTimingImpl::GetDisjointCount' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane> &, 1, false>' [ 0 5 10]
'gl::GLApiBase::glUniform2uiFn' [ 0 4 15]
'std::__1::make_signed<unsigned int>' [ 0 5 10]
'gl::DebugGLApi::glGetTexParameterfvRobustANGLEFn' [ 0 4 16]
'gl::glGetBooleanvProc' [ 0 4]
'gl::GLSurfaceAdapter::SupportsPresentationCallback' [ 0 4 22]
'std::__1::__compressed_pair_elem<gl::GLApi *, 0, false>::__compressed_pair_elem<gl::GLApi *, void>' [ 0 5 10 57]
'gl::GLSurface::ScheduleOverlayPlane' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<base::trace_event::ConvertableToTraceFormat, std::__1::default_delete<base::trace_event::ConvertableToTraceFormat>, false>' [ 0 5 10 30]
'gl::NoContextGLApi::glVertexAttribI4iFn' [ 0 4 20]
'std::__1::forward<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10]
'gl::glTransformFeedbackVaryingsProc' [ 0 4]
'std::__1::hex' [ 0 5 10]
'gl::(anonymous namespace)::CreateDummyWindow' [ 0 4 27]
'gl::DebugGLApi::glUniform2uiFn' [ 0 4 16]
'std::__1::tuple<const gfx::ColorSpace &>' [ 0 5 10]
'logging::CheckEQImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::remove_reference<std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >' [ 0 5 10]
'angle::MonotonicallyIncreasingTimeFunc' [ 0 7]
'base::AsserterBase' [ 0 6]
'gl::GLStubApiBase::glUniformMatrix3x2fvFn' [ 0 4 19]
'std::__1::__const_pointer<base::FileDescriptor, base::FileDescriptor *, std::__1::allocator<base::FileDescriptor>, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'gl::GLApiBase::glPathCommandsNVFn' [ 0 4 15]
'scoped_refptr<gl::TimeElapsedTimerQuery>::Release' [ 0 42]
'gl::GLStateRestorer' [ 0 4]
'gl::GLSurface::FlipsVertically' [ 0 4 15]
'std::__1::remove_reference<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'gl::GLImageNativePixmap::CopyTexSubImage' [ 0 4 25]
'gl::ExtensionsGLX' [ 0 4]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__push_back_slow_path<std::__1::basic_string<char> >' [ 0 5 10 101]
'std::__1::adjacent_find<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, (lambda at ../../base/containers/flat_tree.h:453:23)>' [ 0 5 10]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__push_back_slow_path<TimeNamePair>' [ 0 5 10 68]
'std::__1::swap<ContextCreationInfo *>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'std::__1::unique_ptr<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >::release' [ 0 5 10 161]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >' [ 0 5 10]
'std::__1::forward<gl::GLContext *const &>' [ 0 5 10]
'std::__1::forward<unsigned long &&>' [ 0 5 10]
'std::__1::tuple<gfx::PresentationFeedback>::tuple<gfx::PresentationFeedback &, false, false>' [ 0 5 10 44]
'gl::NoContextGLApi::glPolygonOffsetFn' [ 0 4 20]
'gl::TraceGLApi::glDrawBuffersARBFn' [ 0 4 16]
'gl::GLStubApiBase::glGetIntegervRobustANGLEFn' [ 0 4 19]
'gl::GLContext::switchable_gpus_supported_' [ 0 4 15]
'gl::(anonymous namespace)::g_glx_oml_sync_control_supported' [ 0 4 27]
'gl::(anonymous namespace)::DataRowLength' [ 0 4 27]
'gl::GLStubApiBase::glUniform1fvFn' [ 0 4 19]
'gl::GLSurfaceEGL::IsCreateContextWebGLCompatabilitySupported' [ 0 4 18]
'gl::TraceGLApi::glGetMultisamplefvFn' [ 0 4 16]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::end' [ 0 5 10 68]
'gl::TraceGLApi::glProgramPathFragmentInputGenNVFn' [ 0 4 16]
'base::internal::RangeCheck::RangeCheck' [ 0 6 16 28]
'gl::GLStubApiBase::glBufferDataFn' [ 0 4 19]
'gl::DebugEGLApi::eglPostSubBufferNVFn' [ 0 4 17]
'gl::DriverGLX::GetPlatformExtensions' [ 0 4 15]
'gl::TraceGLApi::glCopyTextureCHROMIUMFn' [ 0 4 16]
'gl::NoContextGLApi::glGetSamplerParameterivFn' [ 0 4 20]
'base::internal::VectorBuffer<base::TimeDelta>::~VectorBuffer' [ 0 6 16 47]
'gl::GLStubApiBase::glPathCommandsNVFn' [ 0 4 19]
'std::__1::add_lvalue_reference<gl::GLStateRestorer>' [ 0 5 10]
'sw_sync_create_fence_data' [ 0]
'base::internal::IntegerRepresentation' [ 0 6 16]
'gl::GLContextEGL::Initialize' [ 0 4 18]
'gl::DebugGLApi::glIsSyncFn' [ 0 4 16]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >::AddRef' [ 0 6 76]
'gl::EGLApiBase::InitializeBase' [ 0 4 16]
'std::__1::__compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >::second' [ 0 5 10 273]
'std::__1::enable_if_t<FunctorTraits<void (SGIVideoSyncVSyncProvider::*)(TimeTicks, TimeDelta)>::is_nullable, bool>' [ 0 5 10]
'gl::GLImageNativePixmap::ScheduleOverlayPlane' [ 0 4 25]
'gl::glGetTexLevelParameterfvRobustANGLEProc' [ 0 4]
'gl::GLSurfaceEGL::InitializeDisplay::atomic_histogram_pointer' [ 0 4 18 37]
'std::__1::__compressed_pair<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >::__compressed_pair<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *&, true>' [ 0 5 10 170]
'std::__1::unique_ptr<gl::GLSurfacePresentationHelper, std::__1::default_delete<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'gl::TraceGLApi::glGetBooleani_vRobustANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glDetachShaderFn' [ 0 4 20]
'gl::DebugEGLApi::eglCreateStreamProducerD3DTextureANGLEFn' [ 0 4 17]
'std::__1::forward<gl::GPUTimer *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::deallocate' [ 0 5 10 67]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>' [ 0 5 10]
'base::internal::operator!=' [ 0 6 16]
'gl::UnmappedNativeViewGLSurfaceGLX::Initialize' [ 0 4 36]
'gl::glTexParameterfvProc' [ 0 4]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__construct_at_end' [ 0 5 10 115]
'gl::GLApiBase::glEGLImageTargetRenderbufferStorageOESFn' [ 0 4 15]
'gl::glGenFencesNVProc' [ 0 4]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::max_size' [ 0 5 10 68]
'std::__1::operator==<int *, int *>' [ 0 5 10]
'gl::DebugGLApi::glIsFenceNVFn' [ 0 4 16]
'base::internal::CheckedNumeric<unsigned long>::CheckedNumeric<unsigned long>' [ 0 6 16 47]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, true>' [ 0 5 10]
'base::circular_deque<base::TimeDelta>::pop_front' [ 0 6 39]
'gl::GLSurfaceOSMesaHeadless' [ 0 4]
'gl::GPUTimer::Start' [ 0 4 14]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>::__tree_iterator' [ 0 5 10 340]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::__split_buffer' [ 0 5 10 77]
'gl::GLContext::GenerateGLVersionInfo' [ 0 4 15]
'base::FeatureState' [ 0 6]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::deallocate' [ 0 5 10 91]
'gl::NoContextGLApi::glGetErrorFn' [ 0 4 20]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::begin' [ 0 5 10 74]
'gl::DebugOSMESAApi::~DebugOSMESAApi' [ 0 4 20]
'gl::GLSurfaceEGL::IsDisplayTextureShareGroupSupported' [ 0 4 18]
'XSelectionClearEvent' [ 0]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<const gfx::ColorSpace &>, std::__1::tuple<> >' [ 0 5 10 539]
'std::__1::__rotate_left<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLContextGLX::MakeCurrent' [ 0 4 18]
'gl::NoContextGLApi::glGetUniformfvFn' [ 0 4 20]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >::~WeakPtr' [ 0 6 75]
'gl::GLContext::GetYUVToRGBConverter' [ 0 4 15]
'gl::GLContext::SetForcedGpuPreference' [ 0 4 15]
'std::__1::__split_buffer<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> &>::clear' [ 0 5 10 97]
'__suseconds_t' [ 0]
'gl::glBindTransformFeedbackProc' [ 0 4]
'gl::NoContextGLApi::glGetSyncivFn' [ 0 4 20]
'std::__1::queue<base::TimeDelta, base::circular_deque<base::TimeDelta> >::size' [ 0 5 10 74]
'gl::ClearBindingsGL' [ 0 4]
'__uint16_t' [ 0]
'gl::GLImageStub::~GLImageStub' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<scoped_refptr<gl::GLImage> > >::select_on_container_copy_construction' [ 0 5 10 79]
'std::__1::__compressed_pair_elem<unsigned int *, 0, false>' [ 0 5 10]
'base::subtle::GetOrCreateLazyPointer<angle::(anonymous namespace)::PlatformContext>' [ 0 6 14]
'gl::DebugEGLApi::DebugEGLApi' [ 0 4 17]
'gl::GLImageGLX::~GLImageGLX' [ 0 4 16]
'gl::TraceOSMESAApi' [ 0 4]
'std::__1::__compressed_pair<gl::GLFence *, std::__1::default_delete<gl::GLFence> >::__compressed_pair<gl::GLFence *, true>' [ 0 5 10 84]
'base::subtle::RefCountedBase::Release' [ 0 6 14 30]
'gl::SetDisabledExtensionsGLX' [ 0 4]
'wint_t' [ 0]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::reset' [ 0 5 10 79]
'gl::GLSurface::ScheduleCALayer' [ 0 4 15]
'SkIVector' [ 0]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >::operator++' [ 0 5 10 153]
'std::__1::remove_reference<base::TimeDelta>' [ 0 5 10]
'std::__1::get_temporary_buffer<base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::TraceGLApi::glTransformFeedbackVaryingsFn' [ 0 4 16]
'gl::GLXApiBase::glXQueryContextFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pointer_traits<base::FileDescriptor *>::__nat, base::FileDescriptor>' [ 0 5 10]
'gl::TraceEGLApi::eglDestroySyncKHRFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >' [ 0 5 10]
'gl::TraceGLApi::glGetUniformLocationFn' [ 0 4 16]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedAddOp, unsigned long>' [ 0 6 16 47]
'gl::NoContextGLApi::glGetUniformivRobustANGLEFn' [ 0 4 20]
'gl::TraceGLApi::glUniform2uiFn' [ 0 4 16]
'base::internal::DstRangeRelationToSrcRangeImpl<int, unsigned long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_UNSIGNED, base::internal::NUMERIC_RANGE_NOT_CONTAINED>::Check' [ 0 6 16 225]
'std::__1::remove_reference<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 5 10]
'gl::glBindFragDataLocationProc' [ 0 4]
'gl::TraceGLApi::glGetInternalformativRobustANGLEFn' [ 0 4 16]
'std::__1::__const_void_pointer<base::BasicStringPiece<std::string> *, std::__1::allocator<base::BasicStringPiece<std::string> >, false>' [ 0 5 10]
'base::RepeatingCallback<void (const gfx::PresentationFeedback &)>' [ 0 6]
'gl::(anonymous namespace)::BindToTextureFormat' [ 0 4 27]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::operator==' [ 0 6 59 65]
'gl::glBufferDataProc' [ 0 4]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::ScopedGeneric' [ 0 6 63]
'gl::NoContextGLApi::glGetInteger64i_vRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::operator=<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>, void, void>' [ 0 5 10 89]
'gl::InitializeNullDrawGLBindings' [ 0 4]
'gl::glPathStencilFuncNVProc' [ 0 4]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::end' [ 0 6 16 203]
'std::__1::__compressed_pair<ui::CARendererLayerParams::FilterEffect *, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 135]
'std::__1::pointer_traits<void *>' [ 0 5 10]
'gl::GLXApiBase::~GLXApiBase' [ 0 4 16]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *&>' [ 0 5 10]
'gl::DebugGLApi::glDeleteProgramFn' [ 0 4 16]
'gl::GLSurface::SetRelyOnImplicitSync' [ 0 4 15]
'gl::EGLApiBase::eglDestroyStreamKHRFn' [ 0 4 16]
'std::__1::swap<gl::DisplayType *>' [ 0 5 10]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::__destruct_at_end' [ 0 5 10 63]
'std::__1::__compressed_pair<unsigned long, std::__1::less<gl::GLContext *> >' [ 0 5 10]
'gl::glRenderbufferStorageMultisampleProc' [ 0 4]
'gl::DebugGLApi::glUnmapBufferFn' [ 0 4 16]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo>::front' [ 0 6 60]
'std::__1::add_lvalue_reference<gfx::FixedVSyncProvider>' [ 0 5 10]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<gl::GLSurface> >::New' [ 0 6 72]
'gl::TraceGLApi::glGetFloatvRobustANGLEFn' [ 0 4 16]
'std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::DebugGLApi::glGetMultisamplefvRobustANGLEFn' [ 0 4 16]
'gl::glIsQueryProc' [ 0 4]
'std::__1::__tuple_leaf<1, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, false>::~__tuple_leaf' [ 0 5 10 100]
'gl::NoContextGLApi::glVertexAttribDivisorANGLEFn' [ 0 4 20]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>' [ 0 6]
'base::internal::circular_deque_const_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::CheckUnstableUsage' [ 0 6 16 85]
'gl::glTexParameterIivRobustANGLEProc' [ 0 4]
'gl::glXDestroyGLXPixmapProc' [ 0 4]
'gl::(anonymous namespace)::current_context_' [ 0 4 27]
'gl::GLStubApiBase::glGetVertexAttribPointervFn' [ 0 4 19]
'gl::GLSurfacePresentationHelper::Frame::Frame' [ 0 4 33 40]
'gl::GLApiBase::glStencilOpFn' [ 0 4 15]
'std::__1::__split_buffer<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> &>::~__split_buffer' [ 0 5 10 93]
'gl::GLFenceNV::GLFenceNV' [ 0 4 15]
'gl::DebugGLApi::glBlitFramebufferFn' [ 0 4 16]
'std::__1::remove_reference<const base::RepeatingCallback<void (const gfx::PresentationFeedback &)> &>' [ 0 5 10]
'base::internal::CallbackBase::is_null' [ 0 6 16 30]
'base::internal::CheckedNumericState<unsigned long, base::internal::NUMERIC_INTEGER>::CheckedNumericState<unsigned long>' [ 0 6 16 85]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::get' [ 0 5 10 89]
'gl::GLShareGroup::AddContext' [ 0 4 18]
'std::__1::unique_ptr<base::BasicStringPiece<std::string>, std::__1::__destruct_n &>::release' [ 0 5 10 85]
'std::__1::__const_pointer<std::__1::basic_string<char>, std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::size' [ 0 5 10 68]
'base::internal::FunctorTraits<void (gl::GLSurfacePresentationHelper::*)(), void>::Invoke<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper>>' [ 0 6 16 82]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *, 0, false>::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *, void>' [ 0 5 10 81]
'gl::eglQueryStreamKHRProc' [ 0 4]
'gl::glDepthFuncProc' [ 0 4]
'gl::glBindTextureProc' [ 0 4]
'base::internal::CheckedNumeric<int>::CheckedNumeric<unsigned long>' [ 0 6 16 37]
'base::internal::CheckOnFailure::HandleFailure<int>' [ 0 6 16 32]
'std::__1::__compressed_pair<XVisualInfo *, std::__1::allocator<XVisualInfo> &>::__compressed_pair<nullptr_t, std::__1::allocator<XVisualInfo> &>' [ 0 5 10 80]
'gl::OSMesaGetDepthBufferProc' [ 0 4]
'std::__1::__wrap_iter<int *>' [ 0 5 10]
'std::__1::move<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'std::__1::remove_reference<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *&>' [ 0 5 10]
'gl::GLXApiBase::GLXApiBase' [ 0 4 16]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::max_size' [ 0 5 10 67]
'gl::(anonymous namespace)::ChooseConfig' [ 0 4 27]
'std::__1::remove_reference<gfx::GpuFence *&>' [ 0 5 10]
'base::internal::UnsanitizedCfiCall<void (*)(void *)>' [ 0 6 16]
'std::__1::allocator<gl::DisplayType>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, true>' [ 0 5 10]
'gl::DriverOSMESA::InitializeStaticBindings' [ 0 4 18]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'gl::GLStubApiBase::glUniform3iFn' [ 0 4 19]
'std::__1::remove_reference<const std::__1::less<void> &>' [ 0 5 10]
'__u8' [ 0]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>::Release' [ 0 62]
'gl::glGetFramebufferParameterivRobustANGLEProc' [ 0 4]
'int8_t' [ 0]
'std::__1::__size_type<std::__1::allocator<int>, long, true>' [ 0 5 10]
'base::RepeatingCallback<void (const gfx::PresentationFeedback &)>::~RepeatingCallback' [ 0 6 67]
'gl::OSMESAApi::~OSMESAApi' [ 0 4 15]
'gl::glGetMultisamplefvProc' [ 0 4]
'gl::GLStubApiBase::glBlendBarrierKHRFn' [ 0 4 19]
'base::internal::BigEnoughPromotion<long, int, true, true>' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'gl::OSMESAApiBase::OSMesaGetDepthBufferFn' [ 0 4 19]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::CheckUnstableUsage' [ 0 6 16 79]
'ui::PlatformEventDispatcher::PlatformEventDispatcher' [ 0 4 29]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::data' [ 0 5 10 115]
'std::__1::__tree_node_base<void *>::__set_parent' [ 0 5 10 36]
'std::__1::allocator_traits<std::__1::allocator<int> >::__destroy<int>' [ 0 5 10 55]
'gl::DebugGLApi::glGetTexLevelParameterivRobustANGLEFn' [ 0 4 16]
'gl::GLApiBase::glBindRenderbufferEXTFn' [ 0 4 15]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'gl::glUniformMatrix3x2fvProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::allocator<gfx::NativePixmapPlane>, 1, true>' [ 0 5 10]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >::__make_iter' [ 0 5 10 68]
'gl::GLStubApiBase::glTexImage2DRobustANGLEFn' [ 0 4 19]
'gl::GLContext::GetGLStateRestorer' [ 0 4 15]
'gl::NoContextGLApi::glGetProgramivFn' [ 0 4 20]
'gl::GLApiBase::glGetVertexAttribIivRobustANGLEFn' [ 0 4 15]
'gl::TraceGLApi::glWaitSyncFn' [ 0 4 16]
'gl::SurfacelessEGL::Resize' [ 0 4 20]
'base::subtle::NoBarrier_Store' [ 0 6 14]
'gl::glGetProgramInterfaceivProc' [ 0 4]
'FILE' [ 0]
'std::__1::forward<const std::__1::allocator<base::BasicStringPiece<std::string> > &>' [ 0 5 10]
'std::__1::back_insert_iterator<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >::back_insert_iterator' [ 0 5 10 99]
'gl::DebugGLApi::glDetachShaderFn' [ 0 4 16]
'gl::HasExtension<30>' [ 0 4]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<gl::GLContext *, void *> *, std::__1::__tree_node<gl::GLContext *, void *> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *>' [ 0 5 10]
'std::__1::vector<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::empty' [ 0 5 10 84]
'std::__1::__buffered_inplace_merge<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::TraceGLApi::glClearBufferfvFn' [ 0 4 16]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::end' [ 0 5 10 200]
'base::subtle::AtomicWord' [ 0 6 14]
'gl::DebugGLApi::glUniform4iFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::TraceSwapEvents::SwapEvents' [ 0 4 28 45]
'std::__1::forward<base::TimeDelta>' [ 0 5 10]
'gl::NoContextGLApi::glFramebufferTexture2DMultisampleEXTFn' [ 0 4 20]
'base::subtle' [ 0 6]
'gl::GLStubApiBase::glDepthRangefFn' [ 0 4 19]
'gl::GLApiBase::glObjectPtrLabelFn' [ 0 4 15]
'scoped_refptr<gl::TimerQuery>::~scoped_refptr' [ 0 31]
'gl::GLApiBase::glIsTransformFeedbackFn' [ 0 4 15]
'gl::TraceGLApi::glRenderbufferStorageEXTFn' [ 0 4 16]
'angle::SetCacheProgramCallback' [ 0 7]
'std::__1::__tree_key_value_types<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >' [ 0 5 10]
'base::internal::VectorBuffer<scoped_refptr<gl::TimerQuery> >::~VectorBuffer' [ 0 6 16 62]
'std::__1::__compressed_pair<std::__1::__tree_node<gl::GLContext *, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::__compressed_pair<std::__1::__tree_node<gl::GLContext *, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >' [ 0 5 10 185]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::__destruct_n &>::second' [ 0 5 10 94]
'gl::GLApiBase::glGetInternalformativRobustANGLEFn' [ 0 4 15]
'gfx::Size::height' [ 0 5 11]
'base::internal::CheckedDivOp<long, int, void>' [ 0 6 16]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::capacity' [ 0 5 10 122]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync>, 1, true>' [ 0 5 10]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::__annotate_delete' [ 0 5 10 66]
'base::internal::PassingTraitsType<base::TimeTicks>' [ 0 6 16]
'gl::TraceGLXApi::glXChooseVisualFn' [ 0 4 17]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>' [ 0 6 16]
'std::__1::move<const char **&>' [ 0 5 10]
'gl::GLContextEGL::WasAllocatedUsingRobustnessExtension' [ 0 4 18]
'gl::GLStubApiBase::glGetProgramInfoLogFn' [ 0 4 19]
'gl::NoContextGLApi::glGetActiveAttribFn' [ 0 4 20]
'std::__1::__pointer_type<__GLXFBConfigRec *, gfx::XObjectDeleter<void, int, &XFree> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::operator bool' [ 0 5 10 87]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >' [ 0 5 10]
'trace_event_internal::kNoId' [ 0 22]
'gl::NoContextGLApi::glEndTransformFeedbackFn' [ 0 4 20]
'gl::HasExtension<31>' [ 0 4]
'XMappingEvent' [ 0]
'gl::InitializeStaticGLBindingsOSMesaGL' [ 0 4]
'std::__1::__compressed_pair_elem<gl::YUVToRGBConverter *, 0, false>' [ 0 5 10]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::size' [ 0 5 10 66]
'gl::glRenderbufferStorageMultisampleEXTProc' [ 0 4]
'std::__1::default_delete<gl::GLSurfacePresentationHelper>::operator()' [ 0 5 10 59]
'gl::TraceGLApi::glCompressedCopyTextureCHROMIUMFn' [ 0 4 16]
'gl::GLSurfaceAdapter::SetDrawRectangle' [ 0 4 22]
'sync_merge' [ 0]
'gl::GLApiBase::glRenderbufferStorageEXTFn' [ 0 4 15]
'std::__1::__compressed_pair<ui::DCRendererLayerParams::FilterEffect *, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::less<gl::GLContext *> &>' [ 0 5 10]
'gl::GLImageStub::BindTexImage' [ 0 4 17]
'std::__1::remove_reference<TimeNamePair &>' [ 0 5 10]
'gl::ScopedCapability::~ScopedCapability' [ 0 4 22]
'base::internal::CheckedMulFastOp<int, int>::Do<int>' [ 0 6 16 44]
'std::__1::__lower_bound<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *>, base::BasicStringPiece<std::string> >' [ 0 5 10]
'gl::glBlendFuncSeparateProc' [ 0 4]
'ui::CARendererLayerParams::CARendererLayerParams' [ 0 4 27]
'gl::TimeElapsedTimerQuery::TimeElapsedTimerQuery' [ 0 4 27]
'std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::operator[]' [ 0 5 10 68]
'std::__1::__tree_key_value_types<gl::GLContext *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::find<void *>' [ 0 5 10 299]
'std::__1::__compressed_pair<base::BasicStringPiece<std::string> *, std::__1::allocator<base::BasicStringPiece<std::string> > >::__compressed_pair<nullptr_t, true>' [ 0 5 10 128]
'gl::GLApiBase::glCoverFillPathNVFn' [ 0 4 15]
'gl::GLApiBase::glIsBufferFn' [ 0 4 15]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::deallocate' [ 0 5 10 64]
'GLchar' [ 0]
'std::__1::iterator_traits<ui::GpuSwitchingObserver **>' [ 0 5 10]
'logging::CheckEQImpl<gl::GLStateRestorer *, gl::GLStateRestorer *>' [ 0 9]
'std::__1::iterator_traits<TimeNamePair *>' [ 0 5 10]
'gl::GLFence' [ 0 4]
'std::__1::__add_lvalue_reference_impl<gl::GLStateRestorer, true>' [ 0 5 10]
'gl::TimeStampTimerQuery' [ 0 4]
'gl::DebugGLApi::glIsEnabledFn' [ 0 4 16]
'gl::HasExtension<32>' [ 0 4]
'gl::DebugEGLApi::eglGetFrameTimestampSupportedANDROIDFn' [ 0 4 17]
'gl::GLImageStub::CopyTexImage' [ 0 4 17]
'gl::GLImageRefCountedMemory::Initialize' [ 0 4 29]
'gl::NoContextGLApi::glDeleteTexturesFn' [ 0 4 20]
'gl::glGenBuffersARBProc' [ 0 4]
'gl::TraceGLApi::glStencilFuncSeparateFn' [ 0 4 16]
'std::__1::__tuple_leaf<0, base::TimeTicks, false>' [ 0 5 10]
'std::__1::default_delete<gl::TraceGLApi>' [ 0 5 10]
'gl::GLApiBase::glUniformMatrix3x2fvFn' [ 0 4 15]
'gl::DebugGLApi::glVertexAttrib3fvFn' [ 0 4 16]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, void ()>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >, 0>::is_method' [ 0 6 16 227 422]
'gl::DebugEGLApi::eglSwapBuffersWithDamageKHRFn' [ 0 4 17]
'gl::glUnmapBufferProc' [ 0 4]
'gl::DebugGLApi::glGetObjectLabelFn' [ 0 4 16]
'std::__1::__insertion_sort<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &, std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::TimeElapsedTimerQuery::UpdateQueryResults' [ 0 4 27]
'std::__1::__pointer_type_imp::__pointer_type<XVisualInfo, gfx::XObjectDeleter<void, int, &XFree>, false>' [ 0 5 10 30]
'base::internal::circular_deque_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>' [ 0 6 16]
'std::__1::unique_ptr<XVisualInfo [], gfx::XObjectDeleter<void, int, &XFree> >::operator[]' [ 0 5 10 79]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::end' [ 0 5 10 107]
'logging::LogMessageVoidify' [ 0 9]
'gl::GLSurfaceOSMesa::Destroy' [ 0 4 21]
'std::__1::__compressed_pair<TimeNamePair *, std::__1::allocator<TimeNamePair> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 81]
'gl::EGLApiBase::eglCopyBuffersFn' [ 0 4 16]
'gl::EGLApiBase::eglDestroySyncKHRFn' [ 0 4 16]
'gl::GLApiBase::glDrawRangeElementsFn' [ 0 4 15]
'std::__1::__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >' [ 0 5 10]
'gl::DebugGLApi::glIsFramebufferEXTFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>::__compressed_pair_elem<unsigned char *, void>' [ 0 5 10 61]
'std::__1::allocator<gfx::NativePixmapPlane>::allocate' [ 0 5 10 45]
'gl::DebugGLApi::glGetBooleanvRobustANGLEFn' [ 0 4 16]
'difference_type' [ 0]
'gl::NoContextGLApi::glShaderSourceFn' [ 0 4 20]
'gl::GLStubApiBase::glDrawArraysInstancedANGLEFn' [ 0 4 19]
'std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::~tuple' [ 0 5 10 178]
'gl::HasExtension<33>' [ 0 4]
'gl::GLStubApiBase::glFinishFenceAPPLEFn' [ 0 4 19]
'gl::NoContextGLApi::glGetTexParameterIuivRobustANGLEFn' [ 0 4 20]
'gl::DebugGLApi::glGetBufferParameterivRobustANGLEFn' [ 0 4 16]
'gl::GLContextOSMesa::Initialize' [ 0 4 21]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::~__tree' [ 0 5 10 299]
'SkVector' [ 0]
'base::ContainsValue<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, base::BasicStringPiece<std::string>, 0>' [ 0 6]
'gl::GLStubApiBase::glGenSamplersFn' [ 0 4 19]
'gl::TraceEGLApi::eglDestroySurfaceFn' [ 0 4 17]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::push_back' [ 0 5 10 101]
'AnnotateIgnoreWritesEnd' [ 0]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::capacity' [ 0 5 10 77]
'gl::UnmappedNativeViewGLSurfaceGLX::GetConfig' [ 0 4 36]
'std::__1::swap<gl::TimeElapsedTimerQuery *>' [ 0 5 10]
'gl::TraceGLApi::glCompressedTexImage3DFn' [ 0 4 16]
'gl::GLApiBase::glGetMultisamplefvFn' [ 0 4 15]
'gl::DebugEGLApi::eglSwapIntervalFn' [ 0 4 17]
'std::__1::forward<void (gl::GLSurfacePresentationHelper::*)()>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, base::TimeTicks, base::TimeDelta>, void ()>::RunImpl<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>, std::__1::tuple<base::TimeTicks, base::TimeDelta>, 0, 1>' [ 0 6 16 161]
'gl::glXUseXFontProc' [ 0 4]
'std::__1::conditional<true, std::__1::pair<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::capacity' [ 0 5 10 75]
'gl::NoContextGLApi::glGetActiveUniformFn' [ 0 4 20]
'gl::eglProgramCacheResizeANGLEProc' [ 0 4]
'std::__1::allocator<base::FileDescriptor>::allocate' [ 0 5 10 43]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::SetCapacityTo' [ 0 6 54]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::unique_ptr<true, void>' [ 0 5 10 167]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >' [ 0 5 10]
'std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >::pair<const gfx::ColorSpace &>' [ 0 5 10 135]
'gl::GLSurfaceAdapter::~GLSurfaceAdapter' [ 0 4 22]
'gl::NoContextGLApi::glGetRenderbufferParameterivEXTFn' [ 0 4 20]
'gl::GLApiBase::glDeleteTransformFeedbacksFn' [ 0 4 15]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >::operator->' [ 0 5 10 153]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::unique_ptr<true, void>' [ 0 5 10 77]
'gl::HasExtension<34>' [ 0 4]
'gl::NativeViewGLSurfaceEGL::PostSubBuffer' [ 0 4 28]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>::RunImpl<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*const &)(base::TimeTicks, base::TimeDelta), const std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > &, 0>::is_method' [ 0 6 16 261 473]
'(anonymous namespace)' [ 0]
'std::__1::vector<gfx::NativePixmapPlane, std::__1::allocator<gfx::NativePixmapPlane> >::__swap_out_circular_buffer' [ 0 5 10 88]
'std::__1::__compressed_pair<gl::GLStateRestorer *, std::__1::default_delete<gl::GLStateRestorer> >' [ 0 5 10]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >' [ 0 5 10]
'gl::glUseProgramProc' [ 0 4]
'gl::GLApiBase::glDrawElementsInstancedANGLEFn' [ 0 4 15]
'gl::GLVisualPickerGLX::PickBestGlVisual' [ 0 4 23]
'gl::GLVersionInfo::IsAtLeastGLES' [ 0 4 19]
'gl::NoContextGLApi::glRenderbufferStorageEXTFn' [ 0 4 20]
'gl::glBlendBarrierKHRProc' [ 0 4]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::~unique_ptr' [ 0 5 10 87]
'std::__1::__wrap_iter<const XVisualInfo *>::operator*' [ 0 5 10 44]
'std::__1::allocator<long>::allocate' [ 0 5 10 27]
'gl::TraceGLApi::glBindTransformFeedbackFn' [ 0 4 16]
'gl::DebugGLApi::glGetInteger64vRobustANGLEFn' [ 0 4 16]
'base::WeakPtr<gl::GLSurfacePresentationHelper>::WeakPtr' [ 0 6 48]
'base::internal::IsNull<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta)>' [ 0 6 16]
'gl::DebugGLXApi::glXCopySubBufferMESAFn' [ 0 4 17]
'gl::GLApiBase::glUniform1iFn' [ 0 4 15]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::vector' [ 0 5 10 74]
'gl::HasExtension<18>' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::__destroy<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10 219]
'std::__1::vector<void *, std::__1::allocator<void *> >::push_back' [ 0 5 10 56]
'std::__1::remove_reference<gl::TimeElapsedTimerQuery *&>' [ 0 5 10]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >::RefCounted' [ 0 6 80]
'std::__1::unique_ptr<gl::GPUTimer, std::__1::default_delete<gl::GPUTimer> >::unique_ptr' [ 0 5 10 77]
'std::__1::operator!=<const std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<int> >::__construct<int, const int &>' [ 0 5 10 55]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >, std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *>, true>' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>' [ 0 5 10]
'gl::GLSurface::SupportsAsyncSwap' [ 0 4 15]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<void *, std::__1::basic_string<char> > *>::__nat, std::__1::__value_type<void *, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::GLStubApiBase::glGetAttachedShadersFn' [ 0 4 19]
'base::AutoLock::~AutoLock' [ 0 6 16]
'gl::NoContextGLApi::glDeletePathsNVFn' [ 0 4 20]
'base::internal::strict_cast<unsigned long, unsigned long>' [ 0 6 16]
'gl::NativeViewGLSurfaceEGLX11::Resize' [ 0 4 31]
'std::__1::__compressed_pair<gl::CurrentGL *, std::__1::default_delete<gl::CurrentGL> >' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::__annotate_new' [ 0 5 10 50]
'ui::GpuSwitchingManager::GpuSwitchingManager' [ 0 4 25]
'std::__1::__tree_key_value_types<gl::GLContext *>::__get_ptr' [ 0 5 10 51]
'std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>' [ 0 5 10]
'gl::GLStubApiBase::glDrawElementsFn' [ 0 4 19]
'gl::TraceGLApi::glPopDebugGroupFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<gl::GPUTimer *, 0, false>::__compressed_pair_elem<gl::GPUTimer *&, void>' [ 0 5 10 60]
'gl::GLApiBase::glPopGroupMarkerEXTFn' [ 0 4 15]
'gl::NoContextGLApi::glGetShaderivFn' [ 0 4 20]
'gl::glUniform2uiProc' [ 0 4]
'gl::GLStubApiBase::glProgramBinaryFn' [ 0 4 19]
'gl::(anonymous namespace)::kFragmentHeaderES3' [ 0 4 27]
'std::__1::iterator_traits<gl::DisplayType *>' [ 0 5 10]
'gl::GLShareGroup::GetSharedContext' [ 0 4 18]
'gl::DebugGLApi::glBlendFuncSeparateFn' [ 0 4 16]
'gl::DebugGLApi::glGetProgramResourceivFn' [ 0 4 16]
'gl::glGetRenderbufferParameterivRobustANGLEProc' [ 0 4]
'gl::TraceGLApi::glDiscardFramebufferEXTFn' [ 0 4 16]
'base::DefaultSingletonTraits<ui::GpuSwitchingManager>::Delete' [ 0 6 55]
'std::__1::move<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &>' [ 0 5 10]
'gl::GLApiBase::glGetQueryObjectuivFn' [ 0 4 15]
'std::__1::binary_function<std::__1::basic_string<char>, std::__1::basic_string<char>, bool>' [ 0 5 10]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::__annotate_new' [ 0 5 10 68]
'gl::GLStubApiBase::glVertexAttribI4uiFn' [ 0 4 19]
'std::__1::__compressed_pair<gfx::ColorTransform *, std::__1::default_delete<gfx::ColorTransform> >' [ 0 5 10]
'gl::HasExtension<36>' [ 0 4]
'gl::glXCreateNewContextProc' [ 0 4]
'std::__1::__pointer_type<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >' [ 0 5 10]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>::~scoped_refptr' [ 0 62]
'gl::ScopedTextureBinder' [ 0 4]
'base::internal::DstRangeRelationToSrcRangeImpl<long, long, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'gl::ScopedFramebufferBinder::~ScopedFramebufferBinder' [ 0 4 29]
'XID' [ 0]
'gl::GLFence::IsGpuFenceSupported' [ 0 4 13]
'std::__1::pair<void *const, std::__1::basic_string<char> >' [ 0 5 10]
'gl::DebugGLApi::glGetActiveUniformFn' [ 0 4 16]
'gl::ContextPriority' [ 0 4]
'gl::DebugGLApi::glUniformMatrix3x4fvFn' [ 0 4 16]
'std::__1::iterator_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__wrap_iter<int *>::__wrap_iter' [ 0 5 10 30]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::capacity' [ 0 5 10 65]
'gl::GLSurface::SupportsCommitOverlayPlanes' [ 0 4 15]
'base::LazyInstanceTraitsBase<base::Lock>::New' [ 0 6 42]
'Pixmap' [ 0]
'gl::GLStubApi::glFenceSyncFn' [ 0 4 15]
'gl::TraceGLApi::glUniform3ivFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::BuffersFlipped' [ 0 4 28]
'gl::GPUTimingClient::SetCpuTimeForTesting' [ 0 4 21]
'gl::(anonymous namespace)::GenHelper' [ 0 4 27]
'base::TimeDelta::FromNanoseconds' [ 0 6 17]
'gl::DisableNullDrawGLBindings' [ 0 4]
'std::__1::__insertion_sort_incomplete<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<ContextCreationInfo *>::__nat, ContextCreationInfo>' [ 0 5 10]
'std::__1::__tuple_types<gfx::PresentationFeedback>' [ 0 5 10]
'gl::GLContextReal::SetCurrent' [ 0 4 19]
'std::__1::conditional<true, std::__1::tuple<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, std::__1::__nat>' [ 0 5 10]
'gl::GLSurfacePresentationHelper::CheckPendingFrames' [ 0 4 33]
'base::NativeLibraryLoadError::~NativeLibraryLoadError' [ 0 6 30]
'std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'gl::glSamplerParameterIuivRobustANGLEProc' [ 0 4]
'gl::glCompressedCopyTextureCHROMIUMProc' [ 0 4]
'base::internal::circular_deque_iterator<gl::GLSurfacePresentationHelper::Frame>' [ 0 6 16]
'gl::GLSurfaceFormat::SetSamples' [ 0 4 21]
'std::__1::__pointer_type_imp::__pointer_type<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL>, false>' [ 0 5 10 30]
'gl::GLStubApiBase::glGetSamplerParameterfvFn' [ 0 4 19]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned int>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::__alloc' [ 0 5 10 83]
'gl::GLVisualPickerGLX::system_visual' [ 0 4 23]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::FixedVSyncProvider *, 0, false>::__compressed_pair_elem<gfx::FixedVSyncProvider *&, void>' [ 0 5 10 71]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::~ObserverList' [ 0 6 59]
'std::__1::__compressed_pair<TimeNamePair *, std::__1::allocator<TimeNamePair> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::max_size' [ 0 5 10 64]
'std::__1::__compressed_pair_elem<std::__1::allocator<gl::DisplayType>, 1, true>' [ 0 5 10]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__alloc' [ 0 5 10 103]
'std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::__tree_iterator' [ 0 5 10 100]
'gl::GLStubApiBase::glVertexAttrib3fvFn' [ 0 4 19]
'gl::DebugGLApi::glEGLImageTargetRenderbufferStorageOESFn' [ 0 4 16]
'std::__1::__tree_iterator<gl::GLContext *, std::__1::__tree_node<gl::GLContext *, void *> *, long>::__get_np' [ 0 5 10 100]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__hash_table' [ 0 5 10 466]
'gl::ScopedVertexAttribArray' [ 0 4]
'gl::DebugGLApi::glGetBufferParameterivFn' [ 0 4 16]
'gl::GLApiBase::glUniform4fvFn' [ 0 4 15]
'gl::OSMESAApiBase::OSMesaGetColorBufferFn' [ 0 4 19]
'gl::glGetVertexAttribIivRobustANGLEProc' [ 0 4]
'gl::DebugGLApi::glBindAttribLocationFn' [ 0 4 16]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::Destroy' [ 0 6 16 331]
'std::__1::default_delete<gl::GPUTimer>::operator()' [ 0 5 10 40]
'std::__1::make_unsigned<unsigned int>' [ 0 5 10]
'std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >::__erase_unique<unsigned long>' [ 0 5 10 466]
'base::internal::CommonMax<int, unsigned long>' [ 0 6 16]
'gl::(anonymous namespace)::GLES2RGBData<(lambda at ../../ui/gl/gl_image_memory.cc:307:27)>::trace_event_unique_atomic230' [ 0 4 27 92]
'std::__1::__add_lvalue_reference_impl<gl::GLFenceEGL, true>' [ 0 5 10]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::~__split_buffer' [ 0 5 10 75]
'std::__1::move<scoped_refptr<gl::TimerQuery> &>' [ 0 5 10]
'gl::NativeViewGLSurfaceGLX::window' [ 0 4 28]
'gl::glGetTexParameterivRobustANGLEProc' [ 0 4]
'ui::ScopedReleaseCurrent::ScopedReleaseCurrent' [ 0 4 26]
'std::__1::vector<void *, std::__1::allocator<void *> >::end' [ 0 5 10 56]
'std::__1::forward<std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > > >' [ 0 5 10]
'std::__1::vector<long, std::__1::allocator<long> >::max_size' [ 0 5 10 52]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'gl::OSMESAApiBase::OSMesaCreateContextFn' [ 0 4 19]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > >, void *> >' [ 0 5 10]
'gl::TraceEGLApi::eglWaitClientFn' [ 0 4 17]
'gl::NoContextGLApi::glGenerateMipmapEXTFn' [ 0 4 20]
'gl::GLApiBase::glDebugMessageControlFn' [ 0 4 15]
'gl::TraceGLApi::glBindBufferRangeFn' [ 0 4 16]
'gl::HasExtension<38>' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<base::BasicStringPiece<std::string>, std::__1::__return_temporary_buffer, false>' [ 0 5 10 30]
'gl::glTexSubImage3DRobustANGLEProc' [ 0 4]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__vector_base' [ 0 5 10 57]
'gl::GLSurfaceStub::SwapBuffers' [ 0 4 19]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__root_ptr' [ 0 5 10 107]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::~unique_ptr' [ 0 5 10 176]
'std::__1::__wrap_iter<ContextCreationInfo *>' [ 0 5 10]
'base::RefCounted<gl::QueryResult, base::DefaultRefCountedTraits<gl::QueryResult> >::DeleteInternal<gl::QueryResult>' [ 0 6 84]
'gl::DebugEGLApi::eglWaitSyncKHRFn' [ 0 4 17]
'gl::GLApiBase::glTexParameterfvRobustANGLEFn' [ 0 4 15]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >::operator->' [ 0 5 10 268]
'gl::GLImageEGL::Initialize' [ 0 4 16]
'gl::kGLImplementationDisabledName' [ 0 4]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::capacity' [ 0 5 10 104]
'XFocusChangeEvent' [ 0]
'std::__1::__compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []> >' [ 0 5 10]
'gl::DebugGLApi::glEnableFn' [ 0 4 16]
'gl::GLApiBase::glGetProgramResourceNameFn' [ 0 4 15]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::operator*' [ 0 6 16 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >::destroy<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10 219]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >' [ 0 5 10]
'gl::GPUTimingClient::CreateGPUTimer' [ 0 4 21]
'gl::glEnableProc' [ 0 4]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::operator++' [ 0 5 10 55]
'base::internal::IsNull<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)()>' [ 0 6 16]
'gl::DebugGLApi::glGetShaderivFn' [ 0 4 16]
'gl::GLStubApiBase::glUniformMatrix4fvFn' [ 0 4 19]
'base::RefCounted<gl::GPUTimingClient, base::DefaultRefCountedTraits<gl::GPUTimingClient> >::AddRef' [ 0 6 92]
'std::__1::addressof<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >' [ 0 5 10]
'base::internal::CheckedNumeric<unsigned long>::MathOp<CheckedMulOp, int>' [ 0 6 16 47]
'gl::GLSurfaceAdapter::SupportsProtectedVideo' [ 0 4 22]
'std::__1::allocator_traits<std::__1::allocator<gl::DisplayType> >::__construct<gl::DisplayType, gl::DisplayType>' [ 0 5 10 67]
'gl::OSMESAApiBase::OSMesaGetIntegervFn' [ 0 4 19]
'std::__1::tuple_element<1, std::__1::tuple<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<ui::GpuSwitchingObserver *> &>' [ 0 5 10]
'base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 6 16]
'std::__1::__compressed_pair<gl::GLStateRestorer *, std::__1::default_delete<gl::GLStateRestorer> >::__compressed_pair<gl::GLStateRestorer *&, true>' [ 0 5 10 100]
'std::__1::__unique_if<gl::YUVToRGBConverter>' [ 0 5 10]
'gl::GLStubApiBase::glVertexAttrib4fvFn' [ 0 4 19]
'std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>' [ 0 5 10]
'gl::ScopedViewport::~ScopedViewport' [ 0 4 20]
'std::__1::__compressed_pair_elem<std::__1::allocator<void *> &, 1, false>::__get' [ 0 5 10 75]
'gl::TraceGLApi::glIsSyncFn' [ 0 4 16]
'gl::GLStateRestorer::~GLStateRestorer' [ 0 4 21]
'std::__1::make_unique<gfx::FixedVSyncProvider, const base::TimeTicks &, const base::TimeDelta &>' [ 0 5 10]
'base::internal::Unwrap<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 16]
'gl::GLStubApiBase::glCompressedTexSubImage3DRobustANGLEFn' [ 0 4 19]
'std::__1::__vector_base<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__vector_base' [ 0 5 10 122]
'std::__1::max<unsigned long>' [ 0 5 10]
'gl::EGLApiBase::eglWaitGLFn' [ 0 4 16]
'gl::glGetProgramivProc' [ 0 4]
'std::__1::__compressed_pair<unsigned long, std::__1::less<gl::GLContext *> >::__compressed_pair<int, const std::__1::less<gl::GLContext *> &>' [ 0 5 10 78]
'gl::glXSwapIntervalMESAProc' [ 0 4]
'gl::GLApiBase::glGetQueryObjectui64vFn' [ 0 4 15]
'gl::NoContextGLApi::glGetTexLevelParameterfvFn' [ 0 4 20]
'std::__1::__compressed_pair_elem<std::__1::allocator<ContextCreationInfo> &, 1, false>::__get' [ 0 5 10 88]
'gl::glGetProgramivRobustANGLEProc' [ 0 4]
'gl::TraceGLApi::glIsQueryFn' [ 0 4 16]
'base::subtle::GetOrCreateLazyPointer<base::ThreadLocalPointer<gl::GLSurface> >' [ 0 6 14]
'std::__1::__pointer_type_imp::__pointer_type<gl::DisplayType, std::__1::allocator<gl::DisplayType>, true>' [ 0 5 10 30]
'gl::glUniform2ivProc' [ 0 4]
'std::__1::remove_reference<std::__1::tuple<const gfx::ColorSpace &> >' [ 0 5 10]
'std::__1::forward<float>' [ 0 5 10]
'scoped_refptr<gl::GLShareGroup>::swap' [ 0 33]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > > >::get' [ 0 5 10 416]
'std::__1::remove_reference<const char *&>' [ 0 5 10]
'gl::GLApiBase::glGetShaderivFn' [ 0 4 15]
'gl::DebugGLApi::glGetVertexAttribfvRobustANGLEFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >, 1, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetAttribLocationFn' [ 0 4 20]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> **>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<XVisualInfo *>::__nat, XVisualInfo>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>, bool>' [ 0 5 10]
'gl::glGetStringiProc' [ 0 4]
'std::__1::forward<int *&>' [ 0 5 10]
'gl::GLImageGLX::GetSize' [ 0 4 16]
'std::__1::__pointer_type<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > >' [ 0 5 10]
'gl::GLApiBase::glTexSubImage2DRobustANGLEFn' [ 0 4 15]
'angle::(anonymous namespace)::PlatformContext' [ 0 7 30]
'base::RefCounted<gl::GLShareGroup, base::DefaultRefCountedTraits<gl::GLShareGroup> >::Release' [ 0 6 86]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >::AddRef' [ 0 6 80]
'std::__1::__to_raw_pointer<const char *>' [ 0 5 10]
'base::RepeatingCallback<void (const std::__1::basic_string<char> &, const std::__1::basic_string<char> &)>::operator=' [ 0 6 108]
'std::__1::allocator_traits<std::__1::allocator<base::FileDescriptor> >::construct<base::FileDescriptor, base::FileDescriptor>' [ 0 5 10 72]
'std::__1::allocator<XVisualInfo>::deallocate' [ 0 5 10 34]
'std::__1::remove_reference<std::__1::allocator<gl::DisplayType> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::DriverGL>, 1, true>' [ 0 5 10]
'logging::MakeCheckOpValueString<unsigned int>' [ 0 9]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >, true>' [ 0 5 10 30]
'base::AtomicRefCount' [ 0 6]
'gl::RealGLApi::ClearCachedGLExtensions' [ 0 4 15]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::TimeTicks, base::TimeDelta> >' [ 0 5 10]
'gl::glGetBufferParameterivProc' [ 0 4]
'std::__1::conditional<true, std::__1::tuple<unsigned long &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::GLSurfacePresentationHelper>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::GLVersionInfo *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::end' [ 0 5 10 299]
'std::__1::default_delete<int []>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<void (SGIVideoSyncProviderThreadShim::*)()>::is_nullable, bool>' [ 0 5 10]
'gl::GLStubApiBase::glColorMaskFn' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<gl::GLFenceAndroidNativeFenceSync, true>' [ 0 5 10]
'gl::TraceGLXApi::glXGetCurrentDrawableFn' [ 0 4 17]
'std::__1::allocator<const char *>' [ 0 5 10]
'std::__1::remove_reference<scoped_refptr<gl::TimerQuery> &>' [ 0 5 10]
'gl::GLApiBase::glCoverFillPathInstancedNVFn' [ 0 4 15]
'std::__1::__pointer_type_imp::__pointer_type<base::FileDescriptor, std::__1::allocator<base::FileDescriptor>, true>' [ 0 5 10 30]
'gl::GLStubApi::glGetQueryObjectui64vFn' [ 0 4 15]
'std::__1::__const_pointer<base::trace_event::MemoryAllocatorDump::Entry, base::trace_event::MemoryAllocatorDump::Entry *, std::__1::allocator<base::trace_event::MemoryAllocatorDump::Entry>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *&, void>' [ 0 5 10 140]
'gl::GLApiBase::glGetQueryivRobustANGLEFn' [ 0 4 15]
'logging::MakeCheckOpValueString<gl::GpuPreference>' [ 0 9]
'gl::enum_to_string_table' [ 0 4]
'gl::eglReleaseTexImageProc' [ 0 4]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::capacity' [ 0 5 10 96]
'std::__1::__const_void_pointer<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *>, false>' [ 0 5 10]
'gl::GLStubApi::glGenerateMipmapEXTFn' [ 0 4 15]
'std::__1::unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []> >::unique_ptr<true, void>' [ 0 5 10 85]
'gl::DebugEGLApi::eglExportDMABUFImageMESAFn' [ 0 4 17]
'std::__1::unique_ptr<gl::GLStateRestorer, std::__1::default_delete<gl::GLStateRestorer> >::~unique_ptr' [ 0 5 10 91]
'logging::CheckEQImpl<const base::circular_deque<gl::GLSurfacePresentationHelper::Frame> *, const base::circular_deque<gl::GLSurfacePresentationHelper::Frame> *>' [ 0 9]
'gl::DisplayType' [ 0 4]
'gl::TraceGLApi::glUniform4fvFn' [ 0 4 16]
'gl::(anonymous namespace)::GLVersion' [ 0 4 27]
'std::__1::__sort3<(lambda at ../../ui/gl/gl_surface_egl.cc:1190:13) &, TimeNamePair *>' [ 0 5 10]
'gl::GLApiBase::glBlendEquationSeparateFn' [ 0 4 15]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__end_cap' [ 0 5 10 57]
'std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > >::__destruct_at_end' [ 0 5 10 115]
'gl::GLContext::forced_gpu_preference_' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<XVisualInfo>, 1, true>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >' [ 0 5 10]
'gl::GLSurfaceEGL::IsCreateContextBindGeneratesResourceSupported' [ 0 4 18]
'gl::GLApiBase::glGetRenderbufferParameterivRobustANGLEFn' [ 0 4 15]
'gl::TraceGLApi::glUniform3iFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, 1, true>' [ 0 5 10]
'gl::TraceGLXApi::glXDestroyGLXPixmapFn' [ 0 4 17]
'gl::GLApiBase::glBindImageTextureEXTFn' [ 0 4 15]
'gl::GetNullDrawBindingsEnabled' [ 0 4]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> &>::__compressed_pair<nullptr_t, std::__1::allocator<int> &>' [ 0 5 10 64]
'logging::CheckEQImpl<gl::GpuPreference, gl::GpuPreference>' [ 0 9]
'ldiv_t' [ 0]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >::begin' [ 0 5 10 200]
'std::__1::unique_ptr<std::__1::__tree_node<gl::GLContext *, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > >::unique_ptr<true, void>' [ 0 5 10 176]
'gl::GPUTimer::End' [ 0 4 14]
'gl::GLSurfaceOSMesaX11::PostSubBuffer' [ 0 4 24]
'base::Callback<int64_t ()>' [ 0 6]
'std::__1::end<std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> > >' [ 0 5 10]
'std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> >::capacity' [ 0 5 10 66]
'std::__1::max<long, std::__1::__less<long, long> >' [ 0 5 10]
'gl::TraceGLXApi::glXSelectEventFn' [ 0 4 17]
'std::__1::move<base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame> &>' [ 0 5 10]
'gl::(anonymous namespace)::g_egl_android_native_fence_sync_supported' [ 0 4 27]
'gl::TraceGLApi::glDepthMaskFn' [ 0 4 16]
'gl::NativeViewGLSurfaceGLX::GetVSyncProvider' [ 0 4 28]
'std::__1::__add_lvalue_reference_impl<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, true>' [ 0 5 10]
'gl::DebugGLApi::glDeleteFencesNVFn' [ 0 4 16]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'gl::DebugGLXApi::glXGetFBConfigsFn' [ 0 4 17]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::ExpandCapacityIfNecessary' [ 0 6 62]
'gl::eglDestroySyncKHRProc' [ 0 4]
'gl::GLSurfaceAdapter::SupportsDCLayers' [ 0 4 22]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > *, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >, false>' [ 0 5 10]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::~unique_ptr' [ 0 5 10 75]
'gl::(anonymous namespace)::LibraryArray' [ 0 4 27]
'angle::(anonymous namespace)::ANGLEPlatformImpl_histogramSparse' [ 0 7 30]
'gl::HasExtension<47>' [ 0 4]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>::operator->' [ 0 62]
'std::__1::forward<std::__1::tuple<> >' [ 0 5 10]
'gl::InitializeExtensionSettingsOneOffEGL' [ 0 4]
'std::__1::__compressed_pair_elem<float, 0, false>' [ 0 5 10]
'gl::HasDesktopGLFeatures' [ 0 4]
'std::__1::binary_function<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::MemoryAllocatorDumpGuid, bool>' [ 0 5 10]
'gl::DebugGLApi::glViewportFn' [ 0 4 16]
'base::WrapUnique<gl::GLFenceAndroidNativeFenceSync>' [ 0 6]
'gl::DebugGLApi::glBufferSubDataFn' [ 0 4 16]
'gl::glReadPixelsProc' [ 0 4]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::operator*' [ 0 6 16 79]
'gl::glGetQueryObjectuivRobustANGLEProc' [ 0 4]
'std::__1::__rebind_pointer<void *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::__destroy<XVisualInfo>' [ 0 5 10 63]
'angle::(anonymous namespace)::ANGLEPlatformImpl_getTraceCategoryEnabledFlag' [ 0 7 30]
'gl::DebugEGLApi::eglGetCompositorTimingSupportedANDROIDFn' [ 0 4 17]
'std::__1::__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 266]
'gl::GLContextStub::ReleaseCurrent' [ 0 4 19]
'logging::LogMessage::stream' [ 0 9 21]
'gl::(anonymous namespace)::g_visual' [ 0 4 27]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::__tree<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::__insert_unique' [ 0 5 10 107]
'gl::GLXApiBase::glXCreatePbufferFn' [ 0 4 16]
'gl::GLStubApiBase::glEGLImageTargetTexture2DOESFn' [ 0 4 19]
'gl::GLApiBase::glGetFenceivNVFn' [ 0 4 15]
'std::__1::copy_if<std::__1::__wrap_iter<const XVisualInfo *>, std::__1::back_insert_iterator<std::__1::vector<XVisualInfo, std::__1::allocator<XVisualInfo> > >, (lambda at ../../ui/gl/gl_visual_picker_glx.cc:139:16)>' [ 0 5 10]
'gl::DebugGLApi::glGetProgramivFn' [ 0 4 16]
'gl::GPUTimer::Destroy' [ 0 4 14]
'std::__1::__vector_base<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::clear' [ 0 5 10 104]
'base::ThreadLocalPointer<gl::GLContext>::Get' [ 0 6 41]
'std::__1::move<std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > > &>' [ 0 5 10]
'gl::glDrawBuffersARBProc' [ 0 4]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'gl::GLApiBase::glEnableVertexAttribArrayFn' [ 0 4 15]
'gl::DebugEGLApi::eglDestroyImageKHRFn' [ 0 4 17]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, gfx::PresentationFeedback>, void ()>::RunImpl<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, std::__1::tuple<gfx::PresentationFeedback>, 0>' [ 0 6 16 155]
'base::internal::CheckedNumeric<long>' [ 0 6 16]
'gl::GLApiBase::glDepthRangeFn' [ 0 4 15]
'gl::eglCreateWindowSurfaceProc' [ 0 4]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >' [ 0 5 10]
'gl::(anonymous namespace)::FourCC' [ 0 4 27]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::begin' [ 0 6 54]
'gl::GLXApiBase::glXGetFBConfigAttribFn' [ 0 4 16]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::release' [ 0 6 63]
'gl::GLVersionInfo::ParseVersionString::kESPrefix' [ 0 4 19 39]
'gl::DebugGLApi::glDepthRangeFn' [ 0 4 16]
'std::__1::unique_ptr<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >::unique_ptr<true, void>' [ 0 5 10 89]
'std::__1::allocator_traits<std::__1::allocator<unsigned char> >' [ 0 5 10]
'gl::NoContextGLApi::glFinishFenceAPPLEFn' [ 0 4 20]
'std::__1::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >::__compressed_pair<gl::GLFenceAndroidNativeFenceSync *, true>' [ 0 5 10 128]
'std::__1::__compressed_pair<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glTexSubImage3DRobustANGLEFn' [ 0 4 20]
'std::__1::__unwrap_iter<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'gl::NoContextGLApi::glDebugMessageInsertFn' [ 0 4 20]
'gl::GLApiBase::glGenPathsNVFn' [ 0 4 15]
'gl::OSMESAApiBase::InitializeBase' [ 0 4 19]
'gl::GLImageMemory::GetInternalFormatForTesting' [ 0 4 19]
'std::__1::vector<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >' [ 0 5 10]
'gl::GLSurfaceFormat' [ 0 4]
'gl::TraceOSMESAApi::OSMesaColorClampFn' [ 0 4 20]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const gfx::ColorSpace &>' [ 0 5 10]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__push_back_slow_path<const std::__1::basic_string<char> &>' [ 0 5 10 101]
'gl::GLApiBase::glGetQueryObjectivRobustANGLEFn' [ 0 4 15]
'gl::GLApiBase::glVertexAttribPointerFn' [ 0 4 15]
'std::__1::pointer_traits<unsigned char *>' [ 0 5 10]
'std::__1::unordered_map<unsigned long, gl::GLContext *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::VSyncProvider, true>' [ 0 5 10]
'std::__1::pair<void *const, std::__1::basic_string<char> >::pair<void *, std::__1::basic_string<char>, false>' [ 0 5 10 60]
'gl::DebugGLApi::glCompileShaderFn' [ 0 4 16]
'std::__1::remove_reference<const char *>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, void ()>::RunOnce' [ 0 6 16 365]
'std::__1::default_delete<gfx::ColorTransform>::operator()' [ 0 5 10 47]
'std::__1::allocator_traits<std::__1::allocator<XVisualInfo> >::__max_size' [ 0 5 10 63]
'gl::GLStubApiBase::glClearBufferfvFn' [ 0 4 19]
'std::__1::operator==<ContextCreationInfo *, ContextCreationInfo *>' [ 0 5 10]
'gl::DebugGLApi::glGetUniformivRobustANGLEFn' [ 0 4 16]
'gl::glGetBufferParameterivRobustANGLEProc' [ 0 4]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > >, true>' [ 0 5 10 30]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> *, std::__1::__tree_node<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, void *> >' [ 0 5 10]
'gl::NoContextGLApi::glRequestExtensionANGLEFn' [ 0 4 20]
'base::internal::CheckedNumeric<unsigned long>' [ 0 6 16]
'ui::CARendererLayerParams' [ 0 4]
'mbstate_t' [ 0]
'gl::glUniformMatrix3fvProc' [ 0 4]
'gl::DebugGLApi::glIsVertexArrayOESFn' [ 0 4 16]
'gl::ScopedColorMask::ScopedColorMask' [ 0 4 21]
'gl::GLXApiBase::glXChooseVisualFn' [ 0 4 16]
'std::__1::__add_lvalue_reference_impl<gl::DebugGLApi, true>' [ 0 5 10]
'gl::DebugGLXApi::glXBindTexImageEXTFn' [ 0 4 17]
'std::__1::remove_reference<const std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> > &>' [ 0 5 10]
'gl::GLImageSharedMemory::GLImageSharedMemory' [ 0 4 25]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::operator[]' [ 0 5 10 74]
'gl::TraceGLApi::glUniform1uiFn' [ 0 4 16]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 6 16]
'base::internal::WeakPtrFactoryBase' [ 0 6 16]
'std::__1::pointer_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 166]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::vector' [ 0 5 10 96]
'gfx::GpuFenceHandleType' [ 0 5]
'gl::GLFenceAndroidNativeFenceSync::CreateFromGpuFence' [ 0 4 35]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::__max_size' [ 0 5 10 64]
'base::internal::CheckedNumeric<unsigned long>::ValueOrDie<unsigned long, base::internal::CheckOnFailure>' [ 0 6 16 47]
'std::__1::__tree_is_left_child<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__wrap_iter<ContextCreationInfo *>::operator*' [ 0 5 10 46]
'std::__1::__invert<base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::value_compare &>::__invert' [ 0 5 10 240]
'std::__1::vector<const char *, std::__1::allocator<const char *> >::reserve' [ 0 5 10 68]
'gl::TraceGLXApi::glXQueryExtensionsStringFn' [ 0 4 17]
'std::__1::__compressed_pair<gfx::VSyncProvider *, std::__1::default_delete<gfx::VSyncProvider> >::__compressed_pair<gfx::VSyncProvider *, true>' [ 0 5 10 98]
'gl::NoContextGLApi::glGetBufferParameterivFn' [ 0 4 20]
'gl::GLApiBase::glGetTransformFeedbackVaryingFn' [ 0 4 15]
'gl::GLStubApiBase::glDrawElementsInstancedANGLEFn' [ 0 4 19]
'gl::TraceGLApi::glDeleteFramebuffersEXTFn' [ 0 4 16]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'gl::DriverEGL' [ 0 4]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>::Run' [ 0 6 16 219]
'gl::glDeleteFramebuffersEXTProc' [ 0 4]
'gl::GLStubApiBase::glGetErrorFn' [ 0 4 19]
'khronos_int64_t' [ 0]
'AnnotateRWLockReleased' [ 0]
'std::__1::__pointer_type<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL> >' [ 0 5 10]
'std::__1::__split_buffer<gl::DisplayType, std::__1::allocator<gl::DisplayType> &>::__end_cap' [ 0 5 10 83]
'base::circular_deque<base::TimeDelta>::MoveBuffer' [ 0 6 39]
'features::kDirectCompositionNonrootOverlays' [ 0 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'EGLStreamKHR' [ 0]
'std::__1::allocator<std::__1::pair<const unsigned long, gl::GLContext *> >' [ 0 5 10]
'gl::DebugGLXApi::DebugGLXApi' [ 0 4 17]
'gl::GLStubApiBase::glGetQueryObjectuivRobustANGLEFn' [ 0 4 19]
'std::__1::__unwrap_iter<base::BasicStringPiece<std::string> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<ContextCreationInfo> &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> >, true>' [ 0 5 10 30]
'gl::GPUTimingImpl::~GPUTimingImpl' [ 0 4 19]
'std::__1::__compressed_pair<void **, std::__1::allocator<void *> &>::second' [ 0 5 10 69]
'gl::NoContextGLApi::glStencilMaskFn' [ 0 4 20]
'base::internal::VectorBuffer<gl::GLSurfacePresentationHelper::Frame>::RangesOverlap' [ 0 6 16 70]
'std::__1::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 5 10]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::BasicStringPiece<std::string>, true>' [ 0 5 10]
'gl::glFinishFenceNVProc' [ 0 4]
'std::__1::forward<base::WeakPtr<gl::GLSurfacePresentationHelper> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<gl::GLSurfaceOverlay *, 0, false>' [ 0 5 10]
'gl::NoContextGLApi::glTexParameterfFn' [ 0 4 20]
'std::__1::__vector_base<int, std::__1::allocator<int> >::clear' [ 0 5 10 57]
'gl::GLApiBase::glCompressedTexImage2DFn' [ 0 4 15]
'gl::GLStubApiBase::glGetSamplerParameterivRobustANGLEFn' [ 0 4 19]
'gl::GLApiBase::glCompressedTexSubImage3DRobustANGLEFn' [ 0 4 15]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::~vector' [ 0 5 10 122]
'pthread_t' [ 0]
'gl::UnmappedNativeViewGLSurfaceGLX::~UnmappedNativeViewGLSurfaceGLX' [ 0 4 36]
'gl::GLStubApiBase::glGetAttribLocationFn' [ 0 4 19]
'std::__1::__tuple_types<>' [ 0 5 10]
'base::SharedMemory' [ 0 6]
'std::__1::remove_reference<long>' [ 0 5 10]
'std::__1::unique_ptr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::release' [ 0 5 10 157]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, false>' [ 0 5 10]
'gl::NoContextGLApi::glEGLImageTargetTexture2DOESFn' [ 0 4 20]
'gl::GLStubApiBase::glClearStencilFn' [ 0 4 19]
'gl::DebugGLApi::glVertexAttribPointerFn' [ 0 4 16]
'gl::NoContextGLApi::glSetFenceAPPLEFn' [ 0 4 20]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__split_buffer<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > &>::__destruct_at_end' [ 0 5 10 110]
'gl::GLApiBase::glVertexAttribI4uivFn' [ 0 4 15]
'gl::DebugGLApi::glBlendFuncFn' [ 0 4 16]
'gl::GLStubApi::~GLStubApi' [ 0 4 15]
'gl::DebugGLApi::glRenderbufferStorageMultisampleEXTFn' [ 0 4 16]
'gl::NoContextGLApi::glTexImage3DRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >' [ 0 5 10]
'std::__1::remove_reference<gl::GLContext *&>' [ 0 5 10]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::Destroy' [ 0 6 16 193]
'std::__1::__vector_base<gl::DisplayType, std::__1::allocator<gl::DisplayType> >' [ 0 5 10]
'std::__1::__wrap_iter<std::__1::basic_string<char> *>::__wrap_iter' [ 0 5 10 55]
'std::__1::unique_ptr<gl::DriverGL, std::__1::default_delete<gl::DriverGL> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::GpuSwitchingObserver *> &, 1, false>' [ 0 5 10]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::__alloc' [ 0 5 10 75]
'gl::GLFenceARB::GLFenceARB' [ 0 4 16]
'gl::GLApiBase::glVertexAttrib2fFn' [ 0 4 15]
'gl::TraceGLApi::TraceGLApi' [ 0 4 16]
'gl::GLContextOSMesa::~GLContextOSMesa' [ 0 4 21]
'gl::DebugGLApi::glSamplerParameterfFn' [ 0 4 16]
'gl::GLApiBase::glGetQueryObjectui64vRobustANGLEFn' [ 0 4 15]
'base::internal::FunctorTraits<void (gl::GLSurfacePresentationHelper::*)(), void>' [ 0 6 16]
'std::__1::reverse_iterator<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >::base' [ 0 5 10 91]
'std::__1::__add_lvalue_reference_impl<gl::CurrentGL, true>' [ 0 5 10]
'std::__1::vector<scoped_refptr<gl::GLImage>, std::__1::allocator<scoped_refptr<gl::GLImage> > >::allocate' [ 0 5 10 97]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::end' [ 0 5 10 160]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >' [ 0 6]
'gl::GLStubApiBase::glGetIntegervFn' [ 0 4 19]
'gl::AddGLNativeLibrary' [ 0 4]
'gl::GLStubApiBase::glSamplerParameterivFn' [ 0 4 19]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'gl::DebugEGLApi::eglQueryStreamu64KHRFn' [ 0 4 17]
'gl::GLStubApiBase::glIsProgramFn' [ 0 4 19]
'gl::TraceGLApi::glDepthRangeFn' [ 0 4 16]
'gl::GLStubApiBase::glReadBufferFn' [ 0 4 19]
'std::__1::__add_lvalue_reference_impl<gfx::GpuFence, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::__max_size' [ 0 5 10 64]
'std::__1::remove_reference<std::__1::__wrap_iter<const base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::TraceEGLApi::eglGetDisplayFn' [ 0 4 17]
'gl::GLContextGLX::Initialize' [ 0 4 18]
'gl::DebugGLApi::glFlushMappedBufferRangeFn' [ 0 4 16]
'gl::GLStubApiBase::glGetActiveUniformBlockivRobustANGLEFn' [ 0 4 19]
'std::__1::__compressed_pair<ui::GpuSwitchingObserver **, std::__1::allocator<ui::GpuSwitchingObserver *> &>::second' [ 0 5 10 109]
'sync_fence_info' [ 0]
'gl::eglBindAPIProc' [ 0 4]
'AnnotateFlushExpectedRaces' [ 0]
'gl::DebugGLApi::glGetProgramivRobustANGLEFn' [ 0 4 16]
'gl::GLFenceEGL::InitializeInternal' [ 0 4 16]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, long, true>' [ 0 5 10]
'gl::TraceGLApi::glClearBufferivFn' [ 0 4 16]
'gl::TraceGLApi::glGenPathsNVFn' [ 0 4 16]
'gl::NativeViewGLSurfaceEGL::GetHandle' [ 0 4 28]
'base::internal::FunctorTraits<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), void>::Invoke<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *>' [ 0 6 16 108]
'gl::DebugGLApi::glIsQueryFn' [ 0 4 16]
'std::__1::forward<std::__1::allocator<std::__1::basic_string<char> > &>' [ 0 5 10]
'std::__1::forward<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >' [ 0 5 10]
'gl::eglWaitGLProc' [ 0 4]
'std::__1::__compressed_pair_elem<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>, 0, false>' [ 0 5 10]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 6 16 195]
'gl::GLStubApiBase::glVertexAttrib4fFn' [ 0 4 19]
'std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>::__hash_node_base' [ 0 5 10 122]
'gl::TraceGLApi::glUniform1uivFn' [ 0 4 16]
'std::__1::remove_reference<TimeNamePair *&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::reset' [ 0 5 10 332]
'gl::DebugEGLApi::eglCreatePbufferFromClientBufferFn' [ 0 4 17]
'base::DeleteHelper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>::DoDelete' [ 0 6 79]
'gl::GLApiBase::glGetDebugMessageLogFn' [ 0 4 15]
'std::__1::float_denorm_style' [ 0 5 10]
'gl::TraceGLApi::glInvalidateSubFramebufferFn' [ 0 4 16]
'std::__1::vector<ui::DCRendererLayerParams::FilterEffect, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::max_size' [ 0 5 10 122]
'std::__1::__wrap_iter<const XVisualInfo *>::operator++' [ 0 5 10 44]
'gl::DebugGLApi::glTexBufferRangeFn' [ 0 4 16]
'base::BindUnwrapTraits<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >::Unwrap<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >' [ 0 6 91]
'std::__1::streampos' [ 0 5 10]
'std::__1::__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true> >::__compressed_pair<float, true>' [ 0 5 10 187]
'base::internal::circular_deque_iterator<gl::NativeViewGLSurfaceEGL::SwapInfo>::operator--' [ 0 6 16 79]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<gl::GLContext> >::New' [ 0 6 72]
'base::internal::DstRangeRelationToSrcRangeImpl<long, int, numeric_limits, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::INTEGER_REPRESENTATION_SIGNED, base::internal::NUMERIC_RANGE_CONTAINED>' [ 0 6 16]
'gl::RealGLApi::glReadPixelsFn' [ 0 4 15]
'gl::TraceEGLApi::eglQueryStreamu64KHRFn' [ 0 4 17]
'gl::NoContextGLApi::glCopyTexSubImage2DFn' [ 0 4 20]
'base::internal::IsValueInRangeForNumericType<unsigned long, unsigned long>' [ 0 6 16]
'std::__1::__const_pointer<unsigned int, unsigned int *, std::__1::allocator<unsigned int>, true>' [ 0 5 10]
'std::__1::vector<TimeNamePair, std::__1::allocator<TimeNamePair> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >, 1, true>' [ 0 5 10]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> > >' [ 0 6 16]
'logging::CheckLEImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::__compressed_pair<ui::DCRendererLayerParams::FilterEffect *, std::__1::allocator<ui::DCRendererLayerParams::FilterEffect> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 135]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::SetCapacityTo' [ 0 6 62]
'gl::GLStubApiBase::glGenTexturesFn' [ 0 4 19]
'gl::RealGLApi::Initialize' [ 0 4 15]
'std::__1::__pointer_type<gfx::VSyncProvider, std::__1::default_delete<gfx::VSyncProvider> >' [ 0 5 10]
'gl::GLApiBase::glGetIntegervRobustANGLEFn' [ 0 4 15]
'gl::GLContext::MakeVirtuallyCurrent' [ 0 4 15]
'std::__1::pointer_traits<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *>' [ 0 5 10]
'gl::DriverEGL::InitializeClientExtensionBindings' [ 0 4 15]
'base::internal::circular_deque_iterator<base::TimeDelta>::operator*' [ 0 6 16 58]
'gl::GLImageGLX::Initialize' [ 0 4 16]
'base::internal::circular_deque_iterator<gl::GLSurfacePresentationHelper::Frame>::circular_deque_iterator' [ 0 6 16 81]
'base::DefaultRefCountedTraits<gl::GLImage>::Destruct' [ 0 6 44]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__emplace_unique<std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 299]
'std::__1::move<gl::DisplayType *&>' [ 0 5 10]
'std::__1::remove_reference<base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &>' [ 0 5 10]
'gl::NoContextGLApi::glGenFramebuffersEXTFn' [ 0 4 20]
'gfx::Rect::size' [ 0 5 11]
'gl::EGLApiBase::eglInitializeFn' [ 0 4 16]
'gl::DebugGLApi::glClearStencilFn' [ 0 4 16]
'gl::GLApiBase::glClearBufferfvFn' [ 0 4 15]
'gl::EGLApiBase::eglCreateContextFn' [ 0 4 16]
'gl::TraceGLApi::glBindUniformLocationCHROMIUMFn' [ 0 4 16]
'gl::GLApiBase::glProgramParameteriFn' [ 0 4 15]
'base::internal::CheckedNumericState<int, base::internal::NUMERIC_INTEGER>::value' [ 0 6 16 75]
'gl::GLStubApiBase::glCompressedTexSubImage2DFn' [ 0 4 19]
'gl::GLFenceNV::ServerWait' [ 0 4 15]
'base::internal::CheckedNumeric<long>::Wrapper<int>::value' [ 0 6 16 38 52]
'gl::TraceEGLApi::eglBindTexImageFn' [ 0 4 17]
'logging::MakeCheckOpValueString<gl::GLStateRestorer *>' [ 0 9]
'std::__1::__size_type<std::__1::allocator<TimeNamePair>, long, true>' [ 0 5 10]
'GLboolean' [ 0]
'std::__1::vector<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >::__annotate_new' [ 0 5 10 84]
'std::__1::forward<base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >' [ 0 5 10]
'gl::NoContextGLApi::glSamplerParameterIuivRobustANGLEFn' [ 0 4 20]
'gl::GLStubApiBase::glFinishFn' [ 0 4 19]
'std::__1::unique_ptr<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >' [ 0 5 10]
'gl::GLSurfaceOSMesaX11::~GLSurfaceOSMesaX11' [ 0 4 24]
'gl::TraceGLApi::glGetVertexAttribIuivRobustANGLEFn' [ 0 4 16]
'base::internal::CheckedAddFastOp<unsigned long, unsigned long>::Do<unsigned long>' [ 0 6 16 64]
'std::__1::__compressed_pair<int *, std::__1::allocator<int> >' [ 0 5 10]
'std::__1::addressof<std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > >' [ 0 5 10]
'gl::GLStubApiBase::glDrawBufferFn' [ 0 4 19]
'gl::eglGetCurrentDisplayProc' [ 0 4]
'gl::GLStubApi::glGenFencesAPPLEFn' [ 0 4 15]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >::__annotate_delete' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider> >' [ 0 5 10]
'gl::DebugGLXApi::glXQueryExtensionsStringFn' [ 0 4 17]
'base::LazyInstanceTraitsBase<angle::(anonymous namespace)::PlatformContext>' [ 0 6]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::unique_ptr<true, void>' [ 0 5 10 79]
'gl::glXCreateContextAttribsARBProc' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > >::deallocate' [ 0 5 10 143]
'gl::NoContextGLApi::glCoverageModulationNVFn' [ 0 4 20]
'std::__1::binary_function<unsigned long, unsigned long, bool>' [ 0 5 10]
'std::__1::swap<void **>' [ 0 5 10]
'std::__1::__vector_base<gl::GLSurfaceOverlay, std::__1::allocator<gl::GLSurfaceOverlay> >::~__vector_base' [ 0 5 10 91]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>::__destruct_at_end' [ 0 5 10 77]
'std::__1::__hash_table<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, gl::GLContext *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> > >' [ 0 5 10]
'gl::GLApiBase::glBindAttribLocationFn' [ 0 4 15]
'logging::CheckOpResult::message' [ 0 9 24]
'gl::GLSurfaceEGL' [ 0 4]
'gl::RealGLApi::glGetStringiFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<gl::GLSurfaceOverlay> >' [ 0 5 10]
'gl::eglImageFlushExternalEXTProc' [ 0 4]
'base::RefCounted<gl::GLContext, base::DefaultRefCountedTraits<gl::GLContext> >::~RefCounted' [ 0 6 80]
'gl::glGetnUniformivRobustANGLEProc' [ 0 4]
'gl::DebugGLApi::glIsTextureFn' [ 0 4 16]
'std::__1::enable_if<true, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::min<int>' [ 0 5 10]
'gl::DebugEGLApi::eglCreatePbufferSurfaceFn' [ 0 4 17]
'std::__1::unique_ptr<gl::GLFence, std::__1::default_delete<gl::GLFence> >::operator=<gl::GLFenceEGL, std::__1::default_delete<gl::GLFenceEGL>, void, void>' [ 0 5 10 75]
'std::__1::pointer_traits<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *>' [ 0 5 10]
'gl::GLSurfaceStub' [ 0 4]
'gl::NoContextGLApi::glTestFenceNVFn' [ 0 4 20]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 6 16]
'base::subtle::GetOrCreateLazyPointer<base::Lock>' [ 0 6 14]
'std::__1::forward<std::__1::__tree_node<gl::GLContext *, void *> *&>' [ 0 5 10]
'gl::GLApiBase::glDrawArraysInstancedANGLEFn' [ 0 4 15]
'std::__1::__vector_base<int, std::__1::allocator<int> >::__alloc' [ 0 5 10 57]
'std::__1::vector<void *, std::__1::allocator<void *> >::__recommend' [ 0 5 10 56]
'std::__1::__wrap_iter<const std::__1::basic_string<char> *>::__wrap_iter' [ 0 5 10 61]
'std::__1::allocator_traits<std::__1::allocator<void *> >::__construct<void *, void *const &>' [ 0 5 10 58]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::data' [ 0 5 10 70]
'gl::glBindFragDataLocationIndexedProc' [ 0 4]
'std::__1::__const_void_pointer<std::__1::__hash_value_type<unsigned long, gl::GLContext *> *, std::__1::allocator<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >, false>' [ 0 5 10]
'gl::GLSurfaceAdapter::FlipsVertically' [ 0 4 22]
'gl::GLStubApiBase::glGetShaderInfoLogFn' [ 0 4 19]
'std::__1::remove_reference<angle::(anonymous namespace)::PlatformContext *>' [ 0 5 10]
'gl::TraceGLApi::glSamplerParameteriFn' [ 0 4 16]
'gl::NoContextGLApi::glViewportFn' [ 0 4 20]
'gl::GLContext::ScopedReleaseCurrent::~ScopedReleaseCurrent' [ 0 4 15 37]
'std::__1::__compressed_pair<ui::ScopedMakeCurrent *, std::__1::default_delete<ui::ScopedMakeCurrent> >::__compressed_pair<ui::ScopedMakeCurrent *, true>' [ 0 5 10 104]
'base::internal::ApplyCancellationTraits<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> > >' [ 0 6 16]
'gl::glDeleteSamplersProc' [ 0 4]
'gl::eglGetSyncValuesCHROMIUMProc' [ 0 4]
'gl::DebugGLApi::glFenceSyncFn' [ 0 4 16]
'gl::NoContextGLApi::glBindBufferFn' [ 0 4 20]
'gl::glGetProgramResourceLocationProc' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'gl::NoContextGLApi::glGenTexturesFn' [ 0 4 20]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::end' [ 0 6 62]
'RunningOnValgrind' [ 0]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'std::__1::move<std::__1::tuple<gfx::PresentationFeedback> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::SharedMemory *, 0, false>::__compressed_pair_elem<base::SharedMemory *&, void>' [ 0 5 10 66]
'std::__1::pointer_traits<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> *>' [ 0 5 10]
'gl::NoContextGLApi::glGetIntegervRobustANGLEFn' [ 0 4 20]
'gl::glMemoryBarrierEXTProc' [ 0 4]
'gl::DriverEGL::ClearBindings' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<long> >::__destroy<long>' [ 0 5 10 56]
'gl::(anonymous namespace)::CleanupNativeLibraries' [ 0 4 27]
'std::__1::__pointer_type<XVisualInfo, std::__1::allocator<XVisualInfo> >' [ 0 5 10]
'gl::EGLApiBase::eglGetFrameTimestampsANDROIDFn' [ 0 4 16]
'std::__1::remove_reference<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim *>' [ 0 5 10]
'std::__1::__const_pointer<long, long *, std::__1::allocator<long>, true>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> >, std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetnUniformuivRobustANGLEFn' [ 0 4 20]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::Release' [ 0 6 70]
'base::circular_deque<base::TimeDelta>::SetCapacityTo' [ 0 6 39]
'std::__1::remove_reference<base::FileDescriptor>' [ 0 5 10]
'gl::GLApiBase::glUniform4iFn' [ 0 4 15]
'std::__1::remove_reference<gl::DisplayType *&>' [ 0 5 10]
'gl::GLVersionInfo::IsES3Capable' [ 0 4 19]
'gl::GLSurfaceAdapter::SwapBuffersAsync' [ 0 4 22]
'gl::ScopedColorMask' [ 0 4]
'std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> >' [ 0 5 10]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::AddObserver' [ 0 6 59]
'std::__1::forward<const base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> &>' [ 0 5 10]
'std::__1::unique_ptr<base::SharedMemory, std::__1::default_delete<base::SharedMemory> >::~unique_ptr' [ 0 5 10 89]
'std::__1::pointer_traits<std::__1::pair<void *const, std::__1::basic_string<char> > *>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<gfx::FixedVSyncProvider, true>' [ 0 5 10]
'std::__1::remove_reference<const gfx::PresentationFeedback &>' [ 0 5 10]
'VisualID' [ 0]
'std::__1::chrono' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> > >::get_deleter' [ 0 5 10 332]
'std::__1::remove_reference<bool>' [ 0 5 10]
'gl::TraceGLApi::glDebugMessageCallbackFn' [ 0 4 16]
'gl::TraceGLXApi::glXMakeContextCurrentFn' [ 0 4 17]
'gl::glTexParameterfvRobustANGLEProc' [ 0 4]
'gl::TraceGLApi::glGetSyncivFn' [ 0 4 16]
'std::__1::__to_raw_pointer<unsigned char>' [ 0 5 10]
'std::__1::__split_buffer<const char *, std::__1::allocator<const char *> &>::clear' [ 0 5 10 77]
'gl::glGetDebugMessageLogProc' [ 0 4]
'gl::DebugGLApi::glTexParameterivRobustANGLEFn' [ 0 4 16]
'base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)>::operator=' [ 0 6 66]
'base::TimeDelta::FromProduct' [ 0 6 17]
'gl::GLImageStub::GetSize' [ 0 4 17]
'kRelativeIntervalDifferenceThreshold' [ 0]
'gl::EGLApiBase::eglChooseConfigFn' [ 0 4 16]
'std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>::reverse_iterator' [ 0 5 10 67]
'gl::TraceGLApi::glGenBuffersARBFn' [ 0 4 16]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::SGIVideoSyncProviderThreadShim' [ 0 4 27 59]
'base::internal::PassingTraits<const std::__1::basic_string<char> &, false>' [ 0 6 16]
'std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__construct_at_end' [ 0 5 10 70]
'base::CharTraits<char>' [ 0 6]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned long &&>::__tuple_impl<0, unsigned long &&, unsigned long>' [ 0 5 10 72]
'base::internal::operator==' [ 0 6 16]
'scoped_refptr<base::RefCountedMemory>' [ 0]
'std::__1::__unique_if<gfx::FixedVSyncProvider>' [ 0 5 10]
'base::SupportsWeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider>' [ 0 6]
'base::internal::circular_deque_const_iterator<scoped_refptr<gl::TimerQuery> >::Increment' [ 0 6 16 79]
'gl::GLStubApiBase::glStencilThenCoverStrokePathInstancedNVFn' [ 0 4 19]
'std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >' [ 0 5 10]
'std::__1::map<void *, std::__1::basic_string<char>, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::basic_string<char> > > >::insert<std::__1::pair<void *, std::__1::basic_string<char> >, void>' [ 0 5 10 160]
'base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >::~BindState' [ 0 6 16 193]
'gl::GLApiBase::glGetVertexAttribIuivRobustANGLEFn' [ 0 4 15]
'gl::TraceEGLApi::eglCreateWindowSurfaceFn' [ 0 4 17]
'gl::GLSurface::SetBackbufferAllocation' [ 0 4 15]
'gl::SetGLImplementation' [ 0 4]
'gl::g_debug_egl' [ 0 4]
'gl::DebugGLApi::glVertexAttrib2fvFn' [ 0 4 16]
'gl::DebugGLApi::glStencilMaskSeparateFn' [ 0 4 16]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> > > >' [ 0 5 10]
'gl::DebugGLXApi::glXGetCurrentReadDrawableFn' [ 0 4 17]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> > > &>' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> *, long>, bool &, false>' [ 0 5 10 362]
'gl::RealGLXApi' [ 0 4]
'gl::TraceGLApi::glUniformMatrix4x2fvFn' [ 0 4 16]
'gl::GLApiBase::~GLApiBase' [ 0 4 15]
'std::__1::move<gl::GLShareGroup *&>' [ 0 5 10]
'gl::GLApiBase::glGetTexLevelParameterivFn' [ 0 4 15]
'gl::GLApiBase::glTexImage3DFn' [ 0 4 15]
'gl::NativeViewGLSurfaceEGLX11::GetConfig' [ 0 4 31]
'gl::TraceGLApi::glGetVertexAttribfvRobustANGLEFn' [ 0 4 16]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::CARendererLayerParams::FilterEffect>, 1, true>' [ 0 5 10]
'gl::GLContextStub::SetGLVersionString' [ 0 4 19]
'gl::glUniformMatrix3x4fvProc' [ 0 4]
'khronos_stime_nanoseconds_t' [ 0]
'logging::MakeCheckOpValueString<const base::circular_deque<gl::GLSurfacePresentationHelper::Frame> *>' [ 0 9]
'gl::GLApiBase::glHintFn' [ 0 4 15]
'sw_sync_timeline_inc' [ 0]
'gl::glReadBufferProc' [ 0 4]
'GC' [ 0]
'gl::TraceEGLApi::SetDisabledExtensions' [ 0 4 17]
'gl::GLImage' [ 0 4]
'gl' [ 0]
'base::ThreadLocalPointer<gl::CurrentGL>::Set' [ 0 6 41]
'scoped_refptr<gl::GLSurface>::get' [ 0 30]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>::capacity' [ 0 5 10 75]
'gl::DebugGLApi::glDrawBuffersARBFn' [ 0 4 16]
'__syscall_slong_t' [ 0]
'std::__1::remove_reference<const gfx::NativePixmapPlane &>' [ 0 5 10]
'gl::RealGLApi::set_version' [ 0 4 15]
'std::__1::remove_volatile<TimeNamePair>' [ 0 5 10]
'gl::NoContextGLApi::glTexImage3DFn' [ 0 4 20]
'std::__1::reverse_iterator<base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::DebugEGLApi::eglGetCurrentDisplayFn' [ 0 4 17]
'gl::TraceGLApi::glPolygonModeFn' [ 0 4 16]
'gl::kGLImplementationDesktopName' [ 0 4]
'gl::GLStubApiBase::glCopyTexSubImage2DFn' [ 0 4 19]
'gl::GLStubApiBase::glGetProgramInterfaceivFn' [ 0 4 19]
'gl::GLSurfaceFormat::GetBufferSize' [ 0 4 21]
'gl::GLApiBase::glUniform4ivFn' [ 0 4 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::FileDescriptor> &, 1, false>::__get' [ 0 5 10 89]
'std::__1::__vector_base<int, std::__1::allocator<int> >::~__vector_base' [ 0 5 10 57]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >' [ 0 5 10]
'gl::GLStubApiBase::glUniform2uiFn' [ 0 4 19]
'gl::GLImageSharedMemory::Initialize' [ 0 4 25]
'gl::glGetTexLevelParameterivProc' [ 0 4]
'gl::GLApiBase::glUniform3fFn' [ 0 4 15]
'std::__1::__split_buffer<XVisualInfo, std::__1::allocator<XVisualInfo> &>' [ 0 5 10]
'gl::eglGetDisplayProc' [ 0 4]
'gl::DebugGLApi::glUniform4ivFn' [ 0 4 16]
'gl::UnmappedNativeViewGLSurfaceGLX::GetCompatibilityKey' [ 0 4 36]
'gl::GLStubApiBase::glUniform1iFn' [ 0 4 19]
'std::__1::min<int, std::__1::__less<int, int> >' [ 0 5 10]
'std::__1::vector<int, std::__1::allocator<int> >::allocate' [ 0 5 10 50]
'gl::glVertexAttrib3fProc' [ 0 4]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<gl::GLContext *, void *> >, long, true>' [ 0 5 10]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>::base' [ 0 5 10 58]
'gl::NoContextGLApi::glReadPixelsFn' [ 0 4 20]
'gl::GLApiBase::glRenderbufferStorageMultisampleFn' [ 0 4 15]
'gl::NoContextGLApi::glDeleteFencesAPPLEFn' [ 0 4 20]
'std::__1::__vector_base<void *, std::__1::allocator<void *> >::capacity' [ 0 5 10 63]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::size' [ 0 5 10 74]
'std::__1::vector<gl::DisplayType, std::__1::allocator<gl::DisplayType> >::__recommend' [ 0 5 10 74]
'std::__1::__tree<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true>, std::__1::allocator<std::__1::__value_type<void *, std::__1::basic_string<char> > > >::__find_equal<void *>' [ 0 5 10 299]
'gl::DebugGLApi::glUniform3fvFn' [ 0 4 16]
'gl::GLStubApiBase::glTexSubImage3DFn' [ 0 4 19]
'gl::GLContext::TotalGLContexts' [ 0 4 15]
'std::__1::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *, std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >::__compressed_pair<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider *&, true>' [ 0 5 10 166]
'uint_least8_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<gl::DebugGLApi, std::__1::default_delete<gl::DebugGLApi>, false>' [ 0 5 10 30]
'gfx::NativePixmapPlane' [ 0 5]
'gl::DriverEGL::UpdateConditionalExtensionBindings' [ 0 4 15]
'gl::GLImageGLX::BindTexImage' [ 0 4 16]
'gl::TraceGLApi::glGetInteger64vRobustANGLEFn' [ 0 4 16]
'std::__1::add_lvalue_reference<gl::(anonymous namespace)::OMLSyncControlVSyncProvider>' [ 0 5 10]
'gl::glGetUniformBlockIndexProc' [ 0 4]
'gl::UnmappedNativeViewGLSurfaceGLX::GetSize' [ 0 4 36]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'base::LazyInstanceTraitsBase<gl::(anonymous namespace)::TraceSwapEventsInitializer>::New' [ 0 6 85]
'base::internal::PassingTraits<const gfx::PresentationFeedback &, false>' [ 0 6 16]
'std::__1::__hash_key_value_types<std::__1::__hash_value_type<unsigned long, gl::GLContext *> >::__get_ptr' [ 0 5 10 96]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, void *> > >' [ 0 5 10]
'gl::DebugGLApi::glBindSamplerFn' [ 0 4 16]
'std::__1::__vector_base<const char *, std::__1::allocator<const char *> >::__alloc' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<gl::GLApi *, 0, false>' [ 0 5 10]
'gl::glUniform3fvProc' [ 0 4]
'gl::DebugGLApi::glUniform1fFn' [ 0 4 16]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>' [ 0 6]
'std::__1::pointer_traits<TimeNamePair *>' [ 0 5 10]
'gl::DebugGLApi::glDrawRangeElementsFn' [ 0 4 16]
'gl::glDetachShaderProc' [ 0 4]
'gl::NoContextGLApi::glGetInteger64i_vFn' [ 0 4 20]
'base::RepeatingCallback<void (const gfx::PresentationFeedback &)>::Run' [ 0 6 67]
'std::__1::allocator<scoped_refptr<gl::GLImage> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::FileDescriptor *, 0, false>' [ 0 5 10]
'gl::DebugEGLApi::eglImageFlushExternalEXTFn' [ 0 4 17]
'gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::cancel_vsync_flag' [ 0 4 27 59]
'scoped_refptr<gl::(anonymous namespace)::SGIVideoSyncThread>' [ 0]
'gl::GLImageGLX::CopyTexImage' [ 0 4 16]
'std::__1::__vector_base<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::__destruct_at_end' [ 0 5 10 103]
'gl::GLStubApiBase::glUniformMatrix3fvFn' [ 0 4 19]
'std::__1::__size_type<std::__1::allocator<gl::GLContext *>, long, true>' [ 0 5 10]
'gl::NoContextGLApi::glGetFenceivNVFn' [ 0 4 20]
'gl::DebugGLApi::glGetUniformivFn' [ 0 4 16]
'gl::GLContextReal::SetExtensionsFromString' [ 0 4 19]
'gl::EGLApiBase::eglDestroyImageKHRFn' [ 0 4 16]
'gl::glGetnUniformuivRobustANGLEProc' [ 0 4]
'gl::GLStubApi::glIsProgramFn' [ 0 4 15]
'std::__1::forward<scoped_refptr<gl::GLImage> &>' [ 0 5 10]
'gl::NoContextGLApi::glGetTexLevelParameterivFn' [ 0 4 20]
'base::WeakPtr<base::ObserverList<ui::GpuSwitchingObserver, false, true> >' [ 0 6]
'gl::GLApiBase::glGetUniformBlockIndexFn' [ 0 4 15]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >' [ 0 5 10]
'gl::TraceGLApi::glGetInternalformativFn' [ 0 4 16]
'gl::DebugGLApi::glDeleteQueriesFn' [ 0 4 16]
'gl::NoContextGLApi::glDepthMaskFn' [ 0 4 20]
'std::__1::__vector_base<ui::CARendererLayerParams::FilterEffect, std::__1::allocator<ui::CARendererLayerParams::FilterEffect> >::~__vector_base' [ 0 5 10 129]
'gl::SetCurrentGL' [ 0 4]
'gl::GLSurfaceOSMesaX11::GLSurfaceOSMesaX11' [ 0 4 24]
'base::Optional<unsigned long>' [ 0 6]
'std::__1::__compressed_pair<gl::GLFenceEGL *, std::__1::default_delete<gl::GLFenceEGL> >::__compressed_pair<gl::GLFenceEGL *&, true>' [ 0 5 10 90]
'std::__1::__compressed_pair<gl::TraceGLApi *, std::__1::default_delete<gl::TraceGLApi> >::__compressed_pair<gl::TraceGLApi *, true>' [ 0 5 10 90]
'base::internal::flat_tree<base::BasicStringPiece<std::string>, base::BasicStringPiece<std::string>, base::internal::GetKeyFromValueIdentity<base::BasicStringPiece<std::string> >, std::__1::less<void> >::Impl::Impl<const std::__1::less<void> &, std::__1::vector<base::BasicStringPiece<std::string>, std::__1::allocator<base::BasicStringPiece<std::string> > > >' [ 0 6 16 203 209]
'gl::DebugGLApi::glRequestExtensionANGLEFn' [ 0 4 16]
'gl::NoContextGLApi::glGetStringiFn' [ 0 4 20]
'std::__1::__wrap_iter<TimeNamePair *>' [ 0 5 10]
'base::trace_event::ProcessMemoryDump' [ 0 6 19]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'gl::DebugEGLApi::eglQuerySurfaceFn' [ 0 4 17]
'gl::TraceGLApi::glDetachShaderFn' [ 0 4 16]
'std::__1::default_delete<unsigned char []>::operator()<unsigned char>' [ 0 5 10 44]
'std::__1::allocator_traits<std::__1::allocator<gfx::NativePixmapPlane> >::construct<gfx::NativePixmapPlane, const gfx::NativePixmapPlane &>' [ 0 5 10 74]
'gl::TraceGLApi::glTexImage3DFn' [ 0 4 16]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'base::internal::PassingTraitsType<const std::__1::basic_string<char> &>' [ 0 6 16]
'gl::TraceGLApi::glClearStencilFn' [ 0 4 16]
'gl::GetInternalFormat' [ 0 4]
'gl::glGetTexParameterIuivRobustANGLEProc' [ 0 4]
'base::RefCounted<gl::GLImage, base::DefaultRefCountedTraits<gl::GLImage> >::DeleteInternal<gl::GLImage>' [ 0 6 76]
'gl::TraceEGLApi::eglCreateStreamProducerD3DTextureANGLEFn' [ 0 4 17]
'std::__1::allocator_traits<std::__1::allocator<const char *> >::destroy<const char *>' [ 0 5 10 64]
'std::__1::__rebind_pointer<void *, const std::__1::__hash_value_type<unsigned long, gl::GLContext *> >' [ 0 5 10]
'base::RefCounted<gl::(anonymous namespace)::SGIVideoSyncThread, base::DefaultRefCountedTraits<gl::(anonymous namespace)::SGIVideoSyncThread> >::~RefCounted' [ 0 6 144]
'gl::GPUTimingClient::IsForceTimeElapsedQuery' [ 0 4 21]
'gl::GLApiBase::glGetActiveUniformBlockivRobustANGLEFn' [ 0 4 15]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'std::__1::unique_ptr<gl::CurrentGL, std::__1::default_delete<gl::CurrentGL> >::operator->' [ 0 5 10 79]
'gl::(anonymous namespace)::EGLSyncControlVSyncProvider::IsHWClock' [ 0 4 27 56]
'std::__1::remove_reference<void *&>' [ 0 5 10]
'gl::TraceGLApi::glStencilFillPathNVFn' [ 0 4 16]
'std::__1::__pointer_type_imp::__pointer_type<base::BasicStringPiece<std::string>, std::__1::__destruct_n, false>' [ 0 5 10 30]
'std::__1::basic_iostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::CurrentGL>, 1, true>' [ 0 5 10]
'gl::GLSurfaceEGL::IsDirectCompositionSupported' [ 0 4 18]
'std::__1::__pointer_type<base::FileDescriptor, std::__1::allocator<base::FileDescriptor> >' [ 0 5 10]
'gl::NoContextGLApi::glUniform3fFn' [ 0 4 20]
'std::__1::__split_buffer<int, std::__1::allocator<int> &>::~__split_buffer' [ 0 5 10 59]
'std::__1::next<std::__1::__wrap_iter<base::BasicStringPiece<std::string> *> >' [ 0 5 10]
'gl::GLSurfaceAdapter::SetEnableDCLayers' [ 0 4 22]
'__uint32_t' [ 0]
'gl::NoContextGLApi::glClientWaitSyncFn' [ 0 4 20]
'std::__1::default_delete<gl::DriverGL>' [ 0 5 10]
'base::BindOnce<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)(), base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim> >' [ 0 6]
'gl::DebugGLApi::glUniform1uivFn' [ 0 4 16]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'std::__1::swap<TimeNamePair>' [ 0 5 10]
'gl::GLApiBase::glPointParameteriFn' [ 0 4 15]
'gl::TraceGLApi::glUniform4ivFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<unsigned char *, 0, false>' [ 0 5 10]
'base::SequenceToken' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<TimeNamePair> >::allocate' [ 0 5 10 64]
'gl::TraceEGLApi::eglCreateImageKHRFn' [ 0 4 17]
'gl::GLSurfaceAdapter::GetShareHandle' [ 0 4 22]
'gl::DebugGLApi::glInvalidateSubFramebufferFn' [ 0 4 16]
'uint_least16_t' [ 0]
'gl::GLStubApiBase::glBindBufferBaseFn' [ 0 4 19]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'std::__1::unique_ptr<gl::(anonymous namespace)::OMLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::OMLSyncControlVSyncProvider> >::reset' [ 0 5 10 161]
'gl::glGetQueryivRobustANGLEProc' [ 0 4]
'gl::GLFenceEGL::ServerWait' [ 0 4 16]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'gl::TraceGLApi::glCoverStrokePathNVFn' [ 0 4 16]
'base::circular_deque<scoped_refptr<gl::TimerQuery> >::MoveBuffer' [ 0 6 54]
'gl::TraceGLApi::glUniform3fvFn' [ 0 4 16]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const gfx::PresentationFeedback &)>, void>' [ 0 6 16]
'gl::NoContextGLApi::glGetShaderPrecisionFormatFn' [ 0 4 20]
'gl::NoContextGLApi::glGenVertexArraysOESFn' [ 0 4 20]
'base::internal::CheckedDivOp<long, long, void>::Do<long>' [ 0 6 16 48]
'std::__1::string' [ 0 5 10]
'std::__1::make_unsigned<unsigned long>' [ 0 5 10]
'gl::HasExtension<37>' [ 0 4]
'gl::TraceEGLApi::eglDestroyImageKHRFn' [ 0 4 17]
'GLint' [ 0]
'gl::DebugGLApi::glTexImage3DRobustANGLEFn' [ 0 4 16]
'gl::TraceEGLApi::eglProgramCacheQueryANGLEFn' [ 0 4 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<std::__1::default_delete<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<unsigned long &&>' [ 0 5 10]
'gl::NoContextGLApi::glClearBufferfvFn' [ 0 4 20]
'std::__1::pair<const gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >::~pair' [ 0 5 10 135]
'gl::DebugEGLApi::eglGetErrorFn' [ 0 4 17]
'std::__1::forward<gl::GLStateRestorer *&>' [ 0 5 10]
'gl::UnmappedNativeViewGLSurfaceGLX::IsOffscreen' [ 0 4 36]
'std::__1::forward<void (gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim::*)()>' [ 0 5 10]
'base::internal::DstRangeRelationToSrcRange<long, std::numeric_limits, int>' [ 0 6 16]
'base::LazyInstanceTraitsBase<base::Lock>' [ 0 6]
'gl::NativeViewGLSurfaceGLX::NativeViewGLSurfaceGLX' [ 0 4 28]
'std::__1::index_sequence<0UL>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider>, false>' [ 0 5 10 30]
'std::__1::pointer_traits<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > *>::pointer_to' [ 0 5 10 165]
'std::__1::vector<long, std::__1::allocator<long> >' [ 0 5 10]
'base::subtle::RefCountedBase::AddRef' [ 0 6 14 30]
'std::__1::__tree<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true>, std::__1::allocator<std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > > > >::__node_alloc' [ 0 5 10 539]
'std::__1::forward<gl::(anonymous namespace)::EGLSyncControlVSyncProvider *&>' [ 0 5 10]
'std::__1::__const_void_pointer<ContextCreationInfo *, std::__1::allocator<ContextCreationInfo>, false>' [ 0 5 10]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *, long> >::__map_iterator' [ 0 5 10 219]
'gl::PbufferGLSurfaceEGL::IsOffscreen' [ 0 4 25]
'gl::NoContextGLApi::glGetFramebufferAttachmentParameterivEXTFn' [ 0 4 20]
'gl::GLStubApiBase::glReadPixelsFn' [ 0 4 19]
'std::__1::forward<std::__1::allocator<int> &>' [ 0 5 10]
'trace_event_internal::AddTraceEventWithThreadIdAndTimestamp<int, int>' [ 0 22]
'base::Thread::CleanUp' [ 0 6 14]
'gl::GLStubApiBase::glScissorFn' [ 0 4 19]
'AnnotateFlushState' [ 0]
'gl::NoContextGLApi::glUniform1ivFn' [ 0 4 20]
'std::__1::vector<void *, std::__1::allocator<void *> >::__annotate_delete' [ 0 5 10 56]
'gl::UnmappedNativeViewGLSurfaceGLX::Destroy' [ 0 4 36]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > > >' [ 0 5 10]
'std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, gl::GLContext *>, void *> *> *> >::operator()' [ 0 5 10 183]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> *&>' [ 0 5 10]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>' [ 0 5 10]
'gl::TraceGLXApi::glXSwapIntervalEXTFn' [ 0 4 17]
'gl::NoContextGLApi::glPathParameteriNVFn' [ 0 4 20]
'std::__1::operator!=<base::BasicStringPiece<std::string> *, base::BasicStringPiece<std::string> *>' [ 0 5 10]
'std::__1::forward<const std::__1::__map_value_compare<void *, std::__1::__value_type<void *, std::__1::basic_string<char> >, std::__1::less<void *>, true> &>' [ 0 5 10]
'gl::GLApiBase::glGetBufferParameteri64vRobustANGLEFn' [ 0 4 15]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'gl::GLImageStub::CopyTexSubImage' [ 0 4 17]
'std::__1::__add_lvalue_reference_impl<unsigned char, true>' [ 0 5 10]
'gl::eglWaitSyncKHRProc' [ 0 4]
'std::__1::__add_lvalue_reference_impl<gl::GLFence, true>' [ 0 5 10]
'std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > >' [ 0 5 10]
'gl::GLSurfaceFormat::GetPixelLayout' [ 0 4 21]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void (base::TimeTicks, base::TimeDelta)>::Run::num_bound_args' [ 0 6 16 219 224]
'scoped_refptr<gl::TimerQuery>::operator->' [ 0 31]
'std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream' [ 0 5 10 93]
'gl::GLEnums::GetStringError' [ 0 4 13]
'gl::NoContextGLApi::glIsSyncFn' [ 0 4 20]
'base::internal::Invoker<base::internal::BindState<void (gl::GLSurfacePresentationHelper::*)(), base::WeakPtr<gl::GLSurfacePresentationHelper> >, void ()>::RunImpl<void (gl::GLSurfacePresentationHelper::*)(), std::__1::tuple<base::WeakPtr<gl::GLSurfacePresentationHelper> >, 0>::is_method' [ 0 6 16 155 278]
'std::__1::move<int *&>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> > >' [ 0 5 10]
'__clock_t' [ 0]
'gl::DebugGLApi::glGenRenderbuffersEXTFn' [ 0 4 16]
'std::__1::move<int &>' [ 0 5 10]
'gl::OSMesaDestroyContextProc' [ 0 4]
'std::__1::__pointer_type<gl::GLFenceAndroidNativeFenceSync, std::__1::default_delete<gl::GLFenceAndroidNativeFenceSync> >' [ 0 5 10]
'base::BindUnwrapTraits<base::TimeDelta>' [ 0 6]
'AnnotateRWLockCreate' [ 0]
'gl::TraceGLApi::glFramebufferRenderbufferEXTFn' [ 0 4 16]
'gl::GLStubApiBase::glGetBufferParameteri64vRobustANGLEFn' [ 0 4 19]
'base::internal::MaxExponentPromotion<long, long, base::internal::RIGHT_PROMOTION>' [ 0 6 16]
'gl::GLSurface::GLSurface' [ 0 4 15]
'gl::GLFenceEGL::ClientWaitWithTimeoutNanos' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<int> &, 1, false>::__compressed_pair_elem<std::__1::allocator<int> &, void>' [ 0 5 10 72]
'gl::GLContextStub::SetExtensionsString' [ 0 4 19]
'std::__1::unique_ptr<gl::GLVersionInfo, std::__1::default_delete<gl::GLVersionInfo> >::operator=' [ 0 5 10 87]
'gl::GLApiBase::glIsFenceAPPLEFn' [ 0 4 15]
'gl::glUniform1fvProc' [ 0 4]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >::operator->' [ 0 5 10 71]
'std::__1::set<gl::GLContext *, std::__1::less<gl::GLContext *>, std::__1::allocator<gl::GLContext *> >::~set' [ 0 5 10 104]
'gl::FilterGLExtensionList' [ 0 4]
'std::__1::__compressed_pair_elem<gl::GLSurface::CALayerInUseQuery *, 0, false>' [ 0 5 10]
'XCrossingEvent' [ 0]
'gl::GLStateRestorer::GLStateRestorer' [ 0 4 21]
'sync_fence_info_data' [ 0]
'gl::TraceGLApi::glCheckFramebufferStatusEXTFn' [ 0 4 16]
'base::ThreadCollisionWarner::ThreadCollisionWarner' [ 0 6 29]
'std::__1::allocator_traits<std::__1::allocator<gl::GLSurfaceOverlay> >::destroy<gl::GLSurfaceOverlay>' [ 0 5 10 72]
'gl::GLStubApiBase::glUniformMatrix4x2fvFn' [ 0 4 19]
'gl::(anonymous namespace)::g_gl_implementation' [ 0 4 27]
'gl::glXReleaseTexImageEXTProc' [ 0 4]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<base::trace_event::MemoryAllocatorDump, std::__1::default_delete<base::trace_event::MemoryAllocatorDump> > > >, long, true>' [ 0 5 10]
'std::__1::__split_buffer<void *, std::__1::allocator<void *> &>::__end_cap' [ 0 5 10 65]
'std::__1::allocator_traits<std::__1::allocator<ui::GpuSwitchingObserver *> >::__max_size' [ 0 5 10 78]
'std::__1::unique_ptr<gfx::FixedVSyncProvider, std::__1::default_delete<gfx::FixedVSyncProvider> >::release' [ 0 5 10 99]
'gl::GLStubApiBase::glStencilThenCoverFillPathNVFn' [ 0 4 19]
'base::internal::circular_deque_const_iterator<base::TimeDelta>' [ 0 6 16]
'std::__1::allocator<int>::allocate' [ 0 5 10 26]
'gl::TraceGLApi::glGetUniformivRobustANGLEFn' [ 0 4 16]
'gl::GLFenceARB::ServerWait' [ 0 4 16]
'gl::GLStubApiBase::glIsTransformFeedbackFn' [ 0 4 19]
'gl::GLApiBase::glPixelStoreiFn' [ 0 4 15]
'base::internal::CheckedNumeric<int>' [ 0 6 16]
'gl::DebugGLApi::glTexSubImage2DFn' [ 0 4 16]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge> >, long, true>' [ 0 5 10]
'gl::GLSurfaceStub::Resize' [ 0 4 19]
'gl::GLApiBase::glTexSubImage3DFn' [ 0 4 15]
'std::__1::move<unsigned long &>' [ 0 5 10]
'gl::GLStubApiBase::glGetStringiFn' [ 0 4 19]
'gl::NoContextGLApi::glTransformFeedbackVaryingsFn' [ 0 4 20]
'gl::NoContextGLApi::glStencilFuncSeparateFn' [ 0 4 20]
'std::__1::__split_buffer<TimeNamePair, std::__1::allocator<TimeNamePair> &>' [ 0 5 10]
'std::__1::enable_if_t<FunctorTraits<RepeatingCallback<void (const PresentationFeedback &)> >::is_nullable, bool>' [ 0 5 10]
'gl::glGetShaderPrecisionFormatProc' [ 0 4]
'gl::GLStubApiBase::glFinishFenceNVFn' [ 0 4 19]
'gl::GLApiBase::glGetTexLevelParameterfvFn' [ 0 4 15]
'std::__1::allocator_traits<std::__1::allocator<long> >::construct<long, const long &>' [ 0 5 10 56]
'gl::GLStubApiBase::glGetQueryObjecti64vFn' [ 0 4 19]
'std::__1::vector<ui::GpuSwitchingObserver *, std::__1::allocator<ui::GpuSwitchingObserver *> >::~vector' [ 0 5 10 96]
'gl::GLSurfaceGLX::HasGLXExtension' [ 0 4 18]
'gl::GLStubApiBase::glPathStencilFuncNVFn' [ 0 4 19]
'gl::GLImageMemory::CopyTexImage::trace_event_unique_atomic415' [ 0 4 19 33]
'gl::glGetTexLevelParameterivRobustANGLEProc' [ 0 4]
'std::__1::conditional<true, std::__1::pair<void *, std::__1::basic_string<char> >, std::__1::__nat>' [ 0 5 10]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver *const *>::__wrap_iter<ui::GpuSwitchingObserver **>' [ 0 5 10 58]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'gl::GLStubApiBase::glUniform2fFn' [ 0 4 19]
'scoped_refptr<gfx::NativePixmap>::AddRef' [ 0 34]
'std::__1::allocator<gfx::NativePixmapPlane>::destroy' [ 0 5 10 45]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<base::trace_event::MemoryAllocatorDumpGuid, std::__1::__value_type<base::trace_event::MemoryAllocatorDumpGuid, base::trace_event::ProcessMemoryDump::MemoryAllocatorDumpEdge>, std::__1::less<base::trace_event::MemoryAllocatorDumpGuid>, true> >' [ 0 5 10]
'gl::GLApiBase::glBindFragDataLocationIndexedFn' [ 0 4 15]
'std::__1::__compressed_pair<gl::GLSurfaceOverlay *, std::__1::allocator<gl::GLSurfaceOverlay> >' [ 0 5 10]
'gl::glXWaitGLProc' [ 0 4]
'base::internal::circular_deque_const_iterator<gl::GLSurfacePresentationHelper::Frame>::circular_deque_const_iterator' [ 0 6 16 87]
'EGLAttrib' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::GpuSwitchingObserver *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::GpuSwitchingObserver *> &, void>' [ 0 5 10 95]
'std::__1::__vector_base<unsigned char, std::__1::allocator<unsigned char> >::~__vector_base' [ 0 5 10 77]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<gl::(anonymous namespace)::SGIVideoSyncProviderThreadShim>, base::RepeatingCallback<void (base::TimeTicks, base::TimeDelta)> >, std::__1::__nat>' [ 0 5 10]
'gl::glCreateProgramProc' [ 0 4]
'base::circular_deque<base::TimeDelta>::emplace_back<base::TimeDelta>' [ 0 6 39]
'__int32_t' [ 0]
'gl::GPUTimingImpl::UpdateQueryResults' [ 0 4 19]
'std::__1::__compressed_pair_elem<TimeNamePair *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 60]
'gl::DebugGLApi::glMatrixLoadfEXTFn' [ 0 4 16]
'std::__1::__compressed_pair_elem<std::__1::__destruct_n &, 1, false>::__compressed_pair_elem<std::__1::__destruct_n &, void>' [ 0 5 10 70]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> > >::destroy<std::__1::pair<void *const, std::__1::basic_string<char> > >' [ 0 5 10 145]
'std::__1::__compressed_pair_elem<ui::GpuSwitchingObserver **, 0, false>' [ 0 5 10]
'std::__1::move_if_noexcept<std::__1::basic_string<char> >' [ 0 5 10]
'gl::GLStubApiBase::glStencilFuncFn' [ 0 4 19]
'std::__1::__pointer_type_imp::__pointer_type<gl::(anonymous namespace)::EGLSyncControlVSyncProvider, std::__1::default_delete<gl::(anonymous namespace)::EGLSyncControlVSyncProvider>, false>' [ 0 5 10 30]
'std::__1::__size_type<std::__1::allocator<long>, long, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (gl::(anonymous namespace)::SGIVideoSyncVSyncProvider::*)(base::TimeTicks, base::TimeDelta), base::WeakPtr<gl::(anonymous namespace)::SGIVideoSyncVSyncProvider> >, void (base::TimeTicks, base::TimeDelta)>::Run' [ 0 6 16 261]
'std::__1::__compressed_pair_elem<gl::GLFence *, 0, false>::__compressed_pair_elem<gl::GLFenceAndroidNativeFenceSync *, void>' [ 0 5 10 59]
'gl::GLApiBase::glGetFragDataLocationFn' [ 0 4 15]
'std::__1::max<int>' [ 0 5 10]
'base::internal::VectorBuffer<gl::NativeViewGLSurfaceEGL::SwapInfo>::operator[]' [ 0 6 16 68]
'std::__1::binary_function<void *, void *, bool>' [ 0 5 10]
'gl::DebugGLApi::glTransformFeedbackVaryingsFn' [ 0 4 16]
'std::__1::unique_ptr<int [], std::__1::default_delete<int []> >::operator[]' [ 0 5 10 65]
'std::__1::remove_reference<gl::GLVersionInfo *>' [ 0 5 10]
'gl::NoContextGLApi::glGetFramebufferParameterivRobustANGLEFn' [ 0 4 20]
'std::__1::unique_ptr<gl::GLApi, std::__1::default_delete<gl::GLApi> >' [ 0 5 10]
'base::ObserverList<ui::GpuSwitchingObserver, false, true>::Iter::~Iter' [ 0 6 59 65]
'gl::GLWorkarounds::GLWorkarounds' [ 0 4 19]
'gl::GLContextReal::GLContextReal' [ 0 4 19]
'gl::EGLApiBase::eglGetDisplayFn' [ 0 4 16]
'std::__1::forward<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<gl::GLContext> >' [ 0 6 16]
'std::__1::queue<gl::NativeViewGLSurfaceEGL::SwapInfo, base::circular_deque<gl::NativeViewGLSurfaceEGL::SwapInfo> >::pop' [ 0 5 10 116]
'gl::DebugGLApi::glProgramBinaryFn' [ 0 4 16]
'base::subtle::RefCountedThreadSafeBase::AddRef' [ 0 6 14 40]
'base::BindUnwrapTraits<base::TimeDelta>::Unwrap<base::TimeDelta>' [ 0 6 41]
'std::__1::forward<std::__1::allocator<ContextCreationInfo> &>' [ 0 5 10]
'gl::TraceGLApi::glProgramParameteriFn' [ 0 4 16]
'gl::(anonymous namespace)::DataFormat' [ 0 4 27]
'std::__1::__pointer_type<gl::GLApi, std::__1::default_delete<gl::GLApi> >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<void *, std::__1::basic_string<char> >, void *> >::construct<std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::pair<void *, std::__1::basic_string<char> > >' [ 0 5 10 116]
'SkIRect' [ 0]
'gl::glDeleteQueriesProc' [ 0 4]
'unsigned int' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'gl::glPushDebugGroupProc' [ 0 4]
'long double' [ 0]
'gl::eglWaitClientProc' [ 0 4]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<gfx::ColorSpace, std::__1::__value_type<gfx::ColorSpace, std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> > >, std::__1::less<gfx::ColorSpace>, true> >' [ 0 5 10]
'std::__1::__wrap_iter<ui::GpuSwitchingObserver **>' [ 0 5 10]
'std::__1::__vector_base<TimeNamePair, std::__1::allocator<TimeNamePair> >::__destruct_at_end' [ 0 5 10 75]
'gl::GLSurfaceEGL::GetFormat' [ 0 4 18]
'gl::eglStreamConsumerReleaseKHRProc' [ 0 4]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'gl::GLStubApiBase::glTexParameterivFn' [ 0 4 19]
'base::circular_deque<gl::GLSurfacePresentationHelper::Frame>::back' [ 0 6 62]
'logging::GetVlogLevel<30>' [ 0 9]
'gl::(anonymous namespace)::ActualPixmapDepth' [ 0 4 27]
'gl::GLSurfaceOSMesaHeadless::GLSurfaceOSMesaHeadless' [ 0 4 29]
'std::__1::add_lvalue_reference<gl::DebugGLApi>' [ 0 5 10]
'gl::glGetShaderivProc' [ 0 4]
'angle::(anonymous namespace)::ANGLEPlatformImpl_cacheProgram' [ 0 7 30]
'gl::GLStubApiBase::glGetTexParameterivRobustANGLEFn' [ 0 4 19]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'base::internal::circular_deque_iterator<scoped_refptr<gl::TimerQuery> >::operator++' [ 0 6 16 73]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'gl::glObjectLabelProc' [ 0 4]
'gl::GLApiBase::glGetIntegeri_vRobustANGLEFn' [ 0 4 15]
'gl::glGetRenderbufferParameterivEXTProc' [ 0 4]
'gl::DebugGLApi::glGetSamplerParameterivFn' [ 0 4 16]
'std::__1::conditional<false, std::__1::pair<void *const, std::__1::basic_string<char> >, std::__1::__nat>' [ 0 5 10]
'gl::YUVToRGBConverter' [ 0 4]
'std::__1::unique_ptr<gl::YUVToRGBConverter, std::__1::default_delete<gl::YUVToRGBConverter> >::reset' [ 0 5 10 95]
