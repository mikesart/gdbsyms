'ui::XScopedEventSelector' [ 0 4]
'ui::(anonymous namespace)::IsTestDevice' [ 0 4 27]
'scoped_refptr<base::SingleThreadTaskRunner>::Release' [ 0 45]
'std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::InputDevice> &, void>' [ 0 5 10 81]
'std::__1::move<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::InputDevice> &>' [ 0 5 10 87]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__swap_out_circular_buffer' [ 0 5 10 118]
'std::__1::forward<ui::(anonymous namespace)::DisplayState>' [ 0 5 10]
'std::__1::remove_reference<gfx::Point>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 5 10]
'base::internal::PassingTraitsType<const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 6 16]
'base::internal::BindStateBase' [ 0 6 16]
'pthread_mutex_t' [ 0]
'std::__1::remove_reference<_GPollFD *>' [ 0 5 10]
'base::internal::Unwrap<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6 16]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, false>::__tuple_leaf<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, void>' [ 0 5 10 152]
'base::internal::WeakReference' [ 0 6 16]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >, false>::~__tuple_leaf' [ 0 5 10 108]
'ui::X11HotplugEventHandler::OnHotplugEvent' [ 0 4 28]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::BindState<const base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 6 16 216]
'x11::True' [ 0 5]
'base::WeakPtr<ui::XWindowEventManager>' [ 0 6]
'std::__1::allocator<ui::InputDevice>::deallocate' [ 0 5 10 38]
'base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::~BindState' [ 0 6 16 119]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, false>' [ 0 5 10]
'base::Optional<gfx::Point>::Optional<gfx::Point, false>' [ 0 6 28]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'XErrorEvent' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'std::__1::forward<std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'std::__1::add_lvalue_reference<ui::PlatformEventSource>' [ 0 5 10]
'std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::~tuple' [ 0 5 10 261]
'std::__1::remove_reference<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'std::__1::true_type' [ 0 5 10]
'DeviceList<XIDeviceInfo, &XIFreeDeviceInfo>::operator[]' [ 0 45]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__destroy<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'std::__1::false_type' [ 0 5 10]
'base::StringPiece' [ 0 6]
'_GSource' [ 0]
'unsigned char' [ 0]
'logging::CheckEQImpl<ui::X11EventSource *, ui::X11EventSource *>' [ 0 9]
'std::__1::remove_reference<ui::(anonymous namespace)::ValuatorClassInfo *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::InputDevice *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 63]
'__va_list_tag' [ 0]
'std::__1::forward<ui::XScopedEventSelector *>' [ 0 5 10]
'intptr_t' [ 0]
'gfx::Size' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct<ui::TouchscreenDevice, const ui::TouchscreenDevice &>' [ 0 5 10 73]
'ui::(anonymous namespace)::ValuatorClassInfo::ValuatorClassInfo' [ 0 4 27 46]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::forward<ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'std::__1::__tuple_leaf<1, ui::(anonymous namespace)::DisplayState, false>' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(), void>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &, 1, false>::__get' [ 0 5 10 106]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::__destruct_at_end' [ 0 5 10 95]
'std::__1::default_delete<_GPollFD>' [ 0 5 10]
'base::internal::BindState<void (*)()>' [ 0 6 16]
'std::__1::__add_lvalue_reference_impl<ui::PlatformEventSource, true>' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::__alloc' [ 0 5 10 127]
'timeval' [ 0]
'std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>::allocate' [ 0 5 10 67]
'XUnmapEvent' [ 0]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::capacity' [ 0 5 10 132]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, 1, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> &>' [ 0 5 10]
'std::__1::add_lvalue_reference<XIDeviceInfo>' [ 0 5 10]
'logging::LogSeverity' [ 0 9]
'std::__1::remove_reference<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_add' [ 0 5 10 36]
'size_t' [ 0]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::capacity' [ 0 5 10 141]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>::construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10 60]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'ptrdiff_t' [ 0]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void>::Invoke<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6 16 151]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>::construct<ui::(anonymous namespace)::ValuatorClassInfo, ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 67]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::destroy<ui::InputDevice>' [ 0 5 10 67]
'std::__1::ostringstream' [ 0 5 10]
'ui::X11EventSource::instance_' [ 0 4 20]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__annotate_delete' [ 0 5 10 74]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > &>' [ 0 5 10]
'std::__1::allocator<ui::InputDevice>::construct<ui::InputDevice, ui::InputDevice>' [ 0 5 10 38]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>' [ 0 6]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >::operator bool' [ 0 5 10 105]
'std::__1::tuple_element<0, std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::forward<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 5 10]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'base::BindUnwrapTraits<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::Unwrap<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6 99]
'std::__1::unique_ptr<XIDeviceInfo [], gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo> >' [ 0 5 10]
'std::__1::forward<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> >' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__annotate_new' [ 0 5 10 74]
'x11::None' [ 0 5]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__construct_range_forward<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'std::__1::__add_lvalue_reference_impl<ui::X11HotplugEventHandler, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::(anonymous namespace)::DeviceInfo *, 0, false>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >' [ 0 5 10]
'XID' [ 0]
'scoped_refptr<base::TaskRunner>::AddRef' [ 0 33]
'base::internal::BindState<void (*)()>::Destroy' [ 0 6 16 39]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::capacity' [ 0 5 10 127]
'ui::(anonymous namespace)::XSourceDispatch' [ 0 4 27]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &, false, false>' [ 0 5 10 104]
'XNoExposeEvent' [ 0]
'std::__1::remove_reference<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<_XDeviceInfo *, 0, false>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::operator=' [ 0 6 126]
'gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo>' [ 0 5]
'std::__1::__compressed_pair_elem<_GPollFD *, 0, false>::__compressed_pair_elem<_GPollFD *, void>' [ 0 5 10 56]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::second' [ 0 5 10 146]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'base::internal::WeakPtrBase' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__max_size' [ 0 5 10 96]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::~__tuple_impl' [ 0 5 10 307]
'unsigned short' [ 0]
'base::internal::PassingTraitsType<const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 6 16]
'ui::(anonymous namespace)::UiCallbacks::~UiCallbacks' [ 0 4 27 40]
'base::AtomicRefCount::Increment' [ 0 6 22]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::data' [ 0 5 10 118]
'base::Closure' [ 0 6]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >::reset' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::deallocate' [ 0 5 10 73]
'std::__1::default_delete<ui::XScopedEventSelector>::operator()' [ 0 5 10 52]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::allocate' [ 0 5 10 67]
'tm' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::nullptr_t' [ 0 5]
'std::__1::__compressed_pair_elem<gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo>, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::TouchscreenDevice> &, void>' [ 0 5 10 87]
'std::__1::__to_raw_pointer<ui::InputDevice>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'base::internal::OptionalStorageBase<gfx::Point, true>' [ 0 6 16]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__construct_at_end<ui::TouchscreenDevice *>' [ 0 5 10 86]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'base::BindRepeating<void (*)()>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__construct_range_forward<ui::(anonymous namespace)::DeviceInfo *, ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10 89]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'std::__1::forward<const ui::TouchscreenDevice &>' [ 0 5 10]
'XCreateWindowEvent' [ 0]
'std::__1::remove_reference<ui::X11HotplugEventHandler *>' [ 0 5 10]
'base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6 16]
'XDeviceList' [ 0]
'std::__1::forward<_GPollFD *>' [ 0 5 10]
'XDisplay' [ 0]
'std::__1::remove_reference<scoped_refptr<base::SingleThreadTaskRunner> >' [ 0 5 10]
'ui::X11HotplugEventHandler::X11HotplugEventHandler' [ 0 4 28]
'uint_least64_t' [ 0]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::max_size' [ 0 5 10 118]
'std::__1::make_unsigned<int>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 6 16 43]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__annotate_delete' [ 0 5 10 86]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::vector' [ 0 5 10 132]
'base::Callback<MakeUnboundRunType<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> >' [ 0 6]
'base::TaskRunnerTraits' [ 0 6]
'std::__1::__compressed_pair<ui::X11HotplugEventHandler *, std::__1::default_delete<ui::X11HotplugEventHandler> >' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__push_back_slow_path<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 118]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void>' [ 0 6]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::clear' [ 0 5 10 139]
'ui' [ 0]
'div_t' [ 0]
'base::BindUnwrapTraits<ui::(anonymous namespace)::UiCallbacks>::Unwrap<ui::(anonymous namespace)::UiCallbacks>' [ 0 6 64]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::clear' [ 0 5 10 95]
'base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6 16]
'base::BindUnwrapTraits<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__push_back_slow_path<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 132]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::remove_reference<void (*const &)()>' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10]
'std::__1::forward<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 5 10]
'std::__1::remove_reference<const base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &>' [ 0 5 10]
'base' [ 0]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>::is_method' [ 0 6 16 73 128]
'std::__1::__pointer_type_imp' [ 0 5 10]
'ui::(anonymous namespace)::TouchscreenDeviceCallback' [ 0 4 27]
'std::__1::literals' [ 0 5 10]
'std::__1::__compressed_pair<_GPollFD *, std::__1::default_delete<_GPollFD> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice> &, 1, false>::__get' [ 0 5 10 84]
'ui::X11EventSource::X11EventSource' [ 0 4 20]
'std::__1::allocator<ui::InputDevice>::allocate' [ 0 5 10 38]
'ui::X11EventSourceGlib' [ 0 4]
'__pthread_list_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__destroy<ui::TouchscreenDevice>' [ 0 5 10 73]
'std::__1::default_delete<ui::X11HotplugEventHandler>' [ 0 5 10]
'ui::(anonymous namespace)' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::construct<ui::(anonymous namespace)::ValuatorClassInfo, ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'std::__1::forward<const std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'fpos_t' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::allocate' [ 0 5 10 86]
'std::__1::memory_order' [ 0 5 10]
'std::__1::forward<gfx::Point>' [ 0 5 10]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >::get' [ 0 5 10 69]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<int, true>' [ 0 5 10]
'logging::MakeCheckOpString<ui::X11EventSource *, ui::X11EventSource *>' [ 0 9]
'std::__1::remove_reference<std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'std::__1::integer_sequence<unsigned long, 0, 1, 2, 3>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), const std::__1::tuple<> &>' [ 0 6 16 257]
'base::time_internal::TimeBase<base::TimeTicks>::operator-' [ 0 6 21 48]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::capacity' [ 0 5 10 125]
'std::__1::remove_reference<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &)>' [ 0 5 10]
'ui::X11EventSource::DispatchXEvents' [ 0 4 20]
'base::BindUnwrapTraits<ui::(anonymous namespace)::DisplayState>::Unwrap<ui::(anonymous namespace)::DisplayState>' [ 0 6 65]
'std::__1::allocator<ui::InputDevice>::construct<ui::InputDevice, const ui::InputDevice &>' [ 0 5 10 38]
'base::internal::CheckOnFailure::HandleFailure<unsigned long>' [ 0 6 16 32]
'uint_least32_t' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__annotate_new' [ 0 5 10 86]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::BindState<const base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 6 16 240]
'std::__1::move<ui::TouchscreenDevice &>' [ 0 5 10]
'std::__1::remove_reference<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> >' [ 0 5 10]
'std::__1::__atomic_base<int, true>::fetch_sub' [ 0 5 10 36]
'std::__1::forward<const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__swap_out_circular_buffer' [ 0 5 10 86]
'XReparentEvent' [ 0]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>::RunOnce::num_bound_args' [ 0 6 16 250 259]
'std::__1::remove_reference<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice> &, 1, false>' [ 0 5 10]
'long unsigned int' [ 0]
'ui::(anonymous namespace)::DeviceInfo' [ 0 4 27]
'ui::(anonymous namespace)::UpdateDeviceList' [ 0 4 27]
'ui::(anonymous namespace)::DisplayState' [ 0 4 27]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::InputDevice *, 0, false>' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::~__vector_base' [ 0 5 10 125]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__construct_at_end<ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10 118]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'base::Bind<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6]
'std::__1::max<unsigned long>' [ 0 5 10]
'base::TimeDelta::FromMicroseconds' [ 0 6 17]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<ui::InputDevice *>::__nat, ui::InputDevice>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__end_cap' [ 0 5 10 81]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__annotate_delete' [ 0 5 10 132]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::Destroy' [ 0 6 16 216]
'std::__1::float_round_style' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::allocator<ui::TouchscreenDevice>::construct<ui::TouchscreenDevice, ui::TouchscreenDevice>' [ 0 5 10 44]
'std::__1::__less<char *, char *>' [ 0 5 10]
'base::BindOnce<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks &>' [ 0 6]
'size_type' [ 0]
'std::__1::enable_if<true, void>' [ 0 5 10]
'XGraphicsExposeEvent' [ 0]
'XPropertyEvent' [ 0]
'std::__1::__compressed_pair<ui::PlatformEventSource *, std::__1::default_delete<ui::PlatformEventSource> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::move_if_noexcept<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'XMapRequestEvent' [ 0]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>::RunImpl<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, 0, 1, 2, 3>::is_method' [ 0 6 16 571 1119]
'base::BindUnwrapTraits<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >' [ 0 6]
'std::__1::unique_ptr<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector> >::unique_ptr<true, void>' [ 0 5 10 101]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'base::time_internal::TimeBase<base::TimeTicks>' [ 0 6 21]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >::operator->' [ 0 5 10 105]
'std::__1::forward<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 5 10]
'base::internal::IsNull<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> >' [ 0 6 16]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'base::internal::CallbackBase::operator bool' [ 0 6 16 30]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'base::subtle::Release_Store' [ 0 6 14]
'base::internal::OptionalStorageBase<gfx::Point, true>::OptionalStorageBase<gfx::Point>' [ 0 6 16 55]
'std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>::deallocate' [ 0 5 10 67]
'Window' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__construct_backward<ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10 89]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__recommend' [ 0 5 10 86]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>::RunOnce::num_bound_args' [ 0 6 16 571 580]
'scoped_refptr<base::internal::BindStateBase>::scoped_refptr' [ 0 46]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'XIValuatorState' [ 0]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >::reset' [ 0 5 10 105]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'base::Optional<gfx::Point>' [ 0 6]
'XSelectionEvent' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__vector_base' [ 0 5 10 81]
'std::__1::move<std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > &>' [ 0 5 10]
'ui::(anonymous namespace)::IsPropertyNotifyForTimestamp' [ 0 4 27]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::basic_string<char> *>::__nat, std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::clear' [ 0 5 10 141]
'logging::CheckOpResult' [ 0 9]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::capacity' [ 0 5 10 95]
'long long int' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::capacity' [ 0 5 10 81]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::capacity' [ 0 5 10 86]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::push_back' [ 0 5 10 74]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::__end_cap' [ 0 5 10 83]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::clear' [ 0 5 10 93]
'scoped_refptr<base::internal::WeakReference::Flag>' [ 0]
'Depth' [ 0]
'std::__1::remove_reference<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 5 10]
'ui::X11EventSource::StopCurrentEventStream' [ 0 4 20]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::destroy<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 89]
'std::__1::__compressed_pair_elem<ui::X11HotplugEventHandler *, 0, false>::__compressed_pair_elem<ui::X11HotplugEventHandler *, void>' [ 0 5 10 74]
'logging::LogMessage' [ 0 9]
'std::__1::remove_reference<_XDisplay *>' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::allocate' [ 0 5 10 132]
'std::__1::forward<std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >' [ 0 5 10]
'base::internal::OptionalStorage<gfx::Point, true, true>::OptionalStorageBase' [ 0 6 16 57]
'std::__1::tuple_element<3, std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'int_least8_t' [ 0]
'std::__1::pointer_traits<std::__1::basic_string<char> *>' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'ui::X11EventSourceGlib::InitXSource' [ 0 4 24]
'std::__1::get<0, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'ui::X11EventSourceDelegate' [ 0 4]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'std::__1::tuple_element<0, std::__1::__tuple_types<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void>' [ 0 6 16]
'XGravityEvent' [ 0]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >, false>' [ 0 5 10]
'float' [ 0]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >::~unique_ptr' [ 0 5 10 69]
'base::OnceCallback<void ()>::~OnceCallback' [ 0 6 29]
'std::__1::__size_type<std::__1::allocator<ui::InputDevice>, long, true>' [ 0 5 10]
'ui::(anonymous namespace)::OnTouchpadDevices' [ 0 4 27]
'ldiv_t' [ 0]
'base::in_place_t' [ 0 6]
'std::__1::integer_sequence<unsigned long, 0>' [ 0 5 10]
'ui::X11EventSourceGlib::StopCurrentEventStream' [ 0 4 24]
'wctype_t' [ 0]
'GPollFD' [ 0]
'scoped_refptr<base::TaskRunner>::scoped_refptr' [ 0 33]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::construct<ui::InputDevice, const ui::InputDevice &>' [ 0 5 10 67]
'std::__1::__const_void_pointer<ui::InputDevice *, std::__1::allocator<ui::InputDevice>, false>' [ 0 5 10]
'XIGroupState' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::max_size' [ 0 5 10 74]
'std::__1::__compressed_pair_elem<ui::PlatformEventSource *, 0, false>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, 0>::is_weak_call' [ 0 6 16 274 516]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__destruct_at_end' [ 0 5 10 81]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>' [ 0 6 16]
'XKeymapEvent' [ 0]
'base::internal::IsValueInRangeForNumericType<unsigned long, int>' [ 0 6 16]
'base::TimeDelta::FromMilliseconds' [ 0 6 17]
'std::__1::remove_reference<const std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'std::__1::__pointer_type<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::__split_buffer' [ 0 5 10 141]
'std::__1::__tuple_indices<0, 1, 2, 3>' [ 0 5 10]
'std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'ui::(anonymous namespace)::HandleTouchpadDevicesInWorker' [ 0 4 27]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), const std::__1::tuple<> &>::is_method' [ 0 6 16 233 368]
'base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6]
'scoped_refptr<base::TaskRunner>::scoped_refptr<base::SingleThreadTaskRunner, void>' [ 0 33]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__push_back_slow_path<const ui::InputDevice &>' [ 0 5 10 74]
'base::subtle::Acquire_Load' [ 0 6 14]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &, void>' [ 0 5 10 113]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'Drawable' [ 0]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>::RunOnce' [ 0 6 16 274]
'std::__1::__pointer_type<ui::PlatformEventSource, std::__1::default_delete<ui::PlatformEventSource> >' [ 0 5 10]
'std::__1::forward<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'uint8_t' [ 0]
'lldiv_t' [ 0]
'std::__1::swap<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::unique_ptr<ui::PlatformEventSource, std::__1::default_delete<ui::PlatformEventSource> >' [ 0 5 10]
'__gnuc_va_list' [ 0]
'base::Callback<MakeUnboundRunType<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> >' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::PlatformEventSource>, 1, true>' [ 0 5 10]
'std::__1::__to_raw_pointer<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct<ui::TouchscreenDevice, ui::TouchscreenDevice>' [ 0 5 10 73]
'XExtData' [ 0]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), const std::__1::tuple<> &>::is_weak_call' [ 0 6 16 233 368]
'std::__1::__tuple_types<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'uint_fast64_t' [ 0]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::__end_cap' [ 0 5 10 127]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::clear' [ 0 5 10 125]
'std::__1::__pointer_type_imp::__pointer_type<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler>, false>' [ 0 5 10 30]
'scoped_refptr<base::TaskRunner>::Release' [ 0 33]
'std::__1::tuple_element<2, std::__1::__tuple_types<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::add_lvalue_reference<ui::X11HotplugEventHandler>' [ 0 5 10]
'base::internal::IsNull<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &)>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10 89]
'XIDeviceChangedEvent' [ 0]
'std::__1::remove_reference<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &>' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::~__vector_base' [ 0 5 10 139]
'std::__1::__compressed_pair<ui::X11EventSourceGlib *, std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::__compressed_pair_elem<ui::XScopedEventSelector *, 0, false>' [ 0 5 10]
'XCirculateEvent' [ 0]
'GSourcePrivate' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__construct<ui::(anonymous namespace)::ValuatorClassInfo, ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'uint64_t' [ 0]
'base::RepeatingCallback<void ()>::~RepeatingCallback' [ 0 6 34]
'XGenericEvent' [ 0]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::__destruct_at_end' [ 0 5 10 141]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, 0>' [ 0 6 16 274]
'base::subtle::RefCountedThreadSafeBase::AddRefImpl' [ 0 6 14 40]
'ui::(anonymous namespace)::GetHotplugEventObserver' [ 0 4 27]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::ValuatorClassInfo *>::operator++' [ 0 5 10 77]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__vector_base' [ 0 5 10 93]
'std::__1::forward<std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::allocate' [ 0 5 10 73]
'base::TrimPositions' [ 0 6]
'std::__1::enable_if_t<FunctorTraits<void (*)(const vector<InputDevice, allocator<InputDevice> > &)>::is_nullable, bool>' [ 0 5 10]
'base::BindUnwrapTraits<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::Unwrap<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6 111]
'timespec' [ 0]
'__pthread_mutex_s' [ 0]
'base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 6 16]
'base::BindUnwrapTraits<ui::(anonymous namespace)::DisplayState>' [ 0 6]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::size' [ 0 5 10 86]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::pointer_traits<ui::InputDevice *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::max_size' [ 0 5 10 73]
'ui::(anonymous namespace)::InitializeXkb' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 67]
'XConfigureRequestEvent' [ 0]
'XDestroyWindowEvent' [ 0]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::Release' [ 0 6 70]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::data' [ 0 5 10 132]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'XInputClassInfo' [ 0]
'std::__1::__compressed_pair<ui::X11EventSourceGlib *, std::__1::default_delete<ui::X11EventSourceGlib> >::__compressed_pair<ui::X11EventSourceGlib *&, true>' [ 0 5 10 106]
'base::SequenceChecker' [ 0 6]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >' [ 0 5 10]
'base::subtle::AdoptRefTag' [ 0 6 14]
'ui::InputDeviceType' [ 0 4]
'GSList' [ 0]
'base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::operator=' [ 0 6 114]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >' [ 0 5 10]
'base::internal::BindState<void (*)()>::BindState<void (*)()>' [ 0 6 16 39]
'ui::X11HotplugEventHandler' [ 0 4]
'uint_fast32_t' [ 0]
'std::__1::unique_ptr<XIDeviceInfo [], gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo> >::operator[]' [ 0 5 10 100]
'std::__1::forward<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'wctrans_t' [ 0]
'base::Callback<void (const std::vector<InputDevice> &)>' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'XEvent' [ 0]
'signed char' [ 0]
'std::__1::default_delete<ui::X11EventSourceGlib>' [ 0 5 10]
'std::__1::__str_find<char, unsigned long, std::__1::char_traits<char>, 18446744073709551615>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__destruct_at_end' [ 0 5 10 139]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::push_back' [ 0 5 10 86]
'std::__1::remove_reference<base::RepeatingCallback<void ()> &>' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__end_cap' [ 0 5 10 125]
'GMainContext' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, true>' [ 0 5 10 30]
'XIButtonState' [ 0]
'base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6]
'ui::X11EventSourceGlib::ProcessXEvent' [ 0 4 24]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*const &)()>' [ 0 6 16 43]
'mbstate_t' [ 0]
'x11::CurrentTime' [ 0 5]
'DeviceList<_XDeviceInfo, &XFreeDeviceList>' [ 0]
'std::__1::forward<const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 5 10]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >' [ 0 5 10]
'std::__1::__atomic_base<int, false>::load' [ 0 5 10 37]
'scoped_refptr<base::TaskRunner>::operator->' [ 0 33]
'__compar_fn_t' [ 0]
'std::__1::move_if_noexcept<ui::InputDevice>' [ 0 5 10]
'GSourceDummyMarshal' [ 0]
'std::__1::remove_reference<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> >' [ 0 5 10]
'Display' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__alloc' [ 0 5 10 81]
'std::__1::__pointer_type<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__max_size' [ 0 5 10 73]
'base::internal::IsNull<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> >' [ 0 6 16]
'unsigned int' [ 0]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>::destroy' [ 0 5 10 60]
'base::BindUnwrapTraits<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6]
'std::__1::forward<scoped_refptr<base::SingleThreadTaskRunner> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct_backward<ui::InputDevice *>' [ 0 5 10 67]
'std::__1::__tuple_types<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> &>::second' [ 0 5 10 100]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::Run' [ 0 6 16 73]
'std::__1::__pointer_type_imp::__pointer_type<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice>, true>' [ 0 5 10 30]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::ValuatorClassInfo *>::operator*' [ 0 5 10 77]
'std::__1::unique_ptr<_XDeviceInfo [], gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList> >' [ 0 5 10]
'std::__1::__search_substring<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::__alloc' [ 0 5 10 83]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct_range_forward<ui::TouchscreenDevice *, ui::TouchscreenDevice *>' [ 0 5 10 73]
'std::__1::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >::~unique_ptr' [ 0 5 10 97]
'int' [ 0]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::move<base::RepeatingCallback<void ()> &>' [ 0 5 10]
'ui::X11EventSource::PostDispatchEvent' [ 0 4 20]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__apply_cv<int, unsigned int, false, false>' [ 0 5 10]
'std::__1::allocator<ui::TouchscreenDevice>::allocate' [ 0 5 10 44]
'base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::Destroy' [ 0 6 16 131]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::deallocate' [ 0 5 10 67]
'std::__1::forward<const base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &>' [ 0 5 10]
'std::__1::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >::unique_ptr<true, void>' [ 0 5 10 97]
'XButtonEvent' [ 0]
'std::__1::__size_type<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, long, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 89]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::tuple_element<0, std::__1::__tuple_types<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::basic_string<char> >, long, true>' [ 0 5 10]
'std::__1::move<ui::(anonymous namespace)::ValuatorClassInfo &>' [ 0 5 10]
'DeviceList<_XDeviceInfo, &XFreeDeviceList>::operator[]' [ 0 44]
'ui::(anonymous namespace)::InputDeviceCallback' [ 0 4 27]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::DeviceInfo *>::operator*' [ 0 5 10 70]
'uint_fast16_t' [ 0]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::select_on_container_copy_construction' [ 0 5 10 73]
'base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6 16 131]
'std::__1::__libcpp_allocate' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::Run' [ 0 6 16 233]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__swap_out_circular_buffer' [ 0 5 10 74]
'gfx::Vector2dF' [ 0 5]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::size' [ 0 5 10 74]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6 16]
'long int' [ 0]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'WTF' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__push_back_slow_path<ui::InputDevice>' [ 0 5 10 74]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::PlatformEventSource>, 1, true>::__compressed_pair_elem<std::__1::default_delete<ui::X11EventSourceGlib>, void>' [ 0 5 10 94]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10 89]
'ui::(anonymous namespace)::OnHotplugFinished' [ 0 4 27]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'base::internal::BindState<void (*)()>::~BindState' [ 0 6 16 39]
'std::__1::remove_reference<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::forward<ui::InputDevice>' [ 0 5 10]
'XMapEvent' [ 0]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__vector_base' [ 0 5 10 125]
'std::__1::__vector_base<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::RepeatingCallback' [ 0 6 114]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__vector_base' [ 0 5 10 139]
'std::__1::forward<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> >' [ 0 5 10]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'std::__1::conditional<false, std::__1::pointer_traits<ui::TouchscreenDevice *>::__nat, ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__push_back_slow_path<ui::TouchscreenDevice>' [ 0 5 10 86]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::push_back' [ 0 5 10 118]
'__int8_t' [ 0]
'std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &, false, false>' [ 0 5 10 92]
'base::internal::Unwrap<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >' [ 0 6 16]
'decltype(nullptr)' [ 0]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10 145]
'base::Optional<gfx::Point>::Optional' [ 0 6 28]
'InvokeFuncStorage' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<_GPollFD, std::__1::default_delete<_GPollFD>, false>' [ 0 5 10 30]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>::is_weak_call' [ 0 6 16 73 128]
'std::__1::enable_if_t<FunctorTraits<void (*)()>::is_nullable, bool>' [ 0 5 10]
'ui::(anonymous namespace)::KeyboardDeviceCallback' [ 0 4 27]
'std::__1::remove_reference<ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'scoped_refptr<const base::internal::WeakReference::Flag>' [ 0]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::begin' [ 0 5 10 118]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::allocate' [ 0 5 10 96]
'std::__1::__pointer_type<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector> >' [ 0 5 10]
'_XDeviceInfo' [ 0]
'std::__1::remove_reference<const ui::InputDevice &>' [ 0 5 10]
'XVisibilityEvent' [ 0]
'base::internal::IsNull<void (*)()>' [ 0 6 16]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__destruct_at_end' [ 0 5 10 93]
'std::__1::__pointer_type<XIDeviceInfo, gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo> >' [ 0 5 10]
'base::RefCountedThreadSafe<base::internal::WeakReference::Flag, base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >' [ 0 6]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__compressed_pair_elem<ui::(anonymous namespace)::ValuatorClassInfo *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 92]
'ui::X11EventSourceGlib::X11EventSourceGlib' [ 0 4 24]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::capacity' [ 0 5 10 139]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::__destruct_at_end' [ 0 5 10 83]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::remove_reference<ui::X11EventSourceGlib *>' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__annotate_delete' [ 0 5 10 118]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::capacity' [ 0 5 10 83]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__alloc' [ 0 5 10 125]
'std::__1::move<ui::InputDevice *&>' [ 0 5 10]
'__intmax_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &, void>' [ 0 5 10 106]
'std::__1::add_lvalue_reference<ui::X11EventSourceGlib>' [ 0 5 10]
'XAnyEvent' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<ui::PlatformEventSource, std::__1::default_delete<ui::PlatformEventSource>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__max_size' [ 0 5 10 67]
'ui::X11EventSourceDelegate::X11EventSourceDelegate' [ 0 4 28]
'std::__1::remove_reference<ui::InputDevice *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::X11EventSourceGlib *, 0, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<ui::XScopedEventSelector, true>' [ 0 5 10]
'std::__1::remove_reference<ui::(anonymous namespace)::DeviceInfo *&>' [ 0 5 10]
'__uint16_t' [ 0]
'std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'gfx::Point' [ 0 5]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::Destroy' [ 0 6 16 240]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'std::__1::get<2, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'logging::MakeCheckOpValueString<ui::X11EventSource *>' [ 0 9]
'std::__1::remove_reference<ui::X11EventSourceGlib *&>' [ 0 5 10]
'std::__1::remove_reference<ui::(anonymous namespace)::DisplayState>' [ 0 5 10]
'base::string16' [ 0 6]
'ui::(anonymous namespace)::XSourcePrepare' [ 0 4 27]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=' [ 0 5 10 87]
'__FILE' [ 0]
'std::__1::__compressed_pair<ui::PlatformEventSource *, std::__1::default_delete<ui::PlatformEventSource> >::__compressed_pair<ui::X11EventSourceGlib *, std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10 108]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &, void>' [ 0 5 10 110]
'gpointer' [ 0]
'std::__1::__compressed_pair_elem<ui::TouchscreenDevice *, 0, false>' [ 0 5 10]
'std::__1::move<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::float_denorm_style' [ 0 5 10]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::end' [ 0 5 10 118]
'std::__1::forward<ui::X11EventSourceGlib *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::(anonymous namespace)::ValuatorClassInfo *, 0, false>' [ 0 5 10]
'logging::GetVlogLevel<49>' [ 0 9]
'std::__1::addressof<char>' [ 0 5 10]
'base::TimeDelta::Max' [ 0 6 17]
'float_t' [ 0]
'std::__1::streampos' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::deallocate' [ 0 5 10 89]
'std::__1::move<ui::(anonymous namespace)::DeviceInfo *&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::__tuple_impl<0, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > , std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 5 10 129]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'double' [ 0]
'uintmax_t' [ 0]
'base::TimeTicks' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), const std::__1::tuple<> &>' [ 0 6 16 233]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::capacity' [ 0 5 10 118]
'std::__1::__pointer_type<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10]
'ui::(anonymous namespace)::HandleTouchscreenDevicesInWorker' [ 0 4 27]
'base::internal::Unwrap<ui::(anonymous namespace)::UiCallbacks>' [ 0 6 16]
'base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::Destroy' [ 0 6 16 537]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::X11EventSourceGlib>, 1, true>' [ 0 5 10]
'std::__1' [ 0 5]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'base::RefCountedThreadSafe<base::TaskRunner, base::TaskRunnerTraits>::AddRef' [ 0 6 70]
'std::__1::ostream' [ 0 5 10]
'base::internal::CallbackBase::is_null' [ 0 6 16 30]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>::deallocate' [ 0 5 10 60]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &, 1, false>' [ 0 5 10]
'ui::(anonymous namespace)::IsKnownInvalidKeyboardDevice' [ 0 4 27]
'std::__1::forward<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'ui::(anonymous namespace)::DeviceType' [ 0 4 27]
'base::AtomicRefCount::Decrement' [ 0 6 22]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::Run::num_bound_args' [ 0 6 16 233 238]
'std::__1::__tuple_leaf<2, scoped_refptr<base::SingleThreadTaskRunner>, false>::~__tuple_leaf' [ 0 5 10 79]
'std::__1::make_unique<ui::X11EventSourceGlib, _XDisplay *>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >, false>::__tuple_leaf<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &, void>' [ 0 5 10 108]
'ui::X11EventSource::GetTimestamp' [ 0 4 20]
'base::nullopt_t' [ 0 6]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'__time_t' [ 0]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>' [ 0 6 16]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::~__vector_base' [ 0 5 10 93]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::Run' [ 0 6 16 257]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__annotate_new' [ 0 5 10 132]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'XSelectionRequestEvent' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'logging' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::allocator<ui::InputDevice>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'wint_t' [ 0]
'std::__1::remove_reference<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &>' [ 0 5 10]
'ui::(anonymous namespace)::HandleHotplugEventInWorker' [ 0 4 27]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >, false>::__tuple_leaf<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &, void>' [ 0 5 10 120]
'std::__1::operator==<const ui::(anonymous namespace)::DeviceInfo *, const ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'Colormap' [ 0]
'std::__1::enable_if_t<FunctorTraits<RepeatingCallback<void (const vector<InputDevice, allocator<InputDevice> > &)> >::is_nullable, bool>' [ 0 5 10]
'Visual' [ 0]
'std::__1::operator!=<const ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'std::__1::forward<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'ui::(anonymous namespace)::HandleKeyboardDevicesInWorker' [ 0 4 27]
'XColormapEvent' [ 0]
'base::internal::InvokeHelper<false, void>::MakeItSo<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6 16 43]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 145]
'base::StringPiece16' [ 0 6]
'XPointer' [ 0]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >, false>::~__tuple_leaf' [ 0 5 10 120]
'std::__1::remove_reference<ui::XScopedEventSelector *>' [ 0 5 10]
'scoped_refptr<base::SingleThreadTaskRunner>::scoped_refptr' [ 0 45]
'std::__1::__compressed_pair<_GPollFD *, std::__1::default_delete<_GPollFD> >::__compressed_pair<_GPollFD *, true>' [ 0 5 10 78]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), void>::Invoke<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 6 16 303]
'std::__1::remove_reference<ui::InputDevice &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice> &, 1, false>::__get' [ 0 5 10 90]
'std::__1::conditional<false, std::__1::pointer_traits<ui::(anonymous namespace)::ValuatorClassInfo *>::__nat, ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'XIValuatorClassInfo' [ 0]
'std::__1::forward<_XDisplay *>' [ 0 5 10]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::TouchscreenDevice *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 69]
'std::__1::__compressed_pair_elem<ui::PlatformEventSource *, 0, false>::__compressed_pair_elem<ui::X11EventSourceGlib *, void>' [ 0 5 10 71]
'base::internal::ArithmeticOrUnderlyingEnum<int, false>' [ 0 6 16]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'std::__1::__pointer_type<_GPollFD, std::__1::default_delete<_GPollFD> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>::RunImpl<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, 0, 1, 2, 3>::is_weak_call' [ 0 6 16 571 1119]
'logging::CheckOpResult::message' [ 0 9 24]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'base::RepeatingCallback<void ()>::operator=' [ 0 6 34]
'std::__1::__pointer_type_imp::__pointer_type<ui::InputDevice, std::__1::allocator<ui::InputDevice>, true>' [ 0 5 10 30]
'GSourceCallbackFuncs' [ 0]
'gint' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::X11HotplugEventHandler>, 1, true>' [ 0 5 10]
'base::RepeatingCallback<void ()>' [ 0 6]
'base::BindOnce<const base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 6]
'ui::(anonymous namespace)::UiCallbacks::UiCallbacks' [ 0 4 27 40]
'base::BindRepeating<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6]
'XKeyEvent' [ 0]
'base::OnceCallback<void ()>::OnceCallback' [ 0 6 29]
'std::__1::default_delete<ui::XScopedEventSelector>' [ 0 5 10]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::~vector' [ 0 5 10 74]
'std::__1::operator==<const ui::(anonymous namespace)::ValuatorClassInfo *, const ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'std::__1::__const_pointer<ui::TouchscreenDevice, ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice>, true>' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'std::__1::forward<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, 1, true>::__compressed_pair_elem<const std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &, void>' [ 0 5 10 103]
'base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks &>' [ 0 6 16 537]
'_XPrivDisplay' [ 0]
'std::__1::move<ui::(anonymous namespace)::ValuatorClassInfo *&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, true>' [ 0 5 10 30]
'char' [ 0]
'base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag>' [ 0 6]
'std::__1::allocator<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::remove_reference<ui::(anonymous namespace)::DisplayState &>' [ 0 5 10]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), void>' [ 0 6 16]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'std::__1::pointer_traits<ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::allocate' [ 0 5 10 89]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::~vector' [ 0 5 10 86]
'x11::False' [ 0 5]
'XExposeEvent' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), const std::__1::tuple<> &>::is_weak_call' [ 0 6 16 257 404]
'std::__1::remove_reference<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &>' [ 0 5 10]
'std::__1::swap<ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'base::internal::IsNull<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6 16]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::max_size' [ 0 5 10 89]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::~vector' [ 0 5 10 118]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6 16]
'std::__1::unique_ptr<_XDeviceInfo [], gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList> >::operator[]' [ 0 5 10 99]
'std::__1::remove_reference<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::__add_lvalue_reference_impl<_GPollFD, true>' [ 0 5 10]
'std::__1::forward<ui::(anonymous namespace)::DisplayState &>' [ 0 5 10]
'int_least64_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__swap_out_circular_buffer' [ 0 5 10 132]
'std::__1::remove_const<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'std::__1::get<1, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'std::__1::allocator<char>' [ 0 5 10]
'gboolean' [ 0]
'scoped_refptr<base::internal::BindStateBase>::operator bool' [ 0 46]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::X11HotplugEventHandler *, 0, false>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::__tuple_impl<0, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > , std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 5 10 141]
'std::__1::remove_reference<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 5 10]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>::construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 60]
'std::__1::__pointer_type<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'std::__1::forward<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 5 10]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::max_size' [ 0 5 10 86]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6 16]
'XMotionEvent' [ 0]
'std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>::allocate' [ 0 5 10 60]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<XIDeviceInfo, true>' [ 0 5 10]
'base::internal::ApplyCancellationTraitsImpl<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, 0>' [ 0 6 16]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10 131]
'std::__1::conditional<true, const ui::InputDevice &, ui::InputDevice &&>' [ 0 5 10]
'std::__1::tuple<>' [ 0 5 10]
'__int16_t' [ 0]
'std::__1::__to_raw_pointer<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::Run' [ 0 6 126]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::~__vector_base' [ 0 5 10 81]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::forward<const base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &>' [ 0 5 10]
'int8_t' [ 0]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>' [ 0 6 16]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::__end_cap' [ 0 5 10 95]
'std::__1::remove_reference<ui::InputDevice>' [ 0 5 10]
'std::__1::index_sequence<0UL>' [ 0 5 10]
'std::__1::chrono' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>::RunOnce' [ 0 6 16 571]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::vector' [ 0 5 10 118]
'std::__1::char_traits<char>::find' [ 0 5 10 29]
'std::__1::remove_reference<const ui::TouchscreenDevice &>' [ 0 5 10]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::~__split_buffer' [ 0 5 10 83]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::streamoff' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::end' [ 0 5 10 132]
'std::__1::__pointer_type_imp::__pointer_type<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector>, false>' [ 0 5 10 30]
'base::AtomicRefCount::IsZero' [ 0 6 22]
'std::__1::forward<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &)>' [ 0 5 10]
'std::__1::move<ui::InputDevice &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::ValuatorClassInfo *>::__wrap_iter' [ 0 5 10 77]
'base::TimeDelta::FromProduct' [ 0 6 17]
'int_least32_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::DeviceInfo *>::operator++' [ 0 5 10 70]
'std::__1::remove_reference<ui::TouchscreenDevice *&>' [ 0 5 10]
'ui::X11EventSource::OnDispatcherListChanged' [ 0 4 20]
'base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::Destroy' [ 0 6 16 119]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'base::OnceCallback<void ()>' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>' [ 0 6 16]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::__split_buffer' [ 0 5 10 83]
'std::__1::__const_void_pointer<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, false>' [ 0 5 10]
'std::__1::__tuple_leaf<2, scoped_refptr<base::SingleThreadTaskRunner>, false>::__tuple_leaf<scoped_refptr<base::SingleThreadTaskRunner>, void>' [ 0 5 10 79]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 6 16 43]
'std::__1::__tuple_types<>' [ 0 5 10]
'XWindow' [ 0]
'std::__1::enable_if_t<FunctorTraits<RepeatingCallback<void (const vector<TouchscreenDevice, allocator<TouchscreenDevice> > &)> >::is_nullable, bool>' [ 0 5 10]
'ui::(anonymous namespace)::TouchClassInfo::TouchClassInfo' [ 0 4 27 43]
'std::__1::remove_reference<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 5 10]
'scoped_refptr<base::SingleThreadTaskRunner>::~scoped_refptr' [ 0 45]
'std::__1::move<std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> &>' [ 0 5 10]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'std::__1::__const_void_pointer<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice>, false>' [ 0 5 10]
'std::__1::unique_ptr<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector> >::reset' [ 0 5 10 101]
'std::__1::__compressed_pair<_XDeviceInfo *, gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList> >' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6 16]
'base::BindUnwrapTraits<ui::(anonymous namespace)::UiCallbacks>' [ 0 6]
'__uint64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::InputDevice> &, void>' [ 0 5 10 84]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10 132]
'std::__1::forward<ui::TouchscreenDevice &>' [ 0 5 10]
'XFocusChangeEvent' [ 0]
'std::__1::remove_reference<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib>, false>' [ 0 5 10 30]
'ui::X11EventSource' [ 0 4]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 67]
'guint' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct_backward<ui::TouchscreenDevice *>' [ 0 5 10 73]
'XSelectionClearEvent' [ 0]
'ui::(anonymous namespace)::OnKeyboardDevices' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::max_size' [ 0 5 10 96]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::move<ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::XScopedEventSelector *, 0, false>::__compressed_pair_elem<ui::XScopedEventSelector *, void>' [ 0 5 10 72]
'std::__1::move<ui::TouchscreenDevice *&>' [ 0 5 10]
'std::__1::__tuple_leaf<2, scoped_refptr<base::SingleThreadTaskRunner>, false>' [ 0 5 10]
'XIDeviceInfo' [ 0]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >' [ 0 6 16]
'_G_fpos64_t' [ 0]
'std::__1::iterator_traits<const ui::(anonymous namespace)::DeviceInfo *>' [ 0 5 10]
'ui::X11EventSource::GetInstance' [ 0 4 20]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'gfx::Vector2d' [ 0 5]
'base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::~RepeatingCallback' [ 0 6 114]
'std::__1::forward<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 5 10]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::remove_reference<ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> >::__compressed_pair<nullptr_t, const std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10 99]
'std::__1::__throw_length_error' [ 0 5 10]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void>::IsCancelled<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> >' [ 0 6 270]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void>::Invoke<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 6 16 163]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::allocate' [ 0 5 10 118]
'std::__1::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >::reset' [ 0 5 10 97]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'std::__1::allocator<ui::InputDevice>::construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 38]
'XConfigureEvent' [ 0]
'std::__1::__compressed_pair<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10 146]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10 100]
'std::__1::__pointer_type_imp::__pointer_type<_XDeviceInfo, gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList>, false>' [ 0 5 10 30]
'__syscall_slong_t' [ 0]
'int_least16_t' [ 0]
'std::__1::__size_type<std::__1::allocator<ui::TouchscreenDevice>, long, true>' [ 0 5 10]
'std::__1::remove_reference<const base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &>' [ 0 5 10]
'std::__1::conditional<false, const ui::(anonymous namespace)::DeviceInfo &, ui::(anonymous namespace)::DeviceInfo &&>' [ 0 5 10]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 73]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >::~unique_ptr' [ 0 5 10 105]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::__alloc' [ 0 5 10 95]
'base::internal::as_unsigned<int>' [ 0 6 16]
'gushort' [ 0]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::size' [ 0 5 10 118]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::max_size' [ 0 5 10 132]
'std::__1::allocator<ui::TouchscreenDevice>::construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 44]
'base::time_internal' [ 0 6]
'ui::(anonymous namespace)::GLibX11Source' [ 0 4 27]
'base::BindOnce<const base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)> &, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__construct_backward<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::~vector' [ 0 5 10 132]
'__uint32_t' [ 0]
'base::Callback<MakeUnboundRunType<void (*)()> >' [ 0 6]
'time_t' [ 0]
'std::__1::__tuple_leaf<3, ui::(anonymous namespace)::UiCallbacks, false>::~__tuple_leaf' [ 0 5 10 74]
'std::__1::get<3, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'bool' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::Run' [ 0 6 114]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::__alloc' [ 0 5 10 141]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::second' [ 0 5 10 132]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__make_iter' [ 0 5 10 132]
'XIDeviceList' [ 0]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'base::internal::OptionalBase<gfx::Point>::OptionalBase' [ 0 6 16 42]
'XAtom' [ 0]
'__mbstate_t' [ 0]
'std::__1::conditional<true, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, std::__1::__nat>' [ 0 5 10]
'x11::Success' [ 0 5]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'clock_t' [ 0]
'std::__1::remove_reference<ui::(anonymous namespace)::ValuatorClassInfo &>' [ 0 5 10]
'std::__1::__const_void_pointer<ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, false>' [ 0 5 10]
'ui::(anonymous namespace)::XSourceCheck' [ 0 4 27]
'std::__1::unique_ptr<ui::PlatformEventSource, std::__1::default_delete<ui::PlatformEventSource> >::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib>, void, void>' [ 0 5 10 99]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 99]
'base::subtle::RefCountedThreadSafeBase::AddRef' [ 0 6 14 40]
'std::__1::__compressed_pair_elem<std::__1::default_delete<ui::XScopedEventSelector>, 1, true>' [ 0 5 10]
'base::internal::ApplyCancellationTraitsImpl<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, 0>' [ 0 6 16]
'base::internal::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>::BindState<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6 16 119]
'std::__1::__pointer_type<_XDeviceInfo, gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList> >' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::vector' [ 0 5 10 74]
'ui::X11EventSourceGlib::OnDispatcherListChanged' [ 0 4 24]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 131]
'std::__1::__const_pointer<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, true>' [ 0 5 10]
'std::__1::char_traits<char>::compare' [ 0 5 10 29]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::construct<ui::TouchscreenDevice, ui::TouchscreenDevice>' [ 0 5 10 73]
'std::__1::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >::release' [ 0 5 10 97]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::forward<ui::(anonymous namespace)::DeviceInfo &>' [ 0 5 10]
'std::__1::locale' [ 0 5 10]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::__add_lvalue_reference_impl<ui::X11EventSourceGlib, true>' [ 0 5 10]
'base::nullopt' [ 0 6]
'base::internal::FunctorTraits<void (*)(), void>::Invoke<void (*const &)()>' [ 0 6 16 49]
'int64_t' [ 0]
'std::__1::__size_type<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, long, true>' [ 0 5 10]
'base::BindUnwrapTraits<scoped_refptr<base::SingleThreadTaskRunner> >' [ 0 6]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__annotate_new' [ 0 5 10 118]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::push_back' [ 0 5 10 132]
'std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::Run::num_bound_args' [ 0 6 16 257 262]
'gfx' [ 0]
'base::internal::OptionalBase<gfx::Point>::OptionalBase<gfx::Point>' [ 0 6 16 42]
'base::internal::Unwrap<scoped_refptr<base::SingleThreadTaskRunner> >' [ 0 6 16]
'base::TimeDelta::Min' [ 0 6 17]
'std::__1::forward<void (*const &)()>' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >' [ 0 5 10]
'std::__1::index_sequence<>' [ 0 5 10]
'long long unsigned int' [ 0]
'ui::(anonymous namespace)::XSourceFuncs' [ 0 4 27]
'std::__1::pointer_traits<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::data' [ 0 5 10 86]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, 0>' [ 0 6 16 250]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__max_size' [ 0 5 10 89]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::DeviceInfo *>::__wrap_iter' [ 0 5 10 70]
'std::__1::remove_reference<ui::TouchscreenDevice &>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::Run::num_bound_args' [ 0 6 16 73 78]
'std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'int_fast8_t' [ 0]
'scoped_refptr<base::TaskRunner>' [ 0]
'base::internal::FunctorTraits<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, void>' [ 0 6 16]
'base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::RepeatingCallback' [ 0 6 126]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >::operator->' [ 0 5 10 69]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'std::__1::allocator<ui::TouchscreenDevice>::destroy' [ 0 5 10 44]
'base::TimeDelta' [ 0 6]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__alloc' [ 0 5 10 93]
'XIModifierState' [ 0]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::__end_cap' [ 0 5 10 141]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::swap<ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'std::__1::__unique_if<ui::X11EventSourceGlib>' [ 0 5 10]
'base::BindUnwrapTraits<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >::Unwrap<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >' [ 0 6 143]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::__split_buffer' [ 0 5 10 127]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::forward<std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10]
'std::__1::add_lvalue_reference<_XDeviceInfo>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>::MakeItSo<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6 16 43]
'_GSourceFuncs' [ 0]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__recommend' [ 0 5 10 118]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::select_on_container_copy_construction' [ 0 5 10 67]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'std::__1::move_if_noexcept<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'std::__1::__pointer_type<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >' [ 0 5 10]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::begin' [ 0 5 10 132]
'__pthread_internal_list' [ 0]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'base::internal::Unwrap<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 6 16]
'std::__1::tuple_element<1, std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::~tuple' [ 0 5 10 92]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__destroy<ui::InputDevice>' [ 0 5 10 67]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::atomic<int>' [ 0 5 10]
'int32_t' [ 0]
'gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList>' [ 0 5]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'short' [ 0]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, 0>::is_method' [ 0 6 16 250 468]
'DeviceList<XIDeviceInfo, &XIFreeDeviceInfo>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'base::BindRepeating<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &, 1, false>' [ 0 5 10]
'std::__1::__tuple_leaf<1, ui::(anonymous namespace)::DisplayState, false>::__tuple_leaf<ui::(anonymous namespace)::DisplayState &, void>' [ 0 5 10 75]
'std::__1::__const_void_pointer<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, false>' [ 0 5 10]
'std::__1::forward<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice> &, void>' [ 0 5 10 90]
'base::SequenceCheckerImpl' [ 0 6]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::vector' [ 0 5 10 86]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), void>::Invoke<void (*const &)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &), const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &>' [ 0 6 16 129]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::~__tuple_impl' [ 0 5 10 141]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>::RunOnce::num_bound_args' [ 0 6 16 274 283]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::destroy<ui::TouchscreenDevice>' [ 0 5 10 73]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, false>::~__tuple_leaf' [ 0 5 10 152]
'std::__1::remove_reference<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'base::internal::PassingTraits<const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &, false>' [ 0 6 16]
'std::__1::get<0, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct<ui::InputDevice, const ui::InputDevice &>' [ 0 5 10 67]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::~BindState' [ 0 6 16 216]
'ui::(anonymous namespace)::kKnownInvalidKeyboardDeviceNames' [ 0 4 27]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::select_on_container_copy_construction' [ 0 5 10 89]
'std::__1::__tuple_leaf<3, ui::(anonymous namespace)::UiCallbacks, false>::__tuple_leaf<ui::(anonymous namespace)::UiCallbacks &, void>' [ 0 5 10 74]
'GSourceFunc' [ 0]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), void>' [ 0 6 16]
'std::__1::__compressed_pair_elem<ui::(anonymous namespace)::DeviceInfo *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 85]
'std::__1::forward<ui::X11EventSourceGlib *&>' [ 0 5 10]
'ui::X11HotplugEventHandler::~X11HotplugEventHandler' [ 0 4 28]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>::clear' [ 0 5 10 83]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'GSource' [ 0]
'std::__1::conditional<true, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::__const_pointer<std::__1::basic_string<char>, std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10]
'std::__1::move<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> &>' [ 0 5 10]
'std::__1::integer_sequence<unsigned long>' [ 0 5 10]
'ui::(anonymous namespace)::HandleMouseDevicesInWorker' [ 0 4 27]
'std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks &, false, false>' [ 0 5 10 261]
'std::__1::get<0, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >' [ 0 5 10]
'XGenericEventCookie' [ 0]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::~__split_buffer' [ 0 5 10 95]
'std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__make_iter' [ 0 5 10 118]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice>, 1, true>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::data' [ 0 5 10 74]
'XCirculateRequestEvent' [ 0]
'_XEvent' [ 0]
'__clock_t' [ 0]
'ui::X11EventSource::HasInstance' [ 0 4 20]
'ui::X11EventSource::ExtractCookieDataDispatchEvent' [ 0 4 20]
'base::RepeatingCallback<void ()>::RepeatingCallback' [ 0 6 34]
'std::__1::remove_reference<const std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>' [ 0 5 10]
'std::__1::__to_raw_pointer<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'ui::(anonymous namespace)::ExtractTimeFromXEvent' [ 0 4 27]
'base::Bind<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6]
'ui::X11EventSource::DispatchXEventNow' [ 0 4 20]
'std::__1::tuple_element<3, std::__1::__tuple_types<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::~BindState' [ 0 6 16 240]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::max_size' [ 0 5 10 67]
'ui::(anonymous namespace)::DeviceInfo::DeviceInfo' [ 0 4 27 39]
'int_fast64_t' [ 0]
'std::__1::remove_reference<void (*)()>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::allocate' [ 0 5 10 74]
'std::__1::__pointer_type_imp::__pointer_type<XIDeviceInfo, gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::basic_string<char> >, 1, true>' [ 0 5 10]
'base::internal::OptionalStorageBase<gfx::Point, true>::OptionalStorageBase' [ 0 6 16 55]
'std::__1::__second_tag' [ 0 5 10]
'int16_t' [ 0]
'__suseconds_t' [ 0]
'std::__1::once_flag' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::allocator<ui::TouchscreenDevice>::deallocate' [ 0 5 10 44]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::add_lvalue_reference<ui::XScopedEventSelector>' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'__uint8_t' [ 0]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::PlatformThreadRef' [ 0 6]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<_GPollFD>, 1, true>' [ 0 5 10]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void>::IsCancelled<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)> >' [ 0 6 246]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__end_cap' [ 0 5 10 139]
'ui::X11EventSource::~X11EventSource' [ 0 4 20]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::DeviceInfo *>::base' [ 0 5 10 70]
'std::__1::enable_if_t<FunctorTraits<void (*)(const vector<DeviceInfo, allocator<DeviceInfo> > &, const DisplayState &, scoped_refptr<TaskRunner>, const UiCallbacks &)>::is_nullable, bool>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__recommend' [ 0 5 10 74]
'std::__1::__compressed_pair<ui::XScopedEventSelector *, std::__1::default_delete<ui::XScopedEventSelector> >::__compressed_pair<ui::XScopedEventSelector *, true>' [ 0 5 10 110]
'std::__1::add_lvalue_reference<_GPollFD>' [ 0 5 10]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'base::Time' [ 0 6]
'base::internal' [ 0 6]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>' [ 0 6 16 73]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::clear' [ 0 5 10 127]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'base::internal::CheckOnFailure' [ 0 6 16]
'ui::PlatformEventSource::CreateDefault' [ 0 4 25]
'std::__1::remove_reference<std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::~BindState' [ 0 6 16 131]
'ui::(anonymous namespace)::ValuatorClassInfo' [ 0 4 27]
'x11::Bool' [ 0 5]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >' [ 0 6 16]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >::num_bound_args' [ 0 6 16 258]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'base::FilePath' [ 0 6]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'std::__1::remove_reference<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> &>::second' [ 0 5 10 88]
'uintptr_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'base::internal::checked_cast<unsigned long, base::internal::CheckOnFailure, int>' [ 0 6 16]
'base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::~RepeatingCallback' [ 0 6 126]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::__destruct_at_end' [ 0 5 10 127]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>::~__split_buffer' [ 0 5 10 127]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct<ui::InputDevice, ui::InputDevice>' [ 0 5 10 67]
'std::__1::__compressed_pair<ui::(anonymous namespace)::DeviceInfo *, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'int_fast32_t' [ 0]
'std::__1::unique_ptr<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector> >' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::__tuple_types<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::deallocate' [ 0 5 10 96]
'std::__1::__split_buffer<ui::InputDevice, std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'base::Lock' [ 0 6]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__destroy<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 89]
'std::__1::operator==<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::__tuple_impl<0, 1, 2, 3, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks &>' [ 0 5 10 307]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::__split_buffer<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> &>::__split_buffer' [ 0 5 10 95]
'ui::X11EventSource::GetCurrentServerTime::atomic_histogram_pointer' [ 0 4 20 42]
'FILE' [ 0]
'std::__1::conditional<true, const ui::TouchscreenDevice &, ui::TouchscreenDevice &&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<gfx::XObjectDeleter<_XDeviceInfo, void, &XFreeDeviceList>, 1, true>' [ 0 5 10]
'ScreenFormat' [ 0]
'GSourceFuncs' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'std::__1::__vector_base<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__alloc' [ 0 5 10 139]
'scoped_refptr<base::SingleThreadTaskRunner>' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::destroy<ui::(anonymous namespace)::ValuatorClassInfo>' [ 0 5 10 96]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::capacity' [ 0 5 10 93]
'std::__1::swap<ui::InputDevice *>' [ 0 5 10]
'std::__1::__const_pointer<ui::InputDevice, ui::InputDevice *, std::__1::allocator<ui::InputDevice>, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &, 1, false>::__get' [ 0 5 10 113]
'base::internal::Unwrap<ui::(anonymous namespace)::DisplayState>' [ 0 6 16]
'std::__1::remove_reference<std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > &>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::(anonymous namespace)::ValuatorClassInfo *>::base' [ 0 5 10 77]
'std::__1::remove_reference<const std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'std::__1::forward<const ui::InputDevice &>' [ 0 5 10]
'base::subtle' [ 0 6]
'ui::(anonymous namespace)::TouchClassInfo' [ 0 4 27]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__recommend' [ 0 5 10 132]
'base::internal::CallbackBase::CallbackBase' [ 0 6 16 30]
'ui::X11EventSource::display' [ 0 4 20]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::InputDevice> &>' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::pointer_traits<ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::__construct_at_end<ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10 132]
'base::internal::UnderlyingType<int>' [ 0 6 16]
'std::__1::tuple_element<1, std::__1::__tuple_types<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__construct<ui::(anonymous namespace)::DeviceInfo, ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10 89]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'std::__1::forward<const std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo>, 1, true>' [ 0 5 10]
'double_t' [ 0]
'std::__1::default_delete<ui::X11HotplugEventHandler>::operator()' [ 0 5 10 54]
'__int64_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::construct<ui::InputDevice, ui::InputDevice>' [ 0 5 10 67]
'std::__1::enable_if_t<FunctorTraits<void (*)(const vector<TouchscreenDevice, allocator<TouchscreenDevice> > &)>::is_nullable, bool>' [ 0 5 10]
'std::__1::forward<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > >' [ 0 5 10]
'XCrossingEvent' [ 0]
'Time' [ 0]
'XClientMessageEvent' [ 0]
'std::__1::__compressed_pair_elem<XIDeviceInfo *, 0, false>' [ 0 5 10]
'gfx::Size::Size' [ 0 5 11]
'base::internal::ApplyCancellationTraits<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >::num_bound_args' [ 0 6 16 282]
'base::internal::IsValueInRangeFastOp<unsigned long, int, void>::Do' [ 0 6 16 64]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'std::__1::allocator<ui::InputDevice>::destroy' [ 0 5 10 38]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 87]
'std::__1::__tuple_types<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'wchar_t' [ 0]
'std::__1::remove_reference<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'XMappingEvent' [ 0]
'XITouchClassInfo' [ 0]
'std::__1::vector<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::size' [ 0 5 10 132]
'std::__1::default_delete<_GPollFD>::operator()' [ 0 5 10 36]
'Atom' [ 0]
'base::internal::PassingTraits<const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &, false>' [ 0 6 16]
'std::__1::index_sequence<0UL, 1UL, 2UL, 3UL>' [ 0 5 10]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::capacity' [ 0 5 10 74]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>::RunOnce' [ 0 6 16 250]
'uint32_t' [ 0]
'pthread_t' [ 0]
'std::__1::forward<ui::InputDevice &>' [ 0 5 10]
'int_fast16_t' [ 0]
'base::subtle::RefCountedThreadSafeBase::ReleaseImpl' [ 0 6 14 40]
'std::__1::default_delete<ui::PlatformEventSource>' [ 0 5 10]
'XIDeviceEvent' [ 0]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'ui::X11EventSourceGlib::~X11EventSourceGlib' [ 0 4 24]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice> &, 1, false>' [ 0 5 10]
'base::Callback<void (const std::vector<TouchscreenDevice> &)>' [ 0 6]
'XAnyClassPtr' [ 0]
'ui::X11EventSource::GetRootCursorLocationFromCurrentEvent' [ 0 4 20]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>::RunImpl<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), const std::__1::tuple<> &>::is_method' [ 0 6 16 257 404]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'base::Bind<void (*)()>' [ 0 6]
'std::__1::unique_ptr<ui::X11EventSourceGlib, std::__1::default_delete<ui::X11EventSourceGlib> >' [ 0 5 10]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find' [ 0 5 10 87]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> >, true>' [ 0 5 10 30]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__end_cap' [ 0 5 10 93]
'x11' [ 0]
'std::__1::allocator<ui::TouchscreenDevice>::construct<ui::TouchscreenDevice, const ui::TouchscreenDevice &>' [ 0 5 10 44]
'__vtbl_ptr_type' [ 0]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 6 16 43]
'base::in_place' [ 0 6]
'std::__1::forward<std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct_range_forward<ui::InputDevice *, ui::InputDevice *>' [ 0 5 10 67]
'std::__1::remove_reference<ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'std::__1::default_delete<ui::X11EventSourceGlib>::operator()' [ 0 5 10 50]
'intmax_t' [ 0]
'std::__1::__vector_base<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >::__destruct_at_end' [ 0 5 10 125]
'std::__1::forward<std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > > >' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<ui::X11EventSourceGlib *, 0, false>::__compressed_pair_elem<ui::X11EventSourceGlib *&, void>' [ 0 5 10 70]
'ui::X11EventSource::GetCurrentServerTime' [ 0 4 20]
'std::__1::unique_ptr<ui::X11HotplugEventHandler, std::__1::default_delete<ui::X11HotplugEventHandler> >::unique_ptr<true, void>' [ 0 5 10 105]
'__int32_t' [ 0]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'_GPollFD' [ 0]
'std::__1::__pointer_type<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, void ()>::RunImpl<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>, 0, 1, 2, 3>' [ 0 6 16 571]
'std::__1::move<std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > > &>' [ 0 5 10]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<ui::InputDevice> &>' [ 0 5 10]
'base::internal::OptionalBase<gfx::Point>' [ 0 6 16]
'std::__1::forward<const std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> &>' [ 0 5 10]
'base::internal::IsNull<void (*)(const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>' [ 0 6 16]
'scoped_refptr<base::TaskRunner>::~scoped_refptr' [ 0 33]
'std::__1::operator!=<const ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'base::Callback<void ()>' [ 0 6]
'uint_least8_t' [ 0]
'base::internal::OptionalStorage<gfx::Point, true, true>' [ 0 6 16]
'std::__1::forward<void (*)()>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >::~__tuple_impl' [ 0 5 10 129]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'std::__1::remove_reference<ui::(anonymous namespace)::UiCallbacks &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::construct<ui::TouchscreenDevice, const ui::TouchscreenDevice &>' [ 0 5 10 73]
'std::__1::__compressed_pair<ui::XScopedEventSelector *, std::__1::default_delete<ui::XScopedEventSelector> >' [ 0 5 10]
'base::internal::OptionalStorage<gfx::Point, true, true>::OptionalStorage' [ 0 6 16 57]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<_GPollFD *, 0, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> >::select_on_container_copy_construction' [ 0 5 10 96]
'std::__1::tuple_element<2, std::__1::tuple<std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks> >' [ 0 5 10]
'ui::(anonymous namespace)::OnMouseDevices' [ 0 4 27]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__construct_at_end<ui::InputDevice *>' [ 0 5 10 74]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::remove_reference<void (*&)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &)>' [ 0 5 10]
'std::__1::unique_ptr<ui::XScopedEventSelector, std::__1::default_delete<ui::XScopedEventSelector> >::~unique_ptr' [ 0 5 10 101]
'std::__1::min<unsigned long>' [ 0 5 10]
'uint16_t' [ 0]
'base::BindUnwrapTraits<scoped_refptr<base::SingleThreadTaskRunner> >::Unwrap<scoped_refptr<base::SingleThreadTaskRunner> >' [ 0 6 70]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > &)>, std::__1::tuple<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >, 0>::is_weak_call' [ 0 6 16 250 468]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), void>' [ 0 6 16]
'base::CallbackCancellationTraits<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void>' [ 0 6]
'std::__1::__tuple_leaf<0, std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >, false>' [ 0 5 10]
'ui::(anonymous namespace)::GetDevicePath' [ 0 4 27]
'ui::(anonymous namespace)::DeviceInfo::~DeviceInfo' [ 0 4 27 39]
'ui::(anonymous namespace)::OnTouchscreenDevices' [ 0 4 27]
'std::__1::__compressed_pair<XIDeviceInfo *, gfx::XObjectDeleter<XIDeviceInfo, void, &XIFreeDeviceInfo> >' [ 0 5 10]
'XIAnyClassInfo' [ 0]
'long double' [ 0]
'Screen' [ 0]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::clear' [ 0 5 10 81]
'std::__1::remove_reference<const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), void>::Invoke<void (*const &)(const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &), const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &>' [ 0 6 16 141]
'base::internal::CommonMax<int, unsigned long>' [ 0 6 16]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::forward<ui::(anonymous namespace)::UiCallbacks &>' [ 0 5 10]
'va_list' [ 0]
'std::__1::move<void (*&)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &)>' [ 0 5 10]
'std::__1::forward<ui::X11HotplugEventHandler *>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice>, 1, true>' [ 0 5 10]
'std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >::~tuple' [ 0 5 10 104]
'std::__1::__compressed_pair<ui::X11HotplugEventHandler *, std::__1::default_delete<ui::X11HotplugEventHandler> >::__compressed_pair<ui::X11HotplugEventHandler *, true>' [ 0 5 10 114]
'std::__1::unique_ptr<_GPollFD, std::__1::default_delete<_GPollFD> >::unique_ptr<true, void>' [ 0 5 10 69]
'std::__1::__const_pointer<ui::(anonymous namespace)::ValuatorClassInfo, ui::(anonymous namespace)::ValuatorClassInfo *, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo>, true>' [ 0 5 10]
'base::internal::BindState<void (*)(const std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> > &, const ui::(anonymous namespace)::DisplayState &, scoped_refptr<base::TaskRunner>, const ui::(anonymous namespace)::UiCallbacks &), std::__1::vector<ui::(anonymous namespace)::DeviceInfo, std::__1::allocator<ui::(anonymous namespace)::DeviceInfo> >, ui::(anonymous namespace)::DisplayState, scoped_refptr<base::SingleThreadTaskRunner>, ui::(anonymous namespace)::UiCallbacks>::~BindState' [ 0 6 16 537]
'std::__1::conditional<false, std::__1::pointer_traits<ui::(anonymous namespace)::DeviceInfo *>::__nat, ui::(anonymous namespace)::DeviceInfo>' [ 0 5 10]
'std::__1::forward<std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> > >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>::RunImpl<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::tuple<std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, 0>::is_method' [ 0 6 16 274 516]
'GC' [ 0]
'ui::(anonymous namespace)::UiCallbacks' [ 0 4 27]
'std::__1::__add_lvalue_reference_impl<_XDeviceInfo, true>' [ 0 5 10]
'XResizeRequestEvent' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase::Release' [ 0 6 14 40]
'std::__1::allocator<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__tuple_leaf<3, ui::(anonymous namespace)::UiCallbacks, false>' [ 0 5 10]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 73]
'std::__1::iterator_traits<const ui::(anonymous namespace)::ValuatorClassInfo *>' [ 0 5 10]
'XDevice' [ 0]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::__split_buffer<ui::(anonymous namespace)::ValuatorClassInfo, std::__1::allocator<ui::(anonymous namespace)::ValuatorClassInfo> &>::~__split_buffer' [ 0 5 10 141]
'base::internal::Invoker<base::internal::BindState<base::RepeatingCallback<void (const std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > &)>, std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> > >, void ()>' [ 0 6 16]
