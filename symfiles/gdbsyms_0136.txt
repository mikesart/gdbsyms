'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::operator=' [ 0 5 10 86]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::data' [ 0 5 10 104]
'AnnotateBarrierInit' [ 0]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::__compressed_pair<ui::TouchDeviceTransform *, std::__1::allocator<ui::TouchDeviceTransform> >' [ 0 5 10]
'pthread_mutex_t' [ 0]
'ui::DeviceDataManager::NotifyObserversTouchpadDeviceConfigurationChanged' [ 0 4 23]
'ui::InputDeviceManager::GetInstance' [ 0 4 24]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::~vector' [ 0 5 10 104]
'std::__1::__to_raw_pointer<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::iterator_traits<ui::InputDeviceEventObserver *const *>' [ 0 5 10]
'base::FilePath::empty' [ 0 6 16]
'std::__1::__atomic_base<unsigned int, true>' [ 0 5 10]
'std::__1::__wrap_iter<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::__copy<ui::InputDevice *, ui::InputDevice *>' [ 0 5 10]
'std::__1::__alloc_traits_difference_type<std::__1::allocator<ui::InputDeviceEventObserver *>, ui::InputDeviceEventObserver **, true>' [ 0 5 10]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::allocator<ui::InputDeviceEventObserver *>::construct<ui::InputDeviceEventObserver *, ui::InputDeviceEventObserver *const &>' [ 0 5 10 53]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::__alloc' [ 0 5 10 113]
'std::__1::true_type' [ 0 5 10]
'std::__1::false_type' [ 0 5 10]
'std::__1::__compressed_pair<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 116]
'unsigned char' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::push_back' [ 0 5 10 104]
'std::__1::__compressed_pair_elem<ui::InputDevice *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 63]
'__va_list_tag' [ 0]
'AnnotatePublishMemoryRange' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::__construct<ui::InputDeviceEventObserver *, ui::InputDeviceEventObserver *const &>' [ 0 5 10 82]
'gfx::Size' [ 0 5]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__make_iter' [ 0 5 10 104]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::operator->' [ 0 6 79]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'max_align_t' [ 0]
'std::__1::__wrap_iter<ui::TouchscreenDevice *>::operator++' [ 0 5 10 48]
'ui::DeviceDataManager::HasInstance' [ 0 4 23]
'base::internal::BindState<void (*)()>' [ 0 6 16]
'AnnotateThreadName' [ 0]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::operator==<const ui::TouchDeviceTransform *, const ui::TouchDeviceTransform *>' [ 0 5 10]
'AnnotatePCQDestroy' [ 0]
'AnnotatePCQPut' [ 0]
'logging::LogSeverity' [ 0 9]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::AddObserver' [ 0 6 63]
'size_t' [ 0]
'std::__1::distance<ui::InputDevice *>' [ 0 5 10]
'ui::DeviceHotplugEventObserver::~DeviceHotplugEventObserver' [ 0 4 32]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::__wrap_iter<ui::InputDevice *>' [ 0 5 10]
'std::__1::ostringstream' [ 0 5 10]
'base::ThreadLocalPointer<ui::InputDeviceManager>::Get' [ 0 6 50]
'std::__1::array<ui::TouchDeviceTransform, 128>::operator[]' [ 0 5 10 48]
'std::__1::__distance<ui::InputDevice *>' [ 0 5 10]
'std::__1::copy<ui::TouchscreenDevice *, ui::TouchscreenDevice *>' [ 0 5 10]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::Iter' [ 0 6 63 69]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__annotate_new' [ 0 5 10 74]
'base::RepeatingCallback<void ()>::~RepeatingCallback' [ 0 6 34]
'__uintmax_t' [ 0]
'base::internal::BindState<void (*)()>::Destroy' [ 0 6 16 39]
'std::__1::distance<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::begin' [ 0 5 10 74]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::end' [ 0 5 10 86]
'gfx::Point3F' [ 0 5]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'base::internal::WeakPtrBase' [ 0 6 16]
'ui::DeviceDataManager::NotifyObserversKeyboardDeviceConfigurationChanged' [ 0 4 23]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::remove_reference<ui::InputDeviceEventObserver *const &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::deallocate' [ 0 5 10 73]
'std::__1::array<ui::TouchDeviceTransform, 128>::array' [ 0 5 10 48]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'tm' [ 0]
'ui::DeviceDataManager::ApplyTouchTransformer' [ 0 4 23]
'std::__1::__to_raw_pointer<ui::InputDeviceEventObserver *>' [ 0 5 10]
'std::nullptr_t' [ 0 5]
'std::__1::conditional<false, std::__1::pointer_traits<ui::InputDeviceEventObserver **>::__nat, ui::InputDeviceEventObserver *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::destroy<ui::InputDeviceEventObserver *>' [ 0 5 10 82]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::__advance<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'AnnotateRWLockDestroy' [ 0]
'std::__1::__wrap_iter<const ui::TouchDeviceTransform *>' [ 0 5 10]
'ui::DeviceDataManager::ClearTouchDeviceAssociations' [ 0 4 23]
'uint_least64_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::allocate' [ 0 5 10 82]
'SkScalar' [ 0]
'std::__1::__vector_base<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >' [ 0 5 10]
'std::__1::operator!=<ui::InputDeviceEventObserver *const *>' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::__destruct_at_end' [ 0 5 10 113]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__recommend' [ 0 5 10 86]
'std::__1::__distance<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::__compressed_pair<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *> &>::__compressed_pair<nullptr_t, std::__1::allocator<ui::InputDeviceEventObserver *> &>' [ 0 5 10 117]
'ui' [ 0]
'std::__1::__wrap_iter<ui::TouchscreenDevice *>::base' [ 0 5 10 48]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>' [ 0 5 10]
'std::__1::__pointer_type<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >' [ 0 5 10]
'base::CompareCase' [ 0 6]
'std::__1::remove_reference<void (*const &)()>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<ui::TouchscreenDevice *>::__nat, ui::TouchscreenDevice>' [ 0 5 10]
'base' [ 0]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::allocator<ui::InputDevice>::allocate' [ 0 5 10 38]
'std::__1::__compressed_pair_elem<ui::TouchscreenDevice *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 69]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__destroy<ui::TouchscreenDevice>' [ 0 5 10 73]
'base::internal::WeakReferenceOwner' [ 0 6 16]
'ui::(anonymous namespace)' [ 0 4]
'ui::DeviceDataManager::OnTouchscreenDevicesUpdated' [ 0 4 23]
'ui::InputDeviceManager::InputDeviceManager' [ 0 4 24]
'fpos_t' [ 0]
'std::__1::operator==<ui::InputDeviceEventObserver **, ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::allocate' [ 0 5 10 86]
'std::__1::memory_order' [ 0 5 10]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::forward<ui::InputDeviceEventObserver *const &>' [ 0 5 10]
'AnnotateHappensBefore' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::deallocate' [ 0 5 10 74]
'std::__1::__wrap_iter<ui::TouchscreenDevice *>::__wrap_iter' [ 0 5 10 48]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct_range_forward<ui::TouchscreenDevice *, ui::TouchscreenDevice *>' [ 0 5 10 73]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::vector' [ 0 5 10 104]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__annotate_delete' [ 0 5 10 104]
'std::__1::remove_reference<void (&)()>' [ 0 5 10]
'uint_least32_t' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__annotate_new' [ 0 5 10 86]
'SkRect' [ 0]
'std::__1::__unwrap_iter<ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__make_iter' [ 0 5 10 86]
'std::__1::operator!=<const ui::TouchDeviceTransform *>' [ 0 5 10]
'long unsigned int' [ 0]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__copy_assign_alloc' [ 0 5 10 93]
'std::__1::__compressed_pair_elem<ui::InputDevice *, 0, false>' [ 0 5 10]
'base::SupportsWeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::AsWeakPtr' [ 0 6 87]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::move<ui::InputDeviceEventObserver *&>' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<ui::InputDeviceManager> >' [ 0 6 16]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__end_cap' [ 0 5 10 81]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::begin' [ 0 6 63]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::erase' [ 0 5 10 104]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::deallocate' [ 0 5 10 67]
'ui::DeviceDataManager::AddObserver' [ 0 4 23]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::assign<ui::InputDevice *>' [ 0 5 10 74]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::remove_reference<std::__1::allocator<ui::InputDeviceEventObserver *> &>' [ 0 5 10]
'ui::DeviceDataManager::CreateInstance' [ 0 4 23]
'size_type' [ 0]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>::base' [ 0 5 10 62]
'std::__1::enable_if<true, void>' [ 0 5 10]
'ui::DeviceDataManager::OnStylusStateChanged' [ 0 4 23]
'gfx::PointF' [ 0 5]
'logging::CheckGEImpl' [ 0 9]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'std::__1::iterator_traits<const ui::InputDevice *>' [ 0 5 10]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'ui::DeviceDataManager::ApplyTouchRadiusScale' [ 0 4 23]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__push_back_slow_path<ui::InputDeviceEventObserver *const &>' [ 0 5 10 104]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::__atomic_base<unsigned int, false>::store' [ 0 5 10 46]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__end_cap' [ 0 5 10 111]
'std::__1::streamsize' [ 0 5 10]
'ui::(anonymous namespace)::InputDeviceEquals' [ 0 4 27]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__vector_base' [ 0 5 10 81]
'std::__1::vector<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >::begin' [ 0 5 10 92]
'std::__1::__const_pointer<ui::TouchDeviceTransform, ui::TouchDeviceTransform *, std::__1::allocator<ui::TouchDeviceTransform>, true>' [ 0 5 10]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver **>::__wrap_iter' [ 0 5 10 56]
'ui::DeviceHotplugEventObserver::DeviceHotplugEventObserver' [ 0 4 32]
'std::__1::min<unsigned long>' [ 0 5 10]
'long double' [ 0]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>::__wrap_iter<ui::InputDeviceEventObserver **>' [ 0 5 10 62]
'long long int' [ 0]
'RunningOnValgrind' [ 0]
'std::__1::enable_if<true, ui::InputDeviceEventObserver **>' [ 0 5 10]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'scoped_refptr<base::internal::WeakReference::Flag>' [ 0]
'ui::DeviceDataManager' [ 0 4]
'ui::DeviceDataManager::AreDeviceListsComplete' [ 0 4 23]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver **>::base' [ 0 5 10 56]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::end' [ 0 5 10 74]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::__max_size' [ 0 5 10 82]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::construct<ui::InputDeviceEventObserver *, ui::InputDeviceEventObserver *const &>' [ 0 5 10 82]
'logging::LogMessage' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::__construct_backward<ui::InputDeviceEventObserver *>' [ 0 5 10 82]
'int_least8_t' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::~vector' [ 0 5 10 74]
'std::__1::__atomic_base<unsigned int, false>::__atomic_base' [ 0 5 10 46]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'AnnotateBarrierWaitAfter' [ 0]
'ui::DeviceDataManager::GetTouchpadDevices' [ 0 4 23]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::capacity' [ 0 5 10 104]
'ui::DeviceDataManager::OnKeyboardDevicesUpdated' [ 0 4 23]
'ldiv_t' [ 0]
'ui::InputDeviceManager::SetInstance' [ 0 4 24]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver **>' [ 0 5 10]
'base::subtle::Atomic64' [ 0 6 14]
'AnnotatePCQCreate' [ 0]
'ui::DeviceDataManager::SetTouchscreensEnabled' [ 0 4 23]
'std::__1::__const_void_pointer<ui::InputDevice *, std::__1::allocator<ui::InputDevice>, false>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::max_size' [ 0 5 10 74]
'ui::InputDeviceManager::HasInstance' [ 0 4 24]
'std::__1::__pointer_type<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >' [ 0 5 10]
'std::__1::__const_void_pointer<ui::TouchDeviceTransform *, std::__1::allocator<ui::TouchDeviceTransform>, false>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::capacity' [ 0 5 10 74]
'std::__1::__const_pointer<ui::InputDevice, ui::InputDevice *, std::__1::allocator<ui::InputDevice>, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'uint8_t' [ 0]
'std::__1::__pointer_type<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'base::internal::BindStateBase' [ 0 6 16]
'AnnotateBarrierDestroy' [ 0]
'__gnuc_va_list' [ 0]
'AnnotateCondVarWait' [ 0]
'std::__1::__const_pointer<ui::TouchscreenDevice, ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice>, true>' [ 0 5 10]
'uint_fast64_t' [ 0]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::is_end' [ 0 6 63 69]
'base::StringPiece' [ 0 6]
'std::__1::__atomic_base<unsigned int, true>::__atomic_base' [ 0 5 10 45]
'base::ObserverListPolicy' [ 0 6]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::~ObserverList' [ 0 6 63]
'std::__1::equal<std::__1::__wrap_iter<const ui::InputDevice *>, std::__1::__wrap_iter<ui::InputDevice *>, bool (*)(const ui::InputDevice &, const ui::InputDevice &)>' [ 0 5 10]
'base::BindRepeating<void (&)()>' [ 0 6]
'std::__1::begin<std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> > >' [ 0 5 10]
'div_t' [ 0]
'std::__1::forward<void (&)()>' [ 0 5 10]
'logging::LogMessage::stream' [ 0 9 21]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::Run' [ 0 6 16 73]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::HasObserver' [ 0 6 63]
'base::SupportsWeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >' [ 0 6]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__vector_base' [ 0 5 10 93]
'std::__1::atomic<unsigned int>::atomic' [ 0 5 10 32]
'std::__1::__wrap_iter<const ui::TouchscreenDevice *>::operator*' [ 0 5 10 54]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'__pthread_mutex_s' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::size' [ 0 5 10 86]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::max_size' [ 0 5 10 73]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__swap_out_circular_buffer' [ 0 5 10 104]
'AnnotateIgnoreSyncEnd' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::empty' [ 0 5 10 87]
'ui::DeviceDataManager::AreTouchscreenTargetDisplaysValid' [ 0 4 23]
'base::SequenceChecker' [ 0 6]
'std::__1::__compressed_pair_elem<ui::TouchDeviceTransform *, 0, false>' [ 0 5 10]
'AnnotateIgnoreSyncBegin' [ 0]
'base::subtle::AdoptRefTag' [ 0 6 14]
'ui::InputDeviceType' [ 0 4]
'std::__1::__move<ui::InputDeviceEventObserver *, ui::InputDeviceEventObserver *>' [ 0 5 10]
'uint_fast32_t' [ 0]
'ui::InputDevice::kInvalidId' [ 0 4 17]
'base::SupportsWeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::SupportsWeakPtr' [ 0 6 87]
'wctrans_t' [ 0]
'std::__1::__compressed_pair_elem<ui::InputDeviceEventObserver **, 0, false>' [ 0 5 10]
'SkMatrix' [ 0]
'signed char' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'SkISize' [ 0]
'std::__1::ios_base::flags' [ 0 5 10 20]
'ui::TouchDeviceTransform::~TouchDeviceTransform' [ 0 4 26]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'std::__1::__wrap_iter<const ui::TouchscreenDevice *>::base' [ 0 5 10 54]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (*const &)()>' [ 0 6 16 43]
'mbstate_t' [ 0]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>' [ 0 6 16 73]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::clamped_max_index' [ 0 6 63 69]
'__compar_fn_t' [ 0]
'std::__1::advance<ui::InputDevice *>' [ 0 5 10]
'display' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__alloc' [ 0 5 10 81]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__max_size' [ 0 5 10 73]
'std::__1::operator==<ui::InputDeviceEventObserver *const *, ui::InputDeviceEventObserver *const *>' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::__split_buffer' [ 0 5 10 113]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::end' [ 0 6 63]
'SkMatrix44::SkMatrix44' [ 0 12]
'int_least64_t' [ 0]
'std::__1::remove<std::__1::__wrap_iter<ui::InputDeviceEventObserver **>, nullptr_t>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::allocate' [ 0 5 10 67]
'uint16_t' [ 0]
'int' [ 0]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'ui::DeviceDataManager::RemoveObserver' [ 0 4 23]
'std::__1::allocator<ui::TouchscreenDevice>::allocate' [ 0 5 10 44]
'std::__1::__wrap_iter<const ui::InputDevice *>::__wrap_iter' [ 0 5 10 48]
'ui::DeviceDataManager::~DeviceDataManager' [ 0 4 23]
'__builtin_va_list' [ 0]
'std::__1::find<std::__1::__wrap_iter<ui::InputDeviceEventObserver **>, const ui::InputDeviceEventObserver *>' [ 0 5 10]
'uint32_t' [ 0]
'std::__1::allocator<ui::TouchDeviceTransform>' [ 0 5 10]
'std::__1::allocator<ui::InputDeviceEventObserver *>::allocate' [ 0 5 10 53]
'std::__1::__libcpp_allocate' [ 0 5 10]
'gfx::Vector2dF' [ 0 5]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::size' [ 0 5 10 74]
'__int8_t' [ 0]
'base::internal::SupportsWeakPtrBase' [ 0 6 16]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 99]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<ui::InputDeviceManager> >::New' [ 0 6 81]
'base::Bind<void (&)()>' [ 0 6]
'pthread_t' [ 0]
'base::internal::BindState<void (*)()>::~BindState' [ 0 6 16 39]
'std::__1::operator==<const ui::InputDevice *, const ui::InputDevice *>' [ 0 5 10]
'ui::InputDevice::operator=' [ 0 4 17]
'std::__1::operator!=<const ui::InputDevice *>' [ 0 5 10]
'base::FilePath::value' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::clear' [ 0 5 10 113]
'AnnotateExpectRace' [ 0]
'logging::CheckGTImpl' [ 0 9]
'std::__1::iterator_traits<const ui::TouchscreenDevice *>' [ 0 5 10]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::~Iter' [ 0 6 63 69]
'decltype(nullptr)' [ 0]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::~WeakPtr' [ 0 6 79]
'InvokeFuncStorage' [ 0]
'base::ThreadLocalPointer<ui::InputDeviceManager>::Set' [ 0 6 50]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>::is_weak_call' [ 0 6 16 73 128]
'std::__1::enable_if_t<FunctorTraits<void (*)()>::is_nullable, bool>' [ 0 5 10]
'base::LazyInstance<base::ThreadLocalPointer<ui::InputDeviceManager>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<ui::InputDeviceManager> > >' [ 0 6]
'scoped_refptr<const base::internal::WeakReference::Flag>' [ 0]
'SkMatrix44' [ 0]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'SkPoint' [ 0]
'__mbstate_t' [ 0]
'base::internal::IsNull<void (*)()>' [ 0 6 16]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__destruct_at_end' [ 0 5 10 93]
'base::RefCountedThreadSafe<base::internal::WeakReference::Flag, base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag> >' [ 0 6]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__destruct_at_end' [ 0 5 10 111]
'ui::DeviceDataManager::OnTouchpadDevicesUpdated' [ 0 4 23]
'unsigned int' [ 0]
'__intmax_t' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__annotate_new' [ 0 5 10 104]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__max_size' [ 0 5 10 67]
'gfx::Point3F::Point3F' [ 0 5 14]
'gfx::Point' [ 0 5]
'ui::GetInputPathInSys' [ 0 4]
'__uint8_t' [ 0]
'ui::DeviceDataManager::OnMouseDevicesUpdated' [ 0 4 23]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'base::string16' [ 0 6]
'std::__1::operator==<const ui::TouchscreenDevice *, const ui::TouchscreenDevice *>' [ 0 5 10]
'__FILE' [ 0]
'base::subtle::Acquire_Load' [ 0 6 14]
'std::__1::__compressed_pair_elem<ui::TouchscreenDevice *, 0, false>' [ 0 5 10]
'std::__1::__wrap_iter<ui::TouchscreenDevice *>::operator*' [ 0 5 10 48]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::float_denorm_style' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'AnnotateIgnoreReadsBegin' [ 0]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::get' [ 0 6 79]
'base::ThreadLocalPointer<ui::InputDeviceManager>' [ 0 6]
'ui::InputDeviceManager::ClearInstance' [ 0 4 24]
'float_t' [ 0]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::operator==' [ 0 6 63 69]
'std::__1::__unwrap_iter<ui::TouchscreenDevice *>' [ 0 5 10]
'std' [ 0]
'gfx::Transform::Transform' [ 0 5 16]
'double' [ 0]
'uintmax_t' [ 0]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::WeakPtr' [ 0 6 79]
'std::__1::__throw_length_error' [ 0 5 10]
'AnnotateHappensAfter' [ 0]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::ostream' [ 0 5 10]
'ui::TouchscreenDevice::~TouchscreenDevice' [ 0 4 23]
'std::__1::allocator<ui::InputDeviceEventObserver *>::deallocate' [ 0 5 10 53]
'float' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__destruct_at_end' [ 0 5 10 81]
'AnnotateEnableRaceDetection' [ 0]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::GetCurrent' [ 0 6 63 69]
'AnnotateMutexIsNotPHB' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'__time_t' [ 0]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__copy_assign_alloc' [ 0 5 10 81]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::advance<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'logging' [ 0]
'std::__1::allocator<ui::InputDevice>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::assign<ui::TouchscreenDevice *>' [ 0 5 10 86]
'std::__1::operator!=<const ui::TouchscreenDevice *>' [ 0 5 10]
'gfx::Transform' [ 0 5]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'ui::TouchDeviceTransform' [ 0 4]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::allocate' [ 0 5 10 73]
'std::__1::copy<ui::InputDevice *, ui::InputDevice *>' [ 0 5 10]
'base::StringPiece16' [ 0 6]
'std::__1::end<std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> > >' [ 0 5 10]
'std::__1::operator!=<ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::remove_reference<ui::InputDevice &>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::capacity' [ 0 5 10 81]
'std::__1::vector<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >::__make_iter' [ 0 5 10 92]
'SkSize' [ 0]
'__pthread_list_t' [ 0]
'std::__1::forward<void (*const &)()>' [ 0 5 10]
'display::kInvalidDisplayId' [ 0 9]
'std::__1::__size_type<std::__1::allocator<ui::InputDevice>, long, true>' [ 0 5 10]
'logging::CheckOpResult::message' [ 0 9 24]
'base::Lock' [ 0 6]
'base::RepeatingCallback<void ()>' [ 0 6]
'GetRunningOnValgrind' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDevice>, 1, true>' [ 0 5 10]
'unsigned short' [ 0]
'std::__1::__wrap_iter<ui::InputDevice *>::operator++' [ 0 5 10 42]
'base::internal::WeakReference' [ 0 6 16]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>::operator++' [ 0 5 10 62]
'base::AtomicRefCount' [ 0 6]
'ui::DeviceDataManager::NotifyObserversTouchscreenDeviceConfigurationChanged' [ 0 4 23]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>::operator*' [ 0 5 10 62]
'std::__1::__wrap_iter<const ui::TouchDeviceTransform *>::__wrap_iter' [ 0 5 10 57]
'base::DefaultRefCountedThreadSafeTraits<base::internal::WeakReference::Flag>' [ 0 6]
'std::__1::allocator<ui::TouchscreenDevice>' [ 0 5 10]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'base::subtle::GetOrCreateLazyPointer<base::ThreadLocalPointer<ui::InputDeviceManager> >' [ 0 6 14]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::operator!=' [ 0 6 63 69]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::max_size' [ 0 5 10 82]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::operator bool' [ 0 6 79]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::~vector' [ 0 5 10 86]
'logging::CheckEQImpl<unsigned long, unsigned int>' [ 0 9]
'ui::DeviceDataManager::NotifyObserversMouseDeviceConfigurationChanged' [ 0 4 23]
'std::__1::__atomic_base<unsigned int, false>::load' [ 0 5 10 46]
'SkMScalar' [ 0]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::capacity' [ 0 5 10 93]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__vector_base' [ 0 5 10 111]
'std::__1::__pointer_type_imp::__pointer_type<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice>, true>' [ 0 5 10 30]
'clock_t' [ 0]
'gfx::Vector3dF' [ 0 5]
'std::__1::allocator<char>' [ 0 5 10]
'uint64_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<ui::InputDevice, std::__1::allocator<ui::InputDevice>, true>' [ 0 5 10 30]
'std::__1::pointer_traits<ui::TouchDeviceTransform *>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__destruct_at_end' [ 0 5 10 74]
'std::__1::equal<std::__1::__wrap_iter<const ui::TouchscreenDevice *>, std::__1::__wrap_iter<ui::TouchscreenDevice *>, bool (*)(const ui::InputDevice &, const ui::InputDevice &)>' [ 0 5 10]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::max_size' [ 0 5 10 86]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::size' [ 0 5 10 104]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__wrap_iter<const ui::InputDevice *>::operator*' [ 0 5 10 48]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::pointer_traits<ui::TouchscreenDevice *>' [ 0 5 10]
'wctype_t' [ 0]
'std::__1::tuple<>' [ 0 5 10]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::~__vector_base' [ 0 5 10 81]
'ui::DeviceDataManager::UpdateTouchInfoFromTransform' [ 0 4 23]
'std::__1::once_flag' [ 0 5 10]
'std::__1::atomic_int' [ 0 5 10]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__advance<ui::InputDevice *>' [ 0 5 10]
'std::__1::chrono' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::forward<std::__1::allocator<ui::InputDeviceEventObserver *> &>' [ 0 5 10]
'std::__1::operator-<ui::InputDeviceEventObserver *const *, ui::InputDeviceEventObserver *const *>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::TouchDeviceTransform *>::base' [ 0 5 10 57]
'ui::DeviceDataManager::NotifyObserversDeviceListsComplete' [ 0 4 23]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::RunImpl<void (*const &)(), const std::__1::tuple<> &>::is_method' [ 0 6 16 73 128]
'base::ThreadLocalPointer<ui::InputDeviceManager>::ThreadLocalPointer' [ 0 6 50]
'int_least32_t' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::operator[]' [ 0 5 10 104]
'std::__1::__wrap_iter<const ui::InputDevice *>' [ 0 5 10]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::begin' [ 0 5 10 104]
'std::__1::find<std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>, const ui::InputDeviceEventObserver *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::destroy<ui::InputDevice>' [ 0 5 10 67]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDeviceEventObserver *> &, 1, false>::__compressed_pair_elem<std::__1::allocator<ui::InputDeviceEventObserver *> &, void>' [ 0 5 10 99]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >' [ 0 5 10]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>' [ 0 6]
'base::ThreadLocalStorage' [ 0 6]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'AnnotateRWLockReleased' [ 0]
'std::__1::literals' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__destruct_at_end' [ 0 5 10 86]
'__uint64_t' [ 0]
'FILE' [ 0]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__annotate_shrink' [ 0 5 10 74]
'std::__1::__wrap_iter<const ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 67]
'int_fast64_t' [ 0]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::clear' [ 0 5 10 93]
'std::__1::pointer_traits<ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::operator-<ui::InputDeviceEventObserver *const *, ui::InputDeviceEventObserver **>' [ 0 5 10]
'AnnotateRWLockCreate' [ 0]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'gfx::Vector2d' [ 0 5]
'intmax_t' [ 0]
'std::__1::allocator<ui::InputDevice>::destroy' [ 0 5 10 38]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchDeviceTransform> >' [ 0 5 10]
'ui::DeviceDataManager::GetTouchscreenDevices' [ 0 4 23]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::allocator<ui::InputDevice>::deallocate' [ 0 5 10 38]
'base::LazyInstanceTraitsBase<base::ThreadLocalPointer<ui::InputDeviceManager> >' [ 0 6]
'std::__1::__compressed_pair<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *> &>::second' [ 0 5 10 117]
'intptr_t' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::allocate' [ 0 5 10 74]
'std::__1::__atomic_base<unsigned int, false>::operator unsigned int' [ 0 5 10 46]
'std::__1::allocator<ui::InputDevice>::construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 38]
'base::internal::BindState<void (*)()>::BindState<void (&)()>' [ 0 6 16 39]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::capacity' [ 0 5 10 113]
'int_least16_t' [ 0]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::EnsureValidIndex' [ 0 6 63 69]
'base::SupportsWeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >::~SupportsWeakPtr' [ 0 6 87]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__destruct_at_end' [ 0 5 10 104]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::__construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 73]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'AnnotateIgnoreWritesBegin' [ 0]
'std::__1::__wrap_iter<ui::InputDevice *>::operator*' [ 0 5 10 42]
'std::__1::iterator_traits<ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::allocator<ui::TouchscreenDevice>::construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 44]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::~__split_buffer' [ 0 5 10 113]
'__uint32_t' [ 0]
'std::__1::__compressed_pair<ui::InputDevice *, std::__1::allocator<ui::InputDevice> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 87]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver *const *>::__wrap_iter' [ 0 5 10 62]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'ui::InputDeviceManager' [ 0 4]
'bool' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::move<ui::InputDeviceEventObserver **, ui::InputDeviceEventObserver **>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'__int16_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDeviceEventObserver *> &, 1, false>' [ 0 5 10]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::vector<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >' [ 0 5 10]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver **>::operator*' [ 0 5 10 56]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__annotate_shrink' [ 0 5 10 86]
'std::__1::__const_void_pointer<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice>, false>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::clear' [ 0 5 10 111]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__alloc' [ 0 5 10 111]
'base::Callback<MakeUnboundRunType<void (&)()> >' [ 0 6]
'base::WeakPtr<base::ObserverList<ui::InputDeviceEventObserver, false, true> >' [ 0 6]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::vector' [ 0 5 10 74]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'uint_least8_t' [ 0]
'base::LazyInstance<base::ThreadLocalPointer<ui::InputDeviceManager>, base::internal::ErrorMustSelectLazyOrDestructorAtExitForLazyInstance<base::ThreadLocalPointer<ui::InputDeviceManager> > >' [ 0 6]
'std::__1::__wrap_iter<const ui::TouchDeviceTransform *>::operator*' [ 0 5 10 57]
'running_on_valgrind' [ 0]
'base::internal::FunctorTraits<void (*)(), void>::Invoke<void (*const &)()>' [ 0 6 16 49]
'int64_t' [ 0]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'gfx' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::data' [ 0 5 10 86]
'std::__1::index_sequence<>' [ 0 5 10]
'long long unsigned int' [ 0]
'ui::TouchscreenDevice' [ 0 4]
'std::__1::iterator_traits<const ui::TouchDeviceTransform *>' [ 0 5 10]
'std::__1::remove_reference<ui::TouchscreenDevice &>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>::Run::num_bound_args' [ 0 6 16 73 78]
'std::__1::__const_pointer<ui::InputDeviceEventObserver *, ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *>, true>' [ 0 5 10]
'int_fast8_t' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__annotate_shrink' [ 0 5 10 104]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >' [ 0 5 10]
'std::__1::operator==<ui::TouchscreenDevice *, ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<ui::TouchDeviceTransform *>::__nat, ui::TouchDeviceTransform>' [ 0 5 10]
'ui::DeviceDataManager::set_instance' [ 0 4 23]
'__uint16_t' [ 0]
'std::__1::allocator<ui::TouchscreenDevice>::destroy' [ 0 5 10 44]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::~__vector_base' [ 0 5 10 111]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__alloc' [ 0 5 10 93]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::clear' [ 0 5 10 86]
'std::__1' [ 0 5]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::clear' [ 0 5 10 81]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::~__vector_base' [ 0 5 10 93]
'wint_t' [ 0]
'std::__1::iterator_traits<ui::InputDevice *>' [ 0 5 10]
'char' [ 0]
'SkIVector' [ 0]
'std::__1::__unwrap_iter<ui::InputDevice *>' [ 0 5 10]
'gfx::Point3F::x' [ 0 5 14]
'gfx::Point3F::y' [ 0 5 14]
'std::__1::__wrap_iter<const ui::TouchscreenDevice *>::operator++' [ 0 5 10 54]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'ui::DeviceDataManager::DeleteInstance' [ 0 4 23]
'__pthread_internal_list' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::cbegin' [ 0 5 10 104]
'int32_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__destroy<ui::InputDevice>' [ 0 5 10 67]
'std::__1::__wrap_iter<const ui::InputDevice *>::operator++' [ 0 5 10 48]
'std::__1::atomic<int>' [ 0 5 10]
'base::internal::FunctorTraits<void (*)(), void>' [ 0 6 16]
'std::__1::__pointer_type_imp::__pointer_type<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *>, true>' [ 0 5 10 30]
'short' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'ui::GetInputDeviceTypeFromPath' [ 0 4]
'base::SequenceCheckerImpl' [ 0 6]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::vector' [ 0 5 10 86]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__atomic_base<unsigned int, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::destroy<ui::TouchscreenDevice>' [ 0 5 10 73]
'ui::DeviceHotplugEventObserver' [ 0 4]
'AnnotateNewMemory' [ 0]
'AnnotateCondVarSignal' [ 0]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::vector<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform> >::end' [ 0 5 10 92]
'ui::DeviceDataManager::GetKeyboardDevices' [ 0 4 23]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::ObserverList' [ 0 6 63]
'std::__1::__libcpp_numeric_limits<unsigned long, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<ui::TouchDeviceTransform, std::__1::allocator<ui::TouchDeviceTransform>, true>' [ 0 5 10 30]
'std::__1::conditional<false, std::__1::pointer_traits<ui::InputDevice *>::__nat, ui::InputDevice>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::integer_sequence<unsigned long>' [ 0 5 10]
'std::__1::__split_buffer<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> &>::__end_cap' [ 0 5 10 113]
'ui::DeviceDataManager::GetInstance' [ 0 4 23]
'std::__1::__compressed_pair_elem<ui::InputDeviceEventObserver **, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 77]
'std::__1::array<ui::TouchDeviceTransform, 128>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::data' [ 0 5 10 74]
'AnnotatePCQGet' [ 0]
'__clock_t' [ 0]
'base::RepeatingCallback<void ()>::RepeatingCallback' [ 0 6 34]
'uintptr_t' [ 0]
'ui::InputDevice' [ 0 4]
'ui::(anonymous namespace)::lazy_tls_ptr' [ 0 4 27]
'ui::InputDevice::~InputDevice' [ 0 4 17]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::max_size' [ 0 5 10 67]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::__wrap_iter<ui::InputDevice *>::__wrap_iter' [ 0 5 10 42]
'uint_least16_t' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::empty' [ 0 5 10 104]
'ui::DeviceDataManager::ConfigureTouchDevices' [ 0 4 23]
'int16_t' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__construct_at_end<ui::TouchscreenDevice *>' [ 0 5 10 86]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'AnnotateTraceMemory' [ 0]
'std::__1::__wrap_iter<const ui::InputDevice *>::base' [ 0 5 10 48]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'std::__1::find<std::__1::__wrap_iter<ui::InputDeviceEventObserver **>, nullptr_t>' [ 0 5 10]
'base::PlatformThreadRef' [ 0 6]
'std::__1::remove_reference<ui::InputDeviceEventObserver **&>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'gfx::Size::Size' [ 0 5 11]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__recommend' [ 0 5 10 74]
'base::internal' [ 0 6]
'ui::DeviceDataManager::OnDeviceListsComplete' [ 0 4 23]
'std::__1::move<ui::InputDeviceEventObserver **&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'wchar_t' [ 0]
'ui::DeviceDataManager::GetTargetDisplayForTouchDevice' [ 0 4 23]
'int8_t' [ 0]
'base::FilePath' [ 0 6]
'AnnotateRWLockAcquired' [ 0]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::clear' [ 0 5 10 74]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'AnnotateUnpublishMemoryRange' [ 0]
'SkIPoint' [ 0]
'base::LazyInstance<base::ThreadLocalPointer<ui::InputDeviceManager>, base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<ui::InputDeviceManager> > >::Pointer' [ 0 6 163]
'AnnotateCondVarSignalAll' [ 0]
'int_fast32_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::end' [ 0 5 10 104]
'std::__1::operator==<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::forward<ui::TouchscreenDevice &>' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::deallocate' [ 0 5 10 86]
'std::__1::locale' [ 0 5 10]
'_G_fpos64_t' [ 0]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::operator++' [ 0 6 63 69]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__make_iter' [ 0 5 10 74]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::RemoveObserver' [ 0 6 63]
'base::subtle' [ 0 6]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'ui::DeviceDataManager::IsTouchDeviceIdValid' [ 0 4 23]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::__size_type<std::__1::allocator<ui::TouchDeviceTransform>, long, true>' [ 0 5 10]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::operator=' [ 0 5 10 74]
'AnnotateNoOp' [ 0]
'AnnotateFlushState' [ 0]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'double_t' [ 0]
'__int64_t' [ 0]
'AnnotateBarrierWaitBefore' [ 0]
'base::ContainsValue<std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >, const ui::InputDeviceEventObserver *, 0>' [ 0 6]
'time_t' [ 0]
'std::__1::__to_raw_pointer<ui::InputDevice>' [ 0 5 10]
'ui::TouchDeviceTransform::TouchDeviceTransform' [ 0 4 26]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::__destroy<ui::InputDeviceEventObserver *>' [ 0 5 10 82]
'uint_fast16_t' [ 0]
'std::__1::allocator<ui::TouchscreenDevice>::deallocate' [ 0 5 10 44]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDevice, std::__1::allocator<ui::InputDevice> >' [ 0 5 10]
'base::internal::LeakyLazyInstanceTraits<base::ThreadLocalPointer<ui::InputDeviceManager> >::New' [ 0 6 16 92]
'std::__1::__wrap_iter<ui::InputDeviceEventObserver **>::operator++' [ 0 5 10 56]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDeviceEventObserver *>, 1, true>' [ 0 5 10]
'int_fast16_t' [ 0]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::__compressed_pair<ui::TouchscreenDevice *, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'std::__1::__compressed_pair<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *> &>' [ 0 5 10]
'gfx::Transform::operator=' [ 0 5 16]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct<ui::InputDevice, ui::InputDevice &>' [ 0 5 10 67]
'std::__1::forward<ui::InputDevice &>' [ 0 5 10]
'std::__1::__const_void_pointer<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *>, false>' [ 0 5 10]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::__end_cap' [ 0 5 10 93]
'__vtbl_ptr_type' [ 0]
'AnnotateBenignRace' [ 0]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::max_size' [ 0 5 10 104]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDevice> >::__construct_range_forward<ui::InputDevice *, ui::InputDevice *>' [ 0 5 10 67]
'std::__1::__vector_base<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'SkMatrix44::operator=' [ 0 12]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Iter::operator*' [ 0 6 63 69]
'__int32_t' [ 0]
'AnnotateBenignRaceSized' [ 0]
'std::__1::__compressed_pair<ui::InputDeviceEventObserver **, std::__1::allocator<ui::InputDeviceEventObserver *> >' [ 0 5 10]
'std::__1::atomic<unsigned int>' [ 0 5 10]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::TouchscreenDevice *>::__wrap_iter' [ 0 5 10 54]
'ui::DeviceDataManager::NotifyObserversStylusStateChanged' [ 0 4 23]
'ui::DeviceDataManager::instance_' [ 0 4 23]
'std::__1::array<ui::TouchDeviceTransform, 128>::~array' [ 0 5 10 48]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::capacity' [ 0 5 10 86]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'base::internal::Invoker<base::internal::BindState<void (*)()>, void ()>' [ 0 6 16]
'std::__1::vector<ui::InputDevice, std::__1::allocator<ui::InputDevice> >::__construct_at_end<ui::InputDevice *>' [ 0 5 10 74]
'std::__1::__size_type<std::__1::allocator<ui::InputDeviceEventObserver *>, long, true>' [ 0 5 10]
'std::__1::__copy<ui::TouchscreenDevice *, ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::InputDeviceEventObserver *> &, 1, false>::__get' [ 0 5 10 99]
'logging::CheckOpResult' [ 0 9]
'std::__1::iterator_traits<ui::TouchscreenDevice *>' [ 0 5 10]
'std::__1::allocator<ui::InputDeviceEventObserver *>' [ 0 5 10]
'long int' [ 0]
'ui::DeviceDataManager::GetMouseDevices' [ 0 4 23]
'std::__1::remove_reference<ui::InputDeviceEventObserver *&>' [ 0 5 10]
'SkIRect' [ 0]
'ui::DeviceDataManager::AreTouchscreensEnabled' [ 0 4 23]
'std::__1::pointer_traits<ui::InputDevice *>' [ 0 5 10]
'ui::DeviceDataManager::DeviceDataManager' [ 0 4 23]
'std::__1::allocator_traits<std::__1::allocator<ui::InputDeviceEventObserver *> >::deallocate' [ 0 5 10 82]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std::__1::__vector_base<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::capacity' [ 0 5 10 111]
'SkVector' [ 0]
'std::__1::__pointer_type<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >' [ 0 5 10]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::vector<ui::TouchscreenDevice, std::__1::allocator<ui::TouchscreenDevice> >::begin' [ 0 5 10 86]
'va_list' [ 0]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'base::ObserverList<ui::InputDeviceEventObserver, false, true>::Compact' [ 0 6 63]
'AnnotateIgnoreWritesEnd' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchscreenDevice>, 1, true>' [ 0 5 10]
'ui::InputDevice::InputDevice' [ 0 4 17]
'std::__1::__compressed_pair_elem<std::__1::allocator<ui::TouchDeviceTransform>, 1, true>' [ 0 5 10]
'ui::TouchscreenDevice::TouchscreenDevice' [ 0 4 23]
'ui::TouchscreenDevice::operator=' [ 0 4 23]
'std::__1::operator!=<ui::TouchscreenDevice *>' [ 0 5 10]
'AnnotateFlushExpectedRaces' [ 0]
'std::__1::__size_type<std::__1::allocator<ui::TouchscreenDevice>, long, true>' [ 0 5 10]
'std::__1::__wrap_iter<const ui::TouchDeviceTransform *>::operator++' [ 0 5 10 57]
'std::__1::swap<ui::InputDeviceEventObserver **>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<ui::TouchscreenDevice> >::construct<ui::TouchscreenDevice, ui::TouchscreenDevice &>' [ 0 5 10 73]
'std::__1::vector<ui::InputDeviceEventObserver *, std::__1::allocator<ui::InputDeviceEventObserver *> >::__recommend' [ 0 5 10 104]
'ui::TouchDeviceTransform::operator=' [ 0 4 26]
