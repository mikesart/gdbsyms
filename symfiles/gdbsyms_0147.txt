'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >' [ 0 5 10]
'int_fast16_t' [ 0]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >::deallocate' [ 0 5 10 237]
'std::__1::tuple<unsigned int &&>::tuple<unsigned int, false, false>' [ 0 5 10 34]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >::__on_zero_shared_weak' [ 0 5 10 180]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >::deallocate' [ 0 5 10 208]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *&, void>' [ 0 5 10 216]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10 143]
'std::__1::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'sandbox::SyscallSets::IsKill' [ 0 9 22]
'std::__1::remove_reference<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::tie<long (*const)(const sandbox::arch_seccomp_data &, void *), const void *const, const bool>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'sandbox::operator==' [ 0 9]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *>::pointer_to' [ 0 5 10 198]
'logging::CheckEQImpl<unsigned int, unsigned long>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >, 1, false>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::end' [ 0 5 10 66]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::iterator<std::__1::input_iterator_tag, unsigned int, long, unsigned int *, unsigned int &>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::capacity' [ 0 5 10 70]
'std::__1::false_type' [ 0 5 10]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::operator bool' [ 0 5 10 101]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10]
'sandbox::SandboxBPF::IsRequiredForUnsafeTrap' [ 0 9 21]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::operator[]' [ 0 5 10 66]
'std::__1::__pointer_type_imp::__pointer_type<sock_filter, std::__1::allocator<sock_filter>, true>' [ 0 5 10 30]
'std::__1::__const_void_pointer<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >::operator()' [ 0 5 10 233]
'sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl' [ 0 9 18 41]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::swap' [ 0 5 10 70]
'std::__1::__tuple_leaf<2, bool &&, false>' [ 0 5 10]
'sandbox::bpf_dsl::internal::ResultExprImpl::ResultExprImpl' [ 0 9 18 28 44]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, long (*const &)(const sandbox::arch_seccomp_data &, void *), false>' [ 0 5 10]
'sandbox::Syscall::Call<long, long, long, long, long, long>' [ 0 9 18]
'AnnotateThreadName' [ 0]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::__end_cap' [ 0 5 10 131]
'logging::CheckLTImpl<unsigned long, unsigned long>' [ 0 9]
'sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl::~NegateBoolExprImpl' [ 0 9 18 41 61]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >::__allocator_destructor' [ 0 5 10 237]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >' [ 0 5 10]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::__end_cap' [ 0 5 10 75]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::capacity' [ 0 5 10 73]
'sandbox::(anonymous namespace)' [ 0 9]
'logging::LogSeverity' [ 0 9]
'std::__1::forward<const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'sandbox::SyscallSets::IsAnySystemV' [ 0 9 22]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *&>' [ 0 5 10]
'std::__1::__tuple_less<1>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__max_size' [ 0 5 10 65]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::__tuple_leaf<0, int &, false>::get' [ 0 5 10 41]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'ptrdiff_t' [ 0]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *>' [ 0 5 10]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::release' [ 0 5 10 452]
'std::__1::allocator<sock_filter>::deallocate' [ 0 5 10 34]
'std::__1::copy<sandbox::Trap::TrapKey *, sandbox::Trap::TrapKey *>' [ 0 5 10]
'std::__1::get<1, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int, int, int, int>' [ 0 9 18 30]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::c_str' [ 0 5 10 87]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::second' [ 0 5 10 461]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >, false>' [ 0 5 10]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>' [ 0 5 10]
'std::__1::get<0, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::at' [ 0 5 10 70]
'std::__1::forward<sock_filter>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >' [ 0 5 10]
'std::__1::__tuple_leaf<1, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, false>::get' [ 0 5 10 114]
'std::__1::remove_reference<sandbox::bpf_dsl::PolicyCompiler::Range &>' [ 0 5 10]
'sandbox::SandboxBPF::SandboxBPF' [ 0 9 21]
'sandbox::bpf_dsl::UnsafeTrap' [ 0 9 18]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >::__shared_ptr_emplace<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 170]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 168]
'(anonymous namespace)::seccomp_crash_key' [ 0 23]
'std::__1::__tuple_leaf<2, bool &&, false>::__tuple_leaf<bool, void>' [ 0 5 10 43]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'std::__1::operator<<unsigned short, unsigned int, unsigned long, unsigned long, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::get' [ 0 5 10 420]
'std::__1::get<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__construct<sock_filter, sock_filter &>' [ 0 5 10 63]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >' [ 0 5 10]
'sandbox::bpf_dsl::Caser<int>::Default' [ 0 9 18 30]
'std::__1::__less<unsigned long, unsigned long>::operator()' [ 0 5 10 48]
'std::__1::pointer_traits<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>' [ 0 5 10 72]
'sandbox::CrashSIGSYS_Handler' [ 0 9]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >::__on_zero_shared_weak' [ 0 5 10 168]
'sandbox::bpf_dsl::internal::ResultExprImpl' [ 0 9 18 28]
'std::__1::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::shared_ptr' [ 0 5 10 204]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >' [ 0 5 10]
'sandbox::SyscallSets::IsKernelInternalApi' [ 0 9 22]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::size' [ 0 5 10 70]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >, long, true>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::ReturnResultExprImpl' [ 0 9 18 41 63]
'sandbox::CodeGen::kNullNode' [ 0 9 18]
'std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>, false>' [ 0 5 10 159]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >::__shared_ptr_emplace<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool>' [ 0 5 10 176]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, false>' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >' [ 0 5 10]
'sandbox::RestrictGetRandom' [ 0 9]
'sandbox::SIGSYSFutexFailure' [ 0 9]
'std::__1::swap<const sandbox::bpf_dsl::internal::ResultExprImpl *>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'sandbox::bpf_dsl::Policy::InvalidSyscall' [ 0 9 18 26]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::deallocate' [ 0 5 10 65]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>' [ 0 6]
'uint_least64_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>::__compressed_pair_elem<int, void>' [ 0 5 10 59]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__construct_backward<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 91]
'std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>' [ 0 5 10]
'AnnotateBarrierWaitBefore' [ 0]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::data' [ 0 5 10 122]
'sandbox::(anonymous namespace)::IsBaselinePolicyAllowed' [ 0 9 32]
'std::__1::__tuple_less<3>::operator()<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10 27]
'std::__1::conditional<false, std::__1::pointer_traits<unsigned long *>::__nat, unsigned long>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::~unique_ptr' [ 0 5 10 420]
'std::__1::__compressed_pair<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<const sandbox::Trap::TrapKey &> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, 0, false>' [ 0 5 10]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::remove_reference<unsigned int &&>' [ 0 5 10]
'sandbox::GetCloneErrorMessageContentForTests' [ 0 9]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::get' [ 0 5 10 72]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *>::__nat, std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__construct_at_end<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> > >' [ 0 5 10 66]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *>::pointer_to' [ 0 5 10 204]
'sandbox::CodeGen::Offset' [ 0 9 18]
'std::__1::move<std::__1::tuple<bool &> &>' [ 0 5 10]
'(anonymous namespace)::NumberToHex<int>' [ 0 23]
'AnnotateExpectRace' [ 0]
'sandbox::bpf_dsl::Elser::ElseIf' [ 0 9 18 25]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >::operator()' [ 0 5 10 237]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__push_back_slow_path<const unsigned long &>' [ 0 5 10 70]
'sandbox::cons::ListIterator<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::ListIterator' [ 0 9 15 189]
'std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, false>::__tuple_leaf<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, void>' [ 0 5 10 114]
'std::__1::__shared_weak_count::use_count' [ 0 5 10 31]
'sandbox::CodeGen::MakeInstruction' [ 0 9 18]
'__uint8_t' [ 0]
'sandbox::SyscallSets::IsSeccomp' [ 0 9 22]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10 137]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'std::__1::allocator<sock_filter>::construct<sock_filter, sock_filter>' [ 0 5 10 34]
'(anonymous namespace)::NumberToHex<int>::NumberToHex::kHexChars' [ 0 23 41 54]
'fpos_t' [ 0]
'sandbox::bpf_dsl::Arg<unsigned int>' [ 0 9 18]
'std::__1::forward_as_tuple<bool &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__lower_bound<sandbox::Trap::TrapKey>' [ 0 5 10 334]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnErrno' [ 0 9 18 41]
'std::__1::__tuple_leaf<2, unsigned long, false>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'sandbox::SyscallSets::IsProcessGroupOrSession' [ 0 9 22]
'_libc_xmmreg' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::__libcpp_numeric_limits<unsigned int, true>' [ 0 5 10]
'(anonymous namespace)::NumberToHex<unsigned long>::length' [ 0 23 51]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::reset' [ 0 5 10 914]
'std::__1::forward_as_tuple<unsigned int>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::release' [ 0 5 10 416]
'sandbox::bpf_dsl::PolicyCompiler::Return' [ 0 9 18 34]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >::allocate' [ 0 5 10 208]
'AnnotateMutexIsUsedAsCondVar' [ 0]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >::get' [ 0 5 10 417]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >, true>' [ 0 5 10 30]
'logging::LOG_INFO' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >::deallocate' [ 0 5 10 196]
'std::__1::__tuple_types<>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::capacity' [ 0 5 10 66]
'__pid_t' [ 0]
'sandbox::bpf_dsl::Elser::~Elser' [ 0 9 18 25]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::__compressed_pair<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 135]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::reset' [ 0 5 10 440]
'sandbox::cons::Cons<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, true>' [ 0 5 10]
'std::__1::forward<const bool &>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::IsDeny' [ 0 9 18 41 63]
'std::__1::__tuple_leaf<2, bool &&, false>::get' [ 0 5 10 43]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::float_round_style' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10 172]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 176]
'std::__1::pointer_traits<sock_filter *>' [ 0 5 10]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__root_ptr' [ 0 5 10 334]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, 1, false>' [ 0 5 10]
'size_type' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>' [ 0 5 10]
'sandbox::BaselinePolicy::InvalidSyscall' [ 0 9 25]
'AnnotateIgnoreReadsEnd' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >' [ 0 5 10]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::release' [ 0 5 10 101]
'sandbox::Trap::SigSys' [ 0 9 15]
'sandbox::bpf_dsl::PolicyCompiler::~PolicyCompiler' [ 0 9 18 34]
'std::__1::distance<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> > >' [ 0 5 10]
'std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::max_size' [ 0 5 10 91]
'std::__1::__wrap_iter<sock_filter *>::base' [ 0 5 10 38]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>::~__compressed_pair' [ 0 5 10 164]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>, 1, true>' [ 0 5 10]
'std::__1::tuple_element<3, std::__1::__tuple_types<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'__priority_which' [ 0]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, true>' [ 0 5 10]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__end_cap' [ 0 5 10 129]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >::__on_zero_shared_weak' [ 0 5 10 176]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >' [ 0 5 10]
'std::__1::forward<unsigned int &&>' [ 0 5 10]
'std::__1::get<1, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::SyscallSets::IsAllowedBasicScheduler' [ 0 9 22]
'std::__1::remove_reference<std::__1::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::~unique_ptr' [ 0 5 10 440]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> >::__compressed_pair<int, const std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> &>' [ 0 5 10 369]
'sandbox::bpf_dsl::PolicyCompiler::MaskedEqualHalf' [ 0 9 18 34]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::operator->' [ 0 5 10 270]
'sandbox::SyscallSets::IsExtendedAttributes' [ 0 9 22]
'sandbox::bpf_dsl::PolicyCompiler::CheckSyscallNumber' [ 0 9 18 34]
'sandbox::SyscallSets::IsAllowedGetOrModifySocket' [ 0 9 22]
'std::__1::enable_if<true, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::__nat>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::__libcpp_numeric_limits<unsigned short, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 104]
'sandbox::Syscall::Call<int>' [ 0 9 18]
'uint_least16_t' [ 0]
'std::__1::streamsize' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::ScopedGeneric' [ 0 6 63]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >' [ 0 5 10]
'sandbox::arch_seccomp_data' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >, void>' [ 0 5 10 281]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10 449]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__end_cap' [ 0 5 10 79]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'std::__1::min<unsigned long>' [ 0 5 10]
'long double' [ 0]
'long long int' [ 0]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >::get' [ 0 5 10 176]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, unsigned int &&, false>::__tuple_leaf<unsigned int, void>' [ 0 5 10 51]
'(anonymous namespace)::PrintSyscallError::kSeccompErrorPostfix' [ 0 23 42]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *&, void>' [ 0 5 10 222]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>::pointer_to' [ 0 5 10 144]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'(anonymous namespace)::kSandboxDebuggingEnv' [ 0 23]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10 461]
'std::__1::swap<unsigned long *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>::__compressed_pair_elem<std::__1::allocator<unsigned long> &, void>' [ 0 5 10 82]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'sandbox::RestrictFutex' [ 0 9]
'sandbox::bpf_dsl::Trap' [ 0 9 18]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, 0>' [ 0 5 10 246]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::get' [ 0 5 10 210]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::operator->' [ 0 5 10 72]
'AnnotateBarrierDestroy' [ 0]
'std::__1::allocator<unsigned long>::construct<unsigned long, const unsigned long &>' [ 0 5 10 36]
'sandbox::bpf_dsl::internal::ArgEq' [ 0 9 18 28]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >' [ 0 5 10]
'std::__1::__tuple_less<4>::operator()<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10 27]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'std::__1::piecewise_construct' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'sandbox::SyscallSets::IsEventFd' [ 0 9 22]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *&>' [ 0 5 10]
'std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'std::__1::default_delete<sandbox::bpf_dsl::Policy>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>::~__compressed_pair' [ 0 5 10 182]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >::get' [ 0 5 10 176]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl' [ 0 9 18 41]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >::__on_zero_shared' [ 0 5 10 176]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *&, void>' [ 0 5 10 220]
'sandbox::SandboxBPF::IsValidSyscallNumber' [ 0 9 21]
'sandbox::RestrictPrlimit' [ 0 9]
'wctype_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy>, false>' [ 0 5 10 30]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, false>::get' [ 0 5 10 123]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::~unique_ptr' [ 0 5 10 432]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10 140]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, 1, false>::__compressed_pair_elem<bool &, 0>' [ 0 5 10 104]
'std::__1::tuple<bool &>::tuple<true, false>' [ 0 5 10 25]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 212]
'std::__1::__shared_count::__add_shared' [ 0 5 10 26]
'std::__1::iterator_traits<const sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'logging::CheckEQImpl<long, int>' [ 0 9]
'sandbox::(anonymous namespace)::kValidSyscallRanges' [ 0 9 32]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10 135]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, void>' [ 0 5 10 114]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >' [ 0 5 10]
'sandbox::SyscallSets::IsPrctl' [ 0 9 22]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *>' [ 0 5 10]
'sandbox::SandboxBPF' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>::__get' [ 0 5 10 82]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::shared_ptr' [ 0 5 10 210]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr' [ 0 5 10 70]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::Policy *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&> &>' [ 0 5 10]
'sandbox::Trap::TrapKey::TrapKey' [ 0 9 15 24]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::deallocate' [ 0 5 10 63]
'uint8_t' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::random_access_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&> &>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::is_valid' [ 0 6 63]
'std::__1::tuple<int &, unsigned long &, unsigned long &, unsigned long &>::tuple<true, false>' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, 1, false>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >::__on_zero_shared' [ 0 5 10 174]
'uint_fast64_t' [ 0]
'std::__1::copy_n<sandbox::Trap::TrapKey *, unsigned long, sandbox::Trap::TrapKey *>' [ 0 5 10]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >' [ 0 5 10]
'(anonymous namespace)::arch_sigsys' [ 0 23]
'std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>' [ 0 5 10]
'logging::CheckLEImpl<unsigned long, unsigned long>' [ 0 9]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl' [ 0 9 18 41]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::get' [ 0 5 10 70]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>::make_shared<int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10 88]
'sandbox::Die::RawSandboxDie' [ 0 9 14]
'std::__1::__compressed_pair<sock_filter *, std::__1::allocator<sock_filter> &>' [ 0 5 10]
'std::__1::__to_raw_pointer<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::remove_reference<const sandbox::bpf_dsl::internal::ResultExprImpl *&>' [ 0 5 10]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::rend' [ 0 5 10 66]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>::tuple<true, false>' [ 0 5 10 98]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >::__on_zero_shared' [ 0 5 10 170]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 170]
'std::__1::tuple<int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, 0, false>::__compressed_pair_elem' [ 0 5 10 109]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10 437]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >::reverse_iterator' [ 0 5 10 67]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::SIGSYSKillFailure::kSeccompKillError' [ 0 9 28]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *>::pointer_to' [ 0 5 10 214]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned int &&>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >::__on_zero_shared_weak' [ 0 5 10 170]
'sandbox::SyscallSets::IsNetworkSocketInformation' [ 0 9 22]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__recommend' [ 0 5 10 66]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'__compar_fn_t' [ 0]
'std::__1::binary_function<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, bool>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'base::debug::CrashKeySize' [ 0 6 13]
'std::__1::__add_lvalue_reference_impl<const sandbox::bpf_dsl::internal::BoolExprImpl, true>' [ 0 5 10]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 83]
'std::__1::move<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::move<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > *&>' [ 0 5 10]
'sandbox::bpf_dsl::internal' [ 0 9 18]
'sandbox::bpf_dsl::ResultExpr' [ 0 9 18]
'sandbox::Syscall::Call<int, void *, void *, void *, int, int, int, int>' [ 0 9 18]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 110]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sandbox::bpf_dsl::Policy>, 1, true>::__compressed_pair_elem<std::__1::default_delete<sandbox::bpf_dsl::Policy>, void>' [ 0 5 10 95]
'std::__1::add_lvalue_reference<const sandbox::bpf_dsl::internal::BoolExprImpl>' [ 0 5 10]
'sandbox::SyscallSets::IsKernelModule' [ 0 9 22]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::unique_ptr' [ 0 5 10 101]
'std::__1::__tuple_leaf<0, const sandbox::Trap::TrapKey &, false>::get' [ 0 5 10 66]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::size' [ 0 5 10 597]
'sandbox::bpf_dsl::Arg<long>' [ 0 9 18]
'std::__1::forward<const void *&>' [ 0 5 10]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *&>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl::~TrapResultExprImpl' [ 0 9 18 41 61]
'logging::MakeCheckOpString<long, int>' [ 0 9]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, 0, true>' [ 0 5 10]
'std::__1::get<0, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::__split_buffer' [ 0 5 10 75]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >, void>' [ 0 5 10 196]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>::get' [ 0 5 10 107]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'std::__1::get<0, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'std::__1::__tuple_types<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<2, unsigned long &, false>::__tuple_leaf<unsigned long &, void>' [ 0 5 10 51]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, unsigned int &&>' [ 0 5 10 176]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::second' [ 0 5 10 383]
'lldiv_t' [ 0]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__root' [ 0 5 10 334]
'std::__1::forward<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::clear' [ 0 5 10 75]
'sandbox::RestrictFcntlCommands' [ 0 9]
'std::__1::conditional<true, std::__1::pointer_traits<void *>::__nat, void>' [ 0 5 10]
'std::__1::get<1, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'sandbox::SyscallSets::IsFaNotify' [ 0 9 22]
'std::__1::remove_reference<const void *const &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, unsigned int &&, false>::get' [ 0 5 10 51]
'sandbox::bpf_dsl::PolicyCompiler::FindRanges' [ 0 9 18 34]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::get' [ 0 5 10 270]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &> &>' [ 0 5 10]
'sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::Cell' [ 0 9 15 181]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long *, 0, false>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>::tuple<true, false>' [ 0 5 10 106]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &> &>' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >, true>' [ 0 5 10 30]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__recommend' [ 0 5 10 70]
'sandbox::cons::ListIterator<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::~ListIterator' [ 0 9 15 189]
'std::__1::__tuple_leaf<2, unsigned long &, false>' [ 0 5 10]
'sandbox::Syscall::InvalidCall' [ 0 9 18]
'std::__1::swap<base::internal::ScopedFDCloseTraits>' [ 0 5 10]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::__end_cap' [ 0 5 10 73]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >' [ 0 5 10]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::~vector' [ 0 5 10 122]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'uint_fast16_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>' [ 0 5 10]
'AnnotateIgnoreReadsBegin' [ 0]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, bool &, false>::__tuple_leaf<bool &, void>' [ 0 5 10 42]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>::base' [ 0 5 10 72]
'sandbox::bpf_dsl::(anonymous namespace)::DefaultPanic' [ 0 9 18 41]
'sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl::Compile' [ 0 9 18 41 66]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'sandbox::GetPrctlErrorMessageContentForTests' [ 0 9]
'sandbox::bpf_dsl::(anonymous namespace)::HasExactlyOneBit' [ 0 9 18 41]
'__ssize_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'sandbox::bpf_dsl::Policy' [ 0 9 18]
'sandbox::cons::begin<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'sandbox::Syscall::Call<int, const char *, unsigned long, int, int, int, int, int>' [ 0 9 18]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 107]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >::__map_iterator' [ 0 5 10 325]
'sandbox::CrashSIGSYS' [ 0 9]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'sandbox::bpf_dsl::PolicyCompiler' [ 0 9 18]
'sandbox::SIGSYSSchedHandler' [ 0 9]
'std::__1::forward<const unsigned long &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::construct<sock_filter, sock_filter &>' [ 0 5 10 63]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::__iterator_traits_impl<std::__1::__wrap_iter<sock_filter *>, true>' [ 0 5 10]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::capacity' [ 0 5 10 129]
'std::__1::add_lvalue_reference<const sandbox::bpf_dsl::internal::ResultExprImpl>' [ 0 5 10]
'sandbox::SyscallSet::Iterator::operator++' [ 0 9 21 31]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10 182]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *&>' [ 0 5 10]
'__int8_t' [ 0]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>::tuple<true, false>' [ 0 5 10 103]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::begin' [ 0 5 10 122]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, void>' [ 0 5 10 120]
'std::__1::__tuple_leaf<1, unsigned int, false>::__tuple_leaf<unsigned int &, void>' [ 0 5 10 48]
'AnnotateMutexIsNotPHB' [ 0]
'std::__1::__tuple_leaf<0, unsigned short, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<unsigned long> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, int &, false>::__tuple_leaf<int &, void>' [ 0 5 10 41]
'std::__1::__shared_count::__shared_count' [ 0 5 10 26]
'std::__1::__tuple_less<1>::operator()<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10 27]
'sandbox::bpf_dsl::If' [ 0 9 18]
'std::__1::forward<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'sandbox::RestrictGetSetpriority' [ 0 9]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'running_on_valgrind' [ 0]
'sandbox::SyscallSets::IsDeniedGetOrModifySocket' [ 0 9 22]
'sandbox::bpf_dsl::PolicyCompiler::DangerousSetEscapePC' [ 0 9 18 34]
'(anonymous namespace)::IsArchitectureI386' [ 0 23]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::__enable_weak_this' [ 0 5 10 70]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::allocate' [ 0 5 10 198]
'std::__1::operator-<const sandbox::bpf_dsl::PolicyCompiler::Range *, const sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, void>' [ 0 5 10 118]
'std::__1::pointer_traits<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>' [ 0 5 10]
'std::__1::__tuple_less<2>::operator()<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10 27]
'sandbox::bpf_dsl::Arg<unsigned long>::Arg' [ 0 9 18 38]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> >' [ 0 5 10]
'std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>::pair<const sandbox::Trap::TrapKey &, 0>' [ 0 5 10 62]
'base::internal::ScopedFDCloseTraits' [ 0 6 16]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::get' [ 0 5 10 440]
'__intmax_t' [ 0]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>::pointer_to' [ 0 5 10 142]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10 429]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, 1, false>::__compressed_pair_elem<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, 0, 1>' [ 0 5 10 101]
'std::__1::remove_reference<std::__1::allocator<sock_filter> &>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data::Data' [ 0 6 63 69]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>::tuple<true, false>' [ 0 5 10 97]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, 0>' [ 0 5 10 127]
'sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl::Compile' [ 0 9 18 41 61]
'std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::value_comp' [ 0 5 10 334]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >::allocate' [ 0 5 10 202]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::__tuple_types<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<> >' [ 0 5 10]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::construct<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 198]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::push_back' [ 0 5 10 122]
'std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>::operator()' [ 0 5 10 165]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &, 1, false>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &, void>' [ 0 5 10 108]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >' [ 0 5 10]
'std::__1::__tree_node_base<void *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>::operator->' [ 0 5 10 298]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *&, void>' [ 0 5 10 463]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >::operator->' [ 0 5 10 325]
'std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'std::__1::__tuple_types<unsigned int &&>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::push_back' [ 0 5 10 66]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >, true>' [ 0 5 10 30]
'sandbox::bpf_dsl::PolicyCompiler::MaybeAddEscapeHatch' [ 0 9 18 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std' [ 0]
'std::__1::forward<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::__to_raw_pointer<unsigned long>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::operator bool' [ 0 5 10 72]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *>' [ 0 5 10]
'std::__1::conditional<false, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::__nat>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>::~shared_ptr' [ 0 5 10 85]
'std::__1::__throw_length_error' [ 0 5 10]
'sandbox::Trap::EnableUnsafeTraps' [ 0 9 15]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, 1, false>::__compressed_pair_elem<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&, 0, 1, 2>' [ 0 5 10 107]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10 172]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>::make_shared<bool &>' [ 0 5 10 82]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::ostream' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >, true>' [ 0 5 10 30]
'std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >::pair' [ 0 5 10 159]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::reset' [ 0 5 10 432]
'std::__1::enable_if<true, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::__nat>' [ 0 5 10]
'sandbox::(anonymous namespace)::kInvalidSyscallNumber' [ 0 9 32]
'(anonymous namespace)::kCapacityIncrement' [ 0 23]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::clear' [ 0 5 10 129]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, true>' [ 0 5 10 30]
'std::__1::operator==<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>' [ 0 5 10]
'AnnotateEnableRaceDetection' [ 0]
'std::__1::remove_reference<const unsigned long &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, long (*const &)(const sandbox::arch_seccomp_data &, void *), false>::get' [ 0 5 10 95]
'std::__1::__wrap_iter<sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'std::__1::forward_iterator_tag' [ 0 5 10]
'std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'sandbox::SyscallSet::All' [ 0 9 21]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, 1, false>' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'(anonymous namespace)::PrintSyscallError' [ 0 23]
'logging' [ 0]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::vector' [ 0 5 10 70]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >::__shared_ptr_emplace<int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10 186]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::release' [ 0 5 10 428]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >, long, true>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl::HasUnsafeTraps' [ 0 9 18 41 61]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::remove_reference<sock_filter &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >::__shared_ptr_emplace<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10 417]
'std::__1::map<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::insert<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void>' [ 0 5 10 338]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::__compressed_pair<true, void>' [ 0 5 10 264]
'std::__1::__tuple_less<1>::operator()<std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>, std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &> >' [ 0 5 10 27]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::construct<sock_filter, sock_filter>' [ 0 5 10 63]
'std::__1::tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>::tuple<true, false>' [ 0 5 10 222]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<unsigned long, std::__1::allocator<unsigned long>, true>' [ 0 5 10 30]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>::make_shared<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 79]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >, 1, false>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >' [ 0 5 10]
'sandbox::bpf_dsl::Arg<int>' [ 0 9 18]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::pointer_traits<const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::swap' [ 0 6 63]
'AnnotateHappensAfter' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::~unique_ptr' [ 0 5 10 452]
'std::__1::swap<const sandbox::bpf_dsl::internal::BoolExprImpl *>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >::__shared_ptr_emplace<unsigned int>' [ 0 5 10 180]
'std::__1::addressof<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<2, unsigned long &, false>::get' [ 0 5 10 51]
'(anonymous namespace)::SyscallNumberToOffsetFromBase' [ 0 23]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >, true>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__construct<sock_filter, sock_filter>' [ 0 5 10 63]
'std::__1::remove_reference<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, true>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >::__allocator_destructor' [ 0 5 10 474]
'std::__1::swap<sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__shared_weak_count *&>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>::tuple<true, false>' [ 0 5 10 101]
'std::__1::move<std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> > &>' [ 0 5 10]
'std::__1::__tuple_types<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>' [ 0 5 10]
'std::__1::tuple_element<2, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__second_tag' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__max_size' [ 0 5 10 91]
'sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl::~MaskedEqualBoolExprImpl' [ 0 9 18 41 66]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<unsigned long>, long, true>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >, void>' [ 0 5 10 277]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl::IsDeny' [ 0 9 18 41 61]
'std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> , false, false>' [ 0 5 10 90]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>::~shared_ptr' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::get_deleter' [ 0 5 10 270]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, false>' [ 0 5 10]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>::pair<const sandbox::Trap::TrapKey &>' [ 0 5 10 62]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, bool &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>::tuple<unsigned short &, unsigned int &, unsigned long &, unsigned long &, false, false>' [ 0 5 10 77]
'std::__1::__libcpp_atomic_refcount_decrement<long>' [ 0 5 10]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 428]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10 164]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >::deallocate' [ 0 5 10 231]
'sandbox::bpf_dsl::internal::ResultExprImpl::~ResultExprImpl' [ 0 9 18 28 44]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>, bool &, false>' [ 0 5 10 216]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::second' [ 0 5 10 449]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::release' [ 0 5 10 420]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::__alloc' [ 0 5 10 73]
'sandbox::Syscall::Call<int, const char *, unsigned long>' [ 0 9 18]
'__sigset_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::forward<const std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> &>' [ 0 5 10]
'int_least64_t' [ 0]
'logging::CheckNEImpl<unsigned int, unsigned long>' [ 0 9]
'sandbox::(anonymous namespace)::SandboxPanicTrap' [ 0 9 32]
'std::__1::__compressed_pair_elem<std::__1::allocator<unsigned long>, 1, true>' [ 0 5 10]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >' [ 0 5 10]
'logging::LOG_ERROR' [ 0 9]
'std::__1::forward<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<bool &>, std::__1::__nat>' [ 0 5 10]
'sandbox::SyscallSets' [ 0 9]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'std::__1::ostringstream' [ 0 5 10]
'__uintmax_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >::deallocate' [ 0 5 10 219]
'AnnotateCondVarSignalAll' [ 0]
'std::__1::__shared_count::__release_shared' [ 0 5 10 26]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::allocate' [ 0 5 10 65]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >::construct<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 169]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::size' [ 0 5 10 334]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >::deallocate' [ 0 5 10 192]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::get<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, 0, true>' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, 1, false>::__compressed_pair_elem<int &, unsigned long &, unsigned long &, unsigned long &, 0, 1, 2, 3>' [ 0 5 10 110]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >, 1, false>::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >, void>' [ 0 5 10 248]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::__split_buffer' [ 0 5 10 131]
'unsigned char' [ 0]
'sandbox::bpf_dsl::internal::ResultExprImpl::HasUnsafeTraps' [ 0 9 18 28 44]
'sandbox::Syscall::PutValueInUcontext' [ 0 9 18]
'std::__1::remove_reference<unsigned long *&>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'int8_t' [ 0]
'sandbox::SyscallSet::Iterator::operator*' [ 0 9 21 31]
'LinuxSigInfo' [ 0]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >::deallocate' [ 0 5 10 117]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__alloc' [ 0 5 10 129]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::__tuple_less<2>::operator()<std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>, std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &> >' [ 0 5 10 27]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10 134]
'std::__1::min<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__max_size' [ 0 5 10 63]
'sandbox::bpf_dsl::PolicyCompiler::CheckArch' [ 0 9 18 34]
'sandbox::SyscallSet::Iterator::~Iterator' [ 0 9 21 31]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'AnnotatePCQCreate' [ 0]
'std::__1::__tuple_leaf<0, unsigned int &&, false>' [ 0 5 10]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *&>' [ 0 5 10]
'std::__1::get<1, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'sandbox::bpf_dsl::PolicyCompiler::Unexpected64bitArgument' [ 0 9 18 34]
'std::__1::__tuple_types<bool &>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::make_shared<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10 204]
'sandbox::bpf_dsl::internal::BoolExprImpl' [ 0 9 18 28]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::release' [ 0 5 10 440]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::get' [ 0 5 10 432]
'logging::MakeCheckOpValueString<unsigned int>' [ 0 9]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, int &, unsigned long &, unsigned long &, unsigned long &>::__tuple_impl<0, 1, 2, 3, int &, unsigned long &, unsigned long &, unsigned long &, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10 121]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, false>::get' [ 0 5 10 120]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>, bool>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> &, void>' [ 0 5 10 367]
'std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >, false>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::reset' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >, void>' [ 0 5 10 275]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &> &>' [ 0 5 10]
'std::__1::get<2, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'std::__1::pair<sandbox::Trap::TrapKey, unsigned short>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&> &>' [ 0 5 10]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >, true>' [ 0 5 10 30]
'sandbox::SyscallSets::IsUmask' [ 0 9 22]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, void>' [ 0 5 10 117]
'std::__1::__wrap_iter<sock_filter *>::operator--' [ 0 5 10 38]
'std::__1::literals' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::__construct<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 198]
'std::__1::remove_reference<long (*const &)(const sandbox::arch_seccomp_data &, void *)>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__destruct_at_end' [ 0 5 10 77]
'__uint64_t' [ 0]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 107]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >' [ 0 5 10 425]
'std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >::deallocate' [ 0 5 10 225]
'std::__1::__tuple_leaf<0, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, false>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, false>::get' [ 0 5 10 201]
'std::__1::__compressed_pair<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::~vector' [ 0 5 10 66]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::~unique_ptr' [ 0 5 10 914]
'sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl::OrBoolExprImpl' [ 0 9 18 41 57]
'sandbox::SyscallSets::IsGlobalProcessEnvironment' [ 0 9 22]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >' [ 0 5 10]
'(anonymous namespace)::IsArchitectureMips' [ 0 23]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::get_deleter' [ 0 5 10 374]
'logging::CheckEQImpl<unsigned long, unsigned long>' [ 0 9]
'sandbox::bpf_dsl::PolicyCompiler::MaskedEqual' [ 0 9 18 34]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>::~__compressed_pair' [ 0 5 10 172]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__emplace_unique_extract_key<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 597]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::Policy>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__construct_range_forward<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >, sock_filter *>' [ 0 5 10 63]
'_G_fpos64_t' [ 0]
'AnnotateRWLockCreate' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::max_size' [ 0 5 10 70]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::clear' [ 0 5 10 131]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::remove_reference<unsigned long>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::FreeIfNecessary' [ 0 6 63]
'sandbox::kBranchRange' [ 0 9]
'std::__1::get<1, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::__compressed_pair<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10 414]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >::allocate' [ 0 5 10 202]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::operator->' [ 0 5 10 200]
'std::__1::__pointer_type<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'int_least16_t' [ 0]
'__rusage_who' [ 0]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >::__on_zero_shared' [ 0 5 10 168]
'std::__1::forward<bool &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>::~__compressed_pair' [ 0 5 10 170]
'fpregset_t' [ 0]
'std::__1::__pointer_type<sock_filter, std::__1::allocator<sock_filter> >' [ 0 5 10]
'std::__1::__wrap_iter<sock_filter *>::operator*' [ 0 5 10 38]
'std::__1::__wrap_iter<sock_filter *>::operator+' [ 0 5 10 38]
'std::__1::__wrap_iter<sock_filter *>::operator-' [ 0 5 10 38]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__to_raw_pointer<sock_filter>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__tuple_leaf<2, const bool &, false>::get' [ 0 5 10 48]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::__alloc' [ 0 5 10 75]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10]
'time_t' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >' [ 0 5 10]
'std::__1::operator-<std::__1::__wrap_iter<sock_filter *>, std::__1::__wrap_iter<sock_filter *> >' [ 0 5 10]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>' [ 0 5 10]
'bool' [ 0]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int, int, int, int, int, int>' [ 0 9 18 30]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *>::pointer_to' [ 0 5 10 208]
'std::__1::get<2, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::conditional<true, std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>, bool>, std::__1::__nat>' [ 0 5 10]
'sandbox::CrashSIGSYSIoctl' [ 0 9]
'std::__1::remove_reference<const std::__1::piecewise_construct_t &>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >::allocate' [ 0 5 10 196]
'std::__1::remove_reference<const std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true> &>' [ 0 5 10]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'sandbox::bpf_dsl::PolicyCompiler::IsRequiredForUnsafeTrap' [ 0 9 18 34]
'clock_t' [ 0]
'std::__1::__tuple_less<3>::operator()<std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>, std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &> >' [ 0 5 10 27]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >::deallocate' [ 0 5 10 198]
'sandbox::SyscallSets::IsAllowedAddressSpaceAccess' [ 0 9 22]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::size' [ 0 5 10 122]
'sandbox::SIGSYSFutexFailure::kSeccompFutexError' [ 0 9 29]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::~unique_ptr' [ 0 5 10 432]
'sock_filter' [ 0]
'sandbox::bpf_dsl::(anonymous namespace)::HasUnsafeTraps' [ 0 9 18 41]
'std::__1::conditional<false, std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair<sock_filter *, std::__1::allocator<sock_filter> &>::__compressed_pair<nullptr_t, std::__1::allocator<sock_filter> &>' [ 0 5 10 80]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 186]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >::allocate' [ 0 5 10 439]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >::__on_zero_shared' [ 0 5 10 186]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *&>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'sandbox::bpf_dsl::Arg<int>::Arg' [ 0 9 18 28]
'sandbox::BaselinePolicy::EvaluateSyscall' [ 0 9 25]
'sandbox::SyscallSet::IsValid' [ 0 9 21]
'std::__1::__libcpp_numeric_limits<long, true>' [ 0 5 10]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__push_back_slow_path<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 122]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >::get' [ 0 5 10 168]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::IsAllow' [ 0 9 18 41 63]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&, false>::__tuple_leaf<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, void>' [ 0 5 10 247]
'sandbox::SyscallSets::IsSystemVSharedMemory' [ 0 9 22]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >, void>' [ 0 5 10 281]
'sandbox::Syscall::Call<int, long, long, long, long, long>' [ 0 9 18]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >::__on_zero_shared_weak' [ 0 5 10 186]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>::~shared_ptr' [ 0 5 10 82]
'sandbox::GetErrorMessageContentForTests' [ 0 9]
'base' [ 0]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10 383]
'std::__1::allocator<sock_filter>::allocate' [ 0 5 10 34]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, false>::__tuple_leaf<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, void>' [ 0 5 10 239]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, unsigned short, false>::__tuple_leaf<unsigned short &, void>' [ 0 5 10 50]
'sandbox::(anonymous namespace)::EvaluateSyscallImpl' [ 0 9 32]
'sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::~Cell' [ 0 9 15 181]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::get' [ 0 5 10 374]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'(anonymous namespace)::SetIsInSigHandler' [ 0 23]
'std::__1::operator<<const sandbox::bpf_dsl::PolicyCompiler::Range *, const sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10 35 44 60 84 93 109]
'std::__1::__tuple_leaf<0, long (*&)(const sandbox::arch_seccomp_data &, void *), false>::get' [ 0 5 10 89]
'std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::__tree_iterator' [ 0 5 10 194]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >' [ 0 5 10]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'std::__1::get<0, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > &>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >::deallocate' [ 0 5 10 198]
'std::__1::tuple<>' [ 0 5 10]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::shared_ptr' [ 0 5 10 72]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>' [ 0 5 10 70]
'std::__1::__copy<sandbox::Trap::TrapKey, sandbox::Trap::TrapKey>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::begin' [ 0 5 10 66]
'stack_t' [ 0]
'std::__1::__libcpp_atomic_refcount_increment<long>' [ 0 5 10]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__make_iter' [ 0 5 10 122]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >, 1, false>' [ 0 5 10]
'sandbox::SyscallSets::IsAdvancedScheduler' [ 0 9 22]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__insert_node_at' [ 0 5 10 334]
'sandbox::CodeGen::~CodeGen' [ 0 9 18]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::second' [ 0 5 10 441]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, 0, true>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >, false>' [ 0 5 10]
'_libc_fpstate' [ 0]
'std::__1::pointer_traits<sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'std::__1::forward<bool &&>' [ 0 5 10]
'short' [ 0]
'AnnotatePCQPut' [ 0]
'std::__1::__tuple_types<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::kSyscallsRequiredForUnsafeTraps' [ 0 9 18 41]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >' [ 0 5 10]
'uint16_t' [ 0]
'std::__1::__tuple_leaf<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>' [ 0 5 10]
'std::__1::__tuple_types<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'signed char' [ 0]
'std::__1::forward<sandbox::bpf_dsl::Policy *>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl' [ 0 9 18 41]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >::operator()' [ 0 5 10 233]
'std::__1::__tree_map_pointer_types<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *, std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, true>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >' [ 0 5 10]
'std::__1::remove_reference<sock_filter>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>, std::__1::__nat>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'(anonymous namespace)::IsDefaultSignalAction' [ 0 23]
'std::__1::pointer_traits<void *>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>::tuple<true, false>' [ 0 5 10 101]
'sandbox::cons::ListIterator<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::operator++' [ 0 9 15 189]
'std::__1::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool, false, false>' [ 0 5 10 96]
'std::__1::__tuple_leaf<0, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, false>::__tuple_leaf<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, void>' [ 0 5 10 112]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::__owner_equivalent' [ 0 5 10 70]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 440]
'size_t' [ 0]
'std::__1::__tuple_types<const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'std::__1::remove_reference<int &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, 0, true>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<2, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&, false>::__tuple_leaf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>, void>' [ 0 5 10 109]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::max_size' [ 0 5 10 66]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::operator*' [ 0 5 10 70]
'AnnotatePCQGet' [ 0]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__emplace_unique<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 597]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>::make_shared<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10 85]
'std::__1::iterator_traits<sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10]
'sandbox::CodeGen::AppendInstruction' [ 0 9 18]
'std::__1::get<2, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'sandbox::(anonymous namespace)::EscapePC' [ 0 9 32]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::operator=' [ 0 5 10 70]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::get' [ 0 5 10 452]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, 1, false>::__compressed_pair_elem<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, 0>' [ 0 5 10 105]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >' [ 0 5 10]
'std::__1::__tuple_leaf<3, unsigned long, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, 0, true>' [ 0 5 10]
'std::__1::move<std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&> &>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'long int' [ 0]
'sandbox::bpf_dsl::internal::BoolExprImpl::BoolExprImpl' [ 0 9 18 28 42]
'AnnotateTraceMemory' [ 0]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__destruct_at_end' [ 0 5 10 129]
'std::__1::__tuple_leaf<0, const sandbox::Trap::TrapKey &, false>' [ 0 5 10]
'AnnotateIgnoreWritesBegin' [ 0]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'std::__1::move<std::__1::tuple<int &, unsigned long &, unsigned long &, unsigned long &> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::get' [ 0 5 10 428]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >' [ 0 5 10]
'std::__1::swap<sock_filter *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sock_filter> &, 1, false>::__compressed_pair_elem<std::__1::allocator<sock_filter> &, void>' [ 0 5 10 80]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10 210]
'std::__1::__tuple_types<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'std::__1::conditional<true, std::__1::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::data' [ 0 5 10 70]
'std::__1::move<std::__1::tuple<unsigned int &&> &>' [ 0 5 10]
'sandbox::SandboxBPF::SetProcFd' [ 0 9 21]
'std::__1::__libcpp_relaxed_load<long>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'std::__1::__const_void_pointer<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>, false>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >, false>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, 1, false>' [ 0 5 10]
'uintptr_t' [ 0]
'std::__1::remove_reference<std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'sandbox::SIGSYSIoctlFailure::kSeccompIoctlError' [ 0 9 29]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__tree_node_base<void *>::__set_parent' [ 0 5 10 36]
'std::__1::pointer_traits<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>::pointer_to' [ 0 5 10 92]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>::make_shared<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 80]
'sandbox::SyscallSets::IsMessageQueue' [ 0 9 22]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'int_fast32_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::allocate' [ 0 5 10 63]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::vector' [ 0 5 10 122]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::Policy *, 0, false>::__compressed_pair_elem<sandbox::bpf_dsl::Policy *, void>' [ 0 5 10 72]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >, void>' [ 0 5 10 269]
'sandbox::Die::suppress_info_' [ 0 9 14]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >' [ 0 5 10]
'FILE' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>::__tuple_impl<0, 1, 2, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10 293]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::locale' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::__tuple_leaf<3, unsigned long, false>::__tuple_leaf<unsigned long &, void>' [ 0 5 10 49]
'sandbox::SyscallSets::IsAllowedFileSystemAccessViaFd' [ 0 9 22]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, 0>' [ 0 5 10 127]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>' [ 0 5 10]
'std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__tree_key_value_types<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >::__get_ptr' [ 0 5 10 99]
'std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::operator->' [ 0 5 10 194]
'std::__1::__const_pointer<sock_filter, sock_filter *, std::__1::allocator<sock_filter>, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'sandbox::Trap::SigSysAction' [ 0 9 15]
'std::__1::__tuple_indices<0, 1>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *&, void>' [ 0 5 10 226]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'int' [ 0]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 174]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::binary_function<sandbox::Trap::TrapKey, sandbox::Trap::TrapKey, bool>' [ 0 5 10]
'ssize_t' [ 0]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::__alloc' [ 0 5 10 131]
'std::__1::make_pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> > &>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::deallocate' [ 0 5 10 198]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 180]
'std::__1::__tuple_leaf<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>::__tuple_leaf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, void>' [ 0 5 10 107]
'sandbox::Die::LogToStderr' [ 0 9 14]
'std::__1::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> , false, false>' [ 0 5 10 250]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >::__on_zero_shared_weak' [ 0 5 10 174]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::reset' [ 0 5 10 70]
'std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::map<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::map' [ 0 5 10 338]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::remove_reference<nullptr_t>' [ 0 5 10]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >::__allocator_destructor' [ 0 5 10 233]
'uint32_t' [ 0]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >::allocate' [ 0 5 10 190]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>' [ 0 5 10]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::reset' [ 0 5 10 432]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >, true>' [ 0 5 10 30]
'sandbox::SyscallSets::IsNuma' [ 0 9 22]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::swap' [ 0 5 10 210]
'sandbox::SyscallSets::IsAdvancedTimer' [ 0 9 22]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>' [ 0 5 10]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::clear' [ 0 5 10 79]
'std::__1::forward<long (*const &)(const sandbox::arch_seccomp_data &, void *)>' [ 0 5 10]
'std::__1::map<sandbox::Trap::TrapKey, unsigned short, std::__1::less<sandbox::Trap::TrapKey>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >::map' [ 0 5 10 180]
'sandbox::SyscallSet::Iterator::NextSyscall' [ 0 9 21 31]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::__enable_weak_this' [ 0 5 10 72]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >::operator->' [ 0 5 10 233]
'std::__1::__tuple_leaf<0, int &, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, 0>' [ 0 5 10 121]
'sandbox::bpf_dsl::PolicyCompiler::SetPanicFunc' [ 0 9 18 34]
'std::__1::__distance<char *>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, long, true>' [ 0 5 10]
'std::__1::forward<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::~unique_ptr' [ 0 5 10 428]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::forward<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'std::__1::forward_as_tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, 0, false>' [ 0 5 10]
'std::__1::forward<unsigned int &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::destroy<unsigned long>' [ 0 5 10 65]
'std::__1::chrono' [ 0 5 10]
'std::__1::forward<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'sandbox::bpf_dsl::TrapRegistry::TrapRegistry' [ 0 9 18 32]
'std::__1::remove_reference<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::remove_reference<const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::tuple<unsigned int &&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 61]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__insert_node_at' [ 0 5 10 597]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, false>::get' [ 0 5 10 120]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10 138]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::find<sandbox::Trap::TrapKey>' [ 0 5 10 334]
'logging::LOG_FATAL' [ 0 9]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'sandbox::SIGSYSKillFailure' [ 0 9]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, false>::get' [ 0 5 10 118]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__vector_base' [ 0 5 10 77]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>::deallocate' [ 0 5 10 62]
'sandbox::SIGSYSIoctlFailure' [ 0 9]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, false>::get' [ 0 5 10 239]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::__tree_node_base<void *> >' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >::deallocate' [ 0 5 10 439]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *&>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >, false>' [ 0 5 10]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::operator*' [ 0 5 10 194]
'AnnotateRWLockReleased' [ 0]
'std::__1::remove_reference<const void *&>' [ 0 5 10]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >::deallocate' [ 0 5 10 231]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, 0>' [ 0 5 10 124]
'std::__1::__compressed_pair<sock_filter *, std::__1::allocator<sock_filter> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, std::__1::__nat>' [ 0 5 10]
'std::__1::map<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::~map' [ 0 5 10 338]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>::~shared_ptr' [ 0 5 10 85]
'sock_fprog' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *&, void>' [ 0 5 10 214]
'std::__1::enable_if<true, std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> > >' [ 0 5 10]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'AnnotateIgnoreWritesEnd' [ 0]
'(anonymous namespace)::NumberToHex<unsigned long>::NumberToHex' [ 0 23 51]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>' [ 0 5 10]
'__time_t' [ 0]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > &>' [ 0 5 10]
'(anonymous namespace)::NumberToHex<int>::NumberToHex' [ 0 23 41]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::deallocate' [ 0 5 10 146]
'std::__1::__distance<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<bool &> &>' [ 0 5 10]
'std::__1::__tuple_types<int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'__int16_t' [ 0]
'std::__1::make_shared<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, 0>' [ 0 5 10 125]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__root' [ 0 5 10 597]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__destroy<sock_filter>' [ 0 5 10 63]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool>' [ 0 5 10]
'sandbox::bpf_dsl::AnyOf<>' [ 0 9 18]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::release' [ 0 5 10 440]
'std::__1::__pointer_type<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >' [ 0 5 10]
'AnnotateBarrierInit' [ 0]
'(anonymous namespace)' [ 0]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'sandbox::RestrictCloneToThreadsAndEPERMFork' [ 0 9]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>::shared_ptr' [ 0 5 10 85]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__construct<unsigned long, const unsigned long &>' [ 0 5 10 65]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int>' [ 0 9 18 30]
'sandbox::Die::SandboxDie' [ 0 9 14]
'std::__1::conditional<true, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, 0>' [ 0 5 10 125]
'std::__1::__compressed_pair<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::__compressed_pair<nullptr_t, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>' [ 0 5 10 136]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 432]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<int &, unsigned long &, unsigned long &, unsigned long &> &>' [ 0 5 10]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::__destruct_at_end' [ 0 5 10 131]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, void>' [ 0 5 10 120]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *&, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10 279]
'sandbox::bpf_dsl::internal::DefaultMask' [ 0 9 18 28]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, true>' [ 0 5 10]
'sandbox::cons' [ 0 9]
'std::__1::remove_reference<unsigned int>' [ 0 5 10]
'sandbox::bpf_dsl::Not' [ 0 9 18]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, void>' [ 0 5 10 118]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'sandbox::cons::operator==' [ 0 9 15]
'sandbox::SyscallSets::IsDeniedFileSystemAccessViaFd' [ 0 9 22]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl::AndBoolExprImpl' [ 0 9 18 41 58]
'std::__1::true_type' [ 0 5 10]
'std::__1::addressof<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>::shared_ptr' [ 0 5 10 85]
'std::__1::forward<unsigned short &>' [ 0 5 10]
'sandbox::SyscallSets::IsProcessPrivilegeChange' [ 0 9 22]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >, void>' [ 0 5 10 277]
'AnnotatePublishMemoryRange' [ 0]
'AnnotateCondVarWait' [ 0]
'intptr_t' [ 0]
'sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl::HasUnsafeTraps' [ 0 9 18 41 63]
'std::__1::__shared_weak_count::__release_shared' [ 0 5 10 31]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, false>::get' [ 0 5 10 117]
'sandbox::bpf_dsl::Elser::Elser' [ 0 9 18 25]
'std::__1::iterator<std::__1::random_access_iterator_tag, sock_filter, long, sock_filter *, sock_filter &>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'max_align_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>, true>' [ 0 5 10 30]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >' [ 0 5 10]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__annotate_delete' [ 0 5 10 122]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >, 1, false>' [ 0 5 10]
'AnnotatePCQDestroy' [ 0]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sock_filter *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 59]
'sandbox::Trap::SandboxDebuggingAllowedByUser' [ 0 9 15]
'std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::tail' [ 0 9 15 181]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, bool &, false>' [ 0 5 10]
'std::__1::map<sandbox::Trap::TrapKey, unsigned short, std::__1::less<sandbox::Trap::TrapKey>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >::operator[]' [ 0 5 10 180]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::second' [ 0 5 10 429]
'std::__1::__tuple_leaf<1, const void *const &, false>::get' [ 0 5 10 55]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::addressof<const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::destroy' [ 0 5 10 597]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10 166]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl' [ 0 9 18 41]
'std::__1::__wrap_iter<sock_filter *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::second' [ 0 5 10 425]
'sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl::Compile' [ 0 9 18 41 60]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::construct<unsigned long, const unsigned long &>' [ 0 5 10 65]
'ucontext_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, 1, true>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::~vector' [ 0 5 10 70]
'sandbox::bpf_dsl::operator==' [ 0 9 18]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&> &>' [ 0 5 10]
'std::__1::remove_reference<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > *&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, bool &>::__tuple_impl<0, bool &, bool &>' [ 0 5 10 62]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 180]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >' [ 0 5 10]
'std::__1::move<sandbox::bpf_dsl::PolicyCompiler::Range &>' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>' [ 0 5 10]
'std::__1::move<unsigned long *&>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, false>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const void *&, false>::__tuple_leaf<const void *&, void>' [ 0 5 10 49]
'logging::CheckEQImpl' [ 0 9]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, false>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >::__allocator_destructor' [ 0 5 10 237]
'sandbox::operator!=' [ 0 9]
'sandbox::bpf_dsl::Arg<unsigned long>' [ 0 9 18]
'sandbox::bpf_dsl::PolicyCompiler::CompileResult' [ 0 9 18 34]
'std::__1::allocator<char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >::__on_zero_shared_weak' [ 0 5 10 180]
'std::__1::remove_reference<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *>' [ 0 5 10]
'std::__1::pointer_traits<unsigned long *>' [ 0 5 10]
'std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, const unsigned long &, false>' [ 0 5 10 108]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::~ReturnResultExprImpl' [ 0 9 18 41 63]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__push_back_slow_path<sock_filter>' [ 0 5 10 66]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__find_equal<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10 597]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::get' [ 0 5 10 416]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl::Compile' [ 0 9 18 41 61]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__swap_out_circular_buffer' [ 0 5 10 122]
'std::__1::conditional<true, std::__1::pair<sandbox::Trap::TrapKey, unsigned short>, std::__1::__nat>' [ 0 5 10]
'std::nullptr_t' [ 0 5]
'sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl::Compile' [ 0 9 18 41 58]
'base::internal' [ 0 6]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, void>' [ 0 5 10 115]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>::__compressed_pair<nullptr_t, std::__1::allocator<unsigned long> &>' [ 0 5 10 84]
'std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'sandbox::bpf_dsl::Caser<int>::~Caser' [ 0 9 18 30]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'sandbox::Syscall::Call' [ 0 9 18]
'sandbox::CrashSIGSYSFutex' [ 0 9]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >::get' [ 0 5 10 186]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 416]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__tree' [ 0 5 10 597]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::reset' [ 0 5 10 374]
'sandbox::SyscallSets::IsSystemVMessageQueue' [ 0 9 22]
'sandbox' [ 0]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::max_size' [ 0 5 10 63]
'sandbox::RestrictKillTarget' [ 0 9]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<1, const void *&, false>::get' [ 0 5 10 49]
'std::__1::conditional<true, std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tuple_leaf<1, unsigned int, false>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>::make_shared<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool>' [ 0 5 10 83]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__tree' [ 0 5 10 334]
'std::__1::operator!=<std::__1::__wrap_iter<sock_filter *>, std::__1::__wrap_iter<sock_filter *> >' [ 0 5 10]
'std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>, bool &, false>' [ 0 5 10 320]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *>::__nat, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >' [ 0 5 10]
'std::__1::__tuple_leaf<2, const bool &, false>' [ 0 5 10]
'std::__1::allocator<unsigned long>::allocate' [ 0 5 10 36]
'sandbox::SyscallSets::IsFileSystem' [ 0 9 22]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__emplace_unique_key_args<sandbox::Trap::TrapKey, const std::__1::piecewise_construct_t &, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::tuple<> >' [ 0 5 10 334]
'sandbox::Die::SandboxInfo' [ 0 9 14]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, 1, false>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__construct_node<const std::__1::piecewise_construct_t &, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::tuple<> >' [ 0 5 10 334]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__swap_out_circular_buffer' [ 0 5 10 66]
'std::__1::forward<std::__1::allocator<sock_filter> &>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__tuple_leaf<1, unsigned long &, false>::__tuple_leaf<unsigned long &, void>' [ 0 5 10 51]
'(anonymous namespace)::NumberToHex<int>::length' [ 0 23 41]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<unsigned long, 0, false>' [ 0 5 10]
'std::__1::__const_void_pointer<sock_filter *, std::__1::allocator<sock_filter>, false>' [ 0 5 10]
'(anonymous namespace)::SetSeccompCrashKey' [ 0 23]
'std::__1::__compressed_pair_elem<std::__1::allocator<sock_filter> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__alloc' [ 0 5 10 79]
'sandbox::SyscallSet::~SyscallSet' [ 0 9 21]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >' [ 0 5 10]
'std::__1::operator!=' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::pointer_to' [ 0 5 10 93]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >::deallocate' [ 0 5 10 190]
'std::__1::swap<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > *>' [ 0 5 10]
'sandbox::bpf_dsl::Arg<unsigned int>::Arg' [ 0 9 18 37]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>::__tree_end_node' [ 0 5 10 65]
'sandbox::bpf_dsl::AnyOf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 9 18]
'std::__1::addressof<const char>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >::__allocator_destructor' [ 0 5 10 243]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__destruct_at_end' [ 0 5 10 79]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'sandbox::bpf_dsl::Kill' [ 0 9 18]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::data' [ 0 5 10 66]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'sandbox::SandboxBPF::StartSandbox' [ 0 9 21]
'std::__1::get<0, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, true>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::unique' [ 0 5 10 72]
'sandbox::bpf_dsl::Arg<unsigned int>::EqualTo' [ 0 9 18 37]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>::shared_ptr' [ 0 5 10 80]
'std::__1::allocator<sock_filter>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'sandbox::GetFutexErrorMessageContentForTests' [ 0 9]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, false>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >::~__shared_ptr_emplace' [ 0 5 10 417]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::integral_constant<unsigned long, 3>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, 1, false>::__compressed_pair_elem<unsigned int &&, 0>' [ 0 5 10 107]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'long unsigned int' [ 0]
'std::__1::piecewise_construct_t' [ 0 5 10]
'std::__1::__compressed_pair<sandbox::bpf_dsl::Policy *, std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::reset' [ 0 5 10 270]
'std::__1::remove_reference<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &>' [ 0 5 10]
'sandbox::CrashSIGSYSPrctl' [ 0 9]
'sandbox::bpf_dsl::Error' [ 0 9 18]
'std::__1::make_pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, const unsigned long &>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, true>' [ 0 5 10]
'std::__1::max<unsigned long>' [ 0 5 10]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, 0>' [ 0 5 10 122]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>::__tuple_leaf<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, void>' [ 0 5 10 107]
'std::__1::remove_reference<std::__1::tuple<unsigned int &&> &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>::~__compressed_pair' [ 0 5 10 176]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >::__on_zero_shared_weak' [ 0 5 10 417]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::__split_buffer' [ 0 5 10 79]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>' [ 0 5 10 70]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > &>' [ 0 5 10]
'sandbox::bpf_dsl::TrapRegistry' [ 0 9 18]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >::allocate' [ 0 5 10 117]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__vector_base' [ 0 5 10 129]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>' [ 0 5 10]
'std::__1::__tuple_leaf<2, const bool &, false>::__tuple_leaf<const bool &, void>' [ 0 5 10 48]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl::TrapResultExprImpl' [ 0 9 18 41 61]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 105]
'(anonymous namespace)::IsBuggyGlibcSemPost' [ 0 23]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >::operator()' [ 0 5 10 227]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'sigset_t' [ 0]
'std::__1::get<3, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'sigaction' [ 0]
'std::__1::__tuple_leaf<0, bool &, false>::get' [ 0 5 10 42]
'std::__1::add_lvalue_reference<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, true>' [ 0 5 10]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>' [ 0 5 10]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::length' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl::Compile' [ 0 9 18 41 57]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10 138]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::end' [ 0 5 10 334]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >::__shared_ptr_emplace<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 168]
'std::__1::__tree_node_base_types<void *>' [ 0 5 10]
'std::__1::remove_reference<unsigned int &>' [ 0 5 10]
'logging::LogMessageVoidify' [ 0 9]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, bool &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sock_filter>, 1, true>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >::__allocator_destructor' [ 0 5 10 233]
'std::__1::__tuple_less<4>' [ 0 5 10]
'std::__1::get<0, unsigned int &&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'(anonymous namespace)::NumberToHex<unsigned long>::str' [ 0 23 51]
'sandbox::Trap::TrapKey::operator<' [ 0 9 15 24]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >::operator++' [ 0 5 10 67]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__emplace_unique_key_args<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 597]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::get<1, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'base::internal::ScopedFDCloseTraits::InvalidValue' [ 0 6 16 37]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, true>' [ 0 5 10]
'std::__1::forward<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &>' [ 0 5 10]
'sandbox::bpf_dsl::internal::ResultExprImpl::IsAllow' [ 0 9 18 28 44]
'std::__1::operator-<sock_filter *, sock_filter *>' [ 0 5 10]
'__va_list_tag' [ 0]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >::base' [ 0 5 10 67]
'std::__1::__tuple_less<3>' [ 0 5 10]
'sandbox::SyscallSets::IsAllowedGeneralIo' [ 0 9 22]
'(anonymous namespace)::IsArchitectureX86_64' [ 0 23]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'logging::LogMessage' [ 0 9]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>::__tuple_impl<0, 1, 2, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool>' [ 0 5 10 139]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >' [ 0 5 10]
'std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'__uid_t' [ 0]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >' [ 0 5 10]
'sandbox::AllocateCrashKeys' [ 0 9]
'int_least8_t' [ 0]
'sandbox::SyscallSets::IsAllowedGettime' [ 0 9 22]
'sandbox::(anonymous namespace)::IsBaselinePolicyWatched' [ 0 9 32]
'std::__1::conditional<true, std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &, false>' [ 0 5 10]
'sandbox::RestrictSchedTarget' [ 0 9]
'AnnotateBarrierWaitAfter' [ 0]
'float' [ 0]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::__construct<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::tuple<> >' [ 0 5 10 146]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *>::pointer_to' [ 0 5 10 204]
'sandbox::bpf_dsl::Elser::Else' [ 0 9 18 25]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >::__map_iterator' [ 0 5 10 221]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 420]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sock_filter *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *&>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >, void>' [ 0 5 10 271]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__destroy<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 91]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>' [ 0 5 10 70]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::operator=<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10 72]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >::operator+' [ 0 5 10 67]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *&, void>' [ 0 5 10 193]
'std::__1::__compressed_pair_elem<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, 1, false>::__compressed_pair_elem<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&, 0, 1>' [ 0 5 10 225]
'std::__1::enable_if<true, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::__nat>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >::operator()' [ 0 5 10 231]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_indices<0, 1, 2, 3>' [ 0 5 10]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__recommend' [ 0 5 10 122]
'std::__1::__tuple_leaf<1, unsigned long &, false>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *&, void>' [ 0 5 10 226]
'sandbox::bpf_dsl::PolicyCompiler::PolicyCompiler' [ 0 9 18 34]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &> &>' [ 0 5 10]
'sandbox::SyscallSet::begin' [ 0 9 21]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >::get' [ 0 5 10 170]
'std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'sandbox::bpf_dsl::Trace' [ 0 9 18]
'std::__1::__add_lvalue_reference_impl<const sandbox::bpf_dsl::internal::ResultExprImpl, true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &, false>::get' [ 0 5 10 114]
'sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::head' [ 0 9 15 181]
'std::__1::__compressed_pair<sock_filter *, std::__1::allocator<sock_filter> &>::second' [ 0 5 10 80]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>' [ 0 5 10]
'std::__1::addressof<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'std::__1::move<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &>' [ 0 5 10]
'__gnuc_va_list' [ 0]
'sandbox::RestrictIoctl' [ 0 9]
'(anonymous namespace)::PrintSyscallError::kSeccompErrorPrefix' [ 0 23 42]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >' [ 0 5 10]
'std::__1::__iterator_traits_impl<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >, true>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::__owner_equivalent' [ 0 5 10 72]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::deallocate' [ 0 5 10 91]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>::~__compressed_pair' [ 0 5 10 166]
'std::__1::addressof<char>' [ 0 5 10]
'std::__1::forward<std::__1::tuple<> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::~shared_ptr' [ 0 5 10 72]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > , false, false>' [ 0 5 10 397]
'sandbox::SyscallSets::IsKeyManagement' [ 0 9 22]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::forward<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__rebind_pointer<void *, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>::make_shared<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 83]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::construct<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::tuple<> >' [ 0 5 10 146]
'sandbox::bpf_dsl::PolicyCompiler::Trap' [ 0 9 18 34]
'logging::LogMessage::stream' [ 0 9 21]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::PolicyCompiler::Range *, 0, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *&>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>::shared_ptr' [ 0 5 10 79]
'std::__1::conditional<false, std::__1::pointer_traits<sock_filter *>::__nat, sock_filter>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::~unique_ptr' [ 0 5 10 374]
'std::__1::input_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::second' [ 0 5 10 279]
'std::__1::__compressed_pair<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::swap' [ 0 5 10 66]
'sandbox::SyscallSets::IsFsControl' [ 0 9 22]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 102]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::~ScopedGeneric' [ 0 6 63]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::push_back' [ 0 5 10 70]
'std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::enable_if<true, sandbox::Trap::TrapKey *>' [ 0 5 10]
'AnnotateIgnoreSyncEnd' [ 0]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>' [ 0 5 10]
'sandbox::SandboxBPF::AssembleFilter' [ 0 9 21]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >::__allocator_destructor' [ 0 5 10 225]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>::~shared_ptr' [ 0 5 10 79]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::__vector_base' [ 0 5 10 73]
'AnnotateUnpublishMemoryRange' [ 0]
'__int64_t' [ 0]
'std::__1::addressof<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::remove_reference<unsigned short &>' [ 0 5 10]
'sandbox::SIGSYSCloneFailure' [ 0 9]
'std::__1::forward_as_tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >' [ 0 5 10]
'uint_fast32_t' [ 0]
'sandbox::SyscallSet::end' [ 0 9 21]
'wctrans_t' [ 0]
'sandbox::RewriteSchedSIGSYS' [ 0 9]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>::~shared_ptr' [ 0 5 10 83]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >::__shared_ptr_emplace<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 176]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__annotate_new' [ 0 5 10 122]
'sandbox::SyscallSets::IsCurrentDirectory' [ 0 9 22]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::forward<unsigned long>' [ 0 5 10]
'std::__1::move<std::__1::tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&> &>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3>, unsigned short, unsigned int, unsigned long, unsigned long>::__tuple_impl<0, 1, 2, 3, unsigned short, unsigned int, unsigned long, unsigned long, unsigned short &, unsigned int &, unsigned long &, unsigned long &>' [ 0 5 10 123]
'sandbox::SIGSYSPrctlFailure' [ 0 9]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >, true>' [ 0 5 10 30]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__alloc' [ 0 5 10 77]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >::deallocate' [ 0 5 10 169]
'mbstate_t' [ 0]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >, long, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'std::__1::__less<char *, char *>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >::__allocator_destructor' [ 0 5 10 231]
'std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >' [ 0 5 10]
'std::__1::move<sock_filter &>' [ 0 5 10]
'sandbox::SyscallSets::IsGetSimpleId' [ 0 9 22]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::release' [ 0 5 10 432]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::allocate' [ 0 5 10 66]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::IsAction' [ 0 9 18 41 63]
'unsigned int' [ 0]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, 1, false>::__compressed_pair_elem<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&, 0, 1, 2>' [ 0 5 10 105]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, true>' [ 0 5 10]
'__uint16_t' [ 0]
'std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__tree_is_left_child<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__make_iter' [ 0 5 10 66]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::end' [ 0 5 10 122]
'std::__1::pointer_traits<const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>' [ 0 5 10]
'std::__1::forward<const void *const &>' [ 0 5 10]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::~__vector_base' [ 0 5 10 129]
'std::__1::move<sandbox::bpf_dsl::PolicyCompiler::Range *&>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, const sandbox::Trap::TrapKey &>::__tuple_impl<0, const sandbox::Trap::TrapKey &, const sandbox::Trap::TrapKey &>' [ 0 5 10 86]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::SyscallSets::IsGlobalFSViewChange' [ 0 9 22]
'std::__1::__rebind_pointer<void *, const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'sandbox::RestrictMprotectFlags' [ 0 9]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &> &>' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl::~IfThenResultExprImpl' [ 0 9 18 41 63]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>::__tree_iterator' [ 0 5 10 298]
'sandbox::cons::operator!=<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, true>' [ 0 5 10]
'sandbox::bpf_dsl::PolicyCompiler::DispatchSyscall' [ 0 9 18 34]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__node_alloc' [ 0 5 10 334]
'std::__1::__tuple_leaf<0, long (*&)(const sandbox::arch_seccomp_data &, void *), false>::__tuple_leaf<long (*&)(const sandbox::arch_seccomp_data &, void *), void>' [ 0 5 10 89]
'sandbox::RestrictClockID' [ 0 9]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::use_count' [ 0 5 10 70]
'sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl::MaskedEqualBoolExprImpl' [ 0 9 18 41 66]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>::shared_ptr' [ 0 5 10 83]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1, 2>, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>::__tuple_impl<0, 1, 2, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10 156]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::__destruct_at_end' [ 0 5 10 73]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >, true>' [ 0 5 10 30]
'sandbox::SyscallSets::IsInotify' [ 0 9 22]
'std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::__tree_const_iterator' [ 0 5 10 200]
'std::__1::__libcpp_allocate' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::__get_np' [ 0 5 10 194]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >' [ 0 5 10]
'sandbox::SyscallSets::IsAllowedOperationOnFd' [ 0 9 22]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &> &>' [ 0 5 10]
'std::__1::remove_reference<bool &>' [ 0 5 10]
'sandbox::CodeGen' [ 0 9]
'std::__1::enable_if<true, void>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >, 1, false>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, false>::__tuple_leaf<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, void>' [ 0 5 10 123]
'std::__1::addressof<const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'std::__1::__const_void_pointer<unsigned long *, std::__1::allocator<unsigned long>, false>' [ 0 5 10]
'std::__1::forward<sock_filter &>' [ 0 5 10]
'sandbox::SandboxBPF::InstallFilter' [ 0 9 21]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>::__tuple_impl<0, 1, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10 437]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>::allocate' [ 0 5 10 62]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>' [ 0 5 10 70]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::move<std::__1::basic_string<char> &>' [ 0 5 10]
'std::__1::move<std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::__tree_node_destructor' [ 0 5 10 204]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, 1, false>::__compressed_pair_elem<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, 0, 1>' [ 0 5 10 102]
'std::__1::conditional<false, std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>::__get_np' [ 0 5 10 200]
'std::__1::move<std::__1::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&> &>' [ 0 5 10]
'std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>::construct<sandbox::bpf_dsl::PolicyCompiler::Range, sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 62]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>::shared_ptr' [ 0 5 10 83]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>::__tuple_impl<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 127]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 452]
'sigval' [ 0]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, false>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>::shared_ptr' [ 0 5 10 88]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, 0, true>' [ 0 5 10]
'std::__1::move<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'std::__1::map<sandbox::Trap::TrapKey, unsigned short, std::__1::less<sandbox::Trap::TrapKey>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >::find' [ 0 5 10 180]
'__mbstate_t' [ 0]
'std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> , false, false>' [ 0 5 10 163]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &>' [ 0 5 10]
'std::__1::get<2, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *&, void>' [ 0 5 10 232]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'sandbox::CrashSIGSYSKill' [ 0 9]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'sandbox::RestrictPrctl' [ 0 9]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&, false>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *&>' [ 0 5 10]
'std::__1::__tuple_leaf<3, unsigned long &, false>::get' [ 0 5 10 51]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, true>' [ 0 5 10]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10 176]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::~unique_ptr' [ 0 5 10 416]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::__construct_backward<sock_filter>' [ 0 5 10 63]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>::~__compressed_pair' [ 0 5 10 172]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::tuple_element<3, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::__tree_node_destructor' [ 0 5 10 152]
'AnnotateFlushExpectedRaces' [ 0]
'sandbox::bpf_dsl::internal::BoolExprImpl::~BoolExprImpl' [ 0 9 18 28 42]
'std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> >' [ 0 5 10]
'std::__1::__tuple_leaf<2, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, true>' [ 0 5 10]
'logging::CheckOpResult' [ 0 9]
'sandbox::bpf_dsl::Arg<long>::EqualTo' [ 0 9 18 29]
'sandbox::(anonymous namespace)::KernelSupportsSeccompBPF' [ 0 9 32]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >, void>' [ 0 5 10 287]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >::get' [ 0 5 10 180]
'std::__1::get<3, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'sandbox::SyscallSet::Iterator::Iterator' [ 0 9 21 31]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >, 1, false>' [ 0 5 10]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::reset' [ 0 6 63]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >, long, true>' [ 0 5 10]
'(anonymous namespace)::NumberToHex<unsigned long>::NumberToHex::kHexChars' [ 0 23 51 64]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *&>' [ 0 5 10]
'div_t' [ 0]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > &>' [ 0 5 10]
'decltype(nullptr)' [ 0]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::vector<std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> > >' [ 0 5 10 66]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *>::__nat, const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >::__allocator_destructor' [ 0 5 10 227]
'std::__1::float_denorm_style' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>' [ 0 5 10]
'(anonymous namespace)::SetSeccompCrashKey::prefixes' [ 0 23 43]
'std::__1::__compressed_pair_elem<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, 1, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::remove_reference<long (*&)(const sandbox::arch_seccomp_data &, void *)>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10 72]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::streampos' [ 0 5 10]
'std::__1::shared_ptr<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::~shared_ptr' [ 0 5 10 204]
'std::__1::move<sock_filter *&>' [ 0 5 10]
'std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long> >::__map_const_iterator' [ 0 5 10 233]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >::allocate' [ 0 5 10 192]
'std::__1::add_lvalue_reference<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::rbegin' [ 0 5 10 66]
'std::__1::forward<std::__1::allocator<unsigned long> &>' [ 0 5 10]
'double' [ 0]
'uintmax_t' [ 0]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::~shared_ptr' [ 0 5 10 210]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >, false>' [ 0 5 10]
'std::__1::move<const sandbox::bpf_dsl::internal::BoolExprImpl *&>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >' [ 0 5 10]
'sandbox::Die::ExitGroup' [ 0 9 14]
'std::__1' [ 0 5]
'sandbox::bpf_dsl::Caser<int>' [ 0 9 18]
'std::__1::__compressed_pair_elem<std::__1::default_delete<sandbox::bpf_dsl::Policy>, 1, true>' [ 0 5 10]
'std::__1::bidirectional_iterator_tag' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &, false>::get' [ 0 5 10 115]
'std::__1::__tuple_leaf<1, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&, false>::get' [ 0 5 10 247]
'logging::CheckEQImpl<unsigned int, unsigned int>' [ 0 9]
'std::__1::move<std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > &>' [ 0 5 10]
'std::__1::__tuple_leaf<3, unsigned long &, false>' [ 0 5 10]
'std::__1::forward_as_tuple<int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >, 1, false>' [ 0 5 10]
'std::__1::forward<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'sandbox::bpf_dsl::PolicyCompiler::Compile' [ 0 9 18 34]
'std::__1::remove_reference<sandbox::bpf_dsl::PolicyCompiler::Range *&>' [ 0 5 10]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>::operator+' [ 0 5 10 72]
'std::__1::remove_reference<std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>::__tuple_impl<0, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10 259]
'std::__1::forward_as_tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__shared_count::use_count' [ 0 5 10 26]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int, int, int, int, int, int, int, int>' [ 0 9 18 30]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__annotate_delete' [ 0 5 10 66]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, false>::get' [ 0 5 10 112]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::second' [ 0 5 10 136]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>::__wrap_iter<sandbox::bpf_dsl::PolicyCompiler::Range *>' [ 0 5 10 72]
'wint_t' [ 0]
'sandbox::bpf_dsl::PolicyCompiler::AssemblePolicy' [ 0 9 18 34]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::~unique_ptr' [ 0 5 10 270]
'std::__1::__tuple_leaf<0, long (*const &)(const sandbox::arch_seccomp_data &, void *), false>::__tuple_leaf<long (*const &)(const sandbox::arch_seccomp_data &, void *), void>' [ 0 5 10 95]
'std::__1::pointer_traits<const std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> *>::pointer_to' [ 0 5 10 96]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >' [ 0 5 10]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >, bool>::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>, bool, false>' [ 0 5 10 347]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>::operator+=' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__root_ptr' [ 0 5 10 597]
'std::__1::forward<unsigned int>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10 449]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>::~shared_ptr' [ 0 5 10 80]
'std::__1::__tuple_leaf<2, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&, false>::get' [ 0 5 10 109]
'std::__1::__tuple_leaf<1, const void *const &, false>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>::__nat, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'sandbox::Syscall' [ 0 9]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::construct<sandbox::bpf_dsl::PolicyCompiler::Range, sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 91]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'sandbox::SyscallSet' [ 0 9]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'sandbox::SyscallSets::IsSystemVSemaphores' [ 0 9 22]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::second' [ 0 5 10 441]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >::deallocate' [ 0 5 10 202]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl::ConstBoolExprImpl' [ 0 9 18 41 60]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::PolicyCompiler::Range *, 0, false>::__compressed_pair_elem<nullptr_t, void>' [ 0 5 10 87]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::second' [ 0 5 10 923]
'std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >::operator()' [ 0 5 10 94]
'std::__1::__wrap_iter<sandbox::bpf_dsl::PolicyCompiler::Range *>::base' [ 0 5 10 66]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *&>' [ 0 5 10]
'std::__1::__tuple_leaf<2, unsigned long, false>::__tuple_leaf<unsigned long &, void>' [ 0 5 10 49]
'std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>::operator()' [ 0 5 10 324]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::forward_as_tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, false>::get' [ 0 5 10 118]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>::shared_ptr' [ 0 5 10 82]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::~shared_ptr' [ 0 5 10 70]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *&>' [ 0 5 10]
'unsigned short' [ 0]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>' [ 0 5 10 70]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::max_size' [ 0 5 10 122]
'std::__1::pointer_traits<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::operator->' [ 0 5 10 374]
'std::__1::move<std::__1::__shared_weak_count *&>' [ 0 5 10]
'AnnotateBenignRace' [ 0]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::second' [ 0 5 10 449]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::operator*' [ 0 5 10 72]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >::__on_zero_shared' [ 0 5 10 180]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >' [ 0 5 10]
'std::__1::forward<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::release' [ 0 5 10 432]
'std::__1::remove_reference<int>' [ 0 5 10]
'std::__1::integral_constant<unsigned long, 4>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>, long, true>' [ 0 5 10]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::reset' [ 0 5 10 101]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >::allocate' [ 0 5 10 198]
'sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl' [ 0 9 18 41]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::operator=' [ 0 5 10 72]
'std::__1::operator==<sock_filter *, sock_filter *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'std::__1::__tuple_leaf<3, unsigned long &, false>::__tuple_leaf<unsigned long &, void>' [ 0 5 10 51]
'sandbox::bpf_dsl::Policy::Policy' [ 0 9 18 26]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::capacity' [ 0 5 10 131]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >, 1, false>' [ 0 5 10]
'std::__1::__const_pointer<sandbox::bpf_dsl::PolicyCompiler::Range, sandbox::bpf_dsl::PolicyCompiler::Range *, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range>, true>' [ 0 5 10]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::~__vector_base' [ 0 5 10 77]
'std::__1::__rebind_pointer<void *, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'sandbox::RestrictMmapFlags' [ 0 9]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *>::pointer_to' [ 0 5 10 208]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int, int, int, int, int, int, int>' [ 0 9 18 30]
'sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl' [ 0 9 18 41]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::conditional<true, std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >, bool>, std::__1::__nat>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>::__tuple_impl<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10 140]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'RunningOnValgrind' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::unique_ptr<true, void>' [ 0 5 10 914]
'std::__1::__tuple_leaf<1, const void *&, false>' [ 0 5 10]
'std::__1::__wrap_iter<const sandbox::bpf_dsl::PolicyCompiler::Range *>::operator->' [ 0 5 10 72]
'(anonymous namespace)::WriteToStdErr' [ 0 23]
'std::__1::__tuple_types<unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'uint64_t' [ 0]
'sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl::~AndBoolExprImpl' [ 0 9 18 41 58]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0, 1>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&>::__tuple_impl<0, 1, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10 203]
'std::__1::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, 0, false>::__compressed_pair_elem<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *&, void>' [ 0 5 10 141]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, 1, false>::~__compressed_pair_elem' [ 0 5 10 105]
'std::__1::__rebind_alloc_helper<std::__1::allocator_traits<std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >' [ 0 5 10]
'std::__1::remove_reference<bool &&>' [ 0 5 10]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >, true>' [ 0 5 10 30]
'std::__1::default_delete<sandbox::bpf_dsl::Policy>::operator()' [ 0 5 10 52]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__node_alloc' [ 0 5 10 597]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'sandbox::SyscallSets::IsAllowedSignalHandling' [ 0 9 22]
'std::__1::remove_reference<const bool &>' [ 0 5 10]
'std::__1::__compressed_pair<sock_filter *, std::__1::allocator<sock_filter> >::__compressed_pair<nullptr_t, true>' [ 0 5 10 79]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *>::pointer_to' [ 0 5 10 202]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::destroy<sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 91]
'sandbox::CodeGen::Append' [ 0 9 18]
'std::__1::__tree_node_base<void *>::__parent_unsafe' [ 0 5 10 36]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::unique' [ 0 5 10 70]
'std::__1::forward<int &>' [ 0 5 10]
'std::__1::once_flag' [ 0 5 10]
'sandbox::GetIoctlErrorMessageContentForTests' [ 0 9]
'std::__1::__wrap_iter<sock_filter *>::operator+=' [ 0 5 10 38]
'std::__1::max<unsigned long, std::__1::__less<unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >::__on_zero_shared' [ 0 5 10 417]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>::__get_np' [ 0 5 10 298]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__destroy<unsigned long>' [ 0 5 10 65]
'sandbox::Trap::global_trap_' [ 0 9 15]
'sandbox::Trap::Trap' [ 0 9 15]
'uint_least32_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>, 0, true>' [ 0 5 10]
'std::__1::remove_reference<bool>' [ 0 5 10]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::capacity' [ 0 5 10 77]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >' [ 0 5 10]
'sandbox::(anonymous namespace)::KernelSupportsSeccompTsync' [ 0 9 32]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >::allocate' [ 0 5 10 198]
'std::__1::less<sandbox::Trap::TrapKey>' [ 0 5 10]
'std::__1::streamoff' [ 0 5 10]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > &>' [ 0 5 10]
'logging::CheckNEImpl' [ 0 9]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >, 1, true>' [ 0 5 10]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl>::make_shared<unsigned int>' [ 0 5 10 85]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > >' [ 0 5 10]
'std::__1::__shared_weak_count::__add_shared' [ 0 5 10 31]
'std::__1::remove_reference<const sandbox::bpf_dsl::internal::BoolExprImpl *&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::release' [ 0 5 10 270]
'int_least32_t' [ 0]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >' [ 0 5 10]
'std::__1::swap<int>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, 0, false>::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *&, void>' [ 0 5 10 222]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::__annotate_new' [ 0 5 10 66]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'sandbox::bpf_dsl::ErrorCode' [ 0 9 18]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 374]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, true>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *>' [ 0 5 10]
'std::__1::__tuple_leaf<1, unsigned long &, false>::get' [ 0 5 10 51]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >, false>' [ 0 5 10]
'std::__1::operator==' [ 0 5 10]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *&>' [ 0 5 10]
'std::__1::move<const sandbox::bpf_dsl::internal::ResultExprImpl *&>' [ 0 5 10]
'std::__1::map<sandbox::Trap::TrapKey, unsigned short, std::__1::less<sandbox::Trap::TrapKey>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl::Compile' [ 0 9 18 41 63]
'std::__1::forward<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &>' [ 0 5 10]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::__destruct_at_end' [ 0 5 10 75]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > &>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >::__on_zero_shared' [ 0 5 10 176]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >::get' [ 0 5 10 174]
'std::__1::__tuple_less<2>' [ 0 5 10]
'sandbox::SyscallSets::IsTimer' [ 0 9 22]
'sandbox::SyscallSets::IsAllowedFutex' [ 0 9 22]
'std::__1::conditional<true, std::__1::tuple<int &, unsigned long &, unsigned long &, unsigned long &>, std::__1::__nat>' [ 0 5 10]
'std::__1::pointer_traits<const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>::pointer_to' [ 0 5 10 98]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::__construct<sandbox::bpf_dsl::PolicyCompiler::Range, sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10 91]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >, long, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, 1, false>' [ 0 5 10]
'std::__1::forward<int>' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::operator->' [ 0 5 10 70]
'std::__1::__split_buffer<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>::~__split_buffer' [ 0 5 10 131]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::value_comp' [ 0 5 10 597]
'std::__1::forward<long (*&)(const sandbox::arch_seccomp_data &, void *)>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>::__nat, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::__tuple_leaf<0, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&, false>::get' [ 0 5 10 107]
'sandbox::bpf_dsl::Caser<int>::Caser' [ 0 9 18 30]
'sandbox::SyscallSets::IsAllowedEpoll' [ 0 9 22]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>::~shared_ptr' [ 0 5 10 83]
'std::__1::forward_as_tuple<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool>' [ 0 5 10]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10]
'logging::CheckOpResult::message' [ 0 9 24]
'sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl::~OrBoolExprImpl' [ 0 9 18 41 57]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>::~__compressed_pair' [ 0 5 10 176]
'pid_t' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > > >::get' [ 0 5 10 440]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>::__nat, std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'siginfo_t' [ 0]
'std::__1::__libcpp_deallocate' [ 0 5 10]
'std::__1::tuple<const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__end_node' [ 0 5 10 597]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >::release' [ 0 5 10 374]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::__shared_weak_count::__shared_weak_count' [ 0 5 10 31]
'sandbox::SIGSYSCloneFailure::kSeccompCloneError' [ 0 9 29]
'sandbox::bpf_dsl::Caser<int>::CasesImpl<int, int>' [ 0 9 18 30]
'sandbox::Syscall::Call<int, int, int, int, int, int, int, int>' [ 0 9 18]
'std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >::~pair' [ 0 5 10 159]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *&>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >::__on_zero_shared' [ 0 5 10 180]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >::~__shared_ptr_emplace' [ 0 5 10 176]
'std::__1::tuple_element<2, std::__1::__tuple_types<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::operator!=<sock_filter *>' [ 0 5 10]
'std::__1::move<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &> &>' [ 0 5 10]
'(anonymous namespace)::NumberToHex<unsigned long>' [ 0 23]
'std::__1::__tree_node_types<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >' [ 0 5 10]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::size' [ 0 5 10 66]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl>' [ 0 5 10]
'logging::MakeCheckOpValueString<long>' [ 0 9]
'std::__1::get<0, const sandbox::Trap::TrapKey &>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *>::__nat, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >' [ 0 5 10]
'__uint32_t' [ 0]
'std::__1::__tuple_leaf<0, long (*&)(const sandbox::arch_seccomp_data &, void *), false>' [ 0 5 10]
'sandbox::CodeGen::Compile' [ 0 9 18]
'std::__1::__pointer_type<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >, sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::~__compressed_pair' [ 0 5 10 414]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, 1, true>::__compressed_pair_elem<const std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> &, void>' [ 0 5 10 208]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >::__on_zero_shared_weak' [ 0 5 10 176]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__insert_unique<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void>' [ 0 5 10 597]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >::allocate' [ 0 5 10 169]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::Die' [ 0 9]
'sandbox::SyscallSets::IsAdminOperation' [ 0 9 22]
'sandbox::SyscallSet::SyscallSet' [ 0 9 21]
'std::__1::conditional<true, std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >, std::__1::__nat>' [ 0 5 10]
'std::__1::less<sandbox::Trap::TrapKey>::operator()' [ 0 5 10 40]
'std::__1::get<0, int &, unsigned long &, unsigned long &, unsigned long &>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::conditional<false, std::__1::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>, std::__1::__nat>' [ 0 5 10]
'sandbox::SIGSYSPrctlFailure::kSeccompPrctlError' [ 0 9 29]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::operator=' [ 0 5 10 210]
'std::__1::tuple<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>::tuple<true, false>' [ 0 5 10 113]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::clear' [ 0 5 10 77]
'sandbox::cons::List<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'std::__1::__rebind_pointer<void *, std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'sandbox::Trap::Registry' [ 0 9 15]
'std::__1::tuple<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &&>' [ 0 5 10]
'std::__1::tuple_element<1, std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'uint_least8_t' [ 0]
'__sighandler_t' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >::reset' [ 0 5 10 452]
'std::__1::__tuple_leaf<1, const void *const &, false>::__tuple_leaf<const void *const &, void>' [ 0 5 10 55]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__annotate_delete' [ 0 5 10 70]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, true>' [ 0 5 10]
'std::__1::forward<std::__1::tuple<const sandbox::Trap::TrapKey &> >' [ 0 5 10]
'int64_t' [ 0]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > &>' [ 0 5 10]
'AnnotateHappensBefore' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, true>' [ 0 5 10 30]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >::get' [ 0 5 10 180]
'sandbox::Syscall::Call<long, long, long, long, long, long, int, int>' [ 0 9 18]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::max_size' [ 0 5 10 65]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::second' [ 0 5 10 437]
'sandbox::(anonymous namespace)::SandboxPanic' [ 0 9 32]
'std::__1::move<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > &>' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >' [ 0 5 10]
'tm' [ 0]
'sandbox::bpf_dsl::Arg<int>::EqualTo' [ 0 9 18 28]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > > >::operator()' [ 0 5 10 237]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::get' [ 0 5 10 914]
'sandbox::Syscall::Call<long long, long long, long long, long long, long long, long long>' [ 0 9 18]
'std::__1::get<2, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'std::__1::__wrap_iter<sock_filter *>::__wrap_iter' [ 0 5 10 38]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::release' [ 0 5 10 914]
'gregset_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl>, 0, true>' [ 0 5 10]
'sandbox::Trap' [ 0 9]
'int_fast8_t' [ 0]
'std::__1::map<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > > >::reset' [ 0 5 10 428]
'mcontext_t' [ 0]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::__construct_node<std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 597]
'sandbox::bpf_dsl::(anonymous namespace)' [ 0 9 18]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > > >' [ 0 5 10]
'sandbox::CrashSIGSYSClone' [ 0 9]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::use_count' [ 0 5 10 72]
'std::__1::__add_lvalue_reference_impl<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, true>' [ 0 5 10]
'sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'std::__1::forward<nullptr_t>' [ 0 5 10]
'sandbox::BaselinePolicy::~BaselinePolicy' [ 0 9 25]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 432]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl::NegateBoolExprImpl' [ 0 9 18 41 61]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl>::swap' [ 0 5 10 72]
'std::__1::__compressed_pair_elem<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, 1, false>::~__compressed_pair_elem' [ 0 5 10 225]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__annotate_new' [ 0 5 10 70]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >::operator->' [ 0 5 10 210]
'sandbox::bpf_dsl::AllOf' [ 0 9 18]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >::deallocate' [ 0 5 10 468]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, 0, true>::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &, 0>' [ 0 5 10 130]
'sandbox::RestrictPrlimit64' [ 0 9]
'sandbox::Trap::Trap::kExistingSIGSYSMsg' [ 0 9 15 21]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >, true>' [ 0 5 10 30]
'int32_t' [ 0]
'GetRunningOnValgrind' [ 0]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *>' [ 0 5 10]
'sandbox::bpf_dsl::Allow' [ 0 9 18]
'std::__1::allocator<unsigned long>' [ 0 5 10]
'std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long, false>' [ 0 5 10 114]
'sandbox::GetKillErrorMessageContentForTests' [ 0 9]
'greg_t' [ 0]
'std::__1::pair<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long> >, bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> *>::__nat, std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *> >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, false>' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &>::tuple<true, false>' [ 0 5 10 100]
'sandbox::BaselinePolicy::BaselinePolicy' [ 0 9 25]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::operator()' [ 0 5 10 204]
'std::__1::__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> &>::second' [ 0 5 10 84]
'AnnotateNewMemory' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > > >::reset' [ 0 5 10 416]
'AnnotateCondVarSignal' [ 0]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::~unique_ptr' [ 0 5 10 440]
'(anonymous namespace)::NumberToHex<int>::str' [ 0 23 41]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >::operator()' [ 0 5 10 225]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__end_node' [ 0 5 10 334]
'std::__1::__compressed_pair<sandbox::bpf_dsl::Policy *, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::__compressed_pair<sandbox::bpf_dsl::Policy *, std::__1::default_delete<sandbox::bpf_dsl::Policy> >' [ 0 5 10 110]
'std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>' [ 0 5 10]
'sandbox::bpf_dsl::BoolExpr' [ 0 9 18]
'std::__1::move<std::__1::tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &&> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >::unique_ptr<true, void>' [ 0 5 10 270]
'std::__1::__libcpp_numeric_limits<unsigned long, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, true>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>' [ 0 5 10]
'std::__1::__unwrap_iter<sandbox::Trap::TrapKey *>' [ 0 5 10]
'std::__1::allocator<sock_filter>::construct<sock_filter, sock_filter &>' [ 0 5 10 34]
'sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl::IfThenResultExprImpl' [ 0 9 18 41 63]
'std::__1::vector<sock_filter, std::__1::allocator<sock_filter> >::vector' [ 0 5 10 66]
'std::__1::add_lvalue_reference<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl>' [ 0 5 10]
'sandbox::bpf_dsl::Policy::~Policy' [ 0 9 18 26]
'std::__1::tuple<const sandbox::Trap::TrapKey &>::tuple<true, false>' [ 0 5 10 49]
'std::__1::addressof<const sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>::tuple<true, false>' [ 0 5 10 103]
'std::__1::allocator_traits<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::allocate' [ 0 5 10 91]
'std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>' [ 0 5 10]
'ignore_result<long>' [ 0]
'std::__1::map<sandbox::Trap::TrapKey, unsigned short, std::__1::less<sandbox::Trap::TrapKey>, std::__1::allocator<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> > >::end' [ 0 5 10 180]
'std::__1::__extract_key_first_tag' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl::~ConstBoolExprImpl' [ 0 9 18 41 60]
'std::__1::__const_void_pointer<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, false>' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'std::__1::ios_base::width' [ 0 5 10 20]
'std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > >' [ 0 5 10]
'int_fast64_t' [ 0]
'__intptr_t' [ 0]
'std::__1::tuple<bool &>' [ 0 5 10]
'std::__1::__const_void_pointer<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > *, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >, false>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >::destroy<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10 198]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'sandbox::bpf_dsl' [ 0 9]
'int16_t' [ 0]
'sandbox::bpf_dsl::Arg<unsigned long>::EqualTo' [ 0 9 18 38]
'std::__1::__const_void_pointer<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *, std::__1::allocator<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, false>' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::__tuple_types<long (*&)(const sandbox::arch_seccomp_data &, void *), const void *&, bool &&>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'std::__1::remove_reference<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > &>' [ 0 5 10]
'wchar_t' [ 0]
'std::__1::conditional<true, std::__1::tuple<unsigned int &&>, std::__1::__nat>' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'sandbox::Syscall::Call<int, void *, void *, void *>' [ 0 9 18]
'std::__1::remove_reference<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &, false>' [ 0 5 10]
'std::__1::tuple_element<1, std::__1::__tuple_types<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'sandbox::Die::simple_exit_' [ 0 9 14]
'std::__1::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >' [ 0 5 10]
'sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl' [ 0 9 18 41]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > >::deallocate' [ 0 5 10 227]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::destroy<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10 146]
'sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl::Compile' [ 0 9 18 41 63]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >' [ 0 5 10]
'sandbox::CodeGen::WithinRange' [ 0 9 18]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &, 1, false>::__get' [ 0 5 10 108]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::capacity' [ 0 5 10 75]
'sandbox::RestrictGetrusage' [ 0 9]
'std::__1::forward<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > > >' [ 0 5 10]
'sandbox::bpf_dsl::internal::ResultExprImpl::IsDeny' [ 0 9 18 28 44]
'std::__1::get<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >' [ 0 5 10]
'std::__1::forward<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &>' [ 0 5 10]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > >::operator()' [ 0 5 10 243]
'std::__1::__compressed_pair<unsigned long, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> >::__compressed_pair<int, const std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> &>' [ 0 5 10 210]
'std::__1::remove_reference<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &>' [ 0 5 10]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'sandbox::SandboxBPF::SupportsSeccompSandbox' [ 0 9 21]
'AnnotateRWLockAcquired' [ 0]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'ldiv_t' [ 0]
'AnnotateFlushState' [ 0]
'std::__1::remove_reference<sock_filter *&>' [ 0 5 10]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::clear' [ 0 5 10 73]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > &>' [ 0 5 10]
'std::__1::forward<const std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true> &>' [ 0 5 10]
'sandbox::bpf_dsl::Caser<int>::Case' [ 0 9 18 30]
'sandbox::SandboxBPF::~SandboxBPF' [ 0 9 21]
'std::__1::__vector_base<sock_filter, std::__1::allocator<sock_filter> >::~__vector_base' [ 0 5 10 73]
'(anonymous namespace)::GetIsInSigHandler' [ 0 23]
'std::__1::remove_reference<unsigned long &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, 1, true>' [ 0 5 10]
'AnnotateIgnoreSyncBegin' [ 0]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, 1, false>' [ 0 5 10]
'uint_fast8_t' [ 0]
'std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<unsigned long> >::__construct_backward<unsigned long>' [ 0 5 10 65]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> &>' [ 0 5 10]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > > >::reset' [ 0 5 10 420]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'__FILE' [ 0]
'std::__1::__tuple_types<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> &>' [ 0 5 10]
'sandbox::bpf_dsl::BoolConst' [ 0 9 18]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::reset' [ 0 5 10 440]
'_libc_fpxreg' [ 0]
'std::__1::__compressed_pair_elem<std::__1::allocator<sock_filter> &, 1, false>::__get' [ 0 5 10 80]
'__clock_t' [ 0]
'logging::MakeCheckOpString<unsigned int, unsigned int>' [ 0 9]
'std::__1::forward<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> > *&>' [ 0 5 10]
'std::__1::move<int &>' [ 0 5 10]
'std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >::construct<std::__1::pair<const sandbox::Trap::TrapKey, unsigned short>, const std::__1::piecewise_construct_t &, std::__1::tuple<const sandbox::Trap::TrapKey &>, std::__1::tuple<> >' [ 0 5 10 117]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, true>' [ 0 5 10]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::capacity' [ 0 5 10 79]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > >::deallocate' [ 0 5 10 227]
'sandbox::bpf_dsl::Switch<int>' [ 0 9 18]
'std::__1::forward_as_tuple<const sandbox::Trap::TrapKey &>' [ 0 5 10]
'sandbox::bpf_dsl::Elser' [ 0 9 18]
'std::__1::pointer_traits<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'std::__1::iterator_traits<sock_filter *>' [ 0 5 10]
'base::ScopedFD' [ 0 6]
'std::__1::get<1, unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'AnnotateNoOp' [ 0]
'sandbox::SyscallSets::IsGlobalSystemStatus' [ 0 9 22]
'sandbox::(anonymous namespace)::SyscallRange' [ 0 9 32]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >, 1, false>::__compressed_pair_elem<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >, void>' [ 0 5 10 518]
'std::__1::__compressed_pair_elem<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, 1, false>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >' [ 0 5 10]
'std::__1::forward_as_tuple<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> >' [ 0 5 10]
'std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__swap_out_circular_buffer' [ 0 5 10 70]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > > > >::unique_ptr<true, void>' [ 0 5 10 440]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >' [ 0 5 10]
'std::__1::enable_if<true, std::__1::shared_ptr<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >' [ 0 5 10]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > >, long, true>' [ 0 5 10]
'std::__1::forward<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>' [ 0 5 10]
'std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::operator()' [ 0 5 10 152]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> >, std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >, true>' [ 0 5 10 30]
'std::__1::get<0, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&>' [ 0 5 10]
'sandbox::CodeGen::CodeGen' [ 0 9 18]
'std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>' [ 0 5 10]
'__sigval_t' [ 0]
'std::__1::conditional<false, std::__1::pointer_traits<sandbox::bpf_dsl::PolicyCompiler::Range *>::__nat, sandbox::bpf_dsl::PolicyCompiler::Range>' [ 0 5 10]
'std::__1::__pointer_type<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> > >' [ 0 5 10]
'std::__1::addressof<std::__1::__tree_node_base<void *> *>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> >, long, true>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >, long, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> *, long>' [ 0 5 10]
'std::__1::add_lvalue_reference<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >' [ 0 5 10]
'std::__1::move<std::__1::tuple<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &&> &>' [ 0 5 10]
'std::__1::__allocator_traits_rebind<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl>, std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> >, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<sock_filter> >::destroy<sock_filter>' [ 0 5 10 63]
'std::__1::conditional<false, std::__1::pointer_traits<const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>::__nat, const std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'(anonymous namespace)::IsAndroid' [ 0 23]
'std::__1::__less<unsigned long, unsigned long>' [ 0 5 10]
'std::__1::forward<bool>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > > >' [ 0 5 10 923]
'std::__1::move<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > &>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__map_value_compare<sandbox::Trap::TrapKey, std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::less<sandbox::Trap::TrapKey>, true>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> > >::__find_equal<sandbox::Trap::TrapKey>' [ 0 5 10 334]
'std::__1::remove_reference<sandbox::bpf_dsl::Policy *>' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>, sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl>::__compressed_pair<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> &, bool &>' [ 0 5 10 170]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'sandbox::SyscallSets::IsAsyncIo' [ 0 9 22]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'sandbox::SyscallSet::ValidOnly' [ 0 9 21]
'__vtbl_ptr_type' [ 0]
'std::__1::__size_type<std::__1::allocator<sock_filter>, long, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::Policy, true>' [ 0 5 10]
'std::__1::__vector_base<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >' [ 0 5 10]
'std::__1::forward<unsigned long &>' [ 0 5 10]
'std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>::operator bool' [ 0 5 10 70]
'std::__1::__add_lvalue_reference_impl<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> &, false>' [ 0 5 10]
'intmax_t' [ 0]
'std::__1::__const_pointer<unsigned long, unsigned long *, std::__1::allocator<unsigned long>, true>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > > >, true>' [ 0 5 10 30]
'std::__1::addressof<std::__1::pair<const std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >' [ 0 5 10]
'std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> &>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, unsigned int &&>::__tuple_impl<0, unsigned int &&, unsigned int>' [ 0 5 10 71]
'__int32_t' [ 0]
'sandbox::bpf_dsl::PolicyCompiler::AssembleJumpTable' [ 0 9 18 34]
'AnnotateBenignRaceSized' [ 0]
'std::__1::pointer_traits<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> *>' [ 0 5 10]
'AnnotateRWLockDestroy' [ 0]
'sandbox::bpf_dsl::operator&' [ 0 9 18]
'sandbox::(anonymous namespace)::KernelHasLGBug' [ 0 9 32]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >' [ 0 5 10 441]
'std::__1::__vector_base<unsigned long, std::__1::allocator<unsigned long> >::__end_cap' [ 0 5 10 77]
'sandbox::SyscallSets::IsAllowedProcessStartOrDeath' [ 0 9 22]
'sandbox::cons::List<sandbox::bpf_dsl::Elser::Clause>' [ 0 9 15]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl>, 0, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::allocator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >, true>' [ 0 5 10 30]
'sandbox::bpf_dsl::Arg<long>::Arg' [ 0 9 18 29]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'std::__1::remove_reference<std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> &> &>' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> > *>' [ 0 5 10]
'sandbox::SyscallSets::IsMisc' [ 0 9 22]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'std::__1::__add_lvalue_reference_impl<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >, true>' [ 0 5 10]
'char' [ 0]
'std::__1::__split_buffer<sock_filter, std::__1::allocator<sock_filter> &>::~__split_buffer' [ 0 5 10 75]
'base::debug' [ 0 6]
'std::__1::__unique_ptr_deleter_sfinae<std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::MaskedEqualBoolExprImpl> > > > >' [ 0 5 10]
'std::__1::reverse_iterator<std::__1::__wrap_iter<sock_filter *> >::operator*' [ 0 5 10 67]
'std::__1::vector<sandbox::bpf_dsl::PolicyCompiler::Range, std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> >::capacity' [ 0 5 10 122]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > >' [ 0 5 10]
'std::__1::swap<std::__1::__shared_weak_count *>' [ 0 5 10]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::get' [ 0 5 10 101]
'std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > > >::operator()' [ 0 5 10 474]
'base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::get' [ 0 6 63]
'std::__1::__tree_key_value_types<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >::__compressed_pair<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > *&, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::NegateBoolExprImpl> > > > >' [ 0 5 10 441]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > >::allocate' [ 0 5 10 146]
'std::__1::__split_buffer<unsigned long, std::__1::allocator<unsigned long> &>::~__split_buffer' [ 0 5 10 79]
'std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl> > >::deallocate' [ 0 5 10 202]
'std::__1::remove_reference<std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> > > >' [ 0 5 10]
'std::__1::conditional<true, std::__1::tuple<std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> &>, std::__1::__nat>' [ 0 5 10]
'sandbox::bpf_dsl::AnyOf' [ 0 9 18]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >, std::__1::allocator<sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > > *>::pointer_to' [ 0 5 10 445]
'std::__1::make_shared<sandbox::bpf_dsl::(anonymous namespace)::ReturnResultExprImpl, unsigned int>' [ 0 5 10]
'std::__1::__tuple_leaf<0, const sandbox::Trap::TrapKey &, false>::__tuple_leaf<const sandbox::Trap::TrapKey &, void>' [ 0 5 10 66]
'std::__1::unique_ptr<sandbox::bpf_dsl::Policy, std::__1::default_delete<sandbox::bpf_dsl::Policy> >::~unique_ptr' [ 0 5 10 101]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'std::__1::__tree_iterator<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, std::__1::__tree_node<std::__1::__value_type<sandbox::Trap::TrapKey, unsigned short>, void *> *, long>' [ 0 5 10]
'std::__1::__tree<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::__map_value_compare<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, std::__1::less<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> > >::~__tree' [ 0 5 10 597]
'std::__1::addressof<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > >' [ 0 5 10]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__tuple_leaf<0, const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, false>::__tuple_leaf<const std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > &, void>' [ 0 5 10 201]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'std::__1::forward<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>, void *> >, 1, true>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<sandbox::bpf_dsl::PolicyCompiler::Range> &, 1, false>' [ 0 5 10]
'std::__1::__wrap_iter<sandbox::bpf_dsl::PolicyCompiler::Range *>::__wrap_iter' [ 0 5 10 66]
'std::__1::__tree_key_value_types<std::__1::__value_type<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long> >::__get_ptr' [ 0 5 10 151]
'std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::AndBoolExprImpl> > > >::deallocate' [ 0 5 10 221]
'va_list' [ 0]
'std::__1::allocator<unsigned long>::deallocate' [ 0 5 10 36]
'sandbox::SandboxBPF::ForwardSyscall' [ 0 9 21]
'std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10]
'std::__1::operator<<long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &, long (*const &)(const sandbox::arch_seccomp_data &, void *), const void *const &, const bool &>' [ 0 5 10]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::IfThenResultExprImpl> >::__shared_ptr_emplace<const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl> &, const std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> &, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> >' [ 0 5 10 180]
'std::__1::tuple_element<0, std::__1::__tuple_types<unsigned short, unsigned int, unsigned long, unsigned long> >' [ 0 5 10]
'sandbox::BaselinePolicy' [ 0 9]
'std::__1::get<0, bool &>' [ 0 5 10]
'std::__1::remove_reference<std::__1::shared_ptr<const sandbox::cons::Cell<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > > > >' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, true>' [ 0 5 10]
'sandbox::cons::ListIterator<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'sandbox::Trap::Add' [ 0 9 15]
'sandbox::SyscallSets::IsDebug' [ 0 9 22]
'sandbox::cons::ListIterator<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >::operator*' [ 0 9 15 189]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'std::__1::pointer_traits<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::OrBoolExprImpl> > *>::pointer_to' [ 0 5 10 196]
'std::__1::pair<std::__1::tuple<unsigned short, unsigned int, unsigned long, unsigned long>, unsigned long>' [ 0 5 10]
'std::__1::__tuple_indices<0, 1, 2>' [ 0 5 10]
'sandbox::cons::end<std::__1::pair<std::__1::shared_ptr<const sandbox::bpf_dsl::internal::BoolExprImpl>, std::__1::shared_ptr<const sandbox::bpf_dsl::internal::ResultExprImpl> > >' [ 0 9 15]
'std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::ConstBoolExprImpl> >::__shared_ptr_emplace<bool &>' [ 0 5 10 174]
'std::__1::unique_ptr<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> >, std::__1::__allocator_destructor<std::__1::allocator<std::__1::__shared_ptr_emplace<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl, std::__1::allocator<sandbox::bpf_dsl::(anonymous namespace)::TrapResultExprImpl> > > > >::get' [ 0 5 10 432]
