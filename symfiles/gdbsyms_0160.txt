'std::__1::iterator_traits<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::__const_pointer<base::Value, base::Value *, std::__1::allocator<base::Value>, true>' [ 0 5 10]
'url::Origin' [ 0 5]
'size_t' [ 0]
'std::__1::forward<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::setstate' [ 0 5 10 57]
'network::mojom' [ 0 9]
'logging' [ 0]
'std::__1::__compressed_pair_elem<network::SimpleURLLoader *, 0, false>::__compressed_pair_elem<network::SimpleURLLoader *, void>' [ 0 5 10 72]
'base::Unretained<captive_portal::CaptivePortalDetector>' [ 0 6]
'base::internal::IsNull<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName)>' [ 0 6 16]
'std::__1::add_lvalue_reference<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'base::internal::BindStateBaseRefCountTraits' [ 0 6 16]
'std::__1::conditional<false, std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>::__nat, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'std::__1::__unique_if<data_use_measurement::DataUseUserData>' [ 0 5 10]
'std::__1::__compressed_pair_elem<data_use_measurement::DataUseUserData *, 0, false>::__compressed_pair_elem<data_use_measurement::DataUseUserData *&, void>' [ 0 5 10 85]
'std::__1::remove_reference<std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10]
'pthread_mutex_t' [ 0]
'base::internal::PassingTraitsType<std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > > >' [ 0 6 16]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::RunImpl<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, 0>::is_method' [ 0 6 16 403 666]
'captive_portal::CaptivePortalResult' [ 0 16]
'__uint8_t' [ 0]
'std::__1::vector<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::__compressed_pair<network::ResourceRequest *, std::__1::default_delete<network::ResourceRequest> >::__compressed_pair<network::ResourceRequest *&, true>' [ 0 5 10 110]
'std::__1::__size_type<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, long, true>' [ 0 5 10]
'std::__1::remove_reference<std::__1::basic_string<char> *>' [ 0 5 10]
'captive_portal::CaptivePortalDetector::Results::Results' [ 0 16 39 48]
'std::__1::__pointer_type<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::remove_reference<base::OnceCallback<void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)> &>' [ 0 5 10]
'std::__1::__libcpp_allocate' [ 0 5 10]
'base::StringPiece16' [ 0 6]
'std::__1::distance<char *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<net::HttpResponseHeaders::ParsedHeader *, 0, false>' [ 0 5 10]
'std::__1::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >::reset' [ 0 5 10 127]
'std::__1::__compressed_pair_elem<std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>, 1, true>' [ 0 5 10]
'std::__1::default_delete<base::DictionaryValue>' [ 0 5 10]
'base::internal::BindStateBase::~BindStateBase' [ 0 6 16 31]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::gptr' [ 0 5 10 63]
'captive_portal::CaptivePortalDetector::Results::~Results' [ 0 16 39 48]
'std::__1::iterator<std::__1::output_iterator_tag, void, void, void, void>' [ 0 5 10]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream' [ 0 5 10 94]
'std::__1::true_type' [ 0 5 10]
'net::HttpVersion' [ 0 5]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::unique_ptr<true, void>' [ 0 5 10 101]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> &>' [ 0 5 10]
'base::internal::PassingTraits<std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >, false>' [ 0 6 16]
'base::time_internal::TimeBase<base::Time>::is_null' [ 0 6 21 43]
'std::__1::__pointer_type<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::pointer_traits<net::HttpRequestHeaders::HeaderKeyValuePair *>' [ 0 5 10]
'std::__1::false_type' [ 0 5 10]
'logging::MakeCheckOpValueString<captive_portal::CaptivePortalResult>' [ 0 9]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::release' [ 0 5 10 101]
'net' [ 0]
'std::__1::__const_void_pointer<base::Value *, std::__1::allocator<base::Value>, false>' [ 0 5 10]
'__va_list_tag' [ 0]
'base::Value' [ 0 6]
'intptr_t' [ 0]
'std::__1::__compressed_pair_elem<char *, 0, false>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<network::SimpleURLLoader, true>' [ 0 5 10]
'base::internal::OptionalStorage<url::Origin, false, false>' [ 0 6 16]
'std::__1::allocator<void>' [ 0 5 10]
'std::__1::__vector_base<base::Value, std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> >::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData>, void, void>' [ 0 5 10 109]
'std::__1::add_lvalue_reference<base::DictionaryValue>' [ 0 5 10]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'captive_portal::CaptivePortalDetector::~CaptivePortalDetector' [ 0 16 39]
'std::__1::__pointer_type_imp::__pointer_type<char, std::__1::allocator<char>, true>' [ 0 5 10 30]
'std::__1::pointer_traits<base::Value *>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<GURL>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData>, false>' [ 0 5 10 30]
'std::__1::iterator_traits<char *>' [ 0 5 10]
'captive_portal::CaptivePortalDetector' [ 0 16]
'base::Callback<MakeUnboundRunType<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName &> >' [ 0 6]
'std::__1::__compressed_pair_elem<network::SimpleURLLoader *, 0, false>' [ 0 5 10]
'base::AtomicRefCount' [ 0 6]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'base::internal::MoveConstructible<true>' [ 0 6 16]
'std::__1::__tuple_types<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'std::__1::__compressed_pair<net::HttpResponseHeaders::ParsedHeader *, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader> >' [ 0 5 10]
'logging::CheckOpResult::operator bool' [ 0 9 24]
'logging::LogSeverity' [ 0 9]
'base::OnceCallback<void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::~OnceCallback' [ 0 6 137]
'char' [ 0]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::RunImpl<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, 0>' [ 0 6 16 403]
'std::__1::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::widen' [ 0 5 10 57]
'std::__1::__tuple_types<data_use_measurement::DataUseUserData::ServiceName>' [ 0 5 10]
'base::internal::OptionalBase<url::Origin>' [ 0 6 16]
'std::__1::remove_reference<network::SimpleURLLoader *>' [ 0 5 10]
'std::__1::__put_character_sequence<char, std::__1::char_traits<char> >' [ 0 5 10]
'__uintmax_t' [ 0]
'ptrdiff_t' [ 0]
'std::__1::char_traits<char>::eq_int_type' [ 0 5 10 29]
'base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>::Destroy' [ 0 6 16 244]
'std::__1::__vector_base<net::HttpResponseHeaders::ParsedHeader, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader> >' [ 0 5 10]
'base::internal::FunctorTraits<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), void>' [ 0 6 16]
'std::__1::ostringstream' [ 0 5 10]
'base::RepeatingCallback<void (const captive_portal::CaptivePortalDetector::Results &)>::RepeatingCallback' [ 0 6 88]
'std::__1::remove_reference<const std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> &>' [ 0 5 10]
'data_use_measurement::DataUseUserData::~DataUseUserData' [ 0 22 39]
'std::__1::tuple_element<0, std::__1::__tuple_types<data_use_measurement::DataUseUserData::ServiceName> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_cap' [ 0 5 10 87]
'data_use_measurement::DataUseUserData::kUserDataKey' [ 0 22 39]
'std::__1::__tuple_indices<0>' [ 0 5 10]
'std::__1::__compressed_pair_elem<network::ResourceRequest *, 0, false>' [ 0 5 10]
'std::__1::__compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair> >' [ 0 5 10]
'base::RefCountedThreadSafe<net::HttpResponseHeaders, base::DefaultRefCountedThreadSafeTraits<net::HttpResponseHeaders> >' [ 0 6]
'std::__1::forward<network::SimpleURLLoader *>' [ 0 5 10]
'data_use_measurement::DataUseUserData::GetServiceNameAsString' [ 0 22 39]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize' [ 0 5 10 87]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > &>' [ 0 5 10]
'std::__1::tuple_element<0, std::__1::__tuple_types<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::basic_string<char> >, 1, true>::__compressed_pair_elem<std::__1::default_delete<std::__1::basic_string<char> >, void>' [ 0 5 10 100]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::DictionaryValue>, 1, true>' [ 0 5 10]
'std::__1::max<char *, std::__1::__less<char *, char *> >' [ 0 5 10]
'logging::MakeCheckOpString<captive_portal::CaptivePortalResult, int>' [ 0 9]
'std::__1::conditional<true, std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, std::__1::__nat>' [ 0 5 10]
'base::TimeDelta::TimeDelta' [ 0 6 17]
'std::__1::forward<data_use_measurement::DataUseUserData *&>' [ 0 5 10]
'base::Time::Time' [ 0 6 12]
'base::nullopt_t' [ 0 6]
'std::__1::conditional<false, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>::operator bool' [ 0 46]
'captive_portal::CaptivePortalMetrics::LogCaptivePortalBlockingPageEvent' [ 0 16 38]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>::__compressed_pair_elem<std::__1::basic_string<char> *, void>' [ 0 5 10 76]
'std::__1::unique_ptr<GURL, std::__1::default_delete<GURL> >' [ 0 5 10]
'network' [ 0]
'std::__1::allocator<char>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>' [ 0 6 16]
'std::__1::default_delete<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::__second_tag' [ 0 5 10]
'timespec' [ 0]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::operator bool' [ 0 5 10 101]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::__pbump' [ 0 5 10 63]
'std::__1::__const_void_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, false>' [ 0 5 10]
'std::__1::operator<<<std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName)>' [ 0 5 10]
'tm' [ 0]
'std::__1::tuple_element<0, std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::max_size' [ 0 5 10 87]
'std::__1::ctype<char>::widen' [ 0 5 10 23]
'std::__1::__compressed_pair_elem<std::__1::default_delete<std::__1::basic_string<char> >, 1, true>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_short_size' [ 0 5 10 87]
'std::__1::add_lvalue_reference<network::SimpleURLLoader>' [ 0 5 10]
'std::__1::default_delete<network::SimpleURLLoader>::operator()' [ 0 5 10 52]
'std::__1::once_flag' [ 0 5 10]
'std::__1::literals::chrono_literals' [ 0 5 10 20]
'int8_t' [ 0]
'std::__1::ios_base::rdbuf' [ 0 5 10 20]
'uint_fast8_t' [ 0]
'std::__1::__compressed_pair_elem<base::SupportsUserData::Data *, 0, false>::__compressed_pair_elem<data_use_measurement::DataUseUserData *, void>' [ 0 5 10 76]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::epptr' [ 0 5 10 63]
'captive_portal::CaptivePortalDetector::DetectCaptivePortal' [ 0 16 39]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<const std::__1::allocator<char> &>' [ 0 5 10 151]
'std::__1::conditional<true, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::__nat>' [ 0 5 10]
'std::__1::__wrap_iter<const char *>' [ 0 5 10]
'std::__1::chrono' [ 0 5 10]
'std::__1::pointer_traits<char *>' [ 0 5 10]
'url::Parsed' [ 0 5]
'std::__1::make_unique<data_use_measurement::DataUseUserData, data_use_measurement::DataUseUserData::ServiceName &, data_use_measurement::DataUseUserData::AppState>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SequenceCheckerImpl::Core>, 1, true>' [ 0 5 10]
'captive_portal::CaptivePortalDetector::GetCurrentTime' [ 0 16 39]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::Run::num_bound_args' [ 0 6 16 381 386]
'std::__1::forward<captive_portal::CaptivePortalDetector *>' [ 0 5 10]
'uint_least64_t' [ 0]
'std::__1::__atomic_base<int, false>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10]
'std::__1::__unique_if<network::ResourceRequest>' [ 0 5 10]
'base::RepeatingCallback<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::RepeatingCallback' [ 0 6 137]
'base::RepeatingCallback<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>' [ 0 6]
'std::__1::forward<network::ResourceRequest *&>' [ 0 5 10]
'captive_portal::CaptivePortalMetrics' [ 0 16]
'std::__1::__compressed_pair<base::Value *, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::__compressed_pair<network::SimpleURLLoader *, std::__1::default_delete<network::SimpleURLLoader> >::__compressed_pair<network::SimpleURLLoader *, true>' [ 0 5 10 110]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos' [ 0 5 10 90]
'std::__1::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string<char *>' [ 0 5 10 87]
'std::__1::__compressed_pair_elem<base::SupportsUserData::Data *, 0, false>' [ 0 5 10]
'uint_fast64_t' [ 0]
'captive_portal::CaptivePortalDetector::OnSimpleLoaderComplete' [ 0 16 39]
'std::__1::integral_constant<bool, false>' [ 0 5 10]
'base::OnceCallback<void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 6]
'std::__1::ios_base::flags' [ 0 5 10 20]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >::basic_ostream' [ 0 5 10 61]
'std::__1::default_delete<network::ResourceRequest>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf' [ 0 5 10 90]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff' [ 0 5 10 90]
'base::time_internal::TimeBase<base::Time>::TimeBase' [ 0 6 21 43]
'std::__1::less<void>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_pointer' [ 0 5 10 87]
'std::__1::forward<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName)>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<std::__1::basic_string<char>, true>' [ 0 5 10]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::operator=' [ 0 5 10 101]
'base' [ 0]
'std::__1::max<char *>' [ 0 5 10]
'std::__1::__pointer_type_imp' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SupportsUserData::Data>, 1, true>::__compressed_pair_elem<std::__1::default_delete<data_use_measurement::DataUseUserData>, void>' [ 0 5 10 99]
'base::SequenceChecker::SequenceChecker' [ 0 6 23]
'std::__1::pointer_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'clock_t' [ 0]
'std::__1::literals' [ 0 5 10]
'__pthread_list_t' [ 0]
'std::__1::remove_reference<data_use_measurement::DataUseUserData::AppState>' [ 0 5 10]
'__uint64_t' [ 0]
'fpos_t' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<GURL, std::__1::default_delete<GURL>, false>' [ 0 5 10 30]
'std::__1::__compressed_pair_elem<base::SequenceCheckerImpl::Core *, 0, false>' [ 0 5 10]
'captive_portal' [ 0]
'std' [ 0]
'std::__1::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >::release' [ 0 5 10 127]
'std::__1::addressof<const char>' [ 0 5 10]
'long long unsigned int' [ 0]
'std::__1::add_lvalue_reference<GURL>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<char> >' [ 0 5 10]
'network::mojom::CORSPreflightPolicy' [ 0 9 16]
'std::__1::vector<net::HttpResponseHeaders::ParsedHeader, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader> >' [ 0 5 10]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >::__compressed_pair<true, void>' [ 0 5 10 151]
'std::__1::__compressed_pair<char *, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::~unique_ptr' [ 0 5 10 101]
'std::__1::__compressed_pair<data_use_measurement::DataUseUserData *, std::__1::default_delete<data_use_measurement::DataUseUserData> >::__compressed_pair<data_use_measurement::DataUseUserData *&, true>' [ 0 5 10 136]
'std::__1::forward<std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10]
'base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>::UnretainedWrapper' [ 0 6 16 74]
'captive_portal::CaptivePortalDetector::FetchingURL' [ 0 16 39]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::unique_ptr<true, void>' [ 0 5 10 101]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char> *, 0, false>' [ 0 5 10]
'logging::CheckOpResult::message' [ 0 9 24]
'_G_fpos64_t' [ 0]
'logging::GetVlogLevel<59>' [ 0 9]
'lldiv_t' [ 0]
'std::__1::integral_constant<bool, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow' [ 0 5 10 90]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_cap' [ 0 5 10 87]
'base::internal::FunctorTraits<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), void>::Invoke<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName), const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6 16 202]
'unsigned char' [ 0]
'std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >::reset' [ 0 5 10 110]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >' [ 0 5 10]
'std::__1::remove_reference<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'std::__1::default_delete<base::SupportsUserData::Data>' [ 0 5 10]
'std::__1::get<0, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'data_use_measurement::DataUseUserData::Create' [ 0 22 39]
'long unsigned int' [ 0]
'std::__1::iterator_traits<const char *>' [ 0 5 10]
'std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName>' [ 0 5 10]
'std::__1::__add_lvalue_reference_impl<base::Value, true>' [ 0 5 10]
'std::__1::iterator_traits<const net::HttpRequestHeaders::HeaderKeyValuePair *>' [ 0 5 10]
'std::__1::remove_reference<data_use_measurement::DataUseUserData *>' [ 0 5 10]
'std::__1::basic_ostream<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__pointer_type<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair> >' [ 0 5 10]
'__syscall_slong_t' [ 0]
'std::__1::remove_reference<void (captive_portal::CaptivePortalDetector::*&)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 90]
'int_least16_t' [ 0]
'std::__1::enable_if_t<FunctorTraits<void (CaptivePortalDetector::*)(unique_ptr<basic_string<char>, default_delete<basic_string<char> > >)>::is_nullable, bool>' [ 0 5 10]
'std::__1::__compressed_pair<base::SupportsUserData::Data *, std::__1::default_delete<base::SupportsUserData::Data> >::__compressed_pair<data_use_measurement::DataUseUserData *, std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10 118]
'std::__1::forward<const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 5 10]
'std::__1::__compressed_pair_elem<base::DictionaryValue *, 0, false>' [ 0 5 10]
'std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName>::tuple<data_use_measurement::DataUseUserData::ServiceName &, false, false>' [ 0 5 10 69]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>, false>::__tuple_leaf<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>, void>' [ 0 5 10 108]
'std::__1::__vector_base<char, std::__1::allocator<char> >' [ 0 5 10]
'int_least32_t' [ 0]
'std::__1::__pointer_type<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10]
'std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >::~unique_ptr' [ 0 5 10 110]
'base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6 16 244]
'logging::LOG_DCHECK' [ 0 9]
'std::__1::default_delete<std::__1::basic_string<char> >::operator()' [ 0 5 10 57]
'std::__1::__size_type<std::__1::allocator<base::Value>, long, true>' [ 0 5 10]
'std::__1::__less<char *, char *>' [ 0 5 10]
'base::BindRepeating<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6]
'size_type' [ 0]
'__uint32_t' [ 0]
'time_t' [ 0]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setg' [ 0 5 10 63]
'std::__1::addressof<char>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::basic_ios' [ 0 5 10 57]
'base::SupportsUserData::Data::~Data' [ 0 6 24 30]
'std::__1::ostream' [ 0 5 10]
'std::__1::default_delete<network::SimpleURLLoader>' [ 0 5 10]
'bool' [ 0]
'std::__1::__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >' [ 0 5 10]
'base::internal::OptionalStorageBase<url::Origin, false>' [ 0 6 16]
'base::internal::InvokeHelper<false, void>' [ 0 6 16]
'base::internal::FunctorTraits<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), void>::Invoke<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), captive_portal::CaptivePortalDetector *, std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > > >' [ 0 6 16 196]
'logging::CheckLTImpl<unsigned int, unsigned long>' [ 0 9]
'std::__1::pointer_traits<const char *>' [ 0 5 10]
'std::__1::default_delete<data_use_measurement::DataUseUserData>' [ 0 5 10]
'base::subtle::StartRefCountFromZeroTag' [ 0 6 14]
'base::PickleIterator' [ 0 6]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>::~RefCountedThreadSafe' [ 0 6 104]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init<char *>' [ 0 5 10 87]
'std::__1::remove_reference<network::ResourceRequest *&>' [ 0 5 10]
'std::__1::__vector_base<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair> >' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::RunImpl<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName), const std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> &, 0>' [ 0 6 16 381]
'scoped_refptr<base::internal::BindStateBase>::scoped_refptr' [ 0 46]
'base::internal::PassingTraitsType<const captive_portal::CaptivePortalDetector::Results &>' [ 0 6 16]
'logging::LogMessageVoidify' [ 0 9]
'base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>::get' [ 0 6 16 74]
'std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<network::ResourceRequest>, 1, true>' [ 0 5 10]
'std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>' [ 0 5 10]
'uint_least16_t' [ 0]
'std::__1::__compressed_pair<network::ResourceRequest *, std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10]
'uint_least8_t' [ 0]
'base::flat_map<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >, std::__1::less<void> >' [ 0 6]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::default_delete<std::__1::basic_string<char> > >::__compressed_pair<std::__1::basic_string<char> *, std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10 119]
'uintmax_t' [ 0]
'std::__1::__compressed_pair_elem<network::ResourceRequest *, 0, false>::__compressed_pair_elem<network::ResourceRequest *, void>' [ 0 5 10 72]
'std::__1::remove_reference<const captive_portal::CaptivePortalDetector::Results &>' [ 0 5 10]
'std::__1::vector<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::char_traits<char>::not_eof' [ 0 5 10 29]
'std::__1::__pad_and_output<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>' [ 0 5 10]
'int64_t' [ 0]
'logging::CheckOpResult' [ 0 9]
'long double' [ 0]
'net::HttpResponseHeaders::response_code' [ 0 5 26]
'logging::CheckGEImpl<captive_portal::CaptivePortalResult, int>' [ 0 9]
'scoped_refptr<net::HttpResponseHeaders>' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string' [ 0 5 10 87]
'std::__1::char_traits<char>::to_char_type' [ 0 5 10 29]
'base::internal::FunctorTraits<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), void>' [ 0 6 16]
'std::__1::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >::~unique_ptr' [ 0 5 10 127]
'scoped_refptr<net::HttpResponseHeaders>::get' [ 0 41]
'logging::LogMessageVoidify::operator&' [ 0 9 28]
'std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<data_use_measurement::DataUseUserData>, 1, true>' [ 0 5 10]
'base::internal::CopyAssignable<true>' [ 0 6 16]
'captive_portal::CaptivePortalDetector::OnSimpleLoaderCompleteInternal' [ 0 16 39]
'std::__1::__compressed_pair_elem<std::__1::default_delete<network::SimpleURLLoader>, 1, true>' [ 0 5 10]
'base::SupportsUserData::Data::Data' [ 0 6 24 30]
'std::__1::__add_lvalue_reference_impl<base::DictionaryValue, true>' [ 0 5 10]
'base::DictionaryValue' [ 0 6]
'data_use_measurement::(anonymous namespace)' [ 0 22]
'std::__1::forward<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 5 10]
'std::__1::allocator<char>::allocate' [ 0 5 10 27]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >' [ 0 5 10]
'data_use_measurement::DataUseUserData::AttachToFetcher' [ 0 22 39]
'uint64_t' [ 0]
'std::__1::char_traits<char>::length' [ 0 5 10 29]
'base::SequenceChecker::~SequenceChecker' [ 0 6 23]
'std::__1::__split_buffer<char, std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::remove_reference<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 5 10]
'int_fast8_t' [ 0]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::init' [ 0 5 10 57]
'scoped_refptr<network::ResourceRequestBody>' [ 0]
'__uint16_t' [ 0]
'std::__1::__compressed_pair<base::DictionaryValue *, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'base::subtle::RefCountedThreadSafeBase' [ 0 6 14]
'base::BindOnce<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 6]
'std::__1::unique_ptr<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue> >' [ 0 5 10]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 6]
'std::__1::default_delete<network::ResourceRequest>::operator()' [ 0 5 10 52]
'double' [ 0]
'base::subtle::StartRefCountFromOneTag' [ 0 6 14]
'std::__1::__vector_base<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'base::internal::CallbackBase' [ 0 6 16]
'std::__1::fpos<__mbstate_t>::fpos' [ 0 5 10 29]
'std::__1' [ 0 5]
'float' [ 0]
'std::__1::__pointer_type_imp::__pointer_type<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader>, false>' [ 0 5 10 30]
'std::__1::__pointer_type_imp::__pointer_type<net::HttpResponseHeaders::ParsedHeader, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>, true>' [ 0 5 10 30]
'std::__1::forward<const std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> &>' [ 0 5 10]
'base::internal::InvokeHelper<false, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > >' [ 0 6 16]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::rdbuf' [ 0 5 10 57]
'base::BindUnwrapTraits<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::Unwrap' [ 0 6 99]
'std::__1::__atomic_base<int, true>' [ 0 5 10]
'ldiv_t' [ 0]
'std::__1::atomic<int>' [ 0 5 10]
'wctype_t' [ 0]
'net::HttpResponseHeaders' [ 0 5]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::operator->' [ 0 5 10 101]
'net::RequestPriority' [ 0 5]
'base::internal::CopyConstructible<true>' [ 0 6 16]
'std::__1::iterator_traits<const base::Value *>' [ 0 5 10]
'std::__1::__to_raw_pointer<const char>' [ 0 5 10]
'long long int' [ 0]
'__pthread_internal_list' [ 0]
'std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >' [ 0 5 10]
'__FILE' [ 0]
'logging::LogMessage' [ 0 9]
'int32_t' [ 0]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::Value>, 1, true>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::load' [ 0 5 10 38]
'captive_portal::CaptivePortalDetector::kDefaultURL' [ 0 16 39]
'va_list' [ 0]
'scoped_refptr<base::internal::BindStateBase>::get' [ 0 46]
'std::__1::__add_lvalue_reference_impl<base::SupportsUserData::Data, true>' [ 0 5 10]
'std::nullptr_t' [ 0 5]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::RunImpl<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, 0>::is_weak_call' [ 0 6 16 403 666]
'std::__1::__pointer_type_imp::__pointer_type<base::DictionaryValue, std::__1::default_delete<base::DictionaryValue>, false>' [ 0 5 10 30]
'std::__1::allocator_traits<std::__1::allocator<char> >::allocate' [ 0 5 10 56]
'base::RefCountedThreadSafe<base::internal::BindStateBase, base::internal::BindStateBaseRefCountTraits>' [ 0 6]
'base::subtle::Acquire_Load' [ 0 6 14]
'base::subtle::AtomicWord' [ 0 6 14]
'std::__1::__compressed_pair_elem<std::__1::allocator<char>, 1, true>::__compressed_pair_elem<const std::__1::allocator<char> &, void>' [ 0 5 10 70]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 6 16]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::__tuple_impl<0, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> , base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 5 10 129]
'std::__1::__add_lvalue_reference_impl<base::SequenceCheckerImpl::Core, true>' [ 0 5 10]
'std::__1::add_lvalue_reference<data_use_measurement::DataUseUserData>' [ 0 5 10]
'base::SequenceCheckerImpl' [ 0 6]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__align_it<16>' [ 0 5 10 87]
'std::__1::forward<std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > > >' [ 0 5 10]
'base::internal::BindStateBase' [ 0 6 16]
'__gnuc_va_list' [ 0]
'captive_portal::CaptivePortalMetrics::LogCaptivePortalBlockingPageEvent::atomic_histogram_pointer' [ 0 16 38 73]
'net::NetworkTrafficAnnotationTag' [ 0 5]
'std::__1::__compressed_pair_elem<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, 0, false>' [ 0 5 10]
'__intmax_t' [ 0]
'base::internal::CallbackBaseCopyable::~CallbackBaseCopyable' [ 0 6 16 38]
'wint_t' [ 0]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::reset' [ 0 5 10 101]
'net::HttpRequestHeaders' [ 0 5]
'std::__1::vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair> >' [ 0 5 10]
'base::StringPiece' [ 0 6]
'std::__1::__pointer_type<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'base::SequenceChecker' [ 0 6]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pptr' [ 0 5 10 63]
'base::internal::MoveAssignable<true>' [ 0 6 16]
'scoped_refptr<net::HttpResponseHeaders>::operator->' [ 0 41]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, data_use_measurement::DataUseUserData::ServiceName>' [ 0 5 10]
'url::SchemeHostPort' [ 0 5]
'std::__1::__pointer_type_imp::__pointer_type<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest>, false>' [ 0 5 10 30]
'max_align_t' [ 0]
'std::__1::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>, long, true>' [ 0 5 10]
'div_t' [ 0]
'std::__1::__compressed_pair_elem<network::ResourceRequest *, 0, false>::__compressed_pair_elem<network::ResourceRequest *&, void>' [ 0 5 10 72]
'logging::LogMessage::stream' [ 0 9 21]
'__int16_t' [ 0]
'std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >::release' [ 0 5 10 110]
'std::__1::fpos<__mbstate_t>' [ 0 5 10]
'url' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_size' [ 0 5 10 87]
'net::ValidationType' [ 0 5]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbase' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<base::Value *, 0, false>' [ 0 5 10]
'std::__1::get<0, data_use_measurement::DataUseUserData::ServiceName>' [ 0 5 10]
'network::mojom::FetchCredentialsMode' [ 0 9 16]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::allocator<base::Value>, true>' [ 0 5 10 30]
'std::__1::remove_reference<data_use_measurement::DataUseUserData *&>' [ 0 5 10]
'base::Callback<void (const captive_portal::CaptivePortalDetector::Results &)>' [ 0 6]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::RunImpl<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName), const std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> &, 0>::is_weak_call' [ 0 6 16 381 642]
'std::__1::remove_reference<network::ResourceRequest *>' [ 0 5 10]
'std::__1::__atomic_base<long, false>::store' [ 0 5 10 38]
'std::__1::allocator_traits<std::__1::allocator<net::HttpResponseHeaders::ParsedHeader> >' [ 0 5 10]
'short' [ 0]
'base::TimeDelta' [ 0 6]
'std::__1::__compressed_pair<network::ResourceRequest *, std::__1::default_delete<network::ResourceRequest> >::__compressed_pair<network::ResourceRequest *, std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10 110]
'base::detail' [ 0 6]
'std::__1::pointer_traits<net::HttpResponseHeaders::ParsedHeader *>' [ 0 5 10]
'std::__1::enable_if<true, bool>' [ 0 5 10]
'base::internal::CallbackBase::polymorphic_invoke' [ 0 6 16 30]
'std::__1::conditional<false, std::__1::pointer_traits<const char *>::__nat, const char>' [ 0 5 10]
'__vtbl_ptr_type' [ 0]
'std::__1::ios_base::width' [ 0 5 10 20]
'captive_portal::(anonymous namespace)::kCaptivePortalResultNames' [ 0 16 39]
'std::__1::move<base::OnceCallback<void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)> &>' [ 0 5 10]
'base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::~BindState' [ 0 6 16 261]
'std::__1::__add_lvalue_reference_impl<GURL, true>' [ 0 5 10]
'std::__1::unique_ptr<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'unsigned short' [ 0]
'int16_t' [ 0]
'__suseconds_t' [ 0]
'base::subtle::Atomic64' [ 0 6 14]
'std::__1::forward<network::ResourceRequest *>' [ 0 5 10]
'std::__1::char_traits<char>::eof' [ 0 5 10 29]
'std::__1::move<void (captive_portal::CaptivePortalDetector::*&)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 5 10]
'std::__1::__compressed_pair_elem<GURL *, 0, false>' [ 0 5 10]
'std::__1::__atomic_base<long, true>' [ 0 5 10]
'std::__1::streamsize' [ 0 5 10]
'std::__1::move<std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > &>' [ 0 5 10]
'std::__1::use_facet<std::__1::ctype<char> >' [ 0 5 10]
'std::__1::string' [ 0 5 10]
'int_fast64_t' [ 0]
'std::__1::__tuple_impl<std::__1::__tuple_indices<0>, data_use_measurement::DataUseUserData::ServiceName>::__tuple_impl<0, data_use_measurement::DataUseUserData::ServiceName, data_use_measurement::DataUseUserData::ServiceName &>' [ 0 5 10 106]
'std::__1::char_traits<char>::to_int_type' [ 0 5 10 29]
'base::PlatformThreadRef' [ 0 6]
'std::__1::__compressed_pair_elem<std::__1::allocator<char> &, 1, false>' [ 0 5 10]
'std::__1::__compressed_pair<base::SequenceCheckerImpl::Core *, std::__1::default_delete<base::SequenceCheckerImpl::Core> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10 30]
'uint_fast32_t' [ 0]
'std::__1::remove_reference<std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > > >' [ 0 5 10]
'base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 6 16 261]
'std::__1::char_traits<char>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_pointer' [ 0 5 10 87]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__recommend' [ 0 5 10 87]
'base::RepeatingCallback<void (const captive_portal::CaptivePortalDetector::Results &)>' [ 0 6]
'base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>' [ 0 6 16]
'std::__1::forward<std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > >' [ 0 5 10]
'signed char' [ 0]
'network::ResourceRequest' [ 0 9]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__zero' [ 0 5 10 87]
'std::__1::conditional<true, std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName>, std::__1::__nat>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::size' [ 0 5 10 87]
'std::__1::forward<data_use_measurement::DataUseUserData *>' [ 0 5 10]
'data_use_measurement::(anonymous namespace)::GetCurrentAppState' [ 0 22 45]
'std::__1::vector<char, std::__1::allocator<char> >' [ 0 5 10]
'std::__1::remove_reference<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName)>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>::operator->' [ 0 46]
'std::__1::__const_pointer<net::HttpResponseHeaders::ParsedHeader, net::HttpResponseHeaders::ParsedHeader *, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>, true>' [ 0 5 10]
'scoped_refptr<base::internal::BindStateBase>' [ 0]
'std::__1::__const_pointer<net::HttpRequestHeaders::HeaderKeyValuePair, net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>, true>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::RunOnce' [ 0 6 16 403]
'wchar_t' [ 0]
'std::__1::__size_type<std::__1::allocator<char>, long, true>' [ 0 5 10]
'std::__1::__less<char *, char *>::operator()' [ 0 5 10 34]
'std::__1::__tuple_leaf<0, data_use_measurement::DataUseUserData::ServiceName, false>::__tuple_leaf<data_use_measurement::DataUseUserData::ServiceName &, void>' [ 0 5 10 86]
'base::internal::Invoker<base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >, void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::RunOnce::num_bound_args' [ 0 6 16 403 412]
'uint_least32_t' [ 0]
'std::__1::remove_reference<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::char_traits<char>::eq' [ 0 5 10 29]
'__int8_t' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::max_size' [ 0 5 10 56]
'__compar_fn_t' [ 0]
'uintptr_t' [ 0]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::RunImpl<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName), const std::__1::tuple<data_use_measurement::DataUseUserData::ServiceName> &, 0>::is_method' [ 0 6 16 381 642]
'std::__1::remove_reference<captive_portal::CaptivePortalDetector *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setp' [ 0 5 10 63]
'std::__1::make_unique<network::ResourceRequest>' [ 0 5 10]
'std::__1::__compressed_pair_elem<data_use_measurement::DataUseUserData *, 0, false>' [ 0 5 10]
'std::__1::forward<std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10]
'std::__1::remove_reference<data_use_measurement::DataUseUserData::ServiceName &>' [ 0 5 10]
'InvokeFuncStorage' [ 0]
'unsigned int' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_ostringstream' [ 0 5 10 94]
'int_fast32_t' [ 0]
'int_least8_t' [ 0]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_pointer' [ 0 5 10 87]
'base::internal' [ 0 6]
'std::__1::tuple_element<0, std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > >' [ 0 5 10]
'int_least64_t' [ 0]
'std::__1::__tuple_leaf<0, data_use_measurement::DataUseUserData::ServiceName, false>' [ 0 5 10]
'base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 6 16]
'net::Error' [ 0 5]
'base::internal::LockImpl' [ 0 6 16]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputn' [ 0 5 10 63]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::failed' [ 0 5 10 67]
'std::__1::conditional<false, std::__1::pointer_traits<char *>::__nat, char>' [ 0 5 10]
'uint16_t' [ 0]
'int' [ 0]
'base::internal::CallbackBaseCopyable' [ 0 6 16]
'FILE' [ 0]
'timeval' [ 0]
'std::__1::__compressed_pair<network::SimpleURLLoader *, std::__1::default_delete<network::SimpleURLLoader> >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>, false>' [ 0 5 10 30]
'base::subtle::AdoptRefTag' [ 0 6 14]
'base::internal::IsNull<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>' [ 0 6 16]
'std::__1::__add_lvalue_reference_impl<data_use_measurement::DataUseUserData, true>' [ 0 5 10]
'std::__1::locale' [ 0 5 10]
'__builtin_va_list' [ 0]
'std::__1::allocator_traits<std::__1::allocator<char> >::__max_size' [ 0 5 10 56]
'base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>' [ 0 6 16]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail' [ 0 5 10 90]
'std::__1::__wrap_iter<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'base::internal::Unwrap<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >' [ 0 6 16]
'std::__1::__compressed_pair_elem<std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, 1, true>' [ 0 5 10]
'__clock_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_long_pointer' [ 0 5 10 87]
'base::Bind<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6]
'std::__1::__pointer_type<GURL, std::__1::default_delete<GURL> >' [ 0 5 10]
'captive_portal::CaptivePortalDetector::GetCaptivePortalResultFromResponse' [ 0 16 39]
'uint32_t' [ 0]
'std::__1::operator!=<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >' [ 0 5 10]
'base::subtle' [ 0 6]
'std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10]
'std::__1::ios_base::ios_base' [ 0 5 10 20]
'network::mojom::FetchRequestMode' [ 0 9 16]
'std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >::ostreambuf_iterator' [ 0 5 10 67]
'base::subtle::AtomicLocation64' [ 0 6 14]
'std::__1::__add_lvalue_reference_impl<network::ResourceRequest, true>' [ 0 5 10]
'std::__1::forward<const captive_portal::CaptivePortalDetector::Results &>' [ 0 5 10]
'__pthread_mutex_s' [ 0]
'std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str' [ 0 5 10 94]
'base::internal::PassingTraits<const captive_portal::CaptivePortalDetector::Results &, false>' [ 0 6 16]
'std::__1::forward<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName)>' [ 0 5 10]
'base::subtle::Release_Store' [ 0 6 14]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::release' [ 0 5 10 101]
'std::__1::__const_pointer<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > >, true>' [ 0 5 10]
'std::__1::basic_ios<char, std::__1::char_traits<char> >::fill' [ 0 5 10 57]
'std::__1::forward<data_use_measurement::DataUseUserData::ServiceName &>' [ 0 5 10]
'base::Lock' [ 0 6]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::egptr' [ 0 5 10 63]
'std::__1::enable_if<true, void>' [ 0 5 10]
'double_t' [ 0]
'network::mojom::FetchRedirectMode' [ 0 9 16]
'__int64_t' [ 0]
'std::__1::enable_if_t<FunctorTraits<unique_ptr<Data, default_delete<Data> > (*)(ServiceName)>::is_nullable, bool>' [ 0 5 10]
'std::__1::allocator_traits<std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::default_delete<network::ResourceRequest>, 1, true>::__compressed_pair_elem<std::__1::default_delete<network::ResourceRequest>, void>' [ 0 5 10 95]
'base::TimeDelta::operator=' [ 0 6 17]
'std::__1::add_lvalue_reference<network::ResourceRequest>' [ 0 5 10]
'std::__1::__tuple_types<>' [ 0 5 10]
'std::__1::iterator_traits<base::Value *>' [ 0 5 10]
'base::char16' [ 0 6]
'network::mojom::RequestContextFrameType' [ 0 9 16]
'std::__1::conditional<false, std::__1::pointer_traits<net::HttpRequestHeaders::HeaderKeyValuePair *>::__nat, net::HttpRequestHeaders::HeaderKeyValuePair>' [ 0 5 10]
'data_use_measurement::DataUseUserData::DataUseUserData' [ 0 22 39]
'std::__1::integer_sequence<unsigned long, 0>' [ 0 5 10]
'base::FlatContainerDupes' [ 0 6]
'base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>::~BindState' [ 0 6 16 244]
'std::__1::pointer_traits<const char *>::pointer_to' [ 0 5 10 40]
'std::__1::ios_base::setstate' [ 0 5 10 20]
'std::__1::__pointer_type<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::~unique_ptr' [ 0 5 10 101]
'std::__1::add_lvalue_reference<std::__1::basic_string<char> >' [ 0 5 10]
'std::__1::fpos<__mbstate_t>::operator long long' [ 0 5 10 29]
'base::internal::CallbackBase::CallbackBase' [ 0 6 16 30]
'std::__1::remove_reference<std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> > >' [ 0 5 10]
'base::RepeatingCallback<void (const captive_portal::CaptivePortalDetector::Results &)>::operator=' [ 0 6 88]
'base::RepeatingCallback<void (const captive_portal::CaptivePortalDetector::Results &)>::~RepeatingCallback' [ 0 6 88]
'std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >::unique_ptr' [ 0 5 10 110]
'pthread_t' [ 0]
'captive_portal::CaptivePortalResultToString' [ 0 16]
'int_fast16_t' [ 0]
'std::__1::__compressed_pair<GURL *, std::__1::default_delete<GURL> >' [ 0 5 10]
'decltype(nullptr)' [ 0]
'base::RepeatingCallback<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::~RepeatingCallback' [ 0 6 137]
'std::__1::__pointer_type<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >' [ 0 5 10]
'std::__1::allocator<base::Value>' [ 0 5 10]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::reset' [ 0 5 10 101]
'std::__1::default_delete<data_use_measurement::DataUseUserData>::operator()' [ 0 5 10 65]
'std::__1::__compressed_pair<base::Value *, std::__1::allocator<base::Value> >' [ 0 5 10]
'base::Optional<url::Origin>' [ 0 6]
'std::__1::__pointer_type<net::HttpResponseHeaders::ParsedHeader, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader> >' [ 0 5 10]
'base::time_internal::TimeBase<base::Time>' [ 0 6 21]
'std::__1::atomic_int' [ 0 5 10]
'base::RepeatingCallback<void (const captive_portal::CaptivePortalDetector::Results &)>::Run' [ 0 6 88]
'base::internal::CallbackBaseCopyable::CallbackBaseCopyable' [ 0 6 16 38]
'std::__1::__wrap_iter<base::Value *>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbump' [ 0 5 10 63]
'__mbstate_t' [ 0]
'__int32_t' [ 0]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__set_long_size' [ 0 5 10 87]
'std::__1::index_sequence<0UL>' [ 0 5 10]
'std::__1::__wrap_iter<char *>' [ 0 5 10]
'std::__1::default_delete<base::Value>' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<base::Value>, 1, true>' [ 0 5 10]
'std::__1::__pointer_type<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> >' [ 0 5 10]
'std::__1::__distance<char *>' [ 0 5 10]
'uint_fast16_t' [ 0]
'std::__1::__const_void_pointer<char *, std::__1::allocator<char>, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> >, false>' [ 0 5 10 30]
'intmax_t' [ 0]
'data_use_measurement' [ 0]
'std::__1::__wrap_iter<const std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'base::internal::InvokeHelper<false, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > >::MakeItSo<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*const &)(data_use_measurement::DataUseUserData::ServiceName), const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6 16 147]
'std::__1::remove_reference<std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> > &>' [ 0 5 10]
'base::time_internal' [ 0 6]
'base::internal::BindState<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::Destroy' [ 0 6 16 261]
'std::__1::__const_pointer<char, char *, std::__1::allocator<char>, true>' [ 0 5 10]
'std::__1::__tuple_leaf<0, base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector>, false>' [ 0 5 10]
'base::internal::Unwrap<const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6 16]
'std::__1::add_lvalue_reference<base::SupportsUserData::Data>' [ 0 5 10]
'base::BindUnwrapTraits<data_use_measurement::DataUseUserData::ServiceName>' [ 0 6]
'std::__1::__atomic_base<long, false>' [ 0 5 10]
'logging::MakeCheckOpValueString<int>' [ 0 9]
'captive_portal::CaptivePortalDetector::CaptivePortalDetector' [ 0 16 39]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::eback' [ 0 5 10 63]
'std::__1::__compressed_pair_elem<std::__1::default_delete<base::SupportsUserData::Data>, 1, true>' [ 0 5 10]
'std::__1::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> >::tuple<base::internal::UnretainedWrapper<captive_portal::CaptivePortalDetector> , false, false>' [ 0 5 10 92]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::data' [ 0 5 10 87]
'std::__1::allocator_traits<std::__1::allocator<base::Value> >' [ 0 5 10]
'std::__1::conditional<false, std::__1::pointer_traits<net::HttpResponseHeaders::ParsedHeader *>::__nat, net::HttpResponseHeaders::ParsedHeader>' [ 0 5 10]
'std::__1::pointer_traits<char *>::pointer_to' [ 0 5 10 34]
'std::__1::forward<std::__1::basic_string<char> *>' [ 0 5 10]
'std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >' [ 0 5 10]
'std::__1::__const_void_pointer<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>, false>' [ 0 5 10]
'base::string16' [ 0 6]
'std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> >' [ 0 5 10]
'base::BindUnwrapTraits<data_use_measurement::DataUseUserData::ServiceName>::Unwrap<const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 6 76]
'std::__1::conditional<false, std::__1::pointer_traits<base::Value *>::__nat, base::Value>' [ 0 5 10]
'captive_portal::(anonymous namespace)' [ 0 16]
'std::__1::move<std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> > &>' [ 0 5 10]
'base::internal::flat_tree<std::__1::basic_string<char>, std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, base::internal::GetKeyFromValuePairFirst<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > >, std::__1::less<void> >' [ 0 6 16]
'std::__1::__pointer_type<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >' [ 0 5 10]
'std::__1::unique_ptr<network::ResourceRequest, std::__1::default_delete<network::ResourceRequest> >::unique_ptr' [ 0 5 10 101]
'scoped_refptr<net::HttpResponseHeaders>::operator bool' [ 0 41]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::capacity' [ 0 5 10 87]
'std::__1::atomic<long>' [ 0 5 10]
'std::__1::forward<data_use_measurement::DataUseUserData::AppState>' [ 0 5 10]
'std::__1::add_lvalue_reference<base::Value>' [ 0 5 10]
'std::__1::unique_ptr<data_use_measurement::DataUseUserData, std::__1::default_delete<data_use_measurement::DataUseUserData> >::unique_ptr<true, void>' [ 0 5 10 127]
'long int' [ 0]
'std::__1::__const_void_pointer<net::HttpResponseHeaders::ParsedHeader *, std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>, false>' [ 0 5 10]
'base::Time' [ 0 6]
'std::__1::__wrap_iter<const net::HttpRequestHeaders::HeaderKeyValuePair *>' [ 0 5 10]
'std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> >' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::allocator<net::HttpResponseHeaders::ParsedHeader>, 1, true>' [ 0 5 10]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_stringbuf' [ 0 5 10 90]
'std::__1::output_iterator_tag' [ 0 5 10]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>' [ 0 5 10]
'uint8_t' [ 0]
'float_t' [ 0]
'captive_portal::CaptivePortalDetector::Cancel' [ 0 16 39]
'wctrans_t' [ 0]
'std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow' [ 0 5 10 90]
'mbstate_t' [ 0]
'std::__1::streamoff' [ 0 5 10]
'std::__1::default_delete<GURL>' [ 0 5 10]
'logging::CheckOpResult::CheckOpResult' [ 0 9 24]
'std::__1::__wrap_iter<const base::Value *>' [ 0 5 10]
'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__get_short_size' [ 0 5 10 87]
'std::__1::unique_ptr<network::SimpleURLLoader, std::__1::default_delete<network::SimpleURLLoader> >::operator->' [ 0 5 10 101]
'std::__1::streampos' [ 0 5 10]
'__time_t' [ 0]
'std::__1::char_traits<char>::assign' [ 0 5 10 29]
'std::__1::__compressed_pair_elem<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, 0, false>::__compressed_pair_elem' [ 0 5 10 138]
'std::__1::__pointer_type_imp::__pointer_type<base::Value, std::__1::default_delete<base::Value>, false>' [ 0 5 10 30]
'data_use_measurement::DataUseUserData' [ 0 22]
'std::__1::__tuple_indices<>' [ 0 5 10]
'std::__1::default_delete<base::SequenceCheckerImpl::Core>' [ 0 5 10]
'url::Component' [ 0 5]
'std::__1::__compressed_pair<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > > >' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>, true>' [ 0 5 10 30]
'std::__1::__compressed_pair<std::__1::basic_string<char> *, std::__1::default_delete<std::__1::basic_string<char> > >' [ 0 5 10]
'base::OnceCallback<void (std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >)>::OnceCallback' [ 0 6 137]
'base::internal::CallbackBase::is_null' [ 0 6 16 30]
'std::__1::memory_order' [ 0 5 10]
'std::__1::__compressed_pair<data_use_measurement::DataUseUserData *, std::__1::default_delete<data_use_measurement::DataUseUserData> >' [ 0 5 10]
'std::__1::__split_buffer_common<true>' [ 0 5 10]
'base::internal::InvokeHelper<false, void>::MakeItSo<void (captive_portal::CaptivePortalDetector::*)(std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > >), captive_portal::CaptivePortalDetector *, std::__1::unique_ptr<std::__1::basic_string<char>, std::__1::default_delete<std::__1::basic_string<char> > > >' [ 0 6 16 43]
'std::__1::forward<const std::__1::allocator<char> &>' [ 0 5 10]
'std::__1::__size_type<std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>, long, true>' [ 0 5 10]
'std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sputc' [ 0 5 10 63]
'std::__1::iterator_traits<std::__1::pair<std::__1::basic_string<char>, std::__1::unique_ptr<base::Value, std::__1::default_delete<base::Value> > > *>' [ 0 5 10]
'std::__1::remove_reference<const data_use_measurement::DataUseUserData::ServiceName &>' [ 0 5 10]
'base::internal::Invoker<base::internal::BindState<std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > (*)(data_use_measurement::DataUseUserData::ServiceName), data_use_measurement::DataUseUserData::ServiceName>, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data> > ()>::Run' [ 0 6 16 381]
'std::__1::__compressed_pair_elem<net::HttpRequestHeaders::HeaderKeyValuePair *, 0, false>' [ 0 5 10]
'std::__1::__pointer_type_imp::__pointer_type<base::SequenceCheckerImpl::Core, std::__1::default_delete<base::SequenceCheckerImpl::Core>, false>' [ 0 5 10 30]
'GURL' [ 0]
'std::__1::__compressed_pair<base::SupportsUserData::Data *, std::__1::default_delete<base::SupportsUserData::Data> >' [ 0 5 10]
