'OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 65]
'setup_rphf_mask' [ 0]
'OT::MathGlyphConstruction::get_variants' [ 0 4 27]
'thai_below_start_state' [ 0]
'cf2_doFlex' [ 0]
'OT::post::accelerator_t::get_glyph_from_name' [ 0 4 10 25]
'OT::BEInt<unsigned int, 4>' [ 0 4]
'os2_fields_extra1' [ 0]
'os2_fields_extra2' [ 0]
'hb_buffer_t::copy_glyph' [ 0 13]
'adler32' [ 0]
'os2_fields_extra5' [ 0]
'Cr_z_uLong' [ 0]
'ft_angle_mean' [ 0]
'TT_Set_Named_Instance' [ 0]
'OT::FeatureParams::sanitize' [ 0 4 19]
'ft_service_list_lookup' [ 0]
'FT_Stream_GetULong' [ 0]
'hb_face_make_immutable' [ 0]
'Ins_CEILING' [ 0]
'OT::MathKernInfoRecord' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >, OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::Sequence' [ 0 4]
'FT_New_GlyphSlot' [ 0]
'ft_gzip_check_header' [ 0]
'_khmer_syllable_machine_to_state_actions' [ 0]
'tt_cmap14_find_variant' [ 0]
'OT::ClassDef::intersects_class' [ 0 4 14]
'cr_png_set_write_fn' [ 0]
'OT::IndexSubtableRecord::sanitize' [ 0 4 25]
'ft_close_stream_by_free' [ 0]
'add_one_chunk' [ 0]
'Cr_z_gzseek64' [ 0]
'PS_Parser' [ 0]
'ft_list_get_node_at' [ 0]
'tt_hvadvance_adjust' [ 0]
'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 78]
'ft_get_adobe_glyph_index' [ 0]
'cid_size_get_globals_funcs' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::CursivePos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 16]
'_khmer_syllable_machine_indicies' [ 0]
'FT_Pos' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::MarkBasePosFormat1>' [ 0 4 227]
'subscript_feature' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::IntType<unsigned short, 2>::set' [ 0 4 32]
'cid_size_done' [ 0]
'FT_AutoHinter_GlobalGetFunc' [ 0]
'af_ethi_script_class' [ 0]
'hb_ot_map_t::hb_ot_map_t' [ 0 13]
'PSH_GlobalsRec_' [ 0]
'cid_service_cid_info' [ 0]
'hb_user_data_array_t::finish' [ 0 22]
'OT::LangSys::get_feature_count' [ 0 4 13]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>::finish' [ 0 61]
'FT_Stream_OpenMemory' [ 0]
'OT::operator+<const OT::RuleSet *, OT::IntType<unsigned short, 2>, OT::Rule>' [ 0 4]
'FT_Glyph_Layer' [ 0]
'FT_Bitmap_LcdFilterFunc' [ 0]
'T1_GlyphSlot_Done' [ 0]
'make_gray_colormap' [ 0]
'FT_Module_Class_' [ 0]
'OT::StructAtOffset<OT::Lookup>' [ 0 4]
'hb_get_subtables_context_t::apply_to<OT::ContextFormat2>' [ 0 28]
'ft_black_render' [ 0]
'FT_Set_Instance_Func' [ 0]
'hb_buffer_t::ensure' [ 0 13]
'tt_face_colr_blend_layer' [ 0]
'TT_Goto_CodeRange' [ 0]
'cr_png_sig_cmp' [ 0]
'OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 33]
'PSH_AlignmentRec' [ 0]
'cr_png_read_filter_row_paeth4_sse2' [ 0]
'FT_Service_PsCMaps' [ 0]
'hb_mask_t' [ 0]
'tt_cmap14_done' [ 0]
'compose_unicode' [ 0]
'cid_parser_new' [ 0]
'hb_buffer_get_cluster_level' [ 0]
'cff_index_load_offsets' [ 0]
'OT::Script' [ 0 4]
'T2_Hints_MaskFunc' [ 0]
'FT_Size' [ 0]
'FT_RoundFix' [ 0]
'OT::ChainContextFormat3::would_apply' [ 0 4 25]
'AF_Direction_' [ 0]
'tt_face_get_device_metrics' [ 0]
'hb_vector_size_t<unsigned long long, 128>' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>::operator[]' [ 0 44]
'T1_CMap_ClassesRec' [ 0]
'ARRAY_LENGTH<unsigned int, 259>' [ 0]
'OT::MarkMarkPosFormat1' [ 0 4]
'hb_get_subtables_context_t::apply_to<OT::ContextFormat3>' [ 0 28]
'hb_font_get_v_extents' [ 0]
'tt_sbit_decoder_load_image' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'T1_DecoderRec_' [ 0]
'ot_languages' [ 0]
'OT::operator+<const OT::MathVariants *, OT::IntType<unsigned short, 2>, OT::MathGlyphConstruction>' [ 0 4]
'OT::SortedArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 103]
'OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'hb_unicode_funcs_t::compose' [ 0 20]
'fixed_bd' [ 0]
'PS_Unicodes_CharNextFunc' [ 0]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 86]
'CF2_NumberType' [ 0]
'fixed_bl' [ 0]
'af_dummy_writing_system_class' [ 0]
'hb_set_has' [ 0]
'cr_png_read_rows' [ 0]
'setup_masks_hangul' [ 0]
'FT_Set_Charmap' [ 0]
'hb_icu_unicode_combining_class' [ 0]
'psh_blues_scale_zones' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 107]
'cr_png_set_keep_unknown_chunks' [ 0]
'OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 91]
'hb_glyph_extents_t' [ 0]
'hb_object_reference<hb_face_t>' [ 0]
'af_grek_ordn_style_class' [ 0]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_ot_apply_context_t>' [ 0 4 12]
'hb_ot_shape_plan_t' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::MarkBasePos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'FT_Lookup_Renderer' [ 0]
'OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 70]
'OT::CastP<OT::EncodingRecord, const void *>' [ 0 4]
'tt_name_ascii_from_utf16' [ 0]
'hb_object_is_valid<hb_unicode_funcs_t>' [ 0]
'af_sylo_script_class' [ 0]
'OT::CastP<OT::os2, char>' [ 0 4]
'OT::VariationDevice' [ 0 4]
't1_cmap_expert_init' [ 0]
'OT::AnchorFormat2' [ 0 4]
'decompose_cluster' [ 0]
'FT_Service_KerningRec' [ 0]
'OT::GSUB::substitute_start' [ 0 4 10]
'power_ten_limits' [ 0]
'hb_font_subtract_glyph_origin_for_direction' [ 0]
'AF_CJKMetricsRec' [ 0]
'features' [ 0]
'Cr_z_gzrewind' [ 0]
'FT_Outline_Render' [ 0]
'hb_glib_blob_create' [ 0]
'hb_string_t::cmp' [ 0 13]
'hb_get_subtables_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 28]
'af_indic_get_standard_widths' [ 0]
'_use_syllable_machine_indicies' [ 0]
'ps_parser_funcs' [ 0]
'OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 125]
'FT_Select_Metrics' [ 0]
'maxp_fields_extra' [ 0]
'FT_Size_InternalRec_' [ 0]
'OT::ArrayOf<OT::Tag, OT::IntType<unsigned short, 2> >' [ 0 4]
'inflate_blocks_reset' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 107]
'OT::ContextCollectGlyphsFuncs' [ 0 4]
'cid_face_init' [ 0]
'af_cyrl_sinf_style_class' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 47]
'OT::Context::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 13]
'OT::LigatureSubst::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 19]
'OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_SFNT_TableGetFunc' [ 0]
'OT::LOffsetTo<OT::FeatureVariations>' [ 0 4]
'CFF_PrivateRec' [ 0]
'tt_face_get_name' [ 0]
'CFF_Decoder_' [ 0]
'hb_buffer_get_replacement_codepoint' [ 0]
'OT::ContextFormat2::get_coverage' [ 0 4 20]
'cr_png_destroy_read_struct' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 111]
'cf2_glyphpath_computeIntersection' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::no_dispatch_return_value' [ 0 4 63]
'fixed2float' [ 0]
'OT::TTCHeader' [ 0 4]
'ps_parser_skip_PS_token' [ 0]
'hb_ot_var_find_axis' [ 0]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 58]
'OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 63]
'hb_set_t::previous' [ 0 10]
'coverages' [ 0]
'af_latn_sups_style_class' [ 0]
'hb_get_subtables_context_t::dispatch<OT::CursivePosFormat1>' [ 0 28]
'Cr_z_voidpc' [ 0]
'OT::Sanitizer<OT::maxp>::lock_instance' [ 0 4 25]
'hb_font_t::has_func' [ 0 11]
'OT::hb_collect_glyphs_context_t::dispatch<OT::MarkBasePosFormat1>' [ 0 4 33]
'AF_LatinAxisRec' [ 0]
'ps_decoder_init' [ 0]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::get_h_kerning' [ 0 4 54]
'cr_png_get_int_32' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'CFF_Builder_' [ 0]
'OT::Feature::sanitize' [ 0 4 13]
'hb_face_set_glyph_count' [ 0]
'OT::Supplier<hb_blob_t *>' [ 0 4]
'png_error_ptr' [ 0]
'FT_Service_Properties' [ 0]
'gray_raster_set_mode' [ 0]
'cr_png_do_chop' [ 0]
'FT_Prop_GlyphToScriptMap' [ 0]
'_hb_buffer_assert_unicode_vars' [ 0]
'AF_ModuleRec_' [ 0]
'OT::SinglePos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 15]
'af_geor_uniranges' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::prev' [ 0 4 27 48]
'ft_mem_free' [ 0]
'OT::fvar::sanitize' [ 0 4 10]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionPos>, OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 83]
'Byte' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'long long int' [ 0]
'ps_parser_to_bytes' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'AF_WritingSystemClassRec_' [ 0]
'OT::GPOS::position_finish_offsets' [ 0 4 10]
'Cr_z_voidpf' [ 0]
'tt_face_load_cvt' [ 0]
'ft_var_load_gvar' [ 0]
'af_geor_dflt_style_class' [ 0]
'Cr_z_gzputc' [ 0]
'Cr_z_crc32_combine64' [ 0]
'FT_Done_Size' [ 0]
'OT::CastP<OT::FeatureVariationRecord, const void *>' [ 0 4]
'Read_CVT_Stretched' [ 0]
'FT_PsName_GetFunc' [ 0]
'OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> >::sanitize<int>' [ 0 4 64]
'OT::postV2Tail' [ 0 4]
'Cr_z_gzputs' [ 0]
'png_free_ptr' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::ClassDef::sanitize' [ 0 4 14]
'cr_png_check_keyword' [ 0]
'cr_png_set_text' [ 0]
'arabic_fallback_plan_shape' [ 0]
'hb_object_trace<hb_shape_plan_t>' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::CursivePos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'OT::ArrayOf<OT::LOffsetTo<OT::Coverage>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 75]
'OT::PosLookupSubTable::dispatch<hb_get_subtables_context_t>' [ 0 4 23]
'setup_masks_arabic' [ 0]
'fmix32' [ 0]
'cf2_getT1SeacComponent' [ 0]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_sanitize_context_t>' [ 0 4 35]
'hb_shape_plan_get_empty::_hb_shape_plan_nil' [ 0 25]
'AF_FaceGlobalsRec_' [ 0]
'operator~' [ 0]
'GX_ItemVarData' [ 0]
'CF2_Outline' [ 0]
'v_load32_dup' [ 0]
'af_orkh_uniranges' [ 0]
'Cr_z_crc32_sse42_simd_' [ 0]
'cr_png_set_user_transform_info' [ 0]
'T1_TokenRec_' [ 0]
'AF_Blue_String' [ 0]
'AFM_ParserRec_' [ 0]
'data_destroy_hangul' [ 0]
'hb_font_get_glyph_h_origin_parent' [ 0]
'af_cyrl_dflt_style_class' [ 0]
'OT::CastP<OT::CBDT, const void *>' [ 0 4]
'ARRAY_LENGTH<char, 1024>' [ 0]
'hb_font_funcs_set_nominal_glyph_func' [ 0]
'AF_Coverage_' [ 0]
'OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >' [ 0 4]
'ft_validator_run' [ 0]
'ft_smooth_get_cbox' [ 0]
'_IO_lock_t' [ 0]
'hb_font_get_glyph_extents_nil' [ 0]
'FT_Face_AttachFunc' [ 0]
'psh_globals_scale_widths' [ 0]
'OT::UnsizedArrayOf<OT::LayerRecord>' [ 0 4]
'cr_png_progressive_combine_row' [ 0]
'hb_ot_math_constant_t' [ 0]
'OT::Null<OT::loca>' [ 0 4]
'tt_cmap14_char_var_index' [ 0]
'OT::operator+<const OT::GSUBGPOS *, OT::IntType<unsigned short, 2>, OT::RecordListOf<OT::Script> >' [ 0 4]
'cr_png_app_warning' [ 0]
'gray_render_line' [ 0]
'OT::CastP<OT::GPOS, char>' [ 0 4]
'hb_shape_plan_create_cached' [ 0]
'OT::hb_lazy_table_loader_t<OT::COLR>::init' [ 0 4 38]
'OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 59]
't1_init_loader' [ 0]
'OT::LangSys' [ 0 4]
'OT::operator+<const OT::PairPosFormat2 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'ft_recompute_scaled_metrics' [ 0]
'OT::Extension<OT::ExtensionSubst>::get_type' [ 0 4 35]
'OT::glyf' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'cr_png_get_IHDR' [ 0]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_collect_glyphs_context_t>' [ 0 4 12]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Extension<OT::ExtensionPos>, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'cff_hadvance_adjust' [ 0]
'afm_parser_init' [ 0]
'data_destroy_use' [ 0]
'OT::MathGlyphInfo::get_italics_correction' [ 0 4 19]
'ft_raccess_sort_ref_by_id' [ 0]
'FT_Hashkey' [ 0]
'hb_buffer_clear_contents' [ 0]
'png_inforp' [ 0]
'OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_font_funcs_set_glyph_func' [ 0]
'uch' [ 0]
'png_unknown_chunk' [ 0]
'cr_png_set_PLTE' [ 0]
'tt_face_load_name' [ 0]
'hb_latin1_t::prev' [ 0 13]
'png_read_filter_row_sub' [ 0]
'Cr_z__tr_flush_block' [ 0]
'af_dsrt_script_class' [ 0]
'OT::ValueFormat' [ 0 4]
'hb_set_allocation_successful' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::CursivePosFormat1>' [ 0 4 27]
'uIntf' [ 0]
'cff_parse_private_dict' [ 0]
'get_consonant_type' [ 0]
'hb_buffer_add_utf<hb_latin1_t>' [ 0]
'hb_ot_map_t::get_mask' [ 0 13]
'FT_Has_PS_Glyph_Names' [ 0]
'OT::Null<OT::GDEF>' [ 0 4]
'UInt' [ 0]
'T2_Hints_ApplyFunc' [ 0]
'FT_Stroker_LineJoin_' [ 0]
'hb_script_t' [ 0]
'af_copt_script_class' [ 0]
'gz_load' [ 0]
'OT::CastP<OT::CBDT::accelerator_t, const void *>' [ 0 4]
'OT::Null<OT::hmtxvmtx<OT::vmtx, OT::vhea> >' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::PairPos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'OT::LigatureSubst' [ 0 4]
'tt_face_done_loca' [ 0]
'base_length' [ 0]
'cid_driver_init' [ 0]
'af_knda_dflt_style_class' [ 0]
'hb_font_funcs_reference' [ 0]
'hb_utf32_t<false>::strlen' [ 0 19]
'_hb_buffer_allocate_gsubgpos_vars' [ 0]
'Project_x' [ 0]
'Ins_FLIPRGON' [ 0]
'FT_Tag' [ 0]
'hb_object_reference<hb_blob_t>' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::bsearch<hb_set_t::page_map_t>' [ 0 48]
'FT_Tan' [ 0]
'FT_Stream_ReadULongLE' [ 0]
'FT_VAdvance_Adjust_Func' [ 0]
'OT::ExtensionFormat1<OT::ExtensionPos>::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 40]
'hb_face_set_user_data' [ 0]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'thai_mark_type_t' [ 0]
'png_rtran_ok' [ 0]
'FT_Service_SFNT_TableRec' [ 0]
'z_size_t' [ 0]
'OT::hb_lazy_table_loader_t<OT::fvar>' [ 0 4]
'tt_sbit_decoder_init' [ 0]
'indic_shape_plan_t' [ 0]
'OT::CastP<OT::post::accelerator_t, const void *>' [ 0 4]
'sfnt_interface' [ 0]
'Destroy_Module' [ 0]
'png_image_memory_read' [ 0]
'titling_feature' [ 0]
'__v2du' [ 0]
'hb_ot_math_get_glyph_variants' [ 0]
'hb_glib_unicode_combining_class' [ 0]
'OT::hb_ot_apply_context_t::output_glyph_for_component' [ 0 4 27]
'OT::RangeRecord::add_coverage<hb_set_t>' [ 0 4 17]
'T1_Parse_Glyph_And_Get_Char_String' [ 0]
'cr_png_get_interlace_type' [ 0]
'hb_object_destroy<hb_font_funcs_t>' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::CastP<OT::kern, const void *>' [ 0 4]
'AFM_Parser_FuncsRec_' [ 0]
'_deserialize_json_trans_targs' [ 0]
'af_cjk_metrics_init_blues' [ 0]
'Ins_RCVT' [ 0]
'OT::StructAtOffset<OT::OffsetListOf<OT::SubstLookup> >' [ 0 4]
'OT::Lookup::get_type' [ 0 4 12]
'CID_FaceDictRec_' [ 0]
'OT::ChainContextFormat1::get_coverage' [ 0 4 25]
'tt_cmap10_validate' [ 0]
'ft_stroker_outside' [ 0]
'HbOpOr::process<unsigned long long>' [ 0 8]
'hb_buffer_t::reset' [ 0 13]
'OT::Null<OT::avar>' [ 0 4]
'data_destroy_arabic' [ 0]
'khmer_shape_plan_t' [ 0]
'FT_Service_TTCMapsRec_' [ 0]
'af_none_nonbase_uniranges' [ 0]
'PSHinter_Interface' [ 0]
'OT::CastP<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'cr_png_do_compose' [ 0]
'Cr_z__length_code' [ 0]
'OT::Feature::get_feature_params' [ 0 4 13]
'ttc_header_fields' [ 0]
'hash_str_lookup' [ 0]
'SFNT_Header' [ 0]
'hb_utf16_t::strlen' [ 0 12]
'FT_Slot_Internal' [ 0]
'AF_GlyphHints' [ 0]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 59]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hb_face_set_index' [ 0]
'T1_Read_PFM' [ 0]
'cr_png_set_alpha_mode_fixed' [ 0]
'ARRAY_LENGTH<char, 128>' [ 0]
'cr_png_set_rows' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SinglePos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'GX_DeltaSetIdxMapRec_' [ 0]
'OT::CmapSubtableFormat14' [ 0 4]
'tt_loader_set_pp' [ 0]
'hb_ot_layout_language_get_required_feature_index' [ 0]
'setup_topographical_masks' [ 0]
'hb_ot_shape_plan_collect_lookups' [ 0]
'FT_Colr_InternalRec' [ 0]
'OT::context_closure_lookup' [ 0 4]
'T1_Parser' [ 0]
'cff_header_fields' [ 0]
'FT_Outline_Decompose' [ 0]
'cf2_arrstack_getPointer' [ 0]
'__v16qu' [ 0]
'trampoline_reference' [ 0]
'hb_set_clear' [ 0]
'tt_cmap8_get_info' [ 0]
'OT::SubstLookupSubTable::dispatch<OT::hb_would_apply_context_t>' [ 0 4 25]
'hb_font_get_face' [ 0]
'TT_PCLT_' [ 0]
'hb_get_subtables_context_t::apply_to<OT::MarkLigPosFormat1>' [ 0 28]
'CFF_Face' [ 0]
'tt_face_load_hhea' [ 0]
'reph_position_t' [ 0]
'FT_Outline_New_Internal' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::finish' [ 0 48]
'Ins_MAX' [ 0]
'Vertical_Sweep_Span' [ 0]
'ligature_table' [ 0]
'GPOSProxy' [ 0]
'OT::PairPosFormat2::collect_glyphs' [ 0 4 20]
'TCoord' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 106]
'_use_syllable_machine_eof_trans' [ 0]
'reference_table' [ 0]
'OT::ArrayOf<OT::EntryExitRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 67]
'OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'AF_Blue_Stringset' [ 0]
'FT_Vector_Unit' [ 0]
'OT::SBitLineMetrics::sanitize' [ 0 4 21]
'cr_png_get_x_pixels_per_meter' [ 0]
'TT_Load_Composite_Glyph' [ 0]
'FT_GlyphRec_' [ 0]
'cr_png_sRGB_table' [ 0]
'OT::KernTable<OT::KernOT>::sanitize' [ 0 4 27]
'OT::hb_closure_context_t' [ 0 4]
'FT_Outline_Embolden' [ 0]
'cff_cmap_encoding_char_index' [ 0]
'hb_ot_math_get_glyph_assembly' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::hb_serialize_context_t::allocate_size<OT::Ligature>' [ 0 4 28]
'zcalloc' [ 0]
'Cr_z_gzerror' [ 0]
'png_compression_buffer' [ 0]
'FT_CMap' [ 0]
'OT::KernSubTableFormat0' [ 0 4]
'OT::KernSubTableFormat2' [ 0 4]
'hb_set_t::previous_range' [ 0 10]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'make_gray_file_colormap' [ 0]
'OT::match_lookahead' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::Feature>' [ 0 4 27]
'OT::KernPair::cmp' [ 0 4 14]
'ra_chars' [ 0]
'OT::AlternateSubst::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 20]
'OT::hb_ot_apply_context_t::replace_glyph_inplace' [ 0 4 27]
'tt_delta_interpolate' [ 0]
'TT_FaceRec_' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::set_match_func' [ 0 4 27 48]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionPos>, OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 63]
'OT::operator+<const OT::MarkMarkPosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'hb_unicode_mirroring_nil' [ 0]
'OT::CoverageFormat2::Iter::init' [ 0 4 21 27]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'mongolian_variation_selectors' [ 0]
'OT::intersects_array' [ 0 4]
'_try_make_writable_inplace_unix' [ 0]
'af_latn_nonbase_uniranges' [ 0]
'hb_ot_var_normalize_variations' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::Lookup>' [ 0 4 27]
'hb_buffer_set_replacement_codepoint' [ 0]
'Direct_Move_X' [ 0]
'Direct_Move_Y' [ 0]
'free_func' [ 0]
'PS_HintsRec_' [ 0]
'OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 60]
'OT::hb_ot_apply_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 4 27]
'FT_Get_Charmap_Index' [ 0]
'OT::Feature' [ 0 4]
'Cr_z_deflatePrime' [ 0]
'af_lao_uniranges' [ 0]
'sfnt_done_face' [ 0]
'TProfile' [ 0]
'af_saur_script_class' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::LigatureSubstFormat1>' [ 0 4 227]
'hb_font_funcs_get_empty' [ 0]
'Cr_z_gzread' [ 0]
'png_write_filtered_row' [ 0]
'OT::LigatureSubstFormat1::closure' [ 0 4 26]
'hb_font_get_nominal_glyph_func_t' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_no_trace_t<bool>' [ 0]
'OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 33]
'AF_Dimension_' [ 0]
'static_shaper_list' [ 0]
'OT::CastP<OT::Condition, const void *>' [ 0 4]
't1_builder_done' [ 0]
'af_hebr_dflt_style_class' [ 0]
'CID_SubrsRec_' [ 0]
'OT::CoverageFormat2::add_coverage<hb_set_t>' [ 0 4 21]
'OT::operator+<const OT::AlternateSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::hb_closure_context_t::default_return_value' [ 0 4 26]
'FT_Service_TTCMaps' [ 0]
'OT::StructAtOffset<OT::PosLookup>' [ 0 4]
'OT::hb_sanitize_context_t::dispatch<OT::MarkLigPosFormat1>' [ 0 4 27]
'cr_png_read_filter_row_avg3_sse2' [ 0]
'cff_parser_done' [ 0]
'cr_png_free_data' [ 0]
'FT_Byte' [ 0]
'af_tavt_dflt_style_class' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 4 27]
'hb_ensure_native_direction' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat1>' [ 0 4 27]
'FT_Raccess_Guess' [ 0]
'cf2_freeT1SeacComponent' [ 0]
'cr_png_colorspace_sync' [ 0]
'ft_face_get_mm_service' [ 0]
'OT::hb_closure_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 4 26]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::AlternateSubstFormat1>' [ 0 4 227]
'OT::hb_ot_apply_context_t::dispatch<OT::PairPosFormat1>' [ 0 4 27]
'OT::MATH::get_constant' [ 0 4 10]
'hb_glyph_info_get_glyph_flags' [ 0]
'image_memory_write' [ 0]
'cr_png_reset_zstream' [ 0]
'hb_ot_substitute_default' [ 0]
'OT::Null<OT::os2>' [ 0 4]
'OT::StructAtOffset<OT::maxpV1Tail>' [ 0 4]
'OT::hb_lazy_table_loader_t<OT::MATH>::fini' [ 0 4 38]
'TT_Process_Simple_Glyph' [ 0]
'Cr_z_charf' [ 0]
'hb_set_subtract' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::ChainContextFormat2>' [ 0 4 27]
'CFF_Done_FD_Select' [ 0]
'arabic_state_table' [ 0]
'hb_buffer_normalize_glyphs' [ 0]
'hb_font_t::get_glyph_contour_point' [ 0 11]
'OT::hb_sanitize_context_t::check_struct<OT::SinglePosFormat2>' [ 0 4 27]
'Function_Sweep_Init' [ 0]
'PS_TableRec' [ 0]
'base_dist' [ 0]
'FT_ModuleRec_' [ 0]
'OT::recurse_lookups<OT::hb_collect_glyphs_context_t>' [ 0 4]
'OT::OffsetTo<OT::UnsizedArrayOf<OT::BaseGlyphRecord>, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'FT_Outline_Check' [ 0]
'CF2_BluesRec_' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::PairPosFormat2>' [ 0 4 27]
'FT_LcdFiveTapFilter' [ 0]
'OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> >' [ 0 4]
'ps_mask_done' [ 0]
'FT_Get_Track_Kerning' [ 0]
'cf2_getSeacComponent' [ 0]
'hb_shape_plan_create_cached2' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::MarkLigPosFormat1>' [ 0 4 27]
'OT::AnchorFormat1::get_anchor' [ 0 4 19]
'hb_ot_layout_lookup_collect_glyphs' [ 0]
'FT_FaceRec' [ 0]
'TT_MaxProfile' [ 0]
'OT::CastP<OT::Script, const void *>' [ 0 4]
'FT_Matrix' [ 0]
'thai_pua_shape::SDL_mappings' [ 0 16]
't1_service_multi_masters' [ 0]
'af_mymr_script_class' [ 0]
'petite_capitals_from_capitals_feature' [ 0]
'FT_Get_MM_Blend_Func' [ 0]
'poly' [ 0]
'hb_ft_get_glyph_name' [ 0]
'tt_get_cmap_info' [ 0]
'cr_png_do_packswap' [ 0]
'UNormalizer2' [ 0]
'af_sinh_script_class' [ 0]
'hb_set_t::finish' [ 0 10]
'af_telu_dflt_style_class' [ 0]
'ps_hint_table_ensure' [ 0]
'OT::GDEF::sanitize' [ 0 4 10]
'ps_parser_to_token_array' [ 0]
'gf2_matrix_times' [ 0]
'ft_validator_init' [ 0]
'FT_Angle' [ 0]
'psh_blues_snap_stem' [ 0]
'cff_set_var_design' [ 0]
'hb_get_subtables_context_t::apply_to<OT::ContextFormat1>' [ 0 28]
'OT::Coverage' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_ot_math_get_min_connector_overlap' [ 0]
'OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 73]
'OT::Coverage::sanitize' [ 0 4 14]
'hb_font_t::has_glyph_h_origin_func' [ 0 11]
'OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'hb_buffer_t::enlarge' [ 0 13]
'OT::hb_serialize_context_t' [ 0 4]
'OT::VariationStore' [ 0 4]
'SetSuperRound' [ 0]
'FT_Done_Library' [ 0]
'Cr_z_gzoffset' [ 0]
'ft_glyphslot_grid_fit_metrics' [ 0]
'_hb_font_adopt_var_coords_normalized' [ 0]
'cr_png_calloc' [ 0]
'_hb_ot_layout_collect_lookups_lookups' [ 0]
'af_olck_dflt_style_class' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 107]
'OT::VarRegionList' [ 0 4]
'OT::IndexSubtable::get_extents' [ 0 4 19]
't1_cmap_std_done' [ 0]
'cr_png_push_read_IDAT' [ 0]
'OT::CastP<OT::LangSys, char>' [ 0 4]
'OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t::get_advance' [ 0 4 34 49]
'GX_Value' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'__uint64_t' [ 0]
'tt_face_free_name' [ 0]
'FT_Glyph_To_Bitmap' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::SinglePos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'HbOpXor' [ 0]
'OT::operator+<const OT::MathGlyphInfo *, OT::IntType<unsigned short, 2>, OT::MathItalicsCorrectionInfo>' [ 0 4]
'Cr_z_uLongf' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_atomic_int_t' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkLigPos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'FT_CMap_New' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'Ins_SFVFS' [ 0]
'FT_FloorFix' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 107]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Extension<OT::ExtensionPos>, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'CFF_Field_Handler_' [ 0]
'cr_png_get_gAMA_fixed' [ 0]
'OT::CastP<OT::post, const void *>' [ 0 4]
'CFF_CharsetRec' [ 0]
'OT::CmapSubtableFormat12::group_get_glyph' [ 0 4 26]
'cf2_glyphpath_computeOffset' [ 0]
'inflateEnd' [ 0]
'cf2_arrstack_push' [ 0]
'FT_Int' [ 0]
'OT::CastP<OT::MathGlyphAssembly, const void *>' [ 0 4]
'TT_Load_Any_Func' [ 0]
'af_tibt_script_class' [ 0]
'cff_font_load' [ 0]
'cff_field_handlers' [ 0]
'OT::hb_closure_context_t::stop_sublookup_iteration' [ 0 4 26]
'hb_object_create<hb_font_funcs_t>' [ 0]
'hb_blob_create_sub_blob' [ 0]
'hb_ft_get_glyph_v_origin' [ 0]
'cf2_getMaxstack' [ 0]
'OT::MarkGlyphSets' [ 0 4]
'name_record_fields' [ 0]
'build_bl_tree' [ 0]
'OT::GSUBGPOS::get_lookup' [ 0 4 14]
'hb_unicode_funcs_set_combining_class_func' [ 0]
'cf2_glyphpath_hintPoint' [ 0]
'ps_mask_clear_bit' [ 0]
't1_driver_class' [ 0]
'OT::ArrayOf<OT::BaseScriptRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'T1_Size_Done' [ 0]
'hb_ot_layout_table_find_feature' [ 0]
'png_read_buffer' [ 0]
'OT::operator+<const OT::VariationStore *, OT::IntType<unsigned int, 4>, OT::VarData>' [ 0 4]
'OT::CastP<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'FT_Glyph_Class_' [ 0]
'OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 57]
'hb_object_is_valid<hb_blob_t>' [ 0]
'add_char' [ 0]
'TT_HoriHeader_' [ 0]
'_deserialize_json_index_offsets' [ 0]
'FT_LSB_Adjust_Func' [ 0]
'hb_ot_map_t::substitute' [ 0 13]
'Bool' [ 0]
'OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >' [ 0 4]
'fixed_td' [ 0]
'arabic_fallback_synthesize_lookup_ligature' [ 0]
'cf2_getNormalizedVector' [ 0]
'__loadu_si128' [ 0]
'Cr_z_inflateBackInit_' [ 0]
'fixed_tl' [ 0]
'Ins_MIN' [ 0]
'hb_font_get_glyph_from_name_nil' [ 0]
'cr_png_read_image' [ 0]
'hb_user_data_key_t' [ 0]
'_hb_ot_shape_fallback_position_recategorize_marks' [ 0]
'OT::head::sanitize' [ 0 4 10]
'hb_set_t::page_t::add' [ 0 10 18]
'png_colorspace_check_gamma' [ 0]
'hb_font_t::get_glyph_h_kerning' [ 0 11]
'OT::FeatureTableSubstitution::find_substitute' [ 0 4 30]
'ft_close_stream_by_munmap' [ 0]
'PS_Decoder' [ 0]
'FT_Var_Axis' [ 0]
'FT_Size_Internal' [ 0]
'_hb_ot_shaper_font_data_create' [ 0]
'Cr_z_deflateReset' [ 0]
'FT_Incremental' [ 0]
'OT::operator+<const OT::ContextFormat2 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::Lookup::dispatch<OT::PosLookupSubTable, OT::hb_sanitize_context_t>' [ 0 4 12]
'af_grek_dflt_style_class' [ 0]
'arabic_shape_plan_t' [ 0]
'hb_ft_face_finalize' [ 0]
'cff_get_ros' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 227]
'hb_get_subtables_context_t::apply_to<OT::CursivePosFormat1>' [ 0 28]
'HbOpAnd::process<hb_vector_size_t<unsigned long long, 128> >' [ 0 9]
'PS_Table_FuncsRec_' [ 0]
'FT_Stream_EnterFrame' [ 0]
'cr_png_get_signature' [ 0]
't1_cmap_custom_char_index' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::no_dispatch_return_value' [ 0 4 279]
'parse_one_feature' [ 0]
'af_guru_nonbase_uniranges' [ 0]
'TT_CMap_ValidateFunc' [ 0]
'FT_Glyph_StrokeBorder' [ 0]
'GPOSProxy::GPOSProxy' [ 0 11]
'hb_string_t' [ 0]
'hb_ot_shape_complex_categorize' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'af_thai_dflt_style_class' [ 0]
'PS_GetFontPrivateFunc' [ 0]
'OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'OT::ValueFormat::get_len' [ 0 4 17]
'OT::MathItalicsCorrectionInfo' [ 0 4]
'FT_SFNT_TableInfoFunc' [ 0]
'T1_Decoder_Zone' [ 0]
'OT::UINT24' [ 0 4]
'fvaraxis_fields' [ 0]
'FT_Get_CMap_Format' [ 0]
'OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 65]
'OT::DeltaSetIndexMap::get_width' [ 0 4 22]
'FT_Service_PsInfo' [ 0]
'OT::MarkGlyphSetsFormat1::covers' [ 0 4 26]
'FT_Pixel_Mode' [ 0]
'hb_object_set_user_data<hb_blob_t>' [ 0]
'tt_cmap_unicode_char_next' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat2>' [ 0 4 28]
'OT::hb_collect_glyphs_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 4 33]
'cr_png_get_libpng_ver' [ 0]
'hb_set_add_range' [ 0]
'hb_glib_unicode_eastasian_width' [ 0]
'hb_buffer_t::_unsafe_to_break_find_min_cluster' [ 0 13]
'OT::LookupRecord' [ 0 4]
'OT::FeatureParamsStylisticSet' [ 0 4]
'cr_png_push_process_row' [ 0]
'TT_Post_NamesRec' [ 0]
'int32_t' [ 0]
'af_tfng_uniranges' [ 0]
'name_table_fields' [ 0]
'AF_ScriptClassRec_' [ 0]
'cf2_getSubfont' [ 0]
'ARRAY_LENGTH<unsigned int, 8>' [ 0]
'CF2_OutlineCallbacksRec_' [ 0]
'hb_unicode_script_func_t' [ 0]
'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 118]
'OT::LigGlyph::sanitize' [ 0 4 14]
'OT::hb_lazy_table_loader_t<OT::CPAL>' [ 0 4]
'WOFF_TableRec_' [ 0]
'OT::TTCHeader::sanitize' [ 0 4 15]
'OT::MarkMarkPos::dispatch<hb_get_subtables_context_t>' [ 0 4 17]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::get_size' [ 0 4 55]
'cr_png_set_gAMA_fixed' [ 0]
'PSH_Blues' [ 0]
'OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 62]
'Read_CVT' [ 0]
'OT::CoverageFormat1::Iter::more' [ 0 4 21 27]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::resize' [ 0 72]
'OT::hb_serialize_context_t::hb_serialize_context_t' [ 0 4 28]
'tt_services' [ 0]
'dext' [ 0]
'FT_BitmapGlyphRec_' [ 0]
'OT::ConditionSet::sanitize' [ 0 4 18]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::get_kerning' [ 0 4 54]
'FT_ULong' [ 0]
'OT::CastR<OT::ExtensionSubst, OT::SubstLookupSubTable>' [ 0 4]
'OT::FWORD' [ 0 4]
'bbox_interface' [ 0]
'T1_Font' [ 0]
'TT_OS2' [ 0]
'OT::MarkBasePosFormat1::get_coverage' [ 0 4 24]
'OT::EncodingRecord::cmp' [ 0 4 20]
'FT_CMap_CharIndexFunc' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::ArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 63]
'FT_Done_Face' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::add' [ 0 47]
'cid_parse_font_matrix' [ 0]
'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_set_t::get_major' [ 0 10]
'hb_unicode_funcs_t::is_default_ignorable' [ 0 20]
'hb_user_data_array_t::set' [ 0 22]
'OT::IntType<unsigned char, 1>::operator unsigned char' [ 0 4 31]
'Ins_CALL' [ 0]
'hb_ft_face_create' [ 0]
'hb_set_t::page_t::elt_get_min' [ 0 10 18]
'T1_Finalize_Parser' [ 0]
'cr_png_get_uint_16' [ 0]
'ft_outline_glyph_init' [ 0]
'ft_glyphslot_set_bitmap' [ 0]
'OT::AlternateSubstFormat1::get_coverage' [ 0 4 27]
'af_indic_metrics_init' [ 0]
'OT::SubstLookup::sanitize' [ 0 4 17]
'_indic_syllable_machine_index_offsets' [ 0]
'hb_font_t::parent_scale_x_position' [ 0 11]
'hb_font_get_glyph_h_advance_parent' [ 0]
'FT_Get_Next_Char' [ 0]
'hb_object_init<hb_font_funcs_t>' [ 0]
'GSUBProxy::GSUBProxy' [ 0 11]
'cr_png_get_chunk_malloc_max' [ 0]
'Posf' [ 0]
'OT::RecordArrayOf<OT::Script>::find_index' [ 0 4 31]
'_try_writable' [ 0]
'GX_AVarSegment' [ 0]
'_hb_ft_font_set_funcs' [ 0]
'FT_Stream_Free' [ 0]
'AF_WidthRec' [ 0]
'hb_font_t::parent_scale_x_distance' [ 0 11]
'arabic_fallback_plan_destroy' [ 0]
'FT_CMap_DoneFunc' [ 0]
'info_is_mcm' [ 0]
'png_gamma_threshold' [ 0]
'TT_Validator' [ 0]
'ush' [ 0]
'Cr_z_adler32_simd_' [ 0]
'TT_Post_NamesRec_' [ 0]
'Horizontal_Sweep_Span' [ 0]
'FT_Vector_Length' [ 0]
'OT::AlternateSubst::dispatch<OT::hb_would_apply_context_t>' [ 0 4 20]
'ft_stroke_border_lineto' [ 0]
'OT::LigCaretList::sanitize' [ 0 4 18]
'cid_size_request' [ 0]
'T1_New_Parser' [ 0]
'af_cyrl_c2sc_style_class' [ 0]
'tt_check_trickyness_sfnt_ids' [ 0]
'FT_Bitmap_New' [ 0]
'af_cprt_script_class' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'OT::StructAfter<OT::maxpV1Tail, OT::maxp>' [ 0 4]
'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 63]
'hb_get_subtables_context_t::dispatch<OT::PairPosFormat1>' [ 0 28]
'OT::kern' [ 0 4]
'FT_Get_Multi_Master' [ 0]
'af_cjk_get_standard_widths' [ 0]
'tt_cmap14_char_next' [ 0]
'OT::match_class' [ 0 4]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'TT_CodeRange' [ 0]
'OT::RuleSet::would_apply' [ 0 4 13]
'hb_ot_hide_default_ignorables' [ 0]
'tt_cmap4_validate' [ 0]
'Cr_z_inflate' [ 0]
'hb_set_add' [ 0]
'T1_Size_Init' [ 0]
'T1_SizeRec_' [ 0]
'cr_png_benign_error' [ 0]
'OT::CaretValueFormat2::sanitize' [ 0 4 23]
'hb_set_t::process<HbOpAnd>' [ 0 10]
'OT::FeatureTableSubstitution' [ 0 4]
'hb_ft_get_glyph_extents' [ 0]
'myanmar_syllable_machine_start' [ 0]
'hb_unicode_funcs_set_compose_func' [ 0]
'FT_CMap_Class' [ 0]
'OT::BEInt<unsigned short, 2>::set' [ 0 4 30]
'_hb_glyph_info_is_ligature' [ 0]
'af_dsrt_dflt_style_class' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'cr_png_get_uint_31' [ 0]
'cr_png_get_uint_32' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 78]
'OT::operator+<const OT::PairPosFormat2 *, OT::IntType<unsigned short, 2>, OT::ClassDef>' [ 0 4]
'OT::hb_ot_apply_context_t::dispatch<OT::CursivePosFormat1>' [ 0 4 27]
'OT::ContextPos' [ 0 4]
'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 111]
'hb_buffer_get_empty' [ 0]
'OT::Sanitizer<OT::hmtxvmtx<OT::hmtx, OT::hhea> >::Sanitizer' [ 0 4 50]
'CID_Subrs' [ 0]
'cr_png_set_sig_bytes' [ 0]
'FT_Service_MetricsVariationsRec' [ 0]
'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 66]
'hb_reference_count_t::finish' [ 0 22]
'OT::PosLookup::apply_recurse_func' [ 0 4 15]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'FT_Face_GetKerningFunc' [ 0]
'FT_Glyph_BBox_Mode_' [ 0]
'hb_buffer_t::cur' [ 0 13]
'OT::CoverageFormat1::get_coverage' [ 0 4 21]
'OT::kern::accelerator_t::get_h_kerning' [ 0 4 10 25]
'FT_Frame_Field_' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::Extension<OT::ExtensionPos>, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::LigatureSubst::dispatch<OT::hb_sanitize_context_t>' [ 0 4 19]
'parse_int' [ 0]
'hb_ft_face_create_cached' [ 0]
't1_builder_check_points' [ 0]
'_hb_ot_complex_shaper_hebrew' [ 0]
'cr_png_user_version_check' [ 0]
'TT_Table' [ 0]
'BaseGlyphRecord' [ 0]
'OT::IndexSubtable' [ 0 4]
'TT_Set_CVT_Func' [ 0]
'OT::CoverageFormat2::get_coverage' [ 0 4 21]
'OT::OffsetListOf<OT::AnchorMatrix>::sanitize<unsigned int>' [ 0 4 36]
'cff_size_request' [ 0]
'ft_outline_glyph_prepare' [ 0]
'arabic_fallback_plan_create' [ 0]
'af_orkh_nonbase_uniranges' [ 0]
'OT::StructAtOffset<OT::MathItalicsCorrectionInfo>' [ 0 4]
'FT_Set_Var_Design_Func' [ 0]
'png_colorspace_check_XYZ' [ 0]
'OT::KernSubTable::sanitize' [ 0 4 18]
'OT::BinSearchHeader::sanitize' [ 0 4 21]
'ft_char_table' [ 0]
'cr_png_get_image_width' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkMarkPos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'ps_hints_t2mask' [ 0]
'_hb_glyph_info_set_modified_combining_class' [ 0]
'OT::OffsetArrayOf<OT::PairSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'GX_FVar_Head_' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 4 30]
'OT::Sanitizer<OT::GPOS>::lock_instance' [ 0 4 25]
'cr_png_set_packing' [ 0]
'_hb_face_for_data_closure_create' [ 0]
'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 62]
'OT::ContextFormat1::apply' [ 0 4 20]
'setup_masks_khmer' [ 0]
'hb_ot_layout_table_choose_script' [ 0]
'_khmer_syllable_machine_trans_actions' [ 0]
'ps_parser_to_fixed' [ 0]
'OT::ContextFormat1::get_coverage' [ 0 4 20]
'png_setup_avg_row_only' [ 0]
'tt_check_single_notdef' [ 0]
'OT::IndexSubtable::get_image_data' [ 0 4 19]
'T1_EncodingRecRec_' [ 0]
'_release_blob' [ 0]
'FT_CMap_InitFunc' [ 0]
'tt_hadvance_adjust' [ 0]
'ft_face_get_mvar_service' [ 0]
'ps_hints_apply' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Feature> >' [ 0 4 27]
'cr_png_malloc_warn' [ 0]
'cr_png_get_header_version' [ 0]
'FT_StrokeTags_' [ 0]
'psh_hint_snap_stem_side_delta' [ 0]
'OT::Null<OT::Coverage>' [ 0 4]
'inflate_codes_state' [ 0]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::alloc' [ 0 64]
'OT::GPOS::sanitize' [ 0 4 10]
'OT::LArrayOf<OT::FeatureVariationRecord>' [ 0 4]
'OT::MultipleSubst::dispatch<hb_get_subtables_context_t>' [ 0 4 19]
'default_weights' [ 0]
'cr_png_write_info_before_PLTE' [ 0]
'OT::MathGlyphInfo::get_top_accent_attachment' [ 0 4 19]
'FT_Raster_ResetFunc' [ 0]
'OT::hb_collect_glyphs_context_t::default_return_value' [ 0 4 33]
'CFF_FDSelectRec' [ 0]
'tt_face_load_loca' [ 0]
'OT::Null<OT::GPOS>' [ 0 4]
'CFF_SubFontRec_' [ 0]
'FT_Outline_GetOutsideBorder' [ 0]
'OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::MarkBasePosFormat1::sanitize' [ 0 4 24]
'hb_face_get_index' [ 0]
'hb_buffer_reset' [ 0]
'af_latin_hints_apply' [ 0]
'hb_face_get_user_data' [ 0]
'OT::cmap::sanitize' [ 0 4 10]
'FT_Get_CMap_Language_ID' [ 0]
'_hb_glyph_info_get_glyph_props' [ 0]
'OT::KernSubTable::get_kerning' [ 0 4 18]
'OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 60]
'Cr_z_crc_reset' [ 0]
'OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 66]
'CF2_HintMove' [ 0]
'hb_object_create<hb_face_t>' [ 0]
'uint8_t' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat1>' [ 0 4 33]
'make_rgb_colormap' [ 0]
'ps_hints_t1stem3' [ 0]
'hb_icu_unicode_decompose_compatibility' [ 0]
'cr_png_set_mem_fn' [ 0]
'tt_cmap8_char_next' [ 0]
'OT::CastP<OT::Lookup, const void *>' [ 0 4]
'tt_cmap_unicode_class_rec' [ 0]
'_indic_syllable_machine_indicies' [ 0]
't1_builder_add_point1' [ 0]
'hb_buffer_t::next_glyph' [ 0 13]
'hb_ot_tag_to_script' [ 0]
'cff_parse_blend' [ 0]
'FT_CMap_CharVarIndexFunc' [ 0]
'af_ethi_nonbase_uniranges' [ 0]
'OT::avar::map_coords' [ 0 4 10]
'OT::CastP<OT::CaretValue, const void *>' [ 0 4]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::thiz' [ 0 4 55]
'af_cakm_uniranges' [ 0]
'hb_ot_map_builder_t::hb_ot_map_builder_t' [ 0 21]
'OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 64]
'tt_face_free_sbit' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>' [ 0 4 42]
'_hb_ot_shaper_shape_plan_data_create' [ 0]
'AF_LatinMetrics' [ 0]
'cr_png_push_save_buffer' [ 0]
'hb_font_t::parent_scale_distance' [ 0 11]
'af_beng_dflt_style_class' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat2>' [ 0 4 33]
'cff_service_cid_info' [ 0]
'OT::PairPos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 13]
'OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 33]
'PS_Hint_TableRec_' [ 0]
'OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'Ins_ROUND' [ 0]
'OT::ChainContextFormat1::would_apply' [ 0 4 25]
'hb_stable_sort<hb_glyph_info_t, int>' [ 0]
'OT::PosLookup::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 15]
'OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 63]
'af_sinh_dflt_style_class' [ 0]
'OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 68]
'png_image_read_direct' [ 0]
'hb_memory_mode_t' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > >::may_have' [ 0 195]
'cff_parse_font_matrix' [ 0]
'PSH_DimensionRec_' [ 0]
'png_build_16bit_table' [ 0]
'cr_png_malloc_default' [ 0]
'af_dsrt_uniranges' [ 0]
'AF_AxisHintsRec_' [ 0]
'OT::CoverageFormat2::sanitize' [ 0 4 21]
'gz_statep' [ 0]
'ft_outline_glyph_transform' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 30]
'FT_ListNodeRec_' [ 0]
'OT::chain_context_collect_glyphs_lookup' [ 0 4]
'OT::CastP<OT::hmtxvmtx<OT::vmtx, OT::vhea>, char>' [ 0 4]
'OT::KernTable<OT::KernAAT>::get_h_kerning' [ 0 4 28]
'Cr_z_crc_fold_init' [ 0]
'OT::Lookup::get_subtable<OT::PosLookupSubTable>' [ 0 4 12]
'PS_Decoder_Zone_' [ 0]
'OT::Sanitizer<OT::OpenTypeFontFile>::sanitize' [ 0 4 37]
'OT::CastP<OT::hhea, const void *>' [ 0 4]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ChainContextFormat3>' [ 0 4 33]
'OT::Null<OT::Record<OT::Script> >' [ 0 4]
'af_cans_dflt_style_class' [ 0]
'af_service_properties' [ 0]
'off_t' [ 0]
'psh_glyph_load_points' [ 0]
'OT::ChainRuleSet::sanitize' [ 0 4 18]
'hb_font_get_variation_glyph_parent' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::MarkMarkPosFormat1>' [ 0 4 27]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'Ins_GETDATA' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 82]
'OT::ChainContextFormat1' [ 0 4]
'OT::ChainContextFormat2' [ 0 4]
'OT::ChainContextFormat3' [ 0 4]
'OT::StructAtOffset<OT::MathGlyphConstruction>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'tt_cmap13_get_info' [ 0]
'hb_ot_map_t::needs_fallback' [ 0 13]
'Cr_z_copy_with_crc' [ 0]
'OT::OffsetTable::get_table_by_tag' [ 0 4 17]
'hb_buffer_set_segment_properties' [ 0]
'FT_Stroker_LineTo' [ 0]
'static_icu_funcs' [ 0]
'hb_font_funcs_set_glyph_name_func' [ 0]
'psh_calc_max_height' [ 0]
'FT_Outline_ConicToFunc' [ 0]
'cr_png_get_color_type' [ 0]
'OT::MultipleSubstFormat1::collect_glyphs' [ 0 4 26]
'ft_var_load_delta_set_index_mapping' [ 0]
'OT::AttachList::get_attach_points' [ 0 4 16]
'OT::CastP<OT::MathItalicsCorrectionInfo, const void *>' [ 0 4]
'PS_Adobe_Std_StringsFunc' [ 0]
'tt_cmap14_class_rec' [ 0]
'AFM_ParserRec' [ 0]
'position_mark' [ 0]
'skip_procedure' [ 0]
'cf2_stack_pop' [ 0]
'cr_png_push_have_row' [ 0]
'TT_Done_Face_Func' [ 0]
'OT::MultipleSubstFormat1::would_apply' [ 0 4 26]
'OT::MultipleSubstFormat1::sanitize' [ 0 4 26]
'CFF_SizeRec_' [ 0]
'FT_Get_MM_Var' [ 0]
'ps_table_release' [ 0]
'OT::hb_lazy_table_loader_t<OT::COLR>::fini' [ 0 4 38]
'OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 71]
'blwf_mode_t' [ 0]
'TT_NameTable' [ 0]
'AFM_ValueRec' [ 0]
'Ins_MUL' [ 0]
'png_uint_16p' [ 0]
'OT::SingleSubst::dispatch<OT::hb_would_apply_context_t>' [ 0 4 17]
'Cr_z_gzFile' [ 0]
'_hb_glyph_info_is_unicode_mark' [ 0]
'FT_Incremental_GetGlyphMetricsFunc' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 4 30]
'OT::Sanitizer<OT::vhea>::lock_instance' [ 0 4 25]
'FT_Outline_' [ 0]
'OT::GDEF::get_attach_points' [ 0 4 10]
'OT::hb_would_apply_context_t::hb_would_apply_context_t' [ 0 4 30]
'cr_png_get_x_offset_microns' [ 0]
'cr_png_handle_iCCP' [ 0]
'MIN<unsigned long>' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>::operator[]' [ 0 52]
'OT::hb_sanitize_context_t::check_range' [ 0 4 27]
'FT_Raster_Funcs' [ 0]
'CFF_Private' [ 0]
'hb_face_get_upem' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>::init' [ 0 44]
'hb_ot_layout_position_start' [ 0]
'Ins_SFVTL' [ 0]
'cr_png_handle_as_unknown' [ 0]
'OT::SubstLookup::dispatch<hb_get_subtables_context_t>' [ 0 4 17]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>' [ 0 4]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::operator[]' [ 0 69]
'T1_Face_Done' [ 0]
'black_PWorker' [ 0]
'OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_unicode_combining_class' [ 0]
'af_cjk_hints_compute_blue_edges' [ 0]
'tt_sbit_decoder_alloc_bitmap' [ 0]
'OT::hb_lazy_table_loader_t<OT::MATH>::get' [ 0 4 38]
'cf2_arrstack_setCount' [ 0]
't1_parse_font_matrix' [ 0]
'FT_Vector_Transform_Scaled' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::SinglePosFormat1>' [ 0 4 27]
'hb_buffer_get_unicode_funcs' [ 0]
'cr_png_do_write_transformations' [ 0]
'OT::Null<OT::Tag>' [ 0 4]
'cff_get_glyph_data' [ 0]
'OT::ChainContextFormat3::apply' [ 0 4 25]
'PS_PrivateRec_' [ 0]
'OT::Sanitizer<OT::kern>::lock_instance' [ 0 4 25]
'OT::loca' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'OT::hb_would_apply_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 4 30]
'OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 60]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'FT_UFast' [ 0]
'OT::CastP<OT::SubstLookupSubTable, const void *>' [ 0 4]
'TProfileList' [ 0]
'_next_cluster' [ 0]
'ps_builder_add_point' [ 0]
'OT::MultipleSubstFormat1' [ 0 4]
'OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 66]
'OT::CastP<OT::loca, char>' [ 0 4]
'png_user_chunk_ptr' [ 0]
'AF_Segment' [ 0]
'af_shaw_nonbase_uniranges' [ 0]
'hb_set_t::process<HbOpMinus>' [ 0 10]
'hb_utf16_t::next' [ 0 12]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::operator[]' [ 0 54]
'hb_blob_reference' [ 0]
'hb_icu_unicode_compose' [ 0]
'OT::StructAtOffset<OT::MathConstants>' [ 0 4]
'_hb_glyph_info_multiplied' [ 0]
'hb_mutex_t' [ 0]
'tt_face_find_color' [ 0]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_sanitize_context_t>' [ 0 4 29]
'hb_unicode_funcs_set_script_func' [ 0]
'FT_MM_Var' [ 0]
'OT::hb_lazy_table_loader_t<OT::fvar>::fini' [ 0 4 38]
'OT::hb_ot_apply_context_t::dispatch<OT::SinglePosFormat2>' [ 0 4 27]
'OT::RecordArrayOf<OT::LangSys>' [ 0 4]
'cff_expert_encoding' [ 0]
'OT::KernSubTableFormat0::sanitize' [ 0 4 25]
'Cr_z_deflatePending' [ 0]
'PS_MaskRec_' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'hb_object_destroy<hb_buffer_t>' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned int, 4> >' [ 0 4]
'direction_strings' [ 0]
'ft_smooth_lcd_renderer_class' [ 0]
'consonant_position_from_face' [ 0]
'OT::AttachList::sanitize' [ 0 4 16]
'OT::CoverageFormat1::add_coverage<hb_set_t>' [ 0 4 21]
'fixedtables' [ 0]
'OT::CoverageFormat1::sanitize' [ 0 4 21]
'compare_indic_order' [ 0]
'T1_Size' [ 0]
'OT::CastP<OT::LOffsetTo<OT::OffsetTable>, const void *>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::ContextFormat3>' [ 0 4 27]
'OT::hb_sanitize_context_t::check_struct<OT::DeltaSetIndexMap>' [ 0 4 27]
'cr_png_set_scale_16' [ 0]
'OT::ChainContextFormat2::would_apply' [ 0 4 25]
'OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 70]
'hb_prealloced_array_t<unsigned int, 1>::init' [ 0 40]
'hb_buffer_t::add_info' [ 0 13]
'hb_face_t::get_num_glyphs' [ 0 11]
'OT::Null<OT::HVARVVAR>' [ 0 4]
'OT::ArrayOf<OT::MathKernInfoRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 70]
'OT::operator+<const void *, OT::IntType<unsigned int, 4>, OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> > >' [ 0 4]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'OT::OffsetTable' [ 0 4]
'__m128' [ 0]
'hb_buffer_serialize_list_formats' [ 0]
'FT_GlyphSlot_Own_Bitmap' [ 0]
'lbase' [ 0]
'FT_Outline_Done' [ 0]
'OT::hb_ot_apply_context_t::default_return_value' [ 0 4 27]
'OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 78]
'tt_face_load_colr_layers' [ 0]
'hb_object_get_user_data<hb_font_funcs_t>' [ 0]
'AF_ScalerRec' [ 0]
'TT_Clear_CodeRange' [ 0]
'cf2_hintmask_setAll' [ 0]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned short, 2> >' [ 0 4]
'setup_masks_arabic_plan' [ 0]
'hb_buffer_destroy' [ 0]
'AFM_Parser_FuncsRec' [ 0]
't1_cmap_custom_char_next' [ 0]
'af_cher_script_class' [ 0]
'af_cyrl_titl_style_class' [ 0]
'tt_cmap8_class_rec' [ 0]
'Cr_z_inflateInit2_' [ 0]
'OT::AnchorFormat2::get_anchor' [ 0 4 19]
'cff_parse_fixed_dynamic' [ 0]
'OT::os2' [ 0 4]
'af_loader_done' [ 0]
'af_direction_compute' [ 0]
'cff_index_get_string' [ 0]
'OT::SinglePos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 15]
'PS_DesignMapRec' [ 0]
'OT::CastP<OT::VarData, const void *>' [ 0 4]
'cff_standard_encoding' [ 0]
'png_const_uint_16p' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> >::add_range' [ 0 121]
'cr_png_set_cHRM_XYZ_fixed' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::VarData::get_row_size' [ 0 4 13]
'compose_use' [ 0]
'T1_GlyphSlotRec_' [ 0]
'FT_List_Find' [ 0]
'OT::StructAtOffset<OT::PairValueRecord>' [ 0 4]
'FT_Metrics_Adjust_Func' [ 0]
'T1_Decoder_FuncsRec' [ 0]
'OT::LigatureSubstFormat1' [ 0 4]
'OT::IntType<short, 2>::set' [ 0 4 23]
'png_create_colormap_entry' [ 0]
'png_longjmp_ptr' [ 0]
'OT::IntType<short, 2>::operator short' [ 0 4 23]
'sfnt_is_postscript' [ 0]
'OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'Cr_z_gzopen64' [ 0]
'FT_Vector_Polarize' [ 0]
'OT::ArrayOf<OT::MathValueRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 67]
'cf2_hintmap_map' [ 0]
'hb_set_get_user_data' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'T2_Hints' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'hb_font_get_glyph_from_name_parent' [ 0]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 35]
'OT::PairSet::apply' [ 0 4 13]
'FT_Glyph_LayerRec_' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Free_Func' [ 0]
'OT::ChainContextFormat1::sanitize' [ 0 4 25]
'OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 110]
'OT::SubstLookup::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 17]
'get_win_string' [ 0]
'ARRAY_LENGTH<hb_glyph_info_t, 32>' [ 0]
'mm_weights_unmap' [ 0]
'PS_BlendRec_' [ 0]
'cff_builder_start_point' [ 0]
'OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 69]
'Insert_Y_Turn' [ 0]
'af_shaper_get_cluster' [ 0]
'PSH_Globals_NewFunc' [ 0]
'OT::ArrayOf<OT::MathValueRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 67]
'TT_Post_20' [ 0]
'cf2_getBlueMetrics' [ 0]
'AF_Blue_String_' [ 0]
'TT_Post_25' [ 0]
'OT::SingleSubstFormat1::serialize' [ 0 4 24]
'OT::Offset<OT::IntType<unsigned short, 2> >::is_null' [ 0 4 45]
'T1_Size_Get_Globals_Funcs' [ 0]
'feature_list_t' [ 0]
'OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 70]
'OT::PairPosFormat1::sanitize' [ 0 4 20]
'png_read_filter_row_paeth_multibyte_pixel' [ 0]
'hb_buffer_t::unsafe_to_break_impl' [ 0 13]
'af_blue_strings' [ 0]
'hb_font_get_font_h_extents_nil' [ 0]
'ps_builder_check_points' [ 0]
'OT::FeatureParamsSize::sanitize' [ 0 4 23]
'FT_Get_Glyph_Name' [ 0]
'syllable_type_t' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::bsearch<unsigned int>' [ 0 54]
'Cr_z_deflateSetHeader' [ 0]
'Ins_AA' [ 0]
'hb_unicode_funcs_get_parent' [ 0]
'OT::LOffsetTo<OT::ConditionSet>' [ 0 4]
'normalizer' [ 0]
'__sigset_t' [ 0]
'FT_Stroker_EndSubPath' [ 0]
'OT::SingleSubstFormat2::get_coverage' [ 0 4 24]
'FT_GlyphLoadRec' [ 0]
'OT::ChainContextFormat3::collect_glyphs' [ 0 4 25]
'af_khmr_dflt_style_class' [ 0]
'af_sylo_dflt_style_class' [ 0]
'FT_AutoHinter_InterfaceRec' [ 0]
'OT::CBDT::accelerator_t::fini' [ 0 4 10 25]
'cf2_glyphpath_lineTo' [ 0]
'FT_Raster_DoneFunc' [ 0]
'tt_cmap0_get_info' [ 0]
'OT::Rule' [ 0 4]
'OT::CursivePosFormat1::get_coverage' [ 0 4 23]
'af_cari_script_class' [ 0]
'FT_Generic' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsCharacterVariants>' [ 0 4 27]
'FT_MemoryRec_' [ 0]
'check_type1_format' [ 0]
'func_interface' [ 0]
'cid_ps_get_font_extra' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::sanitize' [ 0 4 42]
'af_vaii_script_class' [ 0]
'cr_png_set_sRGB' [ 0]
't1_standard_encoding' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::init' [ 0 69]
'Ins_SHPIX' [ 0]
'T1_FontRec_' [ 0]
'hb_object_is_inert<hb_unicode_funcs_t>' [ 0]
'OT::Rule::apply' [ 0 4 10]
'hb_glib_script_from_script' [ 0]
'v_load64_dup' [ 0]
'cr_png_set_rgb_to_gray' [ 0]
'CF2_HintRec' [ 0]
'OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >::bsearch<unsigned int>' [ 0 4 77]
'OT::StructAtOffset<OT::AttachList>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'_use_syllable_machine_from_state_actions' [ 0]
'OT::BEInt<signed char, 1>::operator signed char' [ 0 4 27]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::sanitize' [ 0 4 54]
'af_latin_align_serif_edge' [ 0]
'TT_Process_Composite_Glyph' [ 0]
'cr_png_create_read_struct_2' [ 0]
'hb_set_t::intersect' [ 0 10]
'hb_ot_layout_feature_with_variations_get_lookups' [ 0]
'OT::GDEF::has_glyph_classes' [ 0 4 10]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> >' [ 0]
'hb_vector_size_t<unsigned long long, 128>::operator[]' [ 0 43]
'cff_encoding_load' [ 0]
'af_cans_nonbase_uniranges' [ 0]
'OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 91]
'hb_arabic_joining_type_t' [ 0]
'T1_Hints_FuncsRec' [ 0]
'OT::CmapSubtableFormat4::get_glyph' [ 0 4 25]
'OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> >' [ 0 4]
'af_latin_metrics_init_blues' [ 0]
'Vertical_Sweep_Step' [ 0]
'OT::StructAfter<OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> >, OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4]
'hb_ot_get_nominal_glyph' [ 0]
'hb_object_reference<hb_buffer_t>' [ 0]
'FT_OutlineGlyph' [ 0]
'load_format_25' [ 0]
'FT_Service_TTGlyfRec' [ 0]
'cr_png_get_valid' [ 0]
'cr_png_get_pixels_per_meter' [ 0]
'cr_png_set_compression_method' [ 0]
'OT::CmapSubtableFormat10' [ 0 4]
'OT::CmapSubtableFormat12' [ 0 4]
'OT::CmapSubtableFormat13' [ 0 4]
'OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 71]
'af_tavt_nonbase_uniranges' [ 0]
'UScriptCode' [ 0]
'hb_blob_get_data' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::SBitLineMetrics>' [ 0 4 27]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 58]
'hb_auto_array_t<hb_get_subtables_context_t::hb_applicable_t>::~hb_auto_array_t' [ 0 62]
'gray_raster_done' [ 0]
'OT::EntryExitRecord::sanitize' [ 0 4 21]
'Sort' [ 0]
'OT::RecordArrayOf<OT::Script>' [ 0 4]
'af_face_globals_free' [ 0]
'ft_var_load_mvar' [ 0]
'cr_png_gamma_correct' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 77]
'OT::hb_collect_glyphs_context_t::hb_collect_glyphs_context_t' [ 0 4 33]
'TT_GaspRangeRec_' [ 0]
'OT::LigatureSubstFormat1::get_coverage' [ 0 4 26]
'hb_face_get_empty' [ 0]
'cff_subfont_load' [ 0]
'af_buhd_dflt_style_class' [ 0]
'OT::glyf::sanitize' [ 0 4 10]
'OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 59]
'cf2_hint_lock' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ContextFormat1>' [ 0 4 227]
'_hb_ot_layout_collect_lookups_languages' [ 0]
'AF_LatinBlueRec' [ 0]
'Cr_z_crc32_combine' [ 0]
'cr_png_get_x_offset_pixels' [ 0]
'read_binary_data' [ 0]
'OT::CastP<OT::MATH, char>' [ 0 4]
'hb_buffer_get_empty::_hb_buffer_nil' [ 0 21]
'hb_buffer_t::clear_context' [ 0 13]
'OT::CastP<OT::GDEF, char>' [ 0 4]
'ft_mem_realloc' [ 0]
'OT::hb_lazy_table_loader_t<AAT::ankr>::fini' [ 0 4 39]
'hb_unicode_decompose_compatibility_nil' [ 0]
't1_cmap_unicode_char_next' [ 0]
'cff_service_cff_load' [ 0]
'hb_unicode_funcs_reference' [ 0]
'OT::operator+<const OT::Script *, OT::IntType<unsigned short, 2>, OT::LangSys>' [ 0 4]
'FT_BDF_GetPropertyFunc' [ 0]
'UChar' [ 0]
'OT::MathVariants::sanitize_offsets' [ 0 4 18]
'OT::GSUBGPOS::get_feature_tags' [ 0 4 14]
'CF2_HintMapRec' [ 0]
'hb_ot_get_font_h_extents' [ 0]
'uLongf' [ 0]
'FT_Service_GlyphDictRec_' [ 0]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::operator[]' [ 0 64]
'cf2_computeDarkening' [ 0]
'png_colorspace_set_xy_and_XYZ' [ 0]
'OT::PairPos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 13]
'CF2_OutlineRec_' [ 0]
'OT::operator+<const OT::MATH *, OT::IntType<unsigned short, 2>, OT::MathGlyphInfo>' [ 0 4]
'gray_render_conic' [ 0]
'cr_png_colorspace_sync_info' [ 0]
'af_cjk_snap_width' [ 0]
'OT::PosLookup::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 15]
'PS_Conv_ASCIIHexDecode' [ 0]
'af_limb_dflt_style_class' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ContextFormat2>' [ 0 4 227]
'png_xy_from_XYZ' [ 0]
'OT::Null<OT::Record<OT::Feature> >' [ 0 4]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'cid_get_offset' [ 0]
't1_cmap_custom_class_rec' [ 0]
'Ins_EQ' [ 0]
't1_hints_open' [ 0]
'hb_face_t::load_num_glyphs' [ 0 11]
'psh_hint_align' [ 0]
'OT::Null<OT::post::accelerator_t>' [ 0 4]
'hb_prealloced_array_t<unsigned int, 1>::push' [ 0 40]
'hb_ot_layout_lookup_accelerator_t::init<OT::PosLookup>' [ 0 35]
'hb_set_create' [ 0]
'tt_cmap_unicode_done' [ 0]
'png_image_read_background' [ 0]
'FT_Get_Var_Axis_Flags' [ 0]
'FT_Stream_IoFunc' [ 0]
'OT::Lookup::serialize' [ 0 4 12]
'af_latn_sinf_style_class' [ 0]
'_hb_ot_shape_fallback_kern' [ 0]
'OT::CastP<OT::RecordListOf<OT::Feature>, const void *>' [ 0 4]
'hb_subset_plan_t' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>::alloc' [ 0 52]
'tt_face_load_sbit_image' [ 0]
'FT_Get_SubGlyph_Info' [ 0]
'OT::CastP<OT::MathKernInfoRecord, const void *>' [ 0 4]
'af_telu_uniranges' [ 0]
'tt_cmap14_char_map_def_binary' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ContextFormat3>' [ 0 4 227]
'FT_Bitmap_Done' [ 0]
'OT::KernClassTable::get_class' [ 0 4 20]
'af_axis_hints_new_edge' [ 0]
'OT::StructAtOffset<OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4]
'T1_FontRec' [ 0]
'OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 60]
'FT_Glyph_CopyFunc' [ 0]
'get_mark_type' [ 0]
'T1_FieldRec_' [ 0]
'hangul_features' [ 0]
'FT_ValidatorRec_' [ 0]
'hb_unicode_funcs_t::space_fallback_type' [ 0 20]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'OT::hb_sanitize_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 4 27]
'OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >' [ 0 4]
'static_ft_funcs' [ 0]
'hb_utf8_t::prev' [ 0 11]
'OT::ArrayOf<OT::LOffsetTo<OT::Coverage>, OT::IntType<unsigned short, 2> >' [ 0 4]
'af_geok_dflt_style_class' [ 0]
'tt_cmap14_char_index' [ 0]
'hb_reference_count_t::init' [ 0 22]
'OT::Null<OT::BitmapSizeTable>' [ 0 4]
'OT::LongMetric' [ 0 4]
'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> >' [ 0 4]
'FT_Stream_Seek' [ 0]
'static_l_desc' [ 0]
'hb_ot_map_t::lookup_map_t::cmp' [ 0 13 27]
'FT_Orientation_' [ 0]
'OT::BEInt<unsigned int, 4>::set' [ 0 4 28]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 35]
'double' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::MarkMarkPos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'hb_unicode_general_category_nil' [ 0]
'ft_smooth_render' [ 0]
'cr_png_free_buffer_list' [ 0]
'CFF_Builder_FuncsRec' [ 0]
'cf2_outline_close' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>' [ 0 4]
'cr_png_read_transform_info' [ 0]
'Ins_GC' [ 0]
'hb_buffer_t' [ 0]
'HbOpMinus::process<hb_vector_size_t<unsigned long long, 128> >' [ 0 11]
'hb_utf32_t<true>::next' [ 0 18]
'OT::hb_serialize_context_t::start_serialize<OT::SubstLookup>' [ 0 4 28]
'ps_hinter_init' [ 0]
'OT::CaretValueFormat1::get_caret_value' [ 0 4 23]
'Ins_GT' [ 0]
'OT::Null<OT::Anchor>' [ 0 4]
'OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 58]
'OT::hb_sanitize_context_t::check_struct<OT::BitmapSizeTable>' [ 0 4 27]
'OT::HBINT8' [ 0 4]
'OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >::bsearch<unsigned int>' [ 0 4 77]
'ft_trig_pseudo_polarize' [ 0]
'CFF_Decoder_Free_Glyph_Callback' [ 0]
'TT_CMap13Rec_' [ 0]
'FT_Bitmap_Size_' [ 0]
'hb_glib_unicode_general_category' [ 0]
'hb_ot_zero_width_default_ignorables' [ 0]
'OT::intersects_class' [ 0 4]
'OT::PairSet::collect_glyphs' [ 0 4 13]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'Ins_FLIPOFF' [ 0]
'hb_shape_plan_get_empty' [ 0]
'black_TRaster_' [ 0]
'cr_png_info_init_3' [ 0]
'indic_shape_plan_t::get_virama_glyph' [ 0 20]
'PSH_Hint' [ 0]
'OT::StructAtOffset<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'MIN<unsigned int>' [ 0]
'hb_bsearch_r' [ 0]
'OT::Condition' [ 0 4]
'cr_png_write_end' [ 0]
'FT_MM_Axis' [ 0]
'af_latin_align_linked_edge' [ 0]
'FT_AutoHinter_GlyphLoadFunc' [ 0]
'cff_ps_get_font_extra' [ 0]
't1_ps_get_font_value' [ 0]
'tt_service_get_cmap_info' [ 0]
'Cr_z_inflate_table' [ 0]
'TT_DefRecord' [ 0]
'af_orya_nonbase_uniranges' [ 0]
'gray_raster_reset' [ 0]
'TBBox_Rec_' [ 0]
'OT::FeatureVariations::sanitize' [ 0 4 23]
'partial_fold' [ 0]
'FT_Init_FreeType' [ 0]
'zcfree' [ 0]
'OT::ReverseChainSingleSubstFormat1::sanitize' [ 0 4 36]
'hb_font_t::get_glyph_v_origin' [ 0 11]
'ft_stroker_subpath_start' [ 0]
'OT::operator+<const OT::GSUBGPOS *, OT::IntType<unsigned short, 2>, OT::OffsetListOf<OT::Lookup> >' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'FT_Stream_Pos' [ 0]
'af_latn_uniranges' [ 0]
'af_writing_system_classes' [ 0]
'ft_gzip_file_done' [ 0]
'unsigned short' [ 0]
't1_cmap_unicode_init' [ 0]
'af_cyrl_subs_style_class' [ 0]
'OT::CPAL' [ 0 4]
'hb_shape_plan_destroy' [ 0]
'PS_FontInfoRec' [ 0]
'Ins_IF' [ 0]
'sfnt_table_info' [ 0]
'_khmer_syllable_machine_from_state_actions' [ 0]
'FT_Stream_OpenGzip' [ 0]
'tt_face_get_ps_name' [ 0]
'Ins_IP' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::set_match_func' [ 0 4 27 38]
'hb_font_get_glyph_v_kerning_func_t' [ 0]
'crc_table' [ 0]
'TT_Load_Metrics_Func' [ 0]
'tt_face_get_kerning' [ 0]
'OT::CastP<OT::GSUB, char>' [ 0 4]
'OT::FeatureTableSubstitution::sanitize' [ 0 4 30]
'PS_DriverRec_' [ 0]
'af_tfng_script_class' [ 0]
'OT::post::accelerator_t::cmp_key' [ 0 4 10 25]
'OT::operator+<const OT::TTCHeaderVersion1 *, OT::IntType<unsigned int, 4>, OT::OffsetTable>' [ 0 4]
'compare_khmer_order' [ 0]
'cf2_stack_getReal' [ 0]
'hb_buffer_get_direction' [ 0]
'af_latin_snap_width' [ 0]
'FT_ValidationLevel_' [ 0]
'FT_List_Iterate' [ 0]
'cff_get_advances' [ 0]
'hb_vector_size_t<unsigned long long, 128>::process<HbOpAnd>' [ 0 43]
'cff_parse_cid_ros' [ 0]
'chunkunroll_relaxed' [ 0]
'T1_ParserRec_' [ 0]
'arabic_fallback_synthesize_lookup_single' [ 0]
'OT::Sanitizer<OT::os2>::Sanitizer' [ 0 4 24]
'tt_sbit_decoder_load_bit_aligned' [ 0]
'hb_font_get_font_v_extents_parent' [ 0]
'OT::hb_lazy_table_loader_t<OT::MATH>' [ 0 4]
'png_struct' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::bfind<hb_set_t::page_map_t>' [ 0 48]
'OT::CursivePosFormat1::sanitize' [ 0 4 23]
'PSH_HintRec_' [ 0]
'OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 63]
'OT::OffsetArrayOf<OT::Ligature, OT::IntType<unsigned short, 2> >' [ 0 4]
'parse_dict' [ 0]
'hb_font_t::get_extents_for_direction' [ 0 11]
'png_inflate_read' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::SinglePosFormat1>' [ 0 4 27]
'OT::KernTable<OT::KernOT>::thiz' [ 0 4 27]
'cff_set_instance' [ 0]
'FT_Stroker_LineCap' [ 0]
'hb_atomic_int_t::inc' [ 0 17]
'GX_HVVarTable' [ 0]
'Cr_z_inflateReset' [ 0]
'OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 125]
'ps_mask_table_last' [ 0]
'OT::StructAtOffset<OT::MathGlyphAssembly>' [ 0 4]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 78]
'FT_BitmapGlyph' [ 0]
'LangTagLong' [ 0]
'cr_png_set_text_compression_window_bits' [ 0]
'OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> >::sanitize<OT::IntType<unsigned int, 4> >' [ 0 4 69]
'OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 68]
'OT::MathGlyphInfo::get_kerning' [ 0 4 19]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::sanitize' [ 0 4 57]
'static_glib_funcs' [ 0]
'OT::FeatureParamsStylisticSet::sanitize' [ 0 4 31]
'hb_shape_plan_matches' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::MarkLigPos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'FT_RFork_Ref' [ 0]
'FT_GlyphSlot_InternalRec' [ 0]
'hb_atomic_int_t::set_unsafe' [ 0 17]
'_hb_ot_complex_shaper_default' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::KernOT::SubTableWrapper>' [ 0 4 27]
'hb_font_funcs_set_user_data' [ 0]
'cff_index_forget_element' [ 0]
'OT::hb_lazy_loader_t<OT::CBDT::accelerator_t>::get' [ 0 4 47]
'OT::ExtensionFormat1<OT::ExtensionPos>::dispatch<hb_get_subtables_context_t>' [ 0 4 40]
'OT::SubstLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 25]
'GX_ItemVarStoreRec' [ 0]
't1_ps_get_font_extra' [ 0]
'OT::Coverage::Iter::next' [ 0 4 14 20]
'FT_Raster' [ 0]
'FT_Stream_ReadUShort' [ 0]
'FT_Set_Debug_Hook' [ 0]
'OT::MarkBasePos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 17]
'OT::MarkLigPosFormat1::collect_glyphs' [ 0 4 23]
'OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 118]
'hb_ot_map_t::get_1_mask' [ 0 13]
'hb_ft_get_glyph_h_advance' [ 0]
'OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 67]
'FT_Reference_Face' [ 0]
'OT::hb_sanitize_context_t::end_processing' [ 0 4 27]
'OT::Null<OT::SubstLookupSubTable>' [ 0 4]
'OT::SmallGlyphMetrics::get_extents' [ 0 4 23]
'PS_Driver' [ 0]
'hb_blob_get_length' [ 0]
'FT_Open_Face' [ 0]
'sfnt_service_sfnt_table' [ 0]
'thai_pua_shape::SD_mappings' [ 0 16]
'OT::operator+<const OT::AnchorFormat3 *, OT::IntType<unsigned short, 2>, OT::Device>' [ 0 4]
'AF_WritingSystemClass' [ 0]
'FT_Size_RequestRec_' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'OT::MarkGlyphSetsFormat1' [ 0 4]
'FT_Property_Get' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::ClassDefFormat1' [ 0 4]
'OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 65]
'Get_Interface' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::mask_for' [ 0 47]
'Ins_LT' [ 0]
'OT::hb_sanitize_context_t::stop_sublookup_iteration' [ 0 4 27]
'_myanmar_syllable_machine_trans_actions' [ 0]
'ft_bitmap_glyph_done' [ 0]
'voidpf' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'crc_mask' [ 0]
'langs' [ 0]
'PSH_GlyphRec' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::next' [ 0 4 27 48]
'hb_font_get_glyph_v_advance_parent' [ 0]
'OT::AttachPoint' [ 0 4]
'OT::StructAtOffset<OT::RecordListOf<OT::Script> >' [ 0 4]
'OT::ArrayOf<OT::MathGlyphPartRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 71]
'tt_service_metrics_variations' [ 0]
'OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader>::sanitize_shallow' [ 0 4 51]
'FT_Stream_ReadChar' [ 0]
'AFM_TrackKernRec_' [ 0]
'Ins_MINDEX' [ 0]
'hb_reference_count_t::is_inert' [ 0 22]
'gray_PRaster' [ 0]
'hb_segment_properties_equal' [ 0]
'hb_object_destroy<hb_unicode_funcs_t>' [ 0]
'OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 64]
'hb_trampoline_closure_t' [ 0]
'Ins_MD' [ 0]
'small_capitals_feature' [ 0]
'tt_cmap14_def_char_count' [ 0]
'cr_png_sRGB_delta' [ 0]
'T1_Read_Metrics' [ 0]
'GX_FVar_Head' [ 0]
'OT::MarkMarkPosFormat1::collect_glyphs' [ 0 4 24]
'Cr_z_inflateCopy' [ 0]
'cid_get_postscript_name' [ 0]
'hb_set_del_range' [ 0]
'OT::CastP<OT::Record<OT::Script>, const void *>' [ 0 4]
'hb_font_get_glyph_v_advance_nil' [ 0]
'hb_unicode_funcs_t::is_variation_selector' [ 0 20]
'ps_check_extra_glyph_unicode' [ 0]
'OT::Supplier<OT::IntType<unsigned short, 2> >::Supplier' [ 0 4 47]
'OT::hb_sanitize_context_t::check_struct<OT::MarkLigPosFormat1>' [ 0 4 27]
'OT::hb_lazy_table_loader_t<OT::MATH>::init' [ 0 4 38]
'OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_GlyphLoader_CheckPoints' [ 0]
'ps_parser_load_field' [ 0]
'compare_uni_maps' [ 0]
'Round_Down_To_Grid' [ 0]
'OT::SubstLookup::lookup_type_is_reverse' [ 0 4 17]
'hb_unicode_script_nil' [ 0]
'OT::ExtensionFormat1<OT::ExtensionPos>' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>' [ 0 4]
'_hb_ot_complex_shaper_use' [ 0]
'OT::CastP<OT::head, const void *>' [ 0 4]
'FT_List_Iterator' [ 0]
'hb_set_invert' [ 0]
'af_deva_script_class' [ 0]
'OT::ClassDefFormat1::add_class<hb_set_t>' [ 0 4 21]
'FT_Glyph_Format' [ 0]
'af_limb_script_class' [ 0]
'tt_face_load_hmtx' [ 0]
'OT::Coverage::Iter::get_coverage' [ 0 4 14 20]
'OT::hb_sanitize_context_t::check_struct<OT::HintingDevice>' [ 0 4 27]
'Cr_z_crc_fold_512to32' [ 0]
'psh_glyph_find_blue_points' [ 0]
'cr_png_get_cHRM_XYZ' [ 0]
'hb_ot_tag_from_language' [ 0]
'hb_get_subtables_context_t::apply_to<OT::SinglePosFormat1>' [ 0 28]
'T1_Set_Var_Design' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 107]
'cr_png_set_interlace_handling' [ 0]
'OT::ChainContext::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 18]
'TT_GlyphZoneRec_' [ 0]
'OT::LOffsetTo<OT::CmapSubtable>' [ 0 4]
'inflate_flush' [ 0]
'OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 63]
'gray_conic_to' [ 0]
'afm_parser_read_int' [ 0]
'hb_buffer_set_content_type' [ 0]
'OT::StructAtOffset<OT::SegmentMaps>' [ 0 4]
'FT_GlyphDict_NameIndexFunc' [ 0]
'OT::hb_lazy_loader_t<OT::glyf::accelerator_t>::operator->' [ 0 4 47]
'PS_Parser_FuncsRec' [ 0]
'lang_compare_first_component' [ 0]
'OT::MathKernInfoRecord::sanitize' [ 0 4 24]
'hb_ot_layout_lookup_accelerator_t::may_have' [ 0 35]
'OT::operator+<const OT::FeatureTableSubstitution *, OT::IntType<unsigned int, 4>, OT::Feature>' [ 0 4]
'OT::OpenTypeTable' [ 0 4]
'OT::ArrayOf<OT::MathKernInfoRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 70]
'OT::RecordListOf<OT::Script>' [ 0 4]
'OT::MarkBasePos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 17]
'OT::MarkLigPos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 16]
'PS_Mask' [ 0]
'cr_png_gamma_16bit_correct' [ 0]
'FT_Size_Metrics' [ 0]
'FT_GZipFileRec_' [ 0]
'CF2_GlyphPathRec' [ 0]
'OT::OffsetTo<OT::BaseCoord, OT::IntType<unsigned short, 2> >' [ 0 4]
'T1_Face' [ 0]
'FT_Service_KerningRec_' [ 0]
'PS_Dimension' [ 0]
'ARRAY_LENGTH<unsigned int, 11>' [ 0]
'png_flush_ptr' [ 0]
'compose_indic' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'Ins_NEQ' [ 0]
'psh_compute_dir' [ 0]
'cr_png_do_encode_alpha' [ 0]
'FT_Activate_Size' [ 0]
'FT_CMap_ClassRec_' [ 0]
'cf2_stack_pushFixed' [ 0]
'AF_WritingSystem_ApplyHintsFunc' [ 0]
'Ins_OR' [ 0]
'hb_ft_get_glyph_v_advance' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 78]
'compare_kern_pairs' [ 0]
'cr_png_formatted_warning' [ 0]
'data_create_use' [ 0]
'reorder' [ 0]
'OT::CastP<OT::VariationStore, const void *>' [ 0 4]
'OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 65]
'gray_move_to' [ 0]
'tt_name_ascii_from_other' [ 0]
'OT::ArrayOf<OT::MathValueRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Null<OT::head>' [ 0 4]
'OT::CastP<OT::AnchorMatrix, const void *>' [ 0 4]
'OT::Sanitizer<OT::MATH>::lock_instance' [ 0 4 25]
'hb_buffer_t::deallocate_var' [ 0 13]
'_deserialize_json_trans_keys' [ 0]
'gz_zero' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'shift_elements' [ 0]
'hb_object_set_user_data<hb_font_t>' [ 0]
'tt_cmap10_char_next' [ 0]
'destroy_size' [ 0]
'FT_Get_TrueType_Engine_Type' [ 0]
'hb_font_t::add_glyph_h_origin' [ 0 11]
'FT_Slot_InternalRec_' [ 0]
'ft_stroker_process_corner' [ 0]
'OT::avar' [ 0 4]
'CFF_AxisCoords' [ 0]
'thai_pua_shape::RD_mappings' [ 0 16]
'FT_Get_Sfnt_Table' [ 0]
'ft_black_done' [ 0]
'OT::StructAfter<OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::Null<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> > >' [ 0 4]
'FT_Module_Destructor' [ 0]
'FT_SpanFunc' [ 0]
'ps_check_extra_glyph_name' [ 0]
'ps_parser_init' [ 0]
'OT::CastP<OT::DeltaSetIndexMap, const void *>' [ 0 4]
'OT::ChainRule::would_apply' [ 0 4 15]
'uInt' [ 0]
'GX_DeltaSetIdxMapRec' [ 0]
'hb_buffer_t::output_info' [ 0 13]
'cr_png_sRGB_base' [ 0]
'cff_index_done' [ 0]
'OT::StructAtOffset<OT::OffsetListOf<OT::PosLookup> >' [ 0 4]
'OT::maxpV1Tail' [ 0 4]
't1_service_glyph_dict' [ 0]
'hb_font_set_parent' [ 0]
'af_cyrl_pcap_style_class' [ 0]
'cr_png_set_text_compression_strategy' [ 0]
'TT_Get_CVT_Func' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 108]
'cr_png_read_push_finish_row' [ 0]
'base_position_t' [ 0]
'OT::CastP<OT::IndexSubtable, const void *>' [ 0 4]
'hb_set_t::next_range' [ 0 10]
'cr_png_init_io' [ 0]
'hb_unicode_eastasian_width_nil' [ 0]
'OT::SingleSubst::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 17]
'OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 67]
'hb_unicode_decompose_func_t' [ 0]
'png_unpremultiply' [ 0]
'TT_GraphicsState' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 78]
'TT_CodeRange_Tag_' [ 0]
'hb_shape_list_shapers::nil_shaper_list' [ 0 23]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'Ins_DEPTH' [ 0]
'OT::collect_glyph' [ 0 4]
'OT::SingleSubstFormat2::apply' [ 0 4 24]
'gray_convert_glyph_inner' [ 0]
'TT_Postscript' [ 0]
'CID_Loader_' [ 0]
'cf2_hintmask_init' [ 0]
'cff_vstore_done' [ 0]
'cr_png_push_have_end' [ 0]
'cf2_stack_clear' [ 0]
'afm_stream_read_string' [ 0]
'hb_object_is_inert<hb_buffer_t>' [ 0]
'deflateStateCheck' [ 0]
'af_latin_metrics_init' [ 0]
'OT::CastP<OT::hmtxvmtx<OT::vmtx, OT::vhea>, const void *>' [ 0 4]
'OT::InstanceRecord' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 63]
'arabic_fallback_shape' [ 0]
'AF_StyleMetricsRec_' [ 0]
'U_FAILURE' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::find<hb_user_data_array_t::hb_user_data_item_t>' [ 0 69]
'__mode_t' [ 0]
'cr_png_set_gray_to_rgb' [ 0]
'Ins_RS' [ 0]
'gz_write' [ 0]
'ps_mask_table_alloc' [ 0]
'OT::operator+<const OT::MultipleSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Sequence>' [ 0 4]
'PS_FontExtraRec' [ 0]
'OT::ChainRuleSet::apply' [ 0 4 18]
'OT::ChainRuleSet' [ 0 4]
'OT::vmtx' [ 0 4]
'OT::AlternateSubstFormat1::would_apply' [ 0 4 27]
'__gid_t' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::set_mask' [ 0 4 27 38]
'TT_Postscript_' [ 0]
'af_khmr_nonbase_uniranges' [ 0]
'Pop_Push_Count' [ 0]
'cf2_getScaleAndHintFlag' [ 0]
'hb_font_get_glyph_contour_point_func_t' [ 0]
'hb_object_init<hb_set_t>' [ 0]
'data_create_indic' [ 0]
'tt_check_trickyness_family' [ 0]
'cr_png_warning_parameter_unsigned' [ 0]
'_hb_face_for_data_closure_destroy' [ 0]
'CF2_HintMoveRec_' [ 0]
'TT_GlyphZone' [ 0]
'AF_SegmentRec' [ 0]
'cr_png_write_IHDR' [ 0]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4> >' [ 0 4]
'woff_open_font' [ 0]
'Round_To_Grid' [ 0]
'pshufb_shf_table' [ 0]
'OT::hmtx' [ 0 4]
'png_structrp' [ 0]
'PSH_Blue_TableRec_' [ 0]
'OT::hb_closure_context_t::dispatch<OT::ChainContextFormat1>' [ 0 4 26]
'static_d_desc' [ 0]
'hb_buffer_t::reverse_range' [ 0 13]
'OT::SubstLookup::dispatch_recurse_func<OT::hb_collect_glyphs_context_t>' [ 0 4 17]
'OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 82]
'af_latin_get_standard_widths' [ 0]
'OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 71]
'OT::operator+<const OT::ContextFormat2 *, OT::IntType<unsigned short, 2>, OT::ClassDef>' [ 0 4]
'FT_ListRec_' [ 0]
't1_decoder_done' [ 0]
'OT::ValueFormat::get_device' [ 0 4 17]
'cr_png_handle_tEXt' [ 0]
'af_sylo_nonbase_uniranges' [ 0]
'khmer_position_t' [ 0]
'OT::StructAtOffset<OT::MarkArray>' [ 0 4]
'ft_glyphslot_preset_bitmap' [ 0]
'cf2_hint_isLocked' [ 0]
'tt_cmap4_char_next' [ 0]
'cff_fd_select_get' [ 0]
'gray_convert_glyph' [ 0]
'hb_auto_array_t<hb_get_subtables_context_t::hb_applicable_t>::hb_auto_array_t' [ 0 62]
'hb_font_t::em_fscale' [ 0 11]
'AF_CJKMetricsRec_' [ 0]
'_indic_syllable_machine_trans_keys' [ 0]
'OT::operator+<const OT::ConditionSet *, OT::IntType<unsigned int, 4>, OT::Condition>' [ 0 4]
'FT_GlyphSlotRec_' [ 0]
'tt_cmap8_char_index' [ 0]
'ft_set_current_renderer' [ 0]
'OT::Null<OT::PairSet>' [ 0 4]
'OT::Offset16' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'FT_Error' [ 0]
'psh_glyph_find_strong_points' [ 0]
'T2_Hints_OpenFunc' [ 0]
'gen_codes' [ 0]
'sfnt_id' [ 0]
'af_sund_dflt_style_class' [ 0]
'OT::hb_closure_context_t::dispatch<OT::ChainContextFormat2>' [ 0 4 26]
'ft_raster1_transform' [ 0]
'OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t::fini' [ 0 4 34 49]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::SinglePosFormat1>' [ 0 4 227]
'OT::CastR<OT::OffsetArrayOf<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >, OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::hb_sanitize_context_t::init' [ 0 4 27]
'Ins_CINDEX' [ 0]
'T1_Hints_FuncsRec_' [ 0]
'Cr_z_gzopen' [ 0]
'af_buhd_script_class' [ 0]
'OT::HintingDevice::sanitize' [ 0 4 19]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::CastR<OT::PosLookup, OT::Lookup>' [ 0 4]
'OT::CursivePos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 16]
'af_knda_nonbase_uniranges' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::may_have' [ 0 47]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'T2_Hints_CounterFunc' [ 0]
'OT::KernSubTable' [ 0 4]
'hb_unicode_funcs_set_eastasian_width_func' [ 0]
'OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 63]
'sfnt_module_class' [ 0]
'OT::GDEF::get_glyphs_in_class' [ 0 4 10]
'hb_face_for_data_closure_t' [ 0]
'FT_Hashnode' [ 0]
'OT::StructAtOffset<OT::IndexSubtableArray>' [ 0 4]
'OT::context_would_apply_lookup' [ 0 4]
'OT::Null<OT::MathConstants>' [ 0 4]
'cff_parse_real' [ 0]
'_hb_glyph_info_is_zwj' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::SinglePosFormat2>' [ 0 4 227]
'OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_MulDiv_No_Round' [ 0]
'hb_object_init<hb_buffer_t>' [ 0]
'FT_Raster_Funcs_' [ 0]
'hb_blob_t' [ 0]
'OT::MATH::get_math_glyph_info' [ 0 4 10]
'FT_Hash_CompareFunc' [ 0]
'CFF_FDSelect' [ 0]
'hb_buffer_diff_flags_t' [ 0]
'cr_png_set_gAMA' [ 0]
'png_int_32' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::Extension<OT::ExtensionPos>, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'OT::OffsetTo<OT::BaseTagList, OT::IntType<unsigned short, 2> >' [ 0 4]
'cff_cmap_encoding_init' [ 0]
'long int' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::init' [ 0 47]
'Cr_z_free_func' [ 0]
'ft_mem_dup' [ 0]
'FT_Outline' [ 0]
'cr_png_get_rows' [ 0]
'OT::hb_ot_apply_context_t::replace_glyph_with_ligature' [ 0 4 27]
'OT::CastP<OT::TableRecord, const void *>' [ 0 4]
'FT_StrokeBorderRec' [ 0]
'FT_Driver_Class' [ 0]
'OT::Offset32' [ 0 4]
'OT::Sanitizer<OT::HVARVVAR>::lock_instance' [ 0 4 29]
'cr_png_get_cHRM_fixed' [ 0]
'OT::CursivePosFormat1::collect_glyphs' [ 0 4 23]
'OT::would_match_input' [ 0 4]
'OT::CastP<OT::fvar, char>' [ 0 4]
'hb_shape_plan_proposal_t' [ 0]
'OT::Null<OT::LigGlyph>' [ 0 4]
'OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 62]
'FT_List_Insert' [ 0]
'OT::ContextFormat2' [ 0 4]
'OT::Sanitizer<OT::loca>::sanitize' [ 0 4 25]
'OT::CastP<OT::LigGlyph, const void *>' [ 0 4]
'hb_font_get_glyph_v_origin' [ 0]
'FT_Incremental_FuncsRec_' [ 0]
'hb_unicode_funcs_get_empty' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'TT_Load_Glyph' [ 0]
'OT::MarkBasePosFormat1::collect_glyphs' [ 0 4 24]
'hb_face_get_table_tags' [ 0]
'OT::ContextFormat3' [ 0 4]
'af_cjk_metrics_scale_dim' [ 0]
'GX_ItemVarDataRec_' [ 0]
'tt_cmap10_class_rec' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::init' [ 0 48]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>' [ 0]
'OT::CastP<OT::HVARVVAR, const void *>' [ 0 4]
'ps_builder_funcs' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::resize' [ 0 54]
'OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader>::operator[]' [ 0 4 51]
'_hb_glyph_info_unhide' [ 0]
'OT::intersects_glyph' [ 0 4]
'FT_List' [ 0]
'OT::LOffsetTo<OT::IndexSubtableArray>' [ 0 4]
'OT::ChainContext::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 18]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> >::sanitize<const OT::Record<OT::Feature>::sanitize_closure_t *>' [ 0 4 60]
'OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 65]
'Ins_WS' [ 0]
'OT::hb_ot_apply_context_t::stop_sublookup_iteration' [ 0 4 27]
'ps_parser_skip_spaces' [ 0]
'cr_png_get_current_row_number' [ 0]
'OT::Context' [ 0 4]
'OT::StructAtOffset<OT::Ligature>' [ 0 4]
'arabic_features' [ 0]
'Cr_z_gzclose_w' [ 0]
'FT_Raccess_Get_HeaderInfo' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::pop' [ 0 69]
'png_const_color_8p' [ 0]
'OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 73]
'afm_parser_skip_section' [ 0]
'cid_slot_init' [ 0]
'OT::LookupFlag' [ 0 4]
'OT::CaretValue::sanitize' [ 0 4 16]
'cff_decoder_funcs' [ 0]
'FT_Outline_GetInsideBorder' [ 0]
'OT::Script::get_lang_sys' [ 0 4 12]
'OT::chain_context_apply_lookup' [ 0 4]
'TT_Get_Metrics_Func' [ 0]
'OT::StructAtOffset<OT::ClassDef>' [ 0 4]
'cff_cmap_unicode_init' [ 0]
'psh_hint_table_record_mask' [ 0]
'warning_callback' [ 0]
'OT::LigatureSubst::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 19]
'hb_font_t::get_glyph_extents_for_origin' [ 0 11]
'cff_charset_compute_cids' [ 0]
'myanmar_category_t' [ 0]
'FT_Angle_Diff' [ 0]
'cr_png_destroy_write_struct' [ 0]
'hb_version_string' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'cr_png_icc_check_tag_table' [ 0]
'PSH_AlignmentRec_' [ 0]
'metrics_header_fields' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathConstants>' [ 0 4 27]
'OT::SubstLookup::serialize_single' [ 0 4 17]
'cr_png_init_read_transformations' [ 0]
'AF_LatinMetricsRec_' [ 0]
'apply_backward' [ 0]
'arabic_action_t' [ 0]
'hb_font_get_glyph_h_advance' [ 0]
'inflate_trees_dynamic' [ 0]
'PSHinter_Interface_' [ 0]
'T1_Set_MM_Design' [ 0]
'ft_stroke_border_grow' [ 0]
'af_avst_nonbase_uniranges' [ 0]
'OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> >' [ 0 4]
'png_byte' [ 0]
'tt_delta_shift' [ 0]
'OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 78]
'png_default_error' [ 0]
'FT_GlyphLoader_CreateExtra' [ 0]
'CID_Size' [ 0]
'png_image_write_memory' [ 0]
'af_kali_script_class' [ 0]
'cff_builder_init' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 107]
'ARRAY_LENGTH<char, 64>' [ 0]
'_hb_popcount<unsigned long long>' [ 0]
'T1_Get_Private_Dict' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'OT::CastP<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'Cr_z_adler32_combine' [ 0]
'OT::MarkLigPos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 16]
'OT::SubstLookup::serialize_ligature' [ 0 4 17]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::MathGlyphAssembly' [ 0 4]
'PSH_Zone' [ 0]
'TT_Get_PS_Name_Func' [ 0]
'ft_smooth_lcdv_renderer_class' [ 0]
'ft_outline_glyph_copy' [ 0]
'Line_Down' [ 0]
'cf2_interpT2CharString' [ 0]
'OT::Value' [ 0 4]
'hb_unicode_decompose' [ 0]
'Cpal_' [ 0]
'hb_ot_map_t::get_global_mask' [ 0 13]
'ps_unicodes_char_index' [ 0]
'tt_property_get' [ 0]
'OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 75]
'OT::ArrayOf<OT::MathGlyphVariantRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 74]
'OT::operator+<const OT::AnchorMatrix *, OT::IntType<unsigned short, 2>, OT::Anchor>' [ 0 4]
'OT::OffsetListOf<OT::Lookup>::operator[]' [ 0 4 30]
'hb_ot_layout_get_glyphs_in_class' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 107]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'cr_png_safecat' [ 0]
'cf2_hintmask_getMaskPtr' [ 0]
'af_latn_c2sc_style_class' [ 0]
'FT_Glyph_DoneFunc' [ 0]
'AFM_KernPairRec_' [ 0]
'cf2_stack_init' [ 0]
'cid_init_loader' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 106]
'DelOld' [ 0]
'af_cjk_align_edge_points' [ 0]
'OT::ChainContext::dispatch<OT::hb_closure_context_t>' [ 0 4 18]
'TT_Done_Context' [ 0]
'OT::OffsetArrayOf<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'tt_service_gx_multi_masters' [ 0]
'OT::LigatureSubst::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 19]
'OT::ArrayOf<OT::EntryExitRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'tt_cmap4_class_rec' [ 0]
'Direct_Move' [ 0]
'OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 91]
'OT::Null<OT::CmapSubtable>' [ 0 4]
'OT::StructAtOffset<OT::OffsetTable>' [ 0 4]
'OT::ChainContextFormat2::get_coverage' [ 0 4 25]
'OT::hmtxvmtx<OT::vmtx, OT::vhea>::sanitize' [ 0 4 34]
'OT::SubstLookup::is_reverse' [ 0 4 17]
'OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 65]
'hb_user_data_array_t::get' [ 0 22]
'psh_glyph_interpolate_other_points' [ 0]
'OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 67]
'cr_png_handle_IEND' [ 0]
'_iup_worker_interpolate' [ 0]
'af_hani_dflt_style_class' [ 0]
'Ins_ROLL' [ 0]
'_hb_blob_destroy_user_data' [ 0]
'OT::MathGlyphInfo' [ 0 4]
'OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 171]
'cff_builder_close_contour' [ 0]
'af_arab_dflt_style_class' [ 0]
'tt_face_load_fpgm' [ 0]
'FT_Gzip_Uncompress' [ 0]
'cr_png_set_strip_16' [ 0]
'OT::Null<OT::ChainRule>' [ 0 4]
'OT::RecordListOf<OT::Script>::operator[]' [ 0 4 30]
'thai_below_state_t' [ 0]
'hb_unicode_funcs_create' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'Ins_ROFF' [ 0]
'Cr_z_gzprintf' [ 0]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 29]
'FT_Outline_New' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::Extension<OT::ExtensionPos>, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'af_grek_sups_style_class' [ 0]
'hb_ft_font_get_load_flags' [ 0]
'OT::cmap::accelerator_t::fini' [ 0 4 10 25]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::hb_add_coverage_context_t' [ 0 4 227]
'OT::hb_collect_glyphs_context_t::stop_sublookup_iteration' [ 0 4 33]
'OT::operator+<const OT::ChainContextFormat2 *, OT::IntType<unsigned short, 2>, OT::ClassDef>' [ 0 4]
'tt_apply_mvar' [ 0]
'parse_bool' [ 0]
'af_tfng_nonbase_uniranges' [ 0]
'af_glyph_hints_align_edge_points' [ 0]
'hb_ot_map_t::apply<GSUBProxy>' [ 0 13]
'Ins_JROF' [ 0]
'Function_Sweep_Step' [ 0]
'_hb_ot_shape_normalize' [ 0]
'png_pass_start' [ 0]
'OT::SubstLookup::dispatch_recurse_func<OT::hb_closure_context_t>' [ 0 4 17]
'cff_get_var_blend' [ 0]
'tt_cmap12_get_info' [ 0]
'ps_get_macintosh_name' [ 0]
'cf2_stack_free' [ 0]
'af_saur_nonbase_uniranges' [ 0]
'FT_Orientation' [ 0]
'hb_set_t::page_for_insert' [ 0 10]
'FT_ValidationLevel' [ 0]
'cff_get_cid_from_glyph_index' [ 0]
'FT_Bitmap_Embolden' [ 0]
'FT_Get_Kerning' [ 0]
'ps_hints_stem' [ 0]
'OT::MultipleSubst::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 19]
'af_tibt_dflt_style_class' [ 0]
'OT::LangSys::get_feature_indexes' [ 0 4 13]
'OT::StructAtOffset<OT::AxisRecord>' [ 0 4]
'tt_sbit_decoder_load_png' [ 0]
'OT::Null<OT::OffsetListOf<OT::AnchorMatrix> >' [ 0 4]
'cr_png_set_text_compression_method' [ 0]
'hb_set_t::resize' [ 0 10]
'OT::OffsetListOf<OT::PosLookup>::sanitize' [ 0 4 33]
'hb_buffer_t::assert_var' [ 0 13]
'CF2_HintMask' [ 0]
'OT::CmapSubtable::sanitize' [ 0 4 18]
'OT::Device::get_y_delta' [ 0 4 12]
'huft_build' [ 0]
'CF2_ArrStackRec' [ 0]
'af_osge_uniranges' [ 0]
'OT::hmtxvmtx<OT::hmtx, OT::hhea>' [ 0 4]
'OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 60]
't1_make_subfont' [ 0]
'OT::StructAtOffset<OT::Coverage>' [ 0 4]
'parse_expansion_factor' [ 0]
'cr_png_get_cHRM_XYZ_fixed' [ 0]
'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 66]
'cr_png_set_background_fixed' [ 0]
'hb_glyph_flags_t' [ 0]
'hb_blob_make_immutable' [ 0]
'T1_Get_MM_Blend' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::SinglePos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'_hb_glyph_info_ligated_internal' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat2>' [ 0 4 27]
'OT::Coverage::add_coverage<hb_set_t>' [ 0 4 14]
'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >' [ 0 4]
'lenfix' [ 0]
'hb_ot_layout_t' [ 0]
'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::get_size' [ 0 4 54]
'hb_buffer_t::clear' [ 0 13]
'FT_Stream_GetUOffset' [ 0]
'OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 66]
'OT::StructAtOffset<OT::MarkGlyphSets>' [ 0 4]
'FT_Glyph_InitFunc' [ 0]
'Ins_SCANTYPE' [ 0]
'TT_Loader_EndGlyphFunc' [ 0]
'hb_language_get_default::default_language' [ 0 25]
'hb_blob_destroy' [ 0]
'hb_blob_copy_writable_or_fail' [ 0]
'hb_ot_layout_lookup_would_substitute_fast' [ 0]
'_hb_popcount<hb_glyph_flags_t>' [ 0]
'D50_nCIEXYZ' [ 0]
'Ins_SROUND' [ 0]
'Cr_z_zError' [ 0]
'OT::TTCHeader::get_face' [ 0 4 15]
'fvar_fields' [ 0]
'hb_ot_shaper_font_data_ensure' [ 0]
'OT::StructAtOffset<OT::CmapSubtable>' [ 0 4]
'FT_Face_GetVariantsOfChar' [ 0]
'hb_shape_plan_create' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 107]
'cff_font_done' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::PairPos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'OT::Sanitizer<OT::hmtxvmtx<OT::vmtx, OT::vhea> >::Sanitizer' [ 0 4 50]
'OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat3>' [ 0 4 27]
'tt_cmap14_char_var_isdefault' [ 0]
'error_callback' [ 0]
'FT_Request_Metrics' [ 0]
'cr_png_read_sig' [ 0]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'cr_png_write_chunk_data' [ 0]
'TT_Gasp_' [ 0]
'hb_ot_layout_lookup_accelerator_t::fini' [ 0 35]
'OT::CastP<OT::PosLookupSubTable, const void *>' [ 0 4]
'Ins_DELTAC' [ 0]
'hb_ot_layout_lookup_accelerator_t' [ 0]
'OT::Offset<OT::IntType<unsigned int, 4> >' [ 0 4]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::qsort' [ 0 64]
'cff_index_get_name' [ 0]
'hb_set_t::page_t::get_min' [ 0 10 18]
'OT::CastR<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> >, OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'Ins_DELTAP' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize<OT::PairSet::sanitize_closure_t *>' [ 0 4 106]
'AF_StyleMetrics' [ 0]
'Load_SBit_Png' [ 0]
'_khmer_syllable_machine_eof_trans' [ 0]
'cf2_stack_count' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathTopAccentAttachment>' [ 0 4 27]
'cf2_doBlend' [ 0]
'psh_hint_table_done' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat1>' [ 0 4 33]
'hb_direction_t' [ 0]
'OT::maxp::get_num_glyphs' [ 0 4 10]
'os2_fields' [ 0]
'AFM_ValueRec_' [ 0]
'hb_buffer_scratch_flags_t' [ 0]
'af_lisu_dflt_style_class' [ 0]
'OT::ValueFormat::sanitize_values' [ 0 4 17]
'af_shaper_get_coverage' [ 0]
'OT::hb_collect_glyphs_context_t::set_recurse_func' [ 0 4 33]
'cr_png_do_unshift' [ 0]
'hb_glib_unicode_compose' [ 0]
'TT_SBit_MetricsRec_' [ 0]
'_deserialize_text_key_spans' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize<unsigned int>' [ 0 4 111]
'OT::StructAfter<OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cr_png_get_cHRM' [ 0]
'hb_get_subtables_context_t::dispatch<OT::MarkBasePosFormat1>' [ 0 28]
'Cr_z_gz_header_s' [ 0]
'cff_blend_clear' [ 0]
'MIN<OT::IntType<short, 2> >' [ 0]
'af_knda_script_class' [ 0]
'FT_Stream_ReadAt' [ 0]
'af_mymr_nonbase_uniranges' [ 0]
'OT::CastP<OT::OpenTypeFontFile, const void *>' [ 0 4]
't1_decrypt' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::SinglePosFormat2>' [ 0 4 33]
'InsNew' [ 0]
'cf2_getGlyphOutline' [ 0]
'cff_services' [ 0]
'OT::OffsetListOf<OT::AnchorMatrix>' [ 0 4]
'_hb_ft_font_create' [ 0]
'FT_Face_DoneFunc' [ 0]
'TT_LangTagRec_' [ 0]
'TT_GraphicsState_' [ 0]
'af_copt_dflt_style_class' [ 0]
'OT::AnchorMatrix::get_anchor' [ 0 4 18]
'hb_set_t::init' [ 0 10]
'OT::Null<OT::Device>' [ 0 4]
'Write_CVT' [ 0]
'OT::ReverseChainSingleSubstFormat1::would_apply' [ 0 4 36]
'Cr_z_crc_fold_copy' [ 0]
'Cr_z_gzeof' [ 0]
'gray_TRaster_' [ 0]
'FT_Size_RequestFunc' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::ContextFormat1>' [ 0 4 27]
'af_latb_nonbase_uniranges' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'_use_syllable_machine_key_spans' [ 0]
'cff_charset_done' [ 0]
'gsize' [ 0]
'T1_Get_Track_Kerning' [ 0]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 56]
'TArea' [ 0]
'ft_validator_error' [ 0]
'af_hani_nonbase_uniranges' [ 0]
'arabic_fallback_plan_t' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'CFF_Internal' [ 0]
'T2_Hints_FuncsRec_' [ 0]
'png_FILE_p' [ 0]
'OT::CastP<OT::avar, const void *>' [ 0 4]
'FT_Stroker_Rewind' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'Horizontal_Sweep_Drop' [ 0]
'OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 66]
'ft_stroker_inside' [ 0]
'hb_object_reference<hb_font_t>' [ 0]
'FT_Glyph_Format_' [ 0]
'OT::hb_lazy_loader_t<OT::CBDT::accelerator_t>::operator->' [ 0 4 47]
'OT::ExtensionFormat1<OT::ExtensionPos>::get_subtable<OT::PosLookupSubTable>' [ 0 4 40]
'ps_dimension_done' [ 0]
'cff_builder_add_point1' [ 0]
'tt_glyphzone_new' [ 0]
'FT_StreamDesc' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'FT_GlyphLoader' [ 0]
'af_grek_script_class' [ 0]
'OT::Sanitizer<OT::kern>::sanitize' [ 0 4 25]
'k1k2' [ 0]
'FT_Get_Char_Index' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::ContextFormat2>' [ 0 4 27]
'gz_read' [ 0]
'OT::BEInt<int, 4>::operator int' [ 0 4 19]
'TT_SBit_Scale' [ 0]
'remove_style' [ 0]
'Ins_FLOOR' [ 0]
'hb_unicode_decompose_compatibility_func_t' [ 0]
'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 78]
'initial_reordering_syllable' [ 0]
'tt_cmap2_char_index' [ 0]
'ft_sid_names' [ 0]
'Move_Zp2_Point' [ 0]
'af_mlym_script_class' [ 0]
'cr_png_get_rowbytes' [ 0]
'Ins_SFVTPV' [ 0]
'round' [ 0]
'cff_parse_multiple_master' [ 0]
'FT_Size_SelectFunc' [ 0]
'CFF_Decoder_FuncsRec_' [ 0]
'af_latin_sort_blue' [ 0]
'TPixmap' [ 0]
'cf2_arrstack_getBuffer' [ 0]
'PS_Mask_TableRec' [ 0]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 12]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'psh_hint_overlap' [ 0]
'af_latn_script_class' [ 0]
'hb_ot_map_builder_t::add_lookups' [ 0 21]
'parse_tag' [ 0]
'tt_face_load_pclt' [ 0]
'hb_vector_size_t<unsigned long long, 128>::operator&' [ 0 43]
'CFF_EncodingRec' [ 0]
'CF2_Matrix_' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 105]
'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'FT_Face' [ 0]
'_hb_glyph_info_get_lig_comp' [ 0]
'FT_Module_Class' [ 0]
'OT::GDEF::get_var_store' [ 0 4 10]
'hb_set_t::page_t::init0' [ 0 10 18]
'hb_set_t::page_t::init1' [ 0 10 18]
'FT_CMap_VariantCharListFunc' [ 0]
'__uint32_t' [ 0]
'_hb_debug_msg<0>' [ 0]
'OT::MarkLigPos' [ 0 4]
'hb_prealloced_array_t<unsigned int, 1>::resize' [ 0 40]
'OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 71]
'tt_face_load_os2' [ 0]
'T1_Encoding' [ 0]
'OT::RecordListOf<OT::Feature>::sanitize' [ 0 4 31]
'pshinter_module_class' [ 0]
'hb_buffer_add_latin1' [ 0]
'OT::VarData' [ 0 4]
'OT::_hea<OT::vhea>' [ 0 4]
'_myanmar_syllable_machine_key_spans' [ 0]
'TT_Interpreter' [ 0]
'tt_cmap6_validate' [ 0]
'CF2_Callback_Type' [ 0]
'hb_vector_size_t<unsigned long long, 128>::operator^' [ 0 43]
'__int8_t' [ 0]
'cr_png_crc_finish' [ 0]
'FT_Service_TrueTypeEngine' [ 0]
'Ins_ALIGNRP' [ 0]
'OT::VariationStore::sanitize' [ 0 4 20]
'hb_buffer_add_utf16' [ 0]
'FT_Service_PsCMapsRec_' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::Lookup>' [ 0 4 28]
'OT::CastP<OT::glyf, const void *>' [ 0 4]
'cr_png_combine_row' [ 0]
'FT_Face_InitFunc' [ 0]
'cff_driver_init' [ 0]
'OT::ArrayOf<OT::MathGlyphPartRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::IntType<unsigned short, 2>, unsigned short>' [ 0 4 27]
'TOUPPER' [ 0]
'ps_mask_table_set_bits' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 4 30]
'TT_Loader_GotoTableFunc' [ 0]
'hb_vector_size_t<unsigned long long, 128>::operator~' [ 0 43]
'FT_Incremental_MetricsRec' [ 0]
'af_khmr_script_class' [ 0]
'OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> >' [ 0 4]
'CFF_Decoder_Zone_' [ 0]
'TT_Get_Name_ID_Func' [ 0]
'hb_font_funcs_t' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'OT::Lookup::dispatch<OT::PosLookupSubTable, OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 12]
'__libcpp_strchr' [ 0]
'OT::Sanitizer<OT::GPOS>::Sanitizer' [ 0 4 25]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'TT_Init_Glyph_Loading' [ 0]
'cr_png_get_mem_ptr' [ 0]
'cf2_hintmap_build' [ 0]
'PSH_Contour' [ 0]
't1_cmap_std_char_next' [ 0]
'hb_ot_map_builder_t::add_gsub_pause' [ 0 21]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::resize' [ 0 64]
'hb_font_t::get_nominal_glyph' [ 0 11]
'OT::reverse_cursive_minor_offset' [ 0 4]
'png_read_filter_row_paeth_1byte_pixel' [ 0]
'AF_WritingSystem_InitMetricsFunc' [ 0]
'_x86_check_features' [ 0]
'Round_To_Double_Grid' [ 0]
'TT_Get_VMetrics' [ 0]
'parse_space' [ 0]
'OT::ArrayOf<OT::IntType<unsigned int, 3>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 76]
'OT::hmtxvmtx<OT::vmtx, OT::vhea>' [ 0 4]
'FT_Bool' [ 0]
'OT::IntType<unsigned short, 2>' [ 0 4]
'FT_Service_BDFRec_' [ 0]
'hb_ot_shape_planner_t::compile' [ 0 23]
'hb_font_funcs_set_glyph_from_name_func' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'tt_cmap2_char_next' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::PairPos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'png_const_textp' [ 0]
'OT::CastP<OT::Ligature, const void *>' [ 0 4]
'cff_cmap_unicode_char_index' [ 0]
'T1_Decoder_FuncsRec_' [ 0]
'tt_cmap12_init' [ 0]
'cff_done_blend' [ 0]
'Cr_z_inflateSetDictionary' [ 0]
'hb_ot_color_palette_flags_t' [ 0]
'af_latn_titl_style_class' [ 0]
'OT::hb_collect_glyphs_context_t::recurse' [ 0 4 33]
'deflate_fast' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 109]
'cr_png_read_finish_IDAT' [ 0]
'hb_buffer_add_utf32' [ 0]
'override_features_myanmar' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_set_previous_range' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::os2>' [ 0 4 27]
'OT::operator+<const OT::GDEF *, OT::IntType<unsigned short, 2>, OT::LigCaretList>' [ 0 4]
'OT::Sanitizer<OT::hmtxvmtx<OT::vmtx, OT::vhea> >' [ 0 4]
'cf2_builder_moveTo' [ 0]
'_hb_ot_layout_destroy' [ 0]
'PS_HasGlyphNamesFunc' [ 0]
'trick_names' [ 0]
'OT::ligate_input' [ 0 4]
'ft_var_to_design' [ 0]
'CFF_VStoreRec_' [ 0]
'OT::glyf::accelerator_t::get_offsets' [ 0 4 10 25]
'OT::hb_sanitize_context_t::check_struct<OT::post>' [ 0 4 27]
'OT::MultipleSubst::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 19]
'OT::BaseCoordFormat1' [ 0 4]
'OT::BaseCoordFormat2' [ 0 4]
'hb_font_get_variation_glyph_nil' [ 0]
'Ins_RDTG' [ 0]
't1cid_driver_class' [ 0]
'TProfile_' [ 0]
'T1_LoaderRec' [ 0]
'OT::Sanitizer<OT::GSUB>::sanitize' [ 0 4 25]
'cf2_hint_isPairTop' [ 0]
'parse_feature_indices' [ 0]
'FT_Pixel_Mode_' [ 0]
'OT::BaseLangSysRecord' [ 0 4]
'sfnt_service_ps_name' [ 0]
'FT_Done_Memory' [ 0]
'FT_Atan2' [ 0]
'OT::MarkLigPos::dispatch<hb_get_subtables_context_t>' [ 0 4 16]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::no_dispatch_return_value' [ 0 4 78]
'hb_buffer_diff' [ 0]
'hb_object_create<hb_font_t>' [ 0]
'hb_ot_layout_position_finish_advances' [ 0]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::init' [ 0 72]
'OT::ContextFormat1::collect_glyphs' [ 0 4 20]
'OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'gray_set_cell' [ 0]
'cf2_hintmask_setCounts' [ 0]
'cr_png_set_iCCP' [ 0]
'OT::hb_lazy_loader_t<OT::kern::accelerator_t>::init' [ 0 4 47]
'hb_unicode_funcs_t::script' [ 0 20]
'Cr_z_voidp' [ 0]
'ft_gzip_file_fill_input' [ 0]
'hb_ot_layout_table_find_feature_variations' [ 0]
'GX_VarRegionRec_' [ 0]
'OT::SubstLookup::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 17]
'OT::VariationDevice::get_x_delta' [ 0 4 21]
'OT::PartFlags' [ 0 4]
'hb_buffer_get_user_data' [ 0]
'Cr_z_inflateGetHeader' [ 0]
'FT_Face_InternalRec_' [ 0]
'hb_unicode_decompose_compatibility' [ 0]
'AF_StyleMetricsRec' [ 0]
'OT::IntType<unsigned char, 1>' [ 0 4]
'postprocess_glyphs_arabic' [ 0]
'OT::IndexArray' [ 0 4]
'FT_Realloc_Func' [ 0]
'ft_outline_glyph_class' [ 0]
'cf2_hintmask_isValid' [ 0]
'af_geok_script_class' [ 0]
'T1_Decoder_Callback' [ 0]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_closure_context_t>' [ 0 4 35]
'_hb_glyph_info_flip_joiners' [ 0]
'FT_LcdFilter' [ 0]
'cff_builder_add_point' [ 0]
'cr_png_read_data' [ 0]
'cf2_initLocalRegionBuffer' [ 0]
'FT_Sfnt_Tag' [ 0]
'ft_var_to_normalized' [ 0]
'hb_font_funcs_set_variation_glyph_func' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'hb_buffer_t::reverse' [ 0 13]
'gray_split_cubic' [ 0]
'FT_Frame_Field' [ 0]
'png_voidp' [ 0]
'FT_Outline_Funcs' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 82]
'hb_buffer_t::prev' [ 0 13]
'hb_reference_count_t::inc' [ 0 22]
'OT::Null<OT::Feature>' [ 0 4]
'OT::CoverageFormat2::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 21]
'OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 60]
'tt_sbit_decoder_load_byte_aligned' [ 0]
'TT_NameRec' [ 0]
'af_geor_nonbase_uniranges' [ 0]
'psh_blues_set_zones_0' [ 0]
'cr_png_get_rgb_to_gray_status' [ 0]
'T1_Driver_Done' [ 0]
'TSplitter' [ 0]
'cf2_glyphpath_curveTo' [ 0]
'IPos' [ 0]
'ps_hints_close' [ 0]
'OT::hb_ot_apply_context_t::check_glyph_property' [ 0 4 27]
'FT_Incremental_MetricsRec_' [ 0]
'cr_png_set_unknown_chunks' [ 0]
'OT::ChainContextFormat2::apply' [ 0 4 25]
'hb_unicode_funcs_make_immutable' [ 0]
'ruby_feature' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'parse_buildchar' [ 0]
'hb_object_is_inert<hb_font_funcs_t>' [ 0]
'OT::StructAfter<OT::IntType<unsigned char, 1>, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cff_get_interface' [ 0]
'hb_buffer_t::deallocate_var_all' [ 0 13]
'ps_hints_init' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::MarkBasePos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'OT::_hea<OT::hhea>' [ 0 4]
'OT::BitmapSizeTable' [ 0 4]
'OT::hb_serialize_context_t::extend_min<OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::Null<OT::MathGlyphAssembly>' [ 0 4]
'cr_png_do_expand_palette' [ 0]
'OT::GPOS::get_lookup' [ 0 4 10]
'OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'Draw_Sweep' [ 0]
'pshinter_get_globals_funcs' [ 0]
'af_tfng_dflt_style_class' [ 0]
'OT::PosLookup::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 15]
'OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Coverage::serialize' [ 0 4 14]
'OT::ArrayOf<OT::FeatMinMaxRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'ft_grays_raster' [ 0]
'FT_StreamRec' [ 0]
'OT::Sanitizer<OT::CBLC>' [ 0 4]
'CFF_Encoding' [ 0]
'normalize_glyphs_cluster' [ 0]
'T1_CMap_Classes' [ 0]
'TT_DriverRec_' [ 0]
'OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_font_get_var_coords_normalized' [ 0]
'int' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::head>' [ 0 4 27]
'OT::MarkBasePos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 17]
'OT::Supplier<OT::IntType<unsigned short, 2> >' [ 0 4]
'png_user_transform_ptr' [ 0]
'OT::Sanitizer<OT::hmtxvmtx<OT::vmtx, OT::vhea> >::sanitize' [ 0 4 50]
'OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 63]
'hb_set_t::del' [ 0 10]
'hb_font_t::get_glyph_h_origin_with_fallback' [ 0 11]
'OT::Null<OT::MathTopAccentAttachment>' [ 0 4]
'OT::hmtxvmtx<OT::hmtx, OT::hhea>::sanitize' [ 0 4 34]
'tt_check_trickyness' [ 0]
'hb_font_get_nominal_glyph' [ 0]
'PS_Unicodes' [ 0]
'png_XYZ_from_xy' [ 0]
'OT::UVSMapping' [ 0 4]
'ISSPACE' [ 0]
'OT::hb_lazy_table_loader_t<OT::CPAL>::init' [ 0 4 38]
'af_shaw_script_class' [ 0]
'OT::StructAtOffset<unsigned char>' [ 0 4]
'parse_uint32' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'FT_Get_X11_Font_Format' [ 0]
'tt_cmap6_get_info' [ 0]
'OT::GSUB::get_lookup' [ 0 4 10]
'hb_buffer_get_length' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'af_arab_nonbase_uniranges' [ 0]
'GX_DeltaSetIdxMap' [ 0]
'OT::ReverseChainSingleSubstFormat1::collect_glyphs' [ 0 4 36]
'TT_Set_SBit_Strike_Func' [ 0]
'hb_font_t::subtract_glyph_v_origin' [ 0 11]
'MAX<unsigned int>' [ 0]
'OT::StructAtOffset<OT::OffsetListOf<OT::AnchorMatrix> >' [ 0 4]
'__ino_t' [ 0]
'OT::CmapSubtableFormat14::sanitize' [ 0 4 26]
'af_osma_uniranges' [ 0]
'FT_DebugHook_Func' [ 0]
'Cr_z__tr_init' [ 0]
'OT::ConditionFormat1::sanitize' [ 0 4 22]
'af_services' [ 0]
'OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 71]
'png_unknown_chunkpp' [ 0]
'image_memory_flush' [ 0]
'Cr_z_gz_headerp' [ 0]
'OT::hb_sanitize_context_t::no_dispatch_return_value' [ 0 4 27]
'TTC_HeaderRec' [ 0]
'OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 62]
'af_armn_uniranges' [ 0]
'FT_Get_Var_Blend_Coordinates' [ 0]
'cpdist' [ 0]
'psh_blues_set_zones' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::IntType<short, 2> >' [ 0 4 27]
'OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 108]
'_hb_options_init' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 76]
'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 78]
'AF_EdgeRec_' [ 0]
'OT::hb_lazy_table_loader_t<AAT::trak>::fini' [ 0 4 39]
'OT::HintingDevice::get_delta' [ 0 4 19]
'hb_unicode_funcs_t::mirroring' [ 0 20]
'hb_utf16_t' [ 0]
'premultiply_data' [ 0]
'T1_CMapStdRec_' [ 0]
'OT::Sanitizer<OT::hmtxvmtx<OT::hmtx, OT::hhea> >' [ 0 4]
'Cr_z_inflateUndermine' [ 0]
'CF2_CallbackParamsRec_' [ 0]
'Cr_z__tr_flush_bits' [ 0]
'format1_names_msgstr_t' [ 0]
'AF_Coverage' [ 0]
'hb_object_get_user_data<hb_font_t>' [ 0]
'FT_SfntLangTag' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'TT_Load_Strike_Metrics_Func' [ 0]
'FT_Stroker_CubicTo' [ 0]
'png_info' [ 0]
'OT::ConditionSet' [ 0 4]
'ps_parser_load_field_table' [ 0]
'ft_outline_glyph_bbox' [ 0]
'Ins_SCFS' [ 0]
'OT::operator+<const OT::GSUBGPOS *, OT::IntType<unsigned int, 4>, OT::FeatureVariations>' [ 0 4]
'black_PRaster' [ 0]
'OT::ExtensionFormat1<OT::ExtensionPos>::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 40]
'common_features' [ 0]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::get_glyph' [ 0 4 57]
'OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 66]
'hb_glib_script_to_script' [ 0]
'ps_dimension_end' [ 0]
'T1_FaceRec_' [ 0]
'Round_Up_To_Grid' [ 0]
'OT::CastR<OT::SubstLookup, OT::Lookup>' [ 0 4]
'OT::hb_lazy_table_loader_t<AAT::kerx>::init' [ 0 4 39]
'OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader>' [ 0 4]
'ft_hash_num_insert' [ 0]
'_use_syllable_machine_to_state_actions' [ 0]
'cr_png_get_image_height' [ 0]
'tt_set_mm_blend' [ 0]
'FT_FaceRec_' [ 0]
'_myanmar_syllable_machine_eof_trans' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'ps_property_get' [ 0]
'hb_shape_plan_t' [ 0]
'hb_buffer_get_glyph_positions' [ 0]
'OT::ChainContextCollectGlyphsLookupContext' [ 0 4]
'hb_utf16_t::prev' [ 0 12]
'cr_png_chunk_error' [ 0]
'hb_ot_math_get_glyph_top_accent_attachment' [ 0]
'FT_Get_Var_Design_Func' [ 0]
'hb_font_t::get_font_v_extents' [ 0 11]
'png_color_8' [ 0]
'ft_var_readpackedpoints' [ 0]
'OT::SegmentMaps::map' [ 0 4 17]
'hb_shape_func_t' [ 0]
'png_const_uint_16pp' [ 0]
'Ins_SLOOP' [ 0]
'CFF_VarData' [ 0]
'cr_png_error' [ 0]
'ARRAY_LENGTH<hb_user_data_array_t::hb_user_data_item_t, 1>' [ 0]
'cr_png_set_filler' [ 0]
'Ins_ENDF' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> >' [ 0 4]
'cr_png_set_error_fn' [ 0]
'OT::CastP<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'FT_AutoHinter' [ 0]
'TT_Blend_Colr_Func' [ 0]
'OT::UVSMapping::cmp' [ 0 4 16]
'Ins_NEG' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::MarkLigPos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'TT_GaspRange' [ 0]
'PS_MaskRec' [ 0]
'ft_pos_abs' [ 0]
'ARRAY_LENGTH<OT::MathValueRecord, 51>' [ 0]
'PSH_Blue_ZoneRec_' [ 0]
'OT::Condition::evaluate' [ 0 4 15]
'hb_vector_size_t<unsigned long long, 128>::process<HbOpOr>' [ 0 43]
'_myanmar_syllable_machine_index_offsets' [ 0]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::push' [ 0 72]
'tt_done_blend' [ 0]
'ft_glyphslot_done' [ 0]
'png_structp' [ 0]
'af_cakm_nonbase_uniranges' [ 0]
'hb_object_get_user_data<hb_face_t>' [ 0]
'OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 59]
'if_then_else' [ 0]
'PSH_Dimension' [ 0]
'ulg' [ 0]
'OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_unicode_funcs_set_decompose_func' [ 0]
'OT::StructAtOffset<OT::IntType<unsigned short, 2> >' [ 0 4]
'cr_png_create_write_struct' [ 0]
'OT::FeatureTableSubstitutionRecord' [ 0 4]
'OT::SortedArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_ot_layout_position_finish_offsets' [ 0]
'ISALPHA' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_would_apply_context_t>' [ 0 4 42]
'ft_gray_for_premultiplied_srgb_bgra' [ 0]
'arabic_fallback_features' [ 0]
'FT_Service_PsFontName' [ 0]
'tt_face_load_cmap' [ 0]
'thai_below_state_machine' [ 0]
'af_mlym_nonbase_uniranges' [ 0]
'OT::GDEF' [ 0 4]
'FT_Open_Args_' [ 0]
'af_dummy_hints_init' [ 0]
'cr_png_set_compression_mem_level' [ 0]
'cf2_free_instance' [ 0]
'find_base_glyph_record' [ 0]
'OT::Null<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> > >' [ 0 4]
'TT_SBit_ScaleRec_' [ 0]
'OT::Null<OT::vhea>' [ 0 4]
'CF2_Blues' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ContextFormat2>' [ 0 28]
'T2_Hints_StemsFunc' [ 0]
'OT::F2DOT14' [ 0 4]
'af_khms_script_class' [ 0]
'hb_unicode_mirroring' [ 0]
't1_builder_funcs' [ 0]
'af_autofitter_interface' [ 0]
'OT::LOffsetTo<OT::FeatureTableSubstitution>' [ 0 4]
'_hb_bit_storage<unsigned int>::b' [ 0 31]
'cid_get_ros' [ 0]
'FT_F2Dot14' [ 0]
'af_latn_subs_style_class' [ 0]
'cr_png_push_read_sig' [ 0]
'T1_Hints' [ 0]
'tt_cmap0_char_next' [ 0]
'png_build_8bit_table' [ 0]
'hb_buffer_t::delete_glyph' [ 0 13]
'_hb_bit_storage<unsigned int>::S' [ 0 31]
'OT::LigatureSet::collect_glyphs' [ 0 4 17]
'deserialize_text_start' [ 0]
'hb_get_subtables_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 28]
'cff_charset_free_cids' [ 0]
'Cr_z_adler32_combine64' [ 0]
'OT::OffsetTable::get_table' [ 0 4 17]
'FT_Blend_Build_Vector_Func' [ 0]
'tt_cmap14_get_nondef_chars' [ 0]
'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 65]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 107]
'OT::fvar::find_axis' [ 0 4 10]
'hb_feature_to_string' [ 0]
'OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 62]
'OT::cmap::accelerator_t::get_nominal_glyph' [ 0 4 10 25]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'TT_Loader_ReadGlyphFunc' [ 0]
'OT::IntType<unsigned int, 3>::cmp<unsigned int>' [ 0 4 30]
'FT_SFNT_TableLoadFunc' [ 0]
'_hb_ot_complex_shaper_myanmar_old' [ 0]
'FT_New_Memory' [ 0]
'OT::CastP<OT::hmtxvmtx<OT::hmtx, OT::hhea>, const void *>' [ 0 4]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ChainContextFormat1>' [ 0 4 227]
'crc_mask2' [ 0]
'Short' [ 0]
'OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'PS_UniMap_' [ 0]
'tt_face_build_cmaps' [ 0]
'_IO_FILE' [ 0]
'record_stch' [ 0]
'AF_Script_UniRange' [ 0]
'_hb_buffer_deallocate_gsubgpos_vars' [ 0]
'OT::MathKern::sanitize' [ 0 4 14]
'Direct_Move_Orig' [ 0]
'cr_png_set_read_fn' [ 0]
'OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 66]
'OT::SmallGlyphMetrics' [ 0 4]
'OT::RangeRecord' [ 0 4]
'recategorize_combining_class' [ 0]
'OT::hb_serialize_context_t::start_embed<void>' [ 0 4 28]
'png_const_inforp' [ 0]
'hb_buffer_t::clear_positions' [ 0 13]
'FT_Get_MM_Blend_Coordinates' [ 0]
'hb_font_get_glyph_contour_point_for_origin' [ 0]
'TT_Name_ConvertFunc' [ 0]
'OT::Null<OT::Script>' [ 0 4]
'MAX<int>' [ 0]
'Split_Cubic' [ 0]
'hb_face_create' [ 0]
'TT_Load_Glyph_Header' [ 0]
'cr_png_get_sRGB' [ 0]
'hb_font_get_glyph_advance_func_t' [ 0]
'OT::StructAtOffset<OT::PairSet>' [ 0 4]
'CF2_BluesRec' [ 0]
'OT::CoverageFormat1::Iter::init' [ 0 4 21 27]
'hb_ot_complex_shaper_t' [ 0]
'png_const_fixed_point_p' [ 0]
'FT_List_Add' [ 0]
'OT::context_collect_glyphs_lookup' [ 0 4]
'ft_stroke_border_done' [ 0]
'hb_set_get_max' [ 0]
'PSH_BluesRec_' [ 0]
'hb_in_ranges<unsigned int>' [ 0]
'uLong' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat2>' [ 0 4 28]
'OT::hb_sanitize_context_t::check_struct<OT::MarkMarkPosFormat1>' [ 0 4 27]
'Cr_z_gzgetc_' [ 0]
'hb_font_get_extents_for_direction' [ 0]
'png_controlp' [ 0]
'hb_icu_unicode_general_category' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'FT_Incremental_FuncsRec' [ 0]
'all_shapers' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'ps_builder_done' [ 0]
'FT_ServiceDesc' [ 0]
'OT::hb_lazy_table_loader_t<OT::BASE>::init' [ 0 4 38]
'hb_tag_to_string' [ 0]
'FT_Service_PsCMapsRec' [ 0]
'ft_extra_glyph_names' [ 0]
'hash_lookup' [ 0]
'cid_hex_to_binary' [ 0]
'OT::hb_sanitize_context_t::hb_sanitize_context_t' [ 0 4 27]
'_get_math' [ 0]
'OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_ot_layout_lookup_accelerator_t::init<OT::SubstLookup>' [ 0 35]
'png_progressive_info_ptr' [ 0]
'hb_no_trace_t<const OT::Coverage &>' [ 0]
'png_color_16_struct' [ 0]
'cff_encoding_done' [ 0]
'uint32_t' [ 0]
'TT_SbitTableType_' [ 0]
'OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 71]
'OT::hb_sanitize_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 4 27]
'decompose_multi_char_cluster' [ 0]
'OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 66]
'OT::hb_sanitize_context_t::dispatch<OT::ContextFormat3>' [ 0 4 27]
'OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::ContextFormat2::collect_glyphs' [ 0 4 20]
'OT::CastP<OT::MathVariants, const void *>' [ 0 4]
'hb_buffer_add_utf<hb_utf8_t>' [ 0]
'CFF_Index' [ 0]
'FT_Outline_Funcs_' [ 0]
'OT::GSUBGPOS::find_variations_index' [ 0 4 14]
'Cr_z_inflateReset2' [ 0]
'tt_get_metrics_incr_overrides' [ 0]
'hb_codepoint_parse' [ 0]
'af_glag_nonbase_uniranges' [ 0]
'OT::CastP<OT::MathGlyphInfo, const void *>' [ 0 4]
'FT_Glyph_Class' [ 0]
'insert_string' [ 0]
'Cr_z_inflateEnd' [ 0]
'hb_utf8_t::next' [ 0 11]
'FT_Service_MultiMastersRec_' [ 0]
'TT_MulFix14_long_long' [ 0]
'sfnt_get_interface' [ 0]
'hb_font_set_var_coords_normalized' [ 0]
'OT::LigatureSubst::dispatch<hb_get_subtables_context_t>' [ 0 4 19]
'OT::LigatureSubstFormat1::collect_glyphs' [ 0 4 26]
'cff_subfont_done' [ 0]
'T1_BuilderRec_' [ 0]
'ft_bitmap_glyph_class' [ 0]
'FT_Get_Gasp' [ 0]
'OT::ArrayOf<OT::MathKernInfoRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_indic_get_categories' [ 0]
'cr_png_muldiv' [ 0]
'Cr_z_gzbuffer' [ 0]
'FT_Get_GlyphLayers' [ 0]
'apply_string<GSUBProxy>' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SinglePos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'static_dtree' [ 0]
'hb_stable_sort<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >' [ 0]
'lang_find_or_insert' [ 0]
'OT::BaseValues' [ 0 4]
'af_cyrl_script_class' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 66]
'hb_ot_layout_has_substitution' [ 0]
'OT::FeatureParamsCharacterVariants::sanitize' [ 0 4 36]
'Dual_Project' [ 0]
'OT::VarRegionList::sanitize' [ 0 4 19]
'png_image_read_colormapped' [ 0]
'T1_Get_Kerning' [ 0]
'cr_png_handle_sRGB' [ 0]
'OT::CaretValue' [ 0 4]
'is_ra' [ 0]
'af_mymr_dflt_style_class' [ 0]
'OT::ChainRule::apply' [ 0 4 15]
'AF_Blue_StringRec_' [ 0]
'OT::SBitLineMetrics' [ 0 4]
'TT_Get_Name_Func' [ 0]
'OT::cmap' [ 0 4]
'T1_Operator' [ 0]
'hash_str_compare' [ 0]
'TT_Face_GetKerningFunc' [ 0]
'OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >' [ 0 4]
'FT_Outline_CubicToFunc' [ 0]
'OT::ConditionFormat1' [ 0 4]
'af_lao_dflt_style_class' [ 0]
'OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 64]
'Cr_z_fill_window_sse' [ 0]
'ft_lcd_filter_fir' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'png_colorspacerp' [ 0]
'OT::PosLookup::is_reverse' [ 0 4 15]
'set_file_encoding' [ 0]
'OT::ArrayOf<OT::AxisValueMap, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 64]
'AF_Scaler' [ 0]
'bi_reverse' [ 0]
'OT::LigatureSubstFormat1::apply' [ 0 4 26]
't1_expert_encoding' [ 0]
'__int16_t' [ 0]
'indic_syllable_machine_start' [ 0]
'FT_Set_Var_Blend_Coordinates' [ 0]
'Bezier_Down' [ 0]
'get_joining_type' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 106]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'OT::LOffsetTo<OT::IndexSubtable>' [ 0 4]
'OT::StructAfter<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'hb_get_subtables_context_t::apply_to<OT::MultipleSubstFormat1>' [ 0 28]
'TT_Vary_Apply_Glyph_Deltas' [ 0]
'null_outline' [ 0]
'OT::RecordArrayOf<OT::LangSys>::get_tags' [ 0 4 32]
'FT_Renderer_RenderFunc' [ 0]
'OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_closure_context_t>' [ 0 4 12]
'OT::Null<OT::hhea>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::FeatureTableSubstitutionRecord>' [ 0 4 27]
'OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 64]
'cr_png_write_gAMA_fixed' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 111]
'cr_png_set_filter_heuristics_fixed' [ 0]
'MAX<OT::IntType<short, 2> >' [ 0]
'hb_font_t::add_glyph_origin_for_direction' [ 0 11]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'T1_CMapStd' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::is_horizontal' [ 0 4 55]
't1_services' [ 0]
'hb_set_symmetric_difference' [ 0]
'OT::Null<OT::glyf>' [ 0 4]
'_use_syllable_machine_trans_actions' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'BBox_Move_To' [ 0]
'af_lao_nonbase_uniranges' [ 0]
'TT_NameTableRec_' [ 0]
'OT::StructAfter<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4]
'GX_TupleIndexFlags_' [ 0]
'hb_ot_shape_zero_width_marks_type_t' [ 0]
'hb_unicode_general_category' [ 0]
'tt_face_load_prep' [ 0]
'hb_font_get_glyph_name_func_t' [ 0]
'cr_png_write_start_row' [ 0]
'OT::Sanitizer<OT::avar>' [ 0 4]
'ps_parser_to_int' [ 0]
'cr_png_write_finish_row' [ 0]
'FT_Stroker_LineCap_' [ 0]
'compose_khmer' [ 0]
'OT::SingleSubst::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 17]
'cr_png_set_read_status_fn' [ 0]
'OT::Null<OT::Lookup>' [ 0 4]
'Cr_z_intf' [ 0]
'OT::CoverageFormat2::Iter::get_glyph' [ 0 4 21 27]
'hb_object_get_user_data<hb_unicode_funcs_t>' [ 0]
'tt_size_reset_iterator' [ 0]
'af_cjk_metrics_init_widths' [ 0]
'hb_font_get_glyph_h_advance_nil' [ 0]
'tt_cmap0_class_rec' [ 0]
'af_property_get_face_globals' [ 0]
'OT::operator+<const OT::SingleSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'FT_Service_TrueTypeEngineRec' [ 0]
'hb_unicode_mirroring_func_t' [ 0]
'OT::CastP<OT::IndexSubtableArray, const void *>' [ 0 4]
'skip_spaces' [ 0]
'Cr_z_gzwrite' [ 0]
'ft_stroker_cap' [ 0]
'PSAux_ServiceRec' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::operator+<const OT::MathVariants *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'cff_service_metrics_variations' [ 0]
'OT::ContextFormat1::would_apply' [ 0 4 20]
'FT_CharMapRec_' [ 0]
'OT::SingleSubstFormat2::sanitize' [ 0 4 24]
'compute_glyph_metrics' [ 0]
'ft_realloc' [ 0]
'TT_GaspRec' [ 0]
'FT_GlyphSlot' [ 0]
'_hb_glyph_info_set_lig_props_for_component' [ 0]
'next_char' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Sanitizer<OT::GSUB>::lock_instance' [ 0 4 25]
'load3' [ 0]
'OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 59]
'FT_New_Size' [ 0]
'PS_Table' [ 0]
'fill_window' [ 0]
'OT::Supplier<OT::CmapSubtableLongGroup>' [ 0 4]
'OT::AlternateSubstFormat1' [ 0 4]
'FT_UnitVector_' [ 0]
'hb_buffer_serialize_format_t' [ 0]
'ft_extra_glyph_name_offsets' [ 0]
'cff_get_ps_name' [ 0]
'TTC_HeaderRec_' [ 0]
'ft_gzip_file_skip_output' [ 0]
'OT::KernAAT' [ 0 4]
'FT_Remove_Module' [ 0]
'AF_LoaderRec' [ 0]
'hb_utf32_t<true>::prev' [ 0 18]
'OT::CmapSubtableLongGroup' [ 0 4]
'OT::Sanitizer<OT::fvar>::Sanitizer' [ 0 4 25]
'ft_new_glyph' [ 0]
'hb_ot_get_glyph_h_advance' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 279]
'FT_Service_PsInfoRec_' [ 0]
'OT::Feature::get_lookup_indexes' [ 0 4 13]
'tt_cmap13_char_next' [ 0]
'tt_cmap14_variant_chars' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_closure_context_t>' [ 0 4 42]
'PSH_Globals_Funcs' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 104]
'cr_png_icc_check_length' [ 0]
'BDF_PropertyRec_' [ 0]
'_hb_ot_complex_shaper_thai' [ 0]
'OT::SubstLookup::get_subtable' [ 0 4 17]
'hb_shape_plan_plan' [ 0]
'convert_gamma_value' [ 0]
'Ins_NOT' [ 0]
'tt_loader_init' [ 0]
'cid_get_is_cid' [ 0]
'OT::Ligature::would_apply' [ 0 4 14]
'OT::Sequence::apply' [ 0 4 14]
'std::nullptr_t' [ 0 5]
'T1_Parse_Glyph' [ 0]
'parse_fd_array' [ 0]
'cr_png_do_write_interlace' [ 0]
'FT_Renderer_GetCBoxFunc' [ 0]
'cr_png_free_jmpbuf' [ 0]
'hb_shape_plan_coords_match' [ 0]
'af_cyrl_smcp_style_class' [ 0]
'AF_Direction' [ 0]
'FT_Service_MetricsVariationsRec_' [ 0]
'TT_SBit_Metrics' [ 0]
'FT_MulDiv' [ 0]
'hb_utf32_t<true>::strlen' [ 0 18]
'cr_png_get_user_height_max' [ 0]
'png_alloc_size_t' [ 0]
'hb_buffer_serialize_format_from_string' [ 0]
'tt_default_graphics_state' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathGlyphInfo>' [ 0 4 27]
'k5k0' [ 0]
'OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'ft_trig_arctan_table' [ 0]
'PS_Decoder_Zone' [ 0]
'cr_png_crc_read' [ 0]
'ps_table_funcs' [ 0]
'OT::Null<OT::Ligature>' [ 0 4]
'OT::hb_lazy_loader_t<OT::post::accelerator_t>::init' [ 0 4 47]
'OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'png_color_16p' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_List_Remove' [ 0]
'af_olck_uniranges' [ 0]
'cff_charset_cid_to_gindex' [ 0]
'OT::CastP<OT::EntryExitRecord, const void *>' [ 0 4]
'FT_CMapRec_' [ 0]
'FT_Attach_Stream' [ 0]
'Ins_RUTG' [ 0]
'OT::KernSubTableFormat2::get_kerning' [ 0 4 25]
'cr_png_get_y_offset_pixels' [ 0]
'SkipCode' [ 0]
'_hb_ctz<unsigned long long>' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::hb_closure_context_t::dispatch<OT::ChainContextFormat3>' [ 0 4 26]
'OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 65]
'thai_above_state_t' [ 0]
'af_latp_script_class' [ 0]
'OT::IntType<unsigned int, 4>::cmp<unsigned int>' [ 0 4 30]
'hb_font_get_glyph_extents_parent' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat1>' [ 0 4 27]
'png_write_destroy' [ 0]
'Current_Ratio' [ 0]
'CF2_FontRec_' [ 0]
'_deserialize_json_key_spans' [ 0]
'OT::match_backtrack' [ 0 4]
'af_kali_nonbase_uniranges' [ 0]
'OT::hb_dispatch_context_t<OT::hb_sanitize_context_t, bool, 0>' [ 0 4]
'hb_set_t::intersects' [ 0 10]
'data_create_khmer' [ 0]
'OT::MultipleSubst' [ 0 4]
'OT::post::accelerator_t::fini' [ 0 4 10 25]
'af_orkh_dflt_style_class' [ 0]
'zero_mark_width' [ 0]
'FT_Stream_ReadUOffset' [ 0]
'PSH_WidthsRec' [ 0]
'long unsigned int' [ 0]
'hb_unicode_funcs_set_user_data' [ 0]
'TT_RunIns' [ 0]
't2_hints_funcs_init' [ 0]
'sfnt_get_name_index' [ 0]
'FT_RSB_Adjust_Func' [ 0]
'hb_get_subtables_context_t::hb_applicable_t::apply' [ 0 28 45]
'FT_Frame_Op_' [ 0]
'parse_variation_value' [ 0]
'OT::BEInt<unsigned int, 4>::operator unsigned int' [ 0 4 28]
'OT::ContextClosureLookupContext' [ 0 4]
'AF_CJKAxis' [ 0]
'use_shape_plan_t' [ 0]
'PSH_Blue_Table' [ 0]
'OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'af_guru_uniranges' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::Record<OT::Script> >' [ 0 4 27]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>::finish' [ 0 52]
'FT_Attach_File' [ 0]
'OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 64]
'_hb_ctz<unsigned int>' [ 0]
'OT::ValueFormat::sanitize_value_devices' [ 0 4 17]
'return_t' [ 0]
'af_khms_uniranges' [ 0]
'OT::hb_ot_apply_context_t' [ 0 4]
'OT::Null<OT::MarkRecord>' [ 0 4]
'cr_png_write_chunk_start' [ 0]
'OT::SingleSubst::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 17]
'OT::StructAtOffset<OT::RecordListOf<OT::Feature> >' [ 0 4]
'T1_ParseState_' [ 0]
'cff_blend_check_vector' [ 0]
'cr_png_gamma_8bit_correct' [ 0]
'hb_object_init<hb_unicode_funcs_t>' [ 0]
'OT::MathValueRecord::sanitize' [ 0 4 21]
'OT::Sanitizer<OT::fvar>' [ 0 4]
'OT::BEInt<unsigned short, 2>' [ 0 4]
'hb_font_get_glyph_v_kerning_nil' [ 0]
'OT::CastP<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'preprocess_text_hangul' [ 0]
'hash_num_lookup' [ 0]
'MIN<float>' [ 0]
'OT::operator+<const OT::MultipleSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'TOLOWER' [ 0]
'OT::operator+<const OT::MathItalicsCorrectionInfo *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::MathVariants::get_glyph_parts' [ 0 4 18]
'OT::Sanitizer<OT::os2>::sanitize' [ 0 4 24]
'hb_object_destroy<hb_set_t>' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat3>' [ 0 4 27]
'scientific_inferiors_coverage' [ 0]
'CFF_Builder_FuncsRec_' [ 0]
'OT::CBLC' [ 0 4]
'OT::CastP<OT::FeatureParamsSize, const void *>' [ 0 4]
'__dev_t' [ 0]
'OT::Null<OT::CBDT>' [ 0 4]
'OT::SingleSubst::dispatch<OT::hb_sanitize_context_t>' [ 0 4 17]
'OT::KernTable<OT::KernAAT>::thiz' [ 0 4 28]
'OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'_hb_glyph_info_is_unicode_space' [ 0]
'Ins_DEBUG' [ 0]
'hb_font_set_funcs_data' [ 0]
'OT::IndexSubtableFormat1' [ 0 4]
'fvar_axis_' [ 0]
'OT::IndexSubtableFormat3' [ 0 4]
'thai_pua_shape::SL_mappings' [ 0 16]
'ft_hash_num_init' [ 0]
'png_row_infop' [ 0]
'cid_get_cid_from_glyph_index' [ 0]
'FT_Hash_LookupFunc' [ 0]
'cr_png_set_text_2' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::Extension<OT::ExtensionSubst>, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'PS_FontInfo' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 28]
'ft_corner_is_flat' [ 0]
'png_setup_avg_row' [ 0]
'ft_var_get_value_pointer' [ 0]
'afm_parse_kern_pairs' [ 0]
'ft_smooth_render_lcd' [ 0]
'tt_cmap13_init' [ 0]
'OT::operator+<const OT::ChainContextFormat1 *, OT::IntType<unsigned short, 2>, OT::ChainRuleSet>' [ 0 4]
'LangTag' [ 0]
'FT_Get_PS_Font_Private' [ 0]
'OT::Supplier<unsigned int>::Supplier' [ 0 4 28]
'OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t::fini' [ 0 4 34 49]
'load_post_names' [ 0]
'cr_png_get_error_ptr' [ 0]
'OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 60]
'float' [ 0]
'hb_no_trace_t<const _hb_void_t *>' [ 0]
'OT::ClassDefFormat2::sanitize' [ 0 4 21]
'png_progressive_end_ptr' [ 0]
'set_indic_properties' [ 0]
'hb_feature_from_string' [ 0]
'OT::hb_ot_apply_context_t::replace_glyph' [ 0 4 27]
'tt_cmap12_next' [ 0]
'hb_stable_sort<OT::IntType<unsigned short, 2>, unsigned int>' [ 0]
'TT_ExecContext' [ 0]
'FT_Face_GetAdvancesFunc' [ 0]
'parse_uint' [ 0]
'png_fixed_point' [ 0]
'hb_font_get_glyph_h_kerning_func_t' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'cr_png_set_text_compression_mem_level' [ 0]
'TT_SBit_LineMetricsRec_' [ 0]
'hb_prealloced_array_t<unsigned int, 16>' [ 0]
'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 66]
'OT::ChainContextApplyLookupContext' [ 0 4]
'cff_builder_add_contour' [ 0]
'cf2_setError' [ 0]
'OT::kern::accelerator_t::fini' [ 0 4 10 25]
'hb_set_t::has' [ 0 10]
'hb_buffer_guess_segment_properties' [ 0]
'OT::Null<OT::MathVariants>' [ 0 4]
'af_sort_pos' [ 0]
'FT_Size_Request_Type_' [ 0]
'OT::CastP<OT::glyf, char>' [ 0 4]
'OT::operator+<const OT::AttachList *, OT::IntType<unsigned short, 2>, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'FT_GlyphLoader_Reset' [ 0]
'OT::HintingDevice::get_x_delta' [ 0 4 19]
'sfnt_open_font' [ 0]
'OT::Sanitizer<OT::glyf>::Sanitizer' [ 0 4 25]
'OT::hb_lazy_table_loader_t<OT::avar>' [ 0 4]
'OT::hb_ot_apply_context_t::set_auto_zwj' [ 0 4 27]
'OT::AlternateSubstFormat1::sanitize' [ 0 4 27]
'OT::ArrayOf<OT::AxisValueMap, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 64]
'tt_cmap14_get_def_chars' [ 0]
'hb_font_get_font_h_extents_parent' [ 0]
'PS_Unicode_ValueFunc' [ 0]
'AF_CJKAxisRec' [ 0]
'T1_Size_Request' [ 0]
'Convert_Glyph' [ 0]
'PS_Hints' [ 0]
'OT::AlternateSubst::dispatch<OT::hb_closure_context_t>' [ 0 4 20]
'black_TBand_' [ 0]
'psh_glyph_done' [ 0]
't1_builder_close_contour' [ 0]
'hb_unicode_eastasian_width_func_t' [ 0]
'Cr_z_deflateGetDictionary' [ 0]
'FT_Stroker_New' [ 0]
'OT::SingleSubstFormat1::apply' [ 0 4 24]
'OT::OffsetArrayOf<OT::ChainRule, OT::IntType<unsigned short, 2> >' [ 0 4]
'tt_face_get_metrics' [ 0]
'hb_ot_get_glyph_extents' [ 0]
'OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 59]
'uint64_t' [ 0]
'af_nkoo_uniranges' [ 0]
'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >::sanitize<unsigned int>' [ 0 4 65]
'cr_png_do_gamma' [ 0]
'OT::AlternateSubstFormat1::apply' [ 0 4 27]
'tt_cmap13_class_rec' [ 0]
'AF_Script_UniRangeRec_' [ 0]
'timespec' [ 0]
'OT::operator+<const OT::GDEF *, OT::IntType<unsigned short, 2>, OT::ClassDef>' [ 0 4]
'compress_block' [ 0]
'Ins_NPUSHB' [ 0]
'T1_Builder_FuncsRec_' [ 0]
'FT_Stroker_BeginSubPath' [ 0]
'af_avst_uniranges' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'OT::hb_sanitize_context_t::check_struct<OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 27]
'Cr_z_deflateBound' [ 0]
'OT::AlternateSubstFormat1::closure' [ 0 4 27]
'af_cjk_hints_compute_segments' [ 0]
'Ins_NPUSHW' [ 0]
'hb_unicode_combining_class_func_t' [ 0]
'cff_index_access_element' [ 0]
'cr_png_get_bit_depth' [ 0]
'cr_png_default_flush' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::set_lookup_props' [ 0 4 27 38]
'AF_GlyphHintsRec' [ 0]
'OT::fvar::get_axis_infos' [ 0 4 10]
'cr_png_default_read_data' [ 0]
'af_sund_uniranges' [ 0]
'cr_png_set_compression_strategy' [ 0]
'OT::operator+<const OT::LigCaretList *, OT::IntType<unsigned short, 2>, OT::LigGlyph>' [ 0 4]
'OT::operator+<const OT::KernSubTableFormat2 *, OT::IntType<unsigned short, 2>, OT::KernClassTable>' [ 0 4]
'T1_Decoder' [ 0]
'parse_encoding' [ 0]
'hb_buffer_cluster_level_t' [ 0]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>' [ 0]
'FT_Load_Glyph' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::SingleSubstFormat2>' [ 0 4 227]
'Ins_S45ROUND' [ 0]
'T1_Decoder_Funcs' [ 0]
'hb_font_get_glyph_v_advance_func_t' [ 0]
'hb_ot_shape_setup_masks_fraction' [ 0]
'psaux_module_class' [ 0]
'OT::IntType<unsigned int, 4>::cmp<OT::Tag>' [ 0 4 30]
'OT::CastP<OT::OffsetListOf<OT::AnchorMatrix>, const void *>' [ 0 4]
'cf2_getLanguageGroup' [ 0]
'OT::IntType<unsigned int, 3>' [ 0 4]
'FT_Service_SFNT_Table' [ 0]
'OT::MathKern::sanitize_math_value_records' [ 0 4 14]
'OT::CastP<OT::loca, const void *>' [ 0 4]
'OT::SubstLookup' [ 0 4]
'Cr_z_zlibCompileFlags' [ 0]
'ft_stroke_border_cubicto' [ 0]
'afm_stream_skip_spaces' [ 0]
'_hb_popcount<unsigned int>' [ 0]
'FT_Render_Mode_' [ 0]
't1_ps_has_glyph_names' [ 0]
'parse_feature_value_prefix' [ 0]
'CF2_StackNumber_' [ 0]
'hb_buffer_content_type_t' [ 0]
'cff_service_get_cmap_info' [ 0]
'OT::TableRecord' [ 0 4]
'OT::UFWORD' [ 0 4]
'inflateReset' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'OT::Null<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cf2_arrstack_clear' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 106]
'Ins_GETINFO' [ 0]
'Vertical_Sweep_Init' [ 0]
'hb_object_trace<hb_buffer_t>' [ 0]
'flush_pending' [ 0]
'OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >::lsearch<OT::EncodingRecord>' [ 0 4 66]
'OT::GDEF::get_glyph_class' [ 0 4 10]
'OT::IntType<unsigned int, 4>::operator unsigned int' [ 0 4 30]
'cr_png_write_tEXt' [ 0]
'OT::Null<OT::MathKern>' [ 0 4]
'OT::_NullLangSys' [ 0 4]
't1_ps_get_font_private' [ 0]
'af_cans_uniranges' [ 0]
'OT::ClassDefFormat2' [ 0 4]
'collect_features_indic' [ 0]
'OT::IntType<unsigned int, 4>' [ 0 4]
'FT_Set_Char_Size' [ 0]
'OT::StructAtOffset<OT::VarRegionList>' [ 0 4]
'hb_font_get_glyph_name_parent' [ 0]
'T1_Builder_Close_Contour_Func' [ 0]
'FT_MM_Var_' [ 0]
'indic_configs' [ 0]
'cff_builder_funcs' [ 0]
'af_grek_sinf_style_class' [ 0]
'OT::OffsetArrayOf<OT::BaseCoord, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_synthesize_glyph_classes' [ 0]
'Cr_z_gzoffset64' [ 0]
'ColrCpal_' [ 0]
'ft_module_get_service' [ 0]
'hb_ot_shape_collect_features' [ 0]
'OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 67]
'ARRAY_LENGTH<ligature_set_t::ligature_pairs_t, 4>' [ 0]
'cr_png_set_crc_action' [ 0]
'FT_GlyphLoader_Add' [ 0]
'FT_Stream_GetUShort' [ 0]
'af_cyrl_nonbase_uniranges' [ 0]
'skip_char' [ 0]
'OT::operator+<const OT::MarkLigPosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'FT_Stream' [ 0]
'OT::Supplier<unsigned int>::operator+=' [ 0 4 28]
'hb_font_t::has_glyph' [ 0 11]
'OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >' [ 0 4]
'FT_Service_PropertiesRec' [ 0]
'tt_encodings' [ 0]
'decode_gamma' [ 0]
'FT_Service_CIDRec_' [ 0]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::replace_or_insert<hb_user_data_array_t::hb_user_data_item_t>' [ 0 74]
'OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 63]
'GX_AxisCoords' [ 0]
'OT::OffsetTo<OT::MinMax, OT::IntType<unsigned short, 2> >' [ 0 4]
'parse_subrs' [ 0]
'check_location' [ 0]
'hb_font_get_variation_glyph_trampoline' [ 0]
'cff_size_select' [ 0]
'af_tavt_script_class' [ 0]
'FT_Library_SetLcdFilter' [ 0]
'hb_user_data_array_t::hb_user_data_item_t::finish' [ 0 22 43]
'OT::intersects_func_t' [ 0 4]
'OT::CaretValueFormat3::sanitize' [ 0 4 23]
'OT::CastP<OT::Feature, const void *>' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'af_taml_script_class' [ 0]
'cf2_getStdHW' [ 0]
'hb_object_reference<hb_shape_plan_t>' [ 0]
'OT::ContextFormat2::would_apply' [ 0 4 20]
'hb_blob_create' [ 0]
'send_all_trees' [ 0]
'static_tree_desc_s' [ 0]
'OT::CBLC::find_table' [ 0 4 10]
'PS_Blend' [ 0]
'tt_cmap14_char_variants' [ 0]
'FT_Get_Sfnt_Name_Count' [ 0]
'Cr_z_gzgetc' [ 0]
'hb_font_t::get_glyph_contour_point_for_origin' [ 0 11]
'ft_gzip_stream_io' [ 0]
'cff_decoder_init' [ 0]
'cr_png_read_filter_row_paeth3_sse2' [ 0]
'hb_latin1_t::strlen' [ 0 13]
'FT_Get_Sfnt_LangTag' [ 0]
'FT_Service_PsFontNameRec' [ 0]
'hb_font_funcs_destroy' [ 0]
'Cr_z_gzgets' [ 0]
'scripts' [ 0]
'CF2_BlueRec_' [ 0]
'Colr' [ 0]
'OT::GDEF::mark_set_covers' [ 0 4 10]
'PSH_DimensionRec' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::CoverageFormat1>' [ 0 4 28]
'OT::operator+<const OT::cmap *, OT::IntType<unsigned int, 4>, OT::CmapSubtable>' [ 0 4]
'FT_CMap_VariantListFunc' [ 0]
'inflate_blocks_state' [ 0]
'OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'Get_Kerning' [ 0]
'hb_ot_mirror_chars' [ 0]
'OT::chain_context_closure_lookup' [ 0 4]
'OT::CastP<OT::GSUB, const void *>' [ 0 4]
'hb_font_get_glyph_kerning_func_t' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 108]
'OT::SortedArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::Null<OT::AnchorMatrix>' [ 0 4]
'ft_hash_str_lookup' [ 0]
'TT_HoriHeader' [ 0]
'OT::operator+<const OT::SingleSubstFormat2 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'cr_png_image_error' [ 0]
'CFF_SubFontRec' [ 0]
'hb_buffer_t::clear_output' [ 0 13]
'hb_unicode_funcs_t::combining_class' [ 0 20]
'ft_stroke_border_close' [ 0]
'OT::CastP<OT::Anchor, const void *>' [ 0 4]
'OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> >' [ 0 4]
'inflate_huft' [ 0]
'png_malloc_array_checked' [ 0]
'OT::Extension<OT::ExtensionPos>::dispatch<hb_get_subtables_context_t>' [ 0 4 33]
'hb_font_is_immutable' [ 0]
'af_lisu_script_class' [ 0]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>::resize' [ 0 61]
'OT::MarkMarkPos' [ 0 4]
'afm_parse_track_kern' [ 0]
'OT::MathGlyphInfo::is_extended_shape' [ 0 4 19]
'OT::Null<OT::ClassDef>' [ 0 4]
'OT::hb_lazy_loader_t<OT::post::accelerator_t>::get' [ 0 4 47]
'OT::PosLookup' [ 0 4]
'ft_var_apply_tuple' [ 0]
'ligature_set_t' [ 0]
'OT::Sanitizer<OT::GPOS>' [ 0 4]
'insert_string_c' [ 0]
'OT::CastP<OT::MathGlyphConstruction, const void *>' [ 0 4]
'PS_Hint_TableRec' [ 0]
'update_consonant_positions' [ 0]
'OT::ExtensionSubst::is_reverse' [ 0 4 20]
'OT::GDEF::get_glyph_props' [ 0 4 10]
'cf2_checkTransform' [ 0]
'inflate' [ 0]
'hb_mutex_t::lock' [ 0 12]
'lext' [ 0]
'ft_stroke_border_get_counts' [ 0]
'_next_syllable' [ 0]
'Cr_z_z_errmsg' [ 0]
'OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 70]
'remove_subset_prefix' [ 0]
'png_init_filter_functions' [ 0]
'cf2_setGlyphWidth' [ 0]
'OT::Null<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> > >' [ 0 4]
'border' [ 0]
'cid_read_subrs' [ 0]
'FT_Set_Named_Instance' [ 0]
'autofit_module_class' [ 0]
'cff_strcpy' [ 0]
'get_gsubgpos_table' [ 0]
'serialize_formats' [ 0]
'OT::hb_lazy_table_loader_t<AAT::morx>' [ 0 4]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::finish' [ 0 74]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'ft_stroke_border_arcto' [ 0]
'OT::OffsetTo<OT::UnsizedArrayOf<OT::LayerRecord>, OT::IntType<unsigned int, 4> >' [ 0 4]
'TT_VertHeader' [ 0]
'ft_stroker_arcto' [ 0]
'SFNT_HeaderRec_' [ 0]
'FT_GlyphLoaderRec_' [ 0]
'OT::DeviceHeader' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::no_dispatch_return_value' [ 0 4 83]
'TT_DefArray' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::init' [ 0 47]
'af_property_get' [ 0]
'hb_blob_get_user_data' [ 0]
'psh_dimension_quantize_len' [ 0]
'cr_png_get_pixel_aspect_ratio' [ 0]
'OT::ArrayOf<OT::MarkRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 62]
'OT::CoverageFormat2::Iter::next' [ 0 4 21 27]
'compare_combining_class' [ 0]
'hb_object_is_valid<hb_set_t>' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 108]
'OT::CastP<OT::maxp, const void *>' [ 0 4]
'FT_Cos' [ 0]
'af_none_script_class' [ 0]
'FT_Load_Private_Dict_Func' [ 0]
'static_shapers' [ 0]
'Ins_MPPEM' [ 0]
'hb_ot_shape_setup_masks' [ 0]
'_deserialize_json_indicies' [ 0]
'bl_order' [ 0]
'OT::CoverageFormat1::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 21]
'af_grek_nonbase_uniranges' [ 0]
'OT::CoverageFormat1::Iter::get_coverage' [ 0 4 21 27]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'Cr_z_gzdirect' [ 0]
'OT::operator+<const OT::LigatureSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'FT_UInt' [ 0]
'OT::ChainContext::dispatch<OT::hb_sanitize_context_t>' [ 0 4 18]
'af_glyph_hints_init' [ 0]
'hb_buffer_t::set_cluster' [ 0 13]
'ps_builder_add_contour' [ 0]
'OT::operator+<const OT::AlternateSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'FT_Kerning_Mode' [ 0]
'OT::Null<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> > >' [ 0 4]
'TPoint' [ 0]
'OT::StructAfter<OT::postV2Tail, OT::post>' [ 0 4]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::add_range' [ 0 47]
'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 63]
'cff_lookup_glyph_by_stdcharcode' [ 0]
'hb_buffer_reverse' [ 0]
'hb_ot_math_glyph_variant_t' [ 0]
'OT::Null<OT::Condition>' [ 0 4]
'OT::hb_collect_glyphs_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 4 33]
'cr_png_get_unknown_chunks' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::KernAAT::SubTableWrapper>' [ 0 4 27]
'PS_Parser_FuncsRec_' [ 0]
'OT::Sequence::sanitize' [ 0 4 14]
'hb_buffer_set_flags' [ 0]
'OT::CastP<OT::fvar, const void *>' [ 0 4]
'OT::EncodingRecord' [ 0 4]
'hb_get_subtables_context_t::apply_to<OT::PairPosFormat1>' [ 0 28]
'OT::Sanitizer<OT::HVARVVAR>::Sanitizer' [ 0 4 29]
'OT::GlyphID' [ 0 4]
'OT::StructAtOffset<OT::AnchorMatrix>' [ 0 4]
'psh_glyph_compute_inflections' [ 0]
'OT::HBUINT8' [ 0 4]
'cr_png_process_some_data' [ 0]
'OT::MathGlyphAssembly::get_parts' [ 0 4 23]
'tt_face_load_any' [ 0]
'hb_atomic_int_impl_t' [ 0]
'FT_List_Finalize' [ 0]
'BBox_Cubic_Check' [ 0]
'OT::MathKern::get_value' [ 0 4 14]
'OT::OffsetListOf<OT::PosLookup>' [ 0 4]
'hb_utf32_t<false>::prev' [ 0 19]
'cff_service_ps_info' [ 0]
'hb_ot_layout_table_find_script' [ 0]
'AF_WritingSystem_InitHintsFunc' [ 0]
'hb_icu_unicode_decompose' [ 0]
'Ins_MDAP' [ 0]
'PS_Dict_Keys_' [ 0]
'OT::Sanitizer<OT::hmtxvmtx<OT::hmtx, OT::hhea> >::sanitize' [ 0 4 50]
'OT::BEInt<unsigned short, 2>::operator unsigned short' [ 0 4 30]
'OT::Coverage::Iter::Iter' [ 0 4 14 20]
'cr_png_set_rgb_to_gray_fixed' [ 0]
'FT_Stroker_GetBorderCounts' [ 0]
'OT::Coverage::intersects_coverage' [ 0 4 14]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>' [ 0 4]
'OT::Tag' [ 0 4]
'OT::hb_serialize_context_t::allocate_size<OT::LigatureSubstFormat1>' [ 0 4 28]
'OT::DeltaSetIndexMap::map' [ 0 4 22]
'png_image_write_main' [ 0]
'hb_ot_layout_language_get_feature_indexes' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'af_hani_uniranges' [ 0]
'hb_get_subtables_context_t::apply_to<OT::PairPosFormat2>' [ 0 28]
'hb_buffer_set_unicode_funcs' [ 0]
'Cr_z_gzfread' [ 0]
'ps_unicodes_char_next' [ 0]
'tt_face_vary_cvt' [ 0]
'hb_stable_sort<hb_glyph_info_t>' [ 0]
'OT::IndexArray::get_indexes' [ 0 4 16]
'cr_png_write_cHRM_fixed' [ 0]
'FT_Vector_Rotate' [ 0]
'cr_png_handle_gAMA' [ 0]
'OT::ArrayOf<OT::KernPair, OT::BinSearchHeader>' [ 0 4]
'OT::SubstLookup::dispatch<OT::hb_closure_context_t>' [ 0 4 17]
'OT::Null<OT::CaretValue>' [ 0 4]
'IUP_WorkerRec_' [ 0]
'af_face_globals_compute_style_coverage' [ 0]
'va_list' [ 0]
'AFM_FontInfoRec_' [ 0]
'OT::Null<OT::Sequence>' [ 0 4]
'PSH_Blue_ZoneRec' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 78]
'cff_index_get_sid_string' [ 0]
'disable_otl_hebrew' [ 0]
'cr_png_format_number' [ 0]
'OT::Sanitizer<OT::glyf>::sanitize' [ 0 4 25]
'hb_string_t::hb_string_t' [ 0 13]
'OT::_NullIndex' [ 0 4]
'hb_ot_substitute_complex' [ 0]
'tt_cmap2_validate' [ 0]
'CFF_GlyphSlot' [ 0]
'OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >::bsearch<unsigned int>' [ 0 4 76]
'OT::ArrayOf<OT::IntType<unsigned int, 3>, OT::IntType<unsigned short, 2> >' [ 0 4]
'afm_compare_kern_pairs' [ 0]
'TT_LoaderRec' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'FT_New_Face' [ 0]
'hb_vector_size_t<unsigned long long, 128>::operator|' [ 0 43]
'adler32_combine_' [ 0]
'OT::CastP<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'has_arabic_joining' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::VariationStore>' [ 0 4 27]
'GX_HVVarTableRec_' [ 0]
'output_char' [ 0]
'OT::operator+<const OT::MathKernInfo *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'Cr_z_out_func' [ 0]
'OT::CaretValue::get_caret_value' [ 0 4 16]
'af_goth_uniranges' [ 0]
'AF_AxisHints' [ 0]
'OT::operator+<const OT::SinglePosFormat2 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'tt_cmap4_init' [ 0]
'collect_features_tibetan' [ 0]
'translate_gamma_flags' [ 0]
'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 72]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'OT::MathGlyphConstruction::get_assembly' [ 0 4 27]
'hb_icu_unicode_eastasian_width' [ 0]
'af_cjk_align_linked_edge' [ 0]
'OT::LigatureSubstFormat1::serialize' [ 0 4 26]
'Cr_z_crc32_z' [ 0]
'OT::CmapSubtable::get_glyph' [ 0 4 18]
'af_cjk_metrics_init' [ 0]
'OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_would_apply_context_t' [ 0 4]
'codetype' [ 0]
'strchr' [ 0]
'OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 64]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::CastP<OT::post, char>' [ 0 4]
'tibetan_features' [ 0]
'psh_globals_funcs_init' [ 0]
'block_state' [ 0]
'Init_Context' [ 0]
'OT::hb_lazy_table_loader_t<OT::avar>::get' [ 0 4 38]
'OT::ChainRule::closure' [ 0 4 15]
'T1_Loader' [ 0]
'cr_png_gamma_significant' [ 0]
'FT_Service_TTGlyfRec_' [ 0]
'OT::SegmentMaps' [ 0 4]
'OT::hb_ot_apply_context_t::skipping_iterator_t::reset' [ 0 4 27 48]
'OT::ValueFormat::sanitize_values_stride_unsafe' [ 0 4 17]
'Ins_SCVTCI' [ 0]
'OT::LigGlyph::get_lig_carets' [ 0 4 14]
'OT::hb_ot_apply_context_t::matcher_t::set_syllable' [ 0 4 27 38]
'cr_png_create_read_struct' [ 0]
'tt_driver_class' [ 0]
'BDF_PropertyRec' [ 0]
't1_decoder_parse_metrics' [ 0]
'_hb_font_funcs_nil' [ 0]
'OT::Sanitizer<OT::GPOS>::sanitize' [ 0 4 25]
'hb_ot_map_t::apply<GPOSProxy>' [ 0 13]
'OT::Sanitizer<OT::head>::sanitize' [ 0 4 25]
'OT::ExtensionFormat1<OT::ExtensionPos>::get_type' [ 0 4 40]
'af_glag_script_class' [ 0]
'FT_Outline_Done_Internal' [ 0]
'FT_Stream_CloseFunc' [ 0]
'FT_Reference_Library' [ 0]
'tt_face_done' [ 0]
'OT::BinSearchHeader' [ 0 4]
'CFF_Field_Reader' [ 0]
'hb_set_next_range' [ 0]
'PS_Hinter_Module_Rec_' [ 0]
'cr_png_get_y_pixels_per_meter' [ 0]
'cr_png_set_write_status_fn' [ 0]
'OT::CastP<OT::PairValueRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'af_khms_nonbase_uniranges' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'T1_Hints_SetStem3Func' [ 0]
'hb_latin1_t' [ 0]
'hb_set_is_equal' [ 0]
'compress_func' [ 0]
'hb_set_t::is_empty' [ 0 10]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'af_bamu_nonbase_uniranges' [ 0]
'gray_split_conic' [ 0]
'OT::RecordArrayOf<OT::Feature>::get_tags' [ 0 4 32]
'ps_mask_table_merge' [ 0]
'af_cyrl_c2cp_style_class' [ 0]
'CFF_FontRec_' [ 0]
'cr_png_read_end' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::CursivePos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'CFF_FontRec' [ 0]
'OT::operator+<const OT::FeatureVariations *, OT::IntType<unsigned int, 4>, OT::FeatureTableSubstitution>' [ 0 4]
'hb_object_set_user_data<hb_font_funcs_t>' [ 0]
'tt_size_init_bytecode' [ 0]
'PSH_Blue_Zone' [ 0]
'PS_Hint_Table' [ 0]
'OT::BEInt<short, 2>::operator short' [ 0 4 21]
'PS_FreeGlyphNameFunc' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ChainContextFormat2>' [ 0 4 227]
'OT::MarkLigPos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 16]
'TT_Post_Names' [ 0]
'OT::operator+<const OT::Feature *, OT::IntType<unsigned short, 2>, OT::FeatureParams>' [ 0 4]
'afm_parser_read_vals' [ 0]
'hb_buffer_deserialize_glyphs' [ 0]
'_hb_ot_shaper_font_data_destroy' [ 0]
'OT::CastP<OT::IntType<short, 2>, const void *>' [ 0 4]
'hb_ot_map_builder_t::feature_info_t::cmp' [ 0 21 37]
't1_set_mm_blend' [ 0]
'PSH_Globals_DestroyFunc' [ 0]
'PSH_BluesRec' [ 0]
'cf2_glyphpath_moveTo' [ 0]
'PSH_WidthRec_' [ 0]
'OT::Ligature::collect_glyphs' [ 0 4 14]
'z_crc_t' [ 0]
'OT::Null<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader>::lsearch<OT::Tag>' [ 0 4 51]
'_indic_syllable_machine_from_state_actions' [ 0]
'af_cjk_align_serif_edge' [ 0]
'char' [ 0]
'check_func' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 70]
'T1_Decoder_ZoneRec' [ 0]
'CFF_GlyphSlotRec_' [ 0]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 58]
'af_telu_script_class' [ 0]
'cr_png_get_user_width_max' [ 0]
'TT_Size_Metrics' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsSize>' [ 0 4 27]
'hb_reference_count_t::get_unsafe' [ 0 22]
'png_image_read_header' [ 0]
'hb_font_get_h_extents' [ 0]
'detect_data_type' [ 0]
'hb_object_trace<hb_font_t>' [ 0]
'do_fixed' [ 0]
'tt_cmap13_char_index' [ 0]
'hb_position_t' [ 0]
'OT::glyf::accelerator_t::get_extents' [ 0 4 10 25]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::is_override' [ 0 4 55]
'OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::VariationDevice::sanitize' [ 0 4 21]
'af_sund_script_class' [ 0]
'cr_png_crc_error' [ 0]
'OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 57]
'TCell' [ 0]
'OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtable>' [ 0 4 10 25]
'FT_Incremental_InterfaceRec' [ 0]
'hb_set_del' [ 0]
'psnames_module_class' [ 0]
'CFF_Blend' [ 0]
'png_cache_unknown_chunk' [ 0]
'cr_png_icc_check_header' [ 0]
'open_face' [ 0]
'OT::ConditionFormat1::evaluate' [ 0 4 22]
'hb_insert_dotted_circle' [ 0]
'af_glag_uniranges' [ 0]
'PS_Builder_FuncsRec' [ 0]
'OT::Sanitizer<OT::kern>' [ 0 4]
'final_reordering_syllable' [ 0]
'decompose_use' [ 0]
'OT::Null<OT::PosLookupSubTable>' [ 0 4]
'TT_Post_20Rec' [ 0]
'hb_font_get_font_extents_func_t' [ 0]
'canon_map' [ 0]
'hb_get_subtables_context_t::default_return_value' [ 0 28]
'OT::hb_ot_apply_context_t::recurse' [ 0 4 27]
'CFF_PrivateRec_' [ 0]
'OT::ValueFormat::get_short' [ 0 4 17]
'T1_Builder_Add_Point1_Func' [ 0]
'hb_set_set_user_data' [ 0]
'CF2_Stack' [ 0]
'OT::Sanitizer<OT::glyf>' [ 0 4]
'FT_Prop_IncreaseXHeight' [ 0]
'OT::CastP<OT::MathKernInfo, const void *>' [ 0 4]
'Direct_Move_Orig_Y' [ 0]
'cr_png_do_strip_channel' [ 0]
'hb_font_get_glyph_contour_point' [ 0]
'OT::ValueRecord' [ 0 4]
'hb_buffer_t::next_serial' [ 0 13]
'af_osge_script_class' [ 0]
'Cr_z__tr_align' [ 0]
'cff_size_done' [ 0]
'cff_cmap_encoding_char_next' [ 0]
'CID_Parser' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ContextFormat1>' [ 0 4 30]
'hb_get_subtables_context_t::stop_sublookup_iteration' [ 0 28]
'stat' [ 0]
'OT::BEInt<unsigned int, 3>::operator unsigned int' [ 0 4 28]
'int16_t' [ 0]
'OT::operator+<const OT::MarkGlyphSetsFormat1 *, OT::IntType<unsigned int, 4>, OT::Coverage>' [ 0 4]
'OT::CastP<OT::ClassDef, const void *>' [ 0 4]
'T1_Builder' [ 0]
'Cr_z_x86_cpu_enable_simd' [ 0]
'Vertical_Sweep_Drop' [ 0]
'OT::DeltaSetIndexMap::get_inner_bitcount' [ 0 4 22]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 76]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'hb_object_is_inert<hb_face_t>' [ 0]
'cf2_hint_isValid' [ 0]
'hb_ot_position_default' [ 0]
'OT::MathConstants' [ 0 4]
'OT::CastP<OT::HVARVVAR, char>' [ 0 4]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 107]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat1>' [ 0 4 33]
'OT::BinSearchArrayOf<OT::TableRecord>' [ 0 4]
'OT::OffsetListOf<OT::AnchorMatrix>::operator[]' [ 0 4 36]
'hb_ot_color_t' [ 0]
'PSH_ContourRec_' [ 0]
'cr_png_zfree' [ 0]
'AF_Module' [ 0]
'OT::Sanitizer<OT::vhea>::Sanitizer' [ 0 4 25]
'hb_buffer_t::make_room_for' [ 0 13]
'OT::SinglePosFormat1' [ 0 4]
'OT::SinglePosFormat2' [ 0 4]
'OT::Context::dispatch<OT::hb_closure_context_t>' [ 0 4 13]
'OT::MarkBasePosFormat1' [ 0 4]
'FT_ValidatorRec' [ 0]
'TT_Round_Func' [ 0]
'OT::OffsetTo<OT::MathKernInfo, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_GlyphZoneRec' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ContextFormat2>' [ 0 4 30]
'OT::CastP<OT::Record<OT::LangSys>, const void *>' [ 0 4]
'OT::LangSys::get_feature_index' [ 0 4 13]
'store4' [ 0]
'af_shaper_buf_create' [ 0]
'af_autofitter_init' [ 0]
'_hb_buffer_allocate_unicode_vars' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::set_lookup_props' [ 0 4 27 48]
'collect_features_hangul' [ 0]
'hb_mutex_t::init' [ 0 12]
't1_cmap_std_char_index' [ 0]
'OT::MarkRecord' [ 0 4]
'AF_LatinAxisRec_' [ 0]
'TT_CMap4Rec_' [ 0]
'OT::SingleSubstFormat2::serialize' [ 0 4 24]
'reorder_marks_arabic' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'OT::GSUBGPOS::get_feature' [ 0 4 14]
'T1_Decoder_ZoneRec_' [ 0]
'OT::Offset<OT::IntType<unsigned short, 2> >::serialize' [ 0 4 45]
'OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 64]
'hb_codepoint_t' [ 0]
'cff_parse_font_bbox' [ 0]
'OT::Sanitizer<OT::loca>::lock_instance' [ 0 4 25]
'UShort' [ 0]
'hb_font_get_glyph_func_t' [ 0]
'FT_Incremental_GetGlyphDataFunc' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::PairPosFormat2::apply' [ 0 4 20]
'CID_FaceInfoRec_' [ 0]
'OT::ArrayOf<OT::AxisValueMap, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 64]
'OT::ChainContextFormat3::get_coverage' [ 0 4 25]
'OT::LOffsetTo<OT::VarRegionList>' [ 0 4]
'OT::CoverageFormat2::Iter::get_coverage' [ 0 4 21 27]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::ArrayOf<OT::LOffsetTo<OT::OffsetTable>, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 76]
'Render_Glyph' [ 0]
'PSH_WidthRec' [ 0]
'ft_gzip_file_fill_output' [ 0]
'OT::PairPosFormat2' [ 0 4]
'cff_slot_init' [ 0]
'OT::post::accelerator_t::get_glyph_name' [ 0 4 10 25]
'png_digit' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ContextFormat3>' [ 0 4 30]
'Ins_SRP0' [ 0]
'hb_unicode_funcs_set_general_category_func' [ 0]
'Ins_SRP2' [ 0]
'OT::MarkMarkPosFormat1::apply' [ 0 4 24]
'find_syllables' [ 0]
'OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'hb_buffer_add' [ 0]
'hb_buffer_t::move_to' [ 0 13]
'png_icc_profile_error' [ 0]
'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 77]
'cf2_getStdVW' [ 0]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::find<hb_user_data_key_t *>' [ 0 74]
'cr_png_do_read_filler' [ 0]
'gf2_matrix_square' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat3>' [ 0 4 33]
'OT::StructAtOffset<OT::MathKern>' [ 0 4]
'cr_png_set_gamma' [ 0]
'Ins_SHZ' [ 0]
'cf2_buf_readByte' [ 0]
'ARRAY_LENGTH<unsigned int, 20>' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::maxpV1Tail>' [ 0 4 27]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat0>' [ 0 4 27]
'ft_gzip_stream_close' [ 0]
'hb_font_t::em_scalef_x' [ 0 11]
'hb_font_t::em_scalef_y' [ 0 11]
'OT::hb_sanitize_context_t::check_struct<OT::IntType<unsigned short, 2> >' [ 0 4 27]
'ft_add_renderer' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::hb_ot_apply_context_t::dispatch<OT::MarkBasePosFormat1>' [ 0 4 27]
'OT::hb_serialize_context_t::extend_min<OT::SingleSubstFormat1>' [ 0 4 28]
'tt_face_load_sbit' [ 0]
'OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 70]
'OT::CmapSubtableFormat13::group_get_glyph' [ 0 4 26]
'OT::HBINT32' [ 0 4]
'cr_png_handle_zTXt' [ 0]
'OT::IntType<unsigned short, 2>::cmp<unsigned int>' [ 0 4 32]
'psh_hint_table_record' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::alloc' [ 0 48]
'OT::CastP<OT::os2, const void *>' [ 0 4]
'tt_synth_sfnt_checksum' [ 0]
'skip_comment' [ 0]
'twobppswaptable' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> >::may_have' [ 0 121]
'post_fields' [ 0]
'CFF_ParserRec' [ 0]
'cid_slot_load_glyph' [ 0]
'T1_EncodingType_' [ 0]
'OT::CastP<OT::LOffsetTo<OT::Coverage>, const void *>' [ 0 4]
'FT_Bitmap' [ 0]
'tt_cmap2_get_subheader' [ 0]
'OT::hb_serialize_context_t::end_serialize' [ 0 4 28]
'CID_GlyphSlotRec_' [ 0]
'af_sund_nonbase_uniranges' [ 0]
'cff_face_init' [ 0]
'hb_ot_layout_table_get_feature_tags' [ 0]
'Ins_LTEQ' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::Null<OT::cmap>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::KernAAT>' [ 0 4 27]
'OT::ArrayOf<OT::EncodingRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_no_trace_t<const OT::Coverage &>::ret' [ 0 37]
'psh_glyph_interpolate_normal_points' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::EncodingRecord>' [ 0 4 27]
'ARRAY_LENGTH<hb_shaper_pair_t, 1>' [ 0]
'af_osma_nonbase_uniranges' [ 0]
'FT_GlyphRec' [ 0]
'crc_k' [ 0]
'hb_shape_plan_reference' [ 0]
'cr_png_set_shift' [ 0]
'af_bamu_uniranges' [ 0]
'FT_Property_Set' [ 0]
'T1_Get_Advances' [ 0]
'OT::CBDT::accelerator_t::get_extents' [ 0 4 10 25]
'TT_Get_MM_Blend' [ 0]
'Cr_z_gzsetparams' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Outline_EmboldenXY' [ 0]
'OT::operator+<const OT::CaretValueFormat3 *, OT::IntType<unsigned short, 2>, OT::Device>' [ 0 4]
'OT::Null<OT::MarkGlyphSets>' [ 0 4]
'af_guru_script_class' [ 0]
'_indic_syllable_machine_eof_trans' [ 0]
'OT::Null<OT::fvar>' [ 0 4]
'ULong' [ 0]
'OT::KernPair::get_kerning' [ 0 4 14]
'hb_reference_count_t::is_valid' [ 0 22]
'_hb_font_funcs_parent' [ 0]
'png_colormap_compose' [ 0]
'cff_size_get_globals_funcs' [ 0]
'OT::MultipleSubst::dispatch<OT::hb_sanitize_context_t>' [ 0 4 19]
'T1_EncodingType' [ 0]
'TT_Forget_Glyph_Frame' [ 0]
'OT::CastP<OT::VarRegionList, const void *>' [ 0 4]
'FT_Service_TrueTypeEngineRec_' [ 0]
'OT::KernTable<OT::KernAAT>' [ 0 4]
'FT_Raster_SetModeFunc' [ 0]
'OT::Sanitizer<OT::HVARVVAR>::sanitize' [ 0 4 29]
'GX_ItemVarStore' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_ot_shape_context_t' [ 0]
'OT::ArrayOf<OT::LOffsetTo<OT::OffsetTable>, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 76]
'png_image_size' [ 0]
'ps_mask_ensure' [ 0]
'pscmaps_services' [ 0]
'WOFF_Table' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'OT::Null<OT::FeatureParamsSize>' [ 0 4]
'PS_Mask_Table' [ 0]
'FT_DriverRec_' [ 0]
'OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 65]
'CFF_ParserRec_' [ 0]
'_hb_glyph_info_ligated' [ 0]
'af_olck_script_class' [ 0]
'make_ga_colormap' [ 0]
'OT::AlternateSubst::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 20]
'TT_SbitTableType' [ 0]
'OT::OffsetTable::find_table_index' [ 0 4 17]
'hb_buffer_add_codepoints' [ 0]
'TT_CMapInfo_' [ 0]
'OT::UnsizedArrayOf<OT::BaseGlyphRecord>' [ 0 4]
'hb_object_trace<hb_set_t>' [ 0]
'IUP_Worker' [ 0]
'hb_object_header_t' [ 0]
'CF2_OutlineCallbacks' [ 0]
'T1_GlyphSlot_Init' [ 0]
'OT::Sanitizer<OT::vhea>::sanitize' [ 0 4 25]
'OT::GPOS::position_start' [ 0 4 10]
'OT::match_input' [ 0 4]
'FT_Set_MM_Design_Coordinates' [ 0]
'OT::Null<OT::hmtxvmtx<OT::hmtx, OT::hhea> >' [ 0 4]
'T2_Hints_Funcs' [ 0]
'is_consonant' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathItalicsCorrectionInfo>' [ 0 4 27]
'cff_get_var_design' [ 0]
'inflate_codes_mode' [ 0]
'parse_charstrings' [ 0]
'OT::chain_context_would_apply_lookup' [ 0 4]
'OT::SubstLookup::apply_recurse_func' [ 0 4 17]
'OT::hb_sanitize_context_t::may_dispatch<OT::SinglePos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'icu_61' [ 0]
'hexdigits' [ 0]
'CF2_StackNumber' [ 0]
'z_streamp' [ 0]
'png_write_image_16bit' [ 0]
'tt_cmap14_init' [ 0]
't2_hints_open' [ 0]
'Ins_RTG' [ 0]
'OT::hb_lazy_loader_t<OT::post::accelerator_t>::operator->' [ 0 4 47]
'hb_set_t::add' [ 0 10]
'TStates' [ 0]
'png_write_image_8bit' [ 0]
'OT::IntType<unsigned int, 3>::operator unsigned int' [ 0 4 30]
'hb_font_t::em_scale_dir' [ 0 11]
'hb_user_data_array_t' [ 0]
'OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 71]
'preprocess_text_thai' [ 0]
'OT::SingleSubstFormat1' [ 0 4]
'af_vaii_uniranges' [ 0]
'valid_parameters' [ 0]
'cff_metrics_adjust' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 27]
'OT::hb_lazy_loader_t<OT::glyf::accelerator_t>::init' [ 0 4 47]
'cr_png_destroy_info_struct' [ 0]
'hb_object_reference<hb_set_t>' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 4 27]
'cff_cmap_encoding_class_rec' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12> >' [ 0 4 27]
'af_axis_hints_new_segment' [ 0]
'png_decompress_chunk' [ 0]
'fourbppswaptable' [ 0]
'_hb_glyph_info_get_lig_num_comps' [ 0]
'inflate_blocks' [ 0]
'OT::SinglePos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 15]
'CF2_StemHintRec' [ 0]
'is_consonant_or_vowel' [ 0]
'png_color_struct' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 78]
'OT::CastP<OT::LigatureSet, const void *>' [ 0 4]
'hb_font_get_nominal_glyph_trampoline' [ 0]
'hb_ot_layout_substitute_start' [ 0]
'CFF_VarRegion' [ 0]
'af_glyph_hints_save' [ 0]
'af_cari_uniranges' [ 0]
'OT::ChainContextFormat1::apply' [ 0 4 25]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>' [ 0]
'SFNT_HeaderRec' [ 0]
'TT_CallRec' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > >::init' [ 0 195]
'OT::VariationDevice::get_y_delta' [ 0 4 21]
'ptrdiff_t' [ 0]
'af_telu_nonbase_uniranges' [ 0]
'hb_font_t::get_glyph_v_kerning' [ 0 11]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'af_grek_c2sc_style_class' [ 0]
'GetShortIns' [ 0]
'hb_no_trace_t<bool>::ret' [ 0 21]
'ft_var_load_hvvar' [ 0]
'CFF_SubFont' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MarkRecord>' [ 0 4 27]
'OT::fvar::get_axis' [ 0 4 10]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::MarkMarkPos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'FT_Glyph_Metrics_' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::LigatureSet>' [ 0 4 28]
'sfnt_get_ps_name' [ 0]
'cr_png_read_update_info' [ 0]
'ft_synthesize_vertical_metrics' [ 0]
'FT_Match_Size' [ 0]
'OT::StructAtOffset<OT::KernOT::SubTableWrapper>' [ 0 4]
'OT::hb_ot_apply_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 4 27]
'af_latin_metrics_init_widths' [ 0]
'hb_unicode_compose_func_t' [ 0]
'khmer_category_t' [ 0]
'hb_buffer_t::unsafe_to_break' [ 0 13]
'OT::KernClassTable::sanitize' [ 0 4 20]
'T1_FieldRec' [ 0]
'cr_png_set_swap' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CBDT>' [ 0 4 27]
'OT::_hea<OT::vhea>::sanitize' [ 0 4 20]
'OT::hb_ot_apply_context_t::set_lookup_props' [ 0 4 27]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkLigPos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'thai_below_state_machine_edge_t' [ 0]
'Ins_GPV' [ 0]
'OT::Sanitizer<OT::hhea>::sanitize' [ 0 4 25]
'OT::Sanitizer<OT::post>::sanitize' [ 0 4 25]
'OT::SortedArrayOf<OT::TableRecord, OT::BinSearchHeader>' [ 0 4]
'OT::Null<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cff_cmap_unicode_char_next' [ 0]
'hb_font_t::parent_scale_position' [ 0 11]
'OT::StructAfter<OT::IntType<unsigned short, 2>, OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cr_png_get_copyright' [ 0]
'hb_glib_get_unicode_funcs' [ 0]
'hb_ot_var_normalize_coords' [ 0]
'OT::Rule::closure' [ 0 4 10]
'af_sylo_uniranges' [ 0]
'OT::Fixed' [ 0 4]
'mm_axis_unmap' [ 0]
'hb_buffer_t::backtrack_len' [ 0 13]
'hb_object_is_valid<hb_buffer_t>' [ 0]
'cf2_hintmap_init' [ 0]
'petite_capitals_coverage' [ 0]
'__blkcnt_t' [ 0]
'OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 66]
'Cr_z_deflateEnd' [ 0]
'OT::DefaultUVS' [ 0 4]
'hb_object_is_inert<hb_font_t>' [ 0]
'matra_position_khmer' [ 0]
'TT_Post_25Rec' [ 0]
'png_row_info' [ 0]
'hb_ot_map_t' [ 0]
'chunkcopy_lapped_relaxed' [ 0]
'af_vaii_nonbase_uniranges' [ 0]
'af_latin_writing_system_class' [ 0]
'FT_Kerning_TrackGetFunc' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'FT_DivFix' [ 0]
'PSH_WidthsRec_' [ 0]
'cf2_getNominalWidthX' [ 0]
'AF_CJKBlue' [ 0]
'z_stream' [ 0]
'tt_face_load_kern' [ 0]
'FT_Glyph_Metrics' [ 0]
'FT_Load_Sfnt_Table' [ 0]
'TT_LangTag' [ 0]
'OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 58]
'afm_parser_next_key' [ 0]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>' [ 0]
'OT::DeltaSetIndexMap::sanitize' [ 0 4 22]
'OT::Sanitizer<OT::CBDT>::sanitize' [ 0 4 25]
'SFNT_Interface' [ 0]
'thai_above_state_machine' [ 0]
'OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 64]
'ps_parser_to_coord_array' [ 0]
'ft_free' [ 0]
'convert_bytes_to_data' [ 0]
'hb_buffer_get_flags' [ 0]
'OT::MathGlyphConstruction::sanitize' [ 0 4 27]
'FT_Get_Standard_Encoding_Func' [ 0]
'_use_syllable_machine_index_offsets' [ 0]
'OT::StructAtOffset<OT::Sequence>' [ 0 4]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'hb_non_global_user_features_present' [ 0]
'Cr_z_compressBound' [ 0]
'af_orya_uniranges' [ 0]
'FT_Hashkey_' [ 0]
'OT::ArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 63]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::resize' [ 0 69]
'png_image_write_init' [ 0]
'AF_WritingSystem_DoneMetricsFunc' [ 0]
'OT::MarkBasePos::dispatch<hb_get_subtables_context_t>' [ 0 4 17]
'Ins_MDRP' [ 0]
'ps_table_new' [ 0]
'OT::CastP<OT::Sequence, const void *>' [ 0 4]
'OT::CoverageFormat1::Iter::get_glyph' [ 0 4 21 27]
'FT_SfntName' [ 0]
'OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 75]
'hb_font_get_glyph_contour_point_parent' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::push' [ 0 54]
'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 65]
'FT_Done_GlyphSlot' [ 0]
'set_myanmar_properties' [ 0]
'OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 65]
'cr_png_calculate_crc' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'setup_syllables' [ 0]
'PS_DimensionRec_' [ 0]
'OT::LigatureSet::serialize' [ 0 4 17]
'FT_Outline_MoveToFunc' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'cff_get_name_index' [ 0]
'tt_cmap4_set_range' [ 0]
'af_lisu_nonbase_uniranges' [ 0]
'cid_slot_done' [ 0]
'AF_GlyphHintsRec_' [ 0]
'hb_set_t::page_map_t::cmp' [ 0 10 22]
'tt_size_done_bytecode' [ 0]
'hb_font_get_user_data' [ 0]
'png_const_charp' [ 0]
'CFF_Load_FD_Select' [ 0]
'FT_SubGlyph' [ 0]
'OT::SingleSubstFormat2::closure' [ 0 4 24]
'af_cyrl_uniranges' [ 0]
'hb_set_t::page_t::elt_get_max' [ 0 10 18]
'hb_glib_unicode_decompose_compatibility' [ 0]
'OT::post::accelerator_t::get_glyph_count' [ 0 4 10 25]
'cf2_stack_popInt' [ 0]
'OT::Null<OT::VarRegionList>' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'FT_Set_Default_Properties' [ 0]
'af_latp_nonbase_uniranges' [ 0]
'OT::glyph_variant_t' [ 0 4]
'ps_builder_add_point1' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::may_match' [ 0 4 27 38]
'OT::MATH' [ 0 4]
'cff_check_points' [ 0]
'af_gujr_dflt_style_class' [ 0]
'OT::Null<OT::CBLC>' [ 0 4]
'OT::GSUB' [ 0 4]
'ps_builder_close_contour' [ 0]
'PS_Private' [ 0]
'cr_png_default_write_data' [ 0]
'GX_Blend' [ 0]
'OT::hb_sanitize_context_t::check_array' [ 0 4 27]
'_hb_allocate_lig_id' [ 0]
'OT::hb_serialize_context_t::extend<OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'position_around_base' [ 0]
'AF_Edge' [ 0]
'hb_buffer_add_utf<hb_utf32_t<false> >' [ 0]
'OT::BitmapSizeTable::sanitize' [ 0 4 21]
'GX_VarRegion' [ 0]
'arabic_fallback_plan_init_unicode' [ 0]
'thai_above_start_state' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 108]
'hb_face_is_immutable' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> >::init' [ 0 121]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'parse_private' [ 0]
'hb_buffer_pre_allocate' [ 0]
'hb_buffer_t::set_masks' [ 0 13]
'my_version' [ 0]
'CFF_CharsetRec_' [ 0]
'tr_static_init' [ 0]
'OT::Sanitizer<OT::loca>' [ 0 4]
'cr_png_zalloc' [ 0]
'AF_CJKAxisRec_' [ 0]
'hb_shape_plan_get_user_data' [ 0]
'FT_Properties_SetFunc' [ 0]
'OT::SingleSubstFormat1::collect_glyphs' [ 0 4 24]
'cid_face_done' [ 0]
'af_beng_uniranges' [ 0]
'OT::SortedArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::bsearch<unsigned int>' [ 0 4 84]
'OT::LigGlyph' [ 0 4]
'OT::Null<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> > >' [ 0 4]
'cr_png_image_finish_read' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::operator[]' [ 0 54]
'PS_Conv_ToInt' [ 0]
'hb_ft_face_create_referenced' [ 0]
'PS_FontExtraRec_' [ 0]
'UProperty' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat2>' [ 0 4 27]
'gray_record_cell' [ 0]
'OT::CastP<OT::RecordListOf<OT::Script>, const void *>' [ 0 4]
'Horizontal_Sweep_Init' [ 0]
'ordinals_feature' [ 0]
'AF_PointRec' [ 0]
'HbOpAnd' [ 0]
'_myanmar_syllable_machine_from_state_actions' [ 0]
'OT::Coverage::get_coverage' [ 0 4 14]
'FT_Stream_ReadFields' [ 0]
'OT::Record<OT::LangSys>::sanitize' [ 0 4 25]
'OT::OpenTypeFontFace' [ 0 4]
'FT_StrokeBorderRec_' [ 0]
'hb_ot_get_glyph_name' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::CursivePos, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'tt_sbit_decoder_load_compound' [ 0]
'GX_AVarCorrespondence' [ 0]
'FT_Set_Pixel_Sizes' [ 0]
'FT_SizeRec' [ 0]
'OT::operator+<const OT::MarkArray *, OT::IntType<unsigned short, 2>, OT::Anchor>' [ 0 4]
'hb_font_get_nominal_glyph_parent' [ 0]
'BBox_Cubic_To' [ 0]
'OT::Sanitizer<OT::GDEF>' [ 0 4]
'hb_face_destroy' [ 0]
'OT::operator+<const OT::ChainContextFormat2 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'FT_Raster_Params' [ 0]
'FT_ServiceDescRec_' [ 0]
'FT_HAdvance_Adjust_Func' [ 0]
'scan_tree' [ 0]
'FT_Multi_Master' [ 0]
'png_read_filter_row_avg' [ 0]
'OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 66]
'OT::ArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 63]
'hb_object_destroy<hb_face_t>' [ 0]
'sfnt_ps_map' [ 0]
'OT::hb_would_apply_context_t::default_return_value' [ 0 4 30]
'af_lisu_uniranges' [ 0]
'hb_prealloced_array_t<unsigned int, 1>::alloc' [ 0 40]
'FT_Generic_Finalizer' [ 0]
'OT::ArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 73]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 66]
'OT::hb_ot_apply_context_t::set_lookup_index' [ 0 4 27]
'_IO_marker' [ 0]
'OT::Record<OT::Feature>' [ 0 4]
'static_ot_funcs' [ 0]
'_hb_modified_combining_class' [ 0]
'OT::Context::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 13]
'OT::LigatureAttach' [ 0 4]
'png_info_def' [ 0]
'OT::KernSubTableFormat0::get_kerning' [ 0 4 25]
'TT_ValidatorRec' [ 0]
'cff_parse_integer' [ 0]
'CFF_Builder_Close_Contour_Func' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::VarRegionList>' [ 0 4 27]
'af_latb_uniranges' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'FT_Slot_DoneFunc' [ 0]
'OT::Null<OT::MathKernInfo>' [ 0 4]
'OT::hb_ot_apply_context_t::set_recurse_func' [ 0 4 27]
'hb_mutex_impl_t' [ 0]
'hb_font_get_nominal_glyph_nil' [ 0]
'OT::CastP<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, const void *>' [ 0 4]
'OT::hb_closure_context_t::dispatch<OT::ContextFormat2>' [ 0 4 26]
'cff_cmap_unicode_class_rec' [ 0]
'af_latin_metrics_scale' [ 0]
'OT::hb_closure_context_t::recurse' [ 0 4 26]
'_hb_buffer_assert_gsubgpos_vars' [ 0]
'OT::CastP<OT::KernAAT::SubTableWrapper, OT::IntType<unsigned char, 1> >' [ 0 4]
'_get_fvar' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::ChainContextFormat3>' [ 0 4 227]
'Ins_EVEN' [ 0]
'FT_Colr_InternalRec_' [ 0]
'cr_png_write_chunk' [ 0]
'hb_buffer_message_func_t' [ 0]
'OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 60]
'OT::Null<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> > >' [ 0 4]
'png_XYZ' [ 0]
'TT_CodeRangeTable' [ 0]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::is_horizontal' [ 0 4 54]
'cr_png_set_benign_errors' [ 0]
'hb_var_int_t' [ 0]
'hb_ot_map_builder_t::compile' [ 0 21]
'OT::Lookup::get_subtable<OT::SubstLookupSubTable>' [ 0 4 12]
'OT::CaretValueFormat1::sanitize' [ 0 4 23]
'SFNT_Interface_' [ 0]
'OT::AlternateSubst::dispatch<OT::hb_sanitize_context_t>' [ 0 4 20]
'OT::SortedArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >' [ 0 4]
'indic_position_t' [ 0]
'png_color_8_struct' [ 0]
'cr_png_set_expand_16' [ 0]
'_hb_glyph_info_clear_lig_props' [ 0]
'hb_buffer_add_utf8' [ 0]
'cr_png_set_read_user_transform_fn' [ 0]
'set_glyph' [ 0]
'OT::LOffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> > >' [ 0 4]
'FT_Service_MultiMastersRec' [ 0]
'OT::hb_closure_context_t::dispatch<OT::ContextFormat3>' [ 0 4 26]
'af_hani_script_class' [ 0]
'hb_prealloced_array_t<unsigned int, 1>' [ 0]
'cid_ps_get_font_info' [ 0]
'OT::RecordArrayOf<OT::Feature>::get_tag' [ 0 4 32]
'cr_png_set_filter' [ 0]
'OT::FixedVersion<OT::IntType<unsigned short, 2> >::to_int' [ 0 4 51]
'OT::UnicodeValueRange::cmp' [ 0 4 23]
'Cr_z_deflate' [ 0]
'_indic_syllable_machine_to_state_actions' [ 0]
'ps_mask_test_bit' [ 0]
'cr_png_set_tRNS_to_alpha' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hb_ot_math_kern_t' [ 0]
'afm_parser_done' [ 0]
'cr_png_handle_unknown' [ 0]
'FT_Get_Module' [ 0]
'FT_CID_GetRegistryOrderingSupplementFunc' [ 0]
'alloc_func' [ 0]
'OT::ChainContextPos' [ 0 4]
'FT_Glyph_GetBBoxFunc' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 83]
'tt_cmap_classes' [ 0]
'cff_isoadobe_charset' [ 0]
'_hb_glyph_info_set_unicode_props' [ 0]
'af_latn_smcp_style_class' [ 0]
'FT_Service_CFFLoadRec' [ 0]
'CID_FaceRec_' [ 0]
'Cr_z_gzclose_r' [ 0]
't1_service_properties' [ 0]
'OT::cmap::accelerator_t::get_glyph_from<OT::CmapSubtableFormat12>' [ 0 4 10 25]
'T1_Builder_Add_Point_Func' [ 0]
'tt_cmap10_get_info' [ 0]
'cr_png_do_scale_16_to_8' [ 0]
'hb_script_from_iso15924_tag' [ 0]
'OT::hb_ot_apply_context_t::set_lookup_mask' [ 0 4 27]
'OT::PosLookupSubTable::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 23]
'OT::Sanitizer<OT::CBDT>::lock_instance' [ 0 4 25]
'OT::ContextFormat3::closure' [ 0 4 20]
'cr_png_check_IHDR' [ 0]
'hb_object_destroy<hb_shape_plan_t>' [ 0]
'hb_font_set_ppem' [ 0]
'OT::Sanitizer<OT::MATH>' [ 0 4]
'OT::avar::sanitize' [ 0 4 10]
'TT_Header' [ 0]
'_hb_ft_face_destroy' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::add_range' [ 0 47]
'OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'af_face_globals_get_metrics' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::LangSys>' [ 0 4 27]
'cid_driver_done' [ 0]
'FT_Set_Transform' [ 0]
'cf2_arrstack_setNumElements' [ 0]
'png_size_t' [ 0]
'TT_CMap13' [ 0]
'TT_CMap14' [ 0]
'OT::operator+<const OT::ContextFormat3 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'cr_png_set_tRNS' [ 0]
'_hb_ot_shaper_face_data_destroy' [ 0]
'AAT' [ 0]
'ruby_coverage' [ 0]
'ps_tocoordarray' [ 0]
'af_glyph_hints_align_weak_points' [ 0]
'OT::operator+<const OT::MarkLigPosFormat1 *, OT::IntType<unsigned short, 2>, OT::MarkArray>' [ 0 4]
'OT::hb_sanitize_context_t::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'hb_buffer_set_message_func' [ 0]
'OT::MathTopAccentAttachment' [ 0 4]
'OT::StructAtOffset<OT::MathKernInfo>' [ 0 4]
'OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> >' [ 0 4]
'png_const_structrp' [ 0]
'Cr_z__dist_code' [ 0]
'cr_png_image_begin_read_from_stdio' [ 0]
'OT::CmapSubtableFormat4::accelerator_t::init' [ 0 4 25 40]
'FT_ListNode' [ 0]
'hb_font_t::glyph_to_string' [ 0 11]
'OT::hb_lazy_loader_t<OT::CBDT::accelerator_t>' [ 0 4]
'af_tavt_uniranges' [ 0]
'sfnt_load_face' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'T1_TokenRec' [ 0]
't1_lookup_glyph_by_stdcharcode_ps' [ 0]
'OT::Null<OT::AttachList>' [ 0 4]
'OT::ContextFormat3::get_coverage' [ 0 4 20]
'OT::ExtensionFormat1<OT::ExtensionPos>::dispatch<OT::hb_sanitize_context_t>' [ 0 4 40]
'OT::OffsetListOf<OT::Lookup>::sanitize' [ 0 4 30]
'cr_png_colorspace_set_rgb_coefficients' [ 0]
'z_stream_s' [ 0]
'TT_PCLT' [ 0]
'af_grek_titl_style_class' [ 0]
'ps_parser_to_fixed_array' [ 0]
'OT::Rule::collect_glyphs' [ 0 4 10]
'OT::hb_ot_apply_context_t::hb_ot_apply_context_t' [ 0 4 27]
'OT::VariationDevice::get_delta' [ 0 4 21]
'FT_Fixed' [ 0]
'OT::MultipleSubstFormat1::apply' [ 0 4 26]
'OT::ContextFormat3::sanitize' [ 0 4 20]
'FT_Get_BDF_Charset_ID' [ 0]
'OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 59]
'compression_state' [ 0]
'cr_png_image_write_to_file' [ 0]
'hb_shape_plan_user_features_match' [ 0]
'FT_RFork_Ref_' [ 0]
'uchf' [ 0]
'OT::StructAtOffset<OT::Rule>' [ 0 4]
'OT::operator+<const OT::CursivePosFormat1 *, OT::IntType<unsigned short, 2>, OT::Anchor>' [ 0 4]
'arabic_state_table_entry' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathKernInfo>' [ 0 4 27]
'FT_Set_Var_Design_Coordinates' [ 0]
'cr_png_write_rows' [ 0]
'hb_ot_shape_plan_t::position' [ 0 20]
'OT::ContextFormat3::collect_glyphs' [ 0 4 20]
'OT::CastP<OT::KernClassTable, const void *>' [ 0 4]
'Cr_z_deflateTune' [ 0]
'CF2_Matrix' [ 0]
'TT_VertHeader_' [ 0]
'FT_StreamDesc_' [ 0]
'cr_png_write_sRGB' [ 0]
't1_builder_init' [ 0]
'Cr_z_gzdopen' [ 0]
'OT::collect_glyphs_func_t' [ 0 4]
'OT::maxpV1Tail::sanitize' [ 0 4 16]
'PByte' [ 0]
'OT::LArrayOf<OT::BitmapSizeTable>' [ 0 4]
'FT_Int16' [ 0]
'OT::collect_class' [ 0 4]
'sfnt_get_glyph_name' [ 0]
'OT::CBDT::sanitize' [ 0 4 10]
'cff_parser_init' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'cr_png_colorspace_set_gamma' [ 0]
'PSH_Alignment' [ 0]
'OT::CastP<OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'FT_Add_Module' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'png_image_read_control' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'thai_pua_shape' [ 0]
'FT_Render_Glyph_Internal' [ 0]
'hb_buffer_serialize_flags_t' [ 0]
'ft_var_readpackeddeltas' [ 0]
'std' [ 0]
'OT::Null<OT::VariationStore>' [ 0 4]
'FT_Glyph_Transform' [ 0]
'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 65]
'Cr_z_inflate_fast_chunk_' [ 0]
'af_face_globals_new' [ 0]
'adjust_mark_offsets' [ 0]
'hb_language_item_t::operator==' [ 0 20]
'OT::FeatureVariationRecord' [ 0 4]
'OT::Null<OT::KernPair>' [ 0 4]
'OT::Coverage::Iter::more' [ 0 4 14 20]
'cf2_stack_popFixed' [ 0]
'Cr_z_gzclearerr' [ 0]
'hb_version_atleast' [ 0]
'ARRAY_LENGTH<unsigned long long, 16>' [ 0]
'OT::ReverseChainSingleSubstFormat1::closure' [ 0 4 36]
'cr_png_read_filter_row_avg4_sse2' [ 0]
'OT::CastP<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, const void *>' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::CursivePos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'png_image_set_PLTE' [ 0]
'OT::ClassDefFormat1::intersects_class' [ 0 4 21]
'bool' [ 0]
'__time_t' [ 0]
'hb_font_get_glyph_h_origin_func_t' [ 0]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4> >::get_glyph' [ 0 4 56]
'gray_render_cubic' [ 0]
'gz_open' [ 0]
'hb_font_get_glyph' [ 0]
'Direct_Move_Orig_X' [ 0]
'hb_object_create<hb_blob_t>' [ 0]
'hb_object_trace<hb_face_t>' [ 0]
'parse_weight_vector' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::ExtensionFormat1<OT::ExtensionPos>, OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 27]
'hb_segment_properties_hash' [ 0]
'CID_FaceInfo' [ 0]
'OT::MATH::sanitize' [ 0 4 10]
'FT_Parameter_' [ 0]
'OT::KernTable<OT::KernAAT>::sanitize' [ 0 4 28]
'psh_glyph_save_points' [ 0]
'tt_face_load_gasp' [ 0]
'OT::GSUBGPOS::get_lookup_count' [ 0 4 14]
'cr_png_set_write_user_transform_fn' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'UChar32' [ 0]
'hb_font_t::guess_v_origin_minus_h_origin' [ 0 11]
'png_default_warning' [ 0]
'png_compare_ICC_profile_with_sRGB' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 42]
'hb_font_t::em_scale' [ 0 11]
'langTag_record_fields' [ 0]
'FT_Glyph_Get_CBox' [ 0]
'tt_service_properties' [ 0]
'OT::OpenTypeFontFile::get_face' [ 0 4 22]
'OT::hb_lazy_table_loader_t<OT::fvar>::init' [ 0 4 38]
'png_init_rgb_transformations' [ 0]
'tt_cmap14_variants' [ 0]
'TT_NameRec_' [ 0]
'FT_Vector_NormLen' [ 0]
'cid_service_ps_info' [ 0]
'Ins_SxVTL' [ 0]
'parse_blend_axis_types' [ 0]
'updatewindow' [ 0]
'FT_Service_GlyphDict' [ 0]
'OT::StructAtOffset<OT::RuleSet>' [ 0 4]
'inflate_state' [ 0]
'OT::OffsetArrayOf<OT::Rule, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>::operator[]' [ 0 61]
'cff_parse_fixed_scaled' [ 0]
'af_khms_dflt_style_class' [ 0]
'inflate_mode' [ 0]
'tt_size_ready_bytecode' [ 0]
'OT::CursivePos' [ 0 4]
'BaseGlyphRecord_' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::BinSearchHeader>' [ 0 4 27]
'OT::FeatureParamsSize' [ 0 4]
'FT_Validator' [ 0]
'cr_png_set_palette_to_rgb' [ 0]
'OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 57]
'OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 111]
'OT::MarkLigPosFormat1::apply' [ 0 4 23]
'hb_font_get_glyph_h_kerning_nil' [ 0]
'OT::CastP<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'hb_utf32_t<true>' [ 0]
'OT::Script::find_lang_sys_index' [ 0 4 12]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_would_apply_context_t>' [ 0 4 12]
'OT::ReverseChainSingleSubst' [ 0 4]
'OT::Lookup::dispatch<OT::PosLookupSubTable, OT::hb_collect_glyphs_context_t>' [ 0 4 12]
'OT::Null<OT::CmapSubtableLongGroup>' [ 0 4]
'__off_t' [ 0]
'OT::Ligature' [ 0 4]
'ft_adobe_glyph_list' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::StructAtOffset<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> > >' [ 0 4]
'OT::ChainContext' [ 0 4]
'OT::LOffsetTo<OT::VariationStore>' [ 0 4]
'FT_Slot_InitFunc' [ 0]
'hb_font_funcs_set_glyph_v_advance_func' [ 0]
'OT::glyf::accelerator_t::init' [ 0 4 10 25]
'af_adlm_nonbase_uniranges' [ 0]
't1_cmap_std_init' [ 0]
'png_unknown_chunkp' [ 0]
'FT_Face_GetCharVariantIndex' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::VariationDevice>' [ 0 4 27]
'OT::LOffsetTo<OT::DeltaSetIndexMap>' [ 0 4]
'OT::CastP<OT::KernOT::SubTableWrapper, OT::IntType<unsigned char, 1> >' [ 0 4]
'af_gujr_nonbase_uniranges' [ 0]
'tt_sbit_decoder_load_metrics' [ 0]
'FT_Size_Request' [ 0]
'FT_CharMapRec' [ 0]
'tt_cmap4_next' [ 0]
'gconstpointer' [ 0]
'cr_png_free_default' [ 0]
'T1_Builder_FuncsRec' [ 0]
'ARRAY_LENGTH<unsigned short, 39>' [ 0]
'hb_font_get_glyph_extents' [ 0]
'_hb_face_for_data_reference_table' [ 0]
'OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >' [ 0 4]
'TT_Get_MM_Var' [ 0]
'BDF_PropertyType_' [ 0]
'OT::CoverageFormat2::intersects_coverage' [ 0 4 21]
'BBox_Conic_Check' [ 0]
'af_loader_compute_darkening' [ 0]
'_ft_face_scale_advances' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_sanitize_context_t>' [ 0 4 42]
'cff_random' [ 0]
'crc32_big' [ 0]
'unsigned char' [ 0]
'FT_String' [ 0]
'hb_buffer_get_glyph_infos' [ 0]
'OT::OffsetTo<OT::BaseScript, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::operator+<const OT::PairPosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'digits' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 4 33]
'OT::CursivePosFormat1::apply' [ 0 4 23]
'OT::Null<OT::VariationSelectorRecord>' [ 0 4]
'FT_Done_MM_Var' [ 0]
'Cr_z_inflateBackEnd' [ 0]
'CID_SizeRec_' [ 0]
'af_none_dflt_style_class' [ 0]
'FT_Get_PS_Font_Info' [ 0]
'OT::OffsetArrayOf<OT::CaretValue, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_font_get_glyph_v_origin_nil' [ 0]
'FT_Bitmap_Convert' [ 0]
'OT::CastP<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'af_loader_init' [ 0]
'OT::FeatureVariations' [ 0 4]
'png_write_chunk_header' [ 0]
'OT::hb_lazy_table_loader_t<AAT::trak>' [ 0 4]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::hb_sanitize_context_t::may_dispatch<OT::MarkBasePos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'FT_Sfnt_Table_Info' [ 0]
'hb_set_t::page_for' [ 0 10]
'OT::CastP<OT::GPOS, const void *>' [ 0 4]
'OT::OffsetListOf<OT::Lookup>' [ 0 4]
'OT::Null<OT::OffsetTable>' [ 0 4]
'png_gt' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'__va_list_tag' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::SingleSubstFormat1>' [ 0 4 227]
'cr_png_data_freer' [ 0]
'PS_Unicodes_CharIndexFunc' [ 0]
'gz_init' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathGlyphConstruction>' [ 0 4 27]
'OT::hb_collect_glyphs_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 4 33]
'FT_Service_CFFLoad' [ 0]
'cr_png_destroy_png_struct' [ 0]
'FT_Driver' [ 0]
'OT::CursivePosFormat1' [ 0 4]
'OT::LigatureSet' [ 0 4]
'CF2_RenderingFlags' [ 0]
'AF_PointRec_' [ 0]
'OT::operator+<const void *, OT::IntType<unsigned short, 2>, OT::Device>' [ 0 4]
'inflate_holder_t' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::PairPosFormat1>' [ 0 4 27]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, hb_get_subtables_context_t>' [ 0 4 12]
'ARRAY_LENGTH<unsigned int, 1>' [ 0]
'hb_utf8_t::strlen' [ 0 11]
'ps_hints_done' [ 0]
'OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 70]
'hb_unicode_eastasian_width' [ 0]
'png_zlib_inflate' [ 0]
'hb_ot_var_get_axis_count' [ 0]
'hb_font_t::get_glyph_v_advance' [ 0 11]
'PS_GetFontValueFunc' [ 0]
'OT::SingleSubst::serialize' [ 0 4 17]
'cr_png_read_row' [ 0]
'OT::operator+<const OT::ContextFormat1 *, OT::IntType<unsigned short, 2>, OT::RuleSet>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'_hb_glyph_info_get_general_category' [ 0]
'OT::EncodingRecord::sanitize' [ 0 4 20]
'OT::PosLookupSubTable' [ 0 4]
'OT::CBDT::accelerator_t::init' [ 0 4 10 25]
'OT::CBLC::sanitize' [ 0 4 10]
'afm_tokenize' [ 0]
'png_build_16to8_table' [ 0]
'OT::Extension<OT::ExtensionSubst>::get_subtable<OT::SubstLookupSubTable>' [ 0 4 35]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > >::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 195]
'ft_gzip_alloc' [ 0]
'OT::ClassDef::add_coverage<hb_set_t>' [ 0 4 14]
'hb_set_intersect' [ 0]
'af_adlm_dflt_style_class' [ 0]
'hb_font_funcs_set_glyph_h_kerning_func' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 42]
'OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Vector_Transform' [ 0]
'OT::cmap::find_subtable' [ 0 4 10]
'FT_Service_CFFLoadRec_' [ 0]
'_hb_ot_font_destroy' [ 0]
'FT_Raster_BitTest_Func' [ 0]
'OT::MultipleSubst::dispatch<OT::hb_closure_context_t>' [ 0 4 19]
'hb_unicode_funcs_t::general_category' [ 0 20]
't1_hints_stem' [ 0]
't1_allocate_blend' [ 0]
'small_capitals_from_capitals_coverage' [ 0]
'cff_parse_vsindex' [ 0]
'hb_object_create<hb_shape_plan_t>' [ 0]
'af_orya_script_class' [ 0]
'FT_CMap_Done' [ 0]
'hb_object_get_user_data<hb_blob_t>' [ 0]
'FT_Incremental_Interface' [ 0]
'OT::KernSubTableFormat2::sanitize' [ 0 4 25]
'OT::GSUBGPOS::get_script' [ 0 4 14]
'FT_Render_Glyph' [ 0]
'OT::ArrayOf<OT::LOffsetTo<OT::OffsetTable>, OT::IntType<unsigned int, 4> >' [ 0 4]
'hb_font_glyph_to_string' [ 0]
'TT_Load_Face_Func' [ 0]
'FT_UnitVector' [ 0]
'OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 64]
'png_textp' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 107]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 59]
'OT::StructAtOffset<OT::OffsetListOf<OT::Lookup> >' [ 0 4]
'OT::Rule::sanitize' [ 0 4 10]
'OT::CastP<OT::ConditionSet, const void *>' [ 0 4]
'OT::ArrayOf<OT::BaseLangSysRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_LibraryRec_' [ 0]
'OT::Sanitizer<OT::fvar>::sanitize' [ 0 4 25]
'OT::ConditionSet::evaluate' [ 0 4 18]
'cf2_doStems' [ 0]
'png_write_status_ptr' [ 0]
'ft_mem_strdup' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 4 27]
'_get_gpos' [ 0]
'ft_trig_pseudo_rotate' [ 0]
'OT::ArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >' [ 0 4]
'cff_ps_has_glyph_names' [ 0]
'OT::ArrayOf<OT::MathGlyphVariantRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 74]
'hb_set_t::symmetric_difference' [ 0 10]
'tt_cmap6_char_index' [ 0]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>' [ 0 4]
'hb_ot_map_glyphs_fast' [ 0]
'_indic_syllable_machine_trans_actions' [ 0]
'OT::CastP<OT::kern, char>' [ 0 4]
'_deserialize_text_indicies' [ 0]
'png_setup_up_row_only' [ 0]
'hb_buffer_t::swap_buffers' [ 0 13]
'cr_png_get_channels' [ 0]
'af_guru_dflt_style_class' [ 0]
'OT::MathVariants::get_min_connector_overlap' [ 0 4 18]
'FT_Outline_Reverse' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat1>' [ 0 4 33]
'CFF_BlendRec' [ 0]
'OT::CaretValueFormat2::get_caret_value' [ 0 4 23]
'af_indic_hints_init' [ 0]
'OT::fvar::get_axis_count' [ 0 4 10]
'hb_buffer_reference' [ 0]
'cr_png_process_IDAT_data' [ 0]
'OT::Sequence::collect_glyphs' [ 0 4 14]
'hb_user_data_array_t::init' [ 0 22]
'T1_GlyphSlot' [ 0]
'OT::StructAfter<unsigned char, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'png_charp' [ 0]
'OT::Null<OT::DeltaSetIndexMap>' [ 0 4]
'CF2_CallbackParamsRec' [ 0]
'af_osma_script_class' [ 0]
'OT::CmapSubtableFormat14::get_glyph_variant' [ 0 4 26]
'png_sRGB_checks' [ 0]
'cr_png_read_filter_row_sub3_sse2' [ 0]
'hb_icu_script_from_script' [ 0]
'cff_vstore_load' [ 0]
'TT_Post_25_' [ 0]
'zero_mark_advances' [ 0]
'FT_Span' [ 0]
'OT::MathVariants' [ 0 4]
'OT::NonDefaultUVS' [ 0 4]
'OT::Sanitizer<OT::glyf>::lock_instance' [ 0 4 25]
'tt_face_done_kern' [ 0]
'Cr_z_inflateValidate' [ 0]
'hb_ot_map_builder_t::add_global_bool_feature' [ 0 21]
'OT::hb_sanitize_context_t::check_struct<OT::_hea<OT::hhea> >' [ 0 4 27]
'af_thai_nonbase_uniranges' [ 0]
'cr_png_write_data' [ 0]
'PSH_Globals_FuncsRec' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::hb_collect_glyphs_context_t::dispatch<OT::MarkMarkPosFormat1>' [ 0 4 33]
'OT::MarkRecord::sanitize' [ 0 4 16]
'OT::IndexSubtableRecord' [ 0 4]
'OT::MinMax' [ 0 4]
'OT::operator+<const void *, OT::IntType<unsigned int, 4>, OT::IndexSubtableArray>' [ 0 4]
'OT::ContextFormat3::would_apply' [ 0 4 20]
'data_create_hangul' [ 0]
'hb_font_get_glyph_h_advance_func_t' [ 0]
'compare_offsets' [ 0]
'build_tree' [ 0]
'ps_tobool' [ 0]
'_hb_unicode_funcs_nil' [ 0]
'OT::Null<OT::EncodingRecord>' [ 0 4]
'FT_Size_DoneFunc' [ 0]
'Round_None' [ 0]
'OT::FeatMinMaxRecord' [ 0 4]
'OT::hb_ot_apply_context_t::skipping_iterator_t::reject' [ 0 4 27 48]
'Cr_z_get_crc_table' [ 0]
'FT_ServiceCacheRec_' [ 0]
'Ins_INSTCTRL' [ 0]
'hb_glib_unicode_mirroring' [ 0]
'OT::hb_serialize_context_t::extend<OT::SortedArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::hb_lazy_loader_t<OT::glyf::accelerator_t>' [ 0 4]
'handle_variation_selector_cluster' [ 0]
'CFF_Decoder_Get_Glyph_Callback' [ 0]
'hb_object_set_user_data<hb_unicode_funcs_t>' [ 0]
'OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::Null<OT::MathGlyphConstruction>' [ 0 4]
'OT::Index' [ 0 4]
'PSH_Globals' [ 0]
'OT::Extension<OT::ExtensionPos>' [ 0 4]
'psh_hint_table_find_strong_points' [ 0]
'OT::Sanitizer<OT::head>::lock_instance' [ 0 4 25]
'hb_ft_font_create_referenced' [ 0]
'ps_mask_table_merge_all' [ 0]
'hb_ot_map_feature_flags_t' [ 0]
'hb_face_t::reference_table' [ 0 11]
'OT::hb_sanitize_context_t::check_struct<OT::cmap>' [ 0 4 27]
'CF2_HintMoveRec' [ 0]
'OT::ChainContextClosureLookupContext' [ 0 4]
'hb_font_create_sub_font' [ 0]
'lang_equal' [ 0]
'arabic_joining' [ 0]
'OT::ArrayOf<OT::LOffsetTo<OT::OffsetTable>, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 76]
'_khmer_syllable_machine_index_offsets' [ 0]
'OT::CastP<OT::IntType<unsigned short, 2>, const void *>' [ 0 4]
'cpu_check_inited_once' [ 0]
'OT::CoverageFormat1' [ 0 4]
'hb_font_get_glyph_v_origin_parent' [ 0]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4> >::get_image_data' [ 0 4 60]
'OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 60]
'OT::CoverageFormat2' [ 0 4]
'hb_shape_full' [ 0]
'OT::BinSearchArrayOf<OT::KernPair>' [ 0 4]
'ft_gzip_free' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::fvar>' [ 0 4 27]
'OT::BaseTagList' [ 0 4]
'OT::CoverageFormat1::serialize' [ 0 4 21]
'cr_png_image_write_to_stdio' [ 0]
'pshinter_get_t2_funcs' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::IndexSubtable, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'hb_font_funcs_is_immutable' [ 0]
'hb_set_union' [ 0]
'CF2_F16Dot16' [ 0]
'FT_Stream_New' [ 0]
'OT::CastP<OT::OffsetListOf<OT::Lookup>, const void *>' [ 0 4]
'af_gujr_script_class' [ 0]
'Cr_z_deflateParams' [ 0]
'bi_windup' [ 0]
'hb_ft_font_create' [ 0]
'hash_bucket' [ 0]
'hb_object_init<hb_shape_plan_t>' [ 0]
'hb_ft_get_variation_glyph' [ 0]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_would_apply_context_t>' [ 0 4 29]
'OT::Null<OT::MathValueRecord>' [ 0 4]
'TT_Name' [ 0]
'parse_feature_value_postfix' [ 0]
'OT::hb_closure_context_t::hb_closure_context_t' [ 0 4 26]
'OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 59]
'gz_avail' [ 0]
'OT::CastP<OT::Index, char>' [ 0 4]
'OT::RecordListOf<OT::Feature>' [ 0 4]
'af_grek_smcp_style_class' [ 0]
'png_image_format' [ 0]
'OT::CastP<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'modifier_combining_marks' [ 0]
'hb_set_t::get_population' [ 0 10]
'cr_png_read_start_row' [ 0]
'CF2_HintRec_' [ 0]
'uintptr_t' [ 0]
'GX_MVarTable' [ 0]
'tt_face_load_strike_metrics' [ 0]
'CF2_HintMaskRec' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::AttachList' [ 0 4]
'OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_SBitDecoder' [ 0]
'cr_png_set_swap_alpha' [ 0]
'ft_raster1_render' [ 0]
'OT::MultipleSubst::dispatch<OT::hb_would_apply_context_t>' [ 0 4 19]
'cr_png_set_cHRM' [ 0]
'OT::PairPosFormat1::get_coverage' [ 0 4 20]
'tt_cmap4_get_info' [ 0]
'FT_Library_SetLcdGeometry' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MathValueRecord>' [ 0 4 27]
'cr_png_get_header_ver' [ 0]
'cr_png_set_expand' [ 0]
'AF_LatinBlueRec_' [ 0]
'OT::MathConstants::sanitize' [ 0 4 19]
'OT::Sanitizer<OT::os2>::lock_instance' [ 0 4 24]
'OT::hb_sanitize_context_t::check_struct<OT::FixedVersion<OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'TT_Load_SBit_Image_Func' [ 0]
'ft_outline_glyph_done' [ 0]
'OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 57]
'OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 68]
'FT_Request_Size' [ 0]
'OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >::sanitize<OT::PairSet::sanitize_closure_t *>' [ 0 4 60]
'cr_png_read_info' [ 0]
'OT::CastP<OT::GDEF, const void *>' [ 0 4]
'hb_ot_var_get_axes' [ 0]
'GSUBProxy' [ 0]
'hb_unicode_funcs_get_default' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::PairSet>' [ 0 4 27]
'table_dir_entry_fields' [ 0]
'OT::StructAtOffset<OT::MathVariants>' [ 0 4]
'FT_Outline_Get_BBox' [ 0]
'Cr_z_Bytef' [ 0]
'gzFile_s' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::Coverage>' [ 0 4 28]
'ordinals_coverage' [ 0]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 60]
'OT::Null<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> > >' [ 0 4]
'FT_Size_InitFunc' [ 0]
'hb_unicode_props_flags_t' [ 0]
'OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >::sanitize<unsigned int>' [ 0 4 66]
'OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 67]
'hb_ot_layout_language_find_feature' [ 0]
'ssize_t' [ 0]
'_hb_glyph_info_get_lig_id' [ 0]
'__int64_t' [ 0]
'T1_Hints_OpenFunc' [ 0]
'hb_unicode_funcs_get_user_data' [ 0]
'OT::ChainContextFormat3::closure' [ 0 4 25]
'sfnt_services' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_ot_var_has_data' [ 0]
'tt_cmap12_char_map_binary' [ 0]
'Cr_z_inflatePrime' [ 0]
'hb_set_previous' [ 0]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned short, 2> >' [ 0 4]
'data_create_arabic' [ 0]
'operator|' [ 0]
'af_cyrl_ordn_style_class' [ 0]
'OT::BaseCoordFormat3' [ 0 4]
'__int32_t' [ 0]
'hb_font_funcs_set_glyph_v_origin_func' [ 0]
'hb_get_subtables_context_t::apply_to<OT::ReverseChainSingleSubstFormat1>' [ 0 28]
'tt_cmap_init' [ 0]
'TT_Set_CodeRange' [ 0]
'OT::TTCHeaderVersion1::get_face' [ 0 4 23]
'tt_face_load_post' [ 0]
'hb_unicode_funcs_t::decompose_compatibility' [ 0 20]
'OT::GSUBGPOS::get_feature_tag' [ 0 4 14]
'OT::ArrayOf<OT::LOffsetTo<OT::Coverage>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 75]
'Ins_ODD' [ 0]
'TT_CMap_Class' [ 0]
'inflate_codes_new' [ 0]
'OT::ContextClosureFuncs' [ 0 4]
'OT::StructAtOffset<OT::LigGlyph>' [ 0 4]
'cff_decoder_prepare' [ 0]
'OT::StructAtOffset<OT::FeatureVariations>' [ 0 4]
'ft_mem_alloc' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::PairPosFormat1>' [ 0 4 227]
'af_deva_dflt_style_class' [ 0]
'FT_Stream_ExtractFrame' [ 0]
'OT::IndexSubtableArray::find_table' [ 0 4 24]
'insert_dotted_circles' [ 0]
'FT_Service_PropertiesRec_' [ 0]
'OT::ContextFormat2::sanitize' [ 0 4 20]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>::push' [ 0 52]
'OT::Null<OT::LOffsetTo<OT::Coverage> >' [ 0 4]
'af_latin_metrics_check_digits' [ 0]
'FT_Get_Font_Format' [ 0]
'PS_GetFontInfoFunc' [ 0]
'hb_set_t::page_t::add_range' [ 0 10 18]
'OT::Sanitizer<OT::hmtxvmtx<OT::vmtx, OT::vhea> >::lock_instance' [ 0 4 50]
'OT::GSUBGPOS::get_feature_count' [ 0 4 14]
'png_image_read_init' [ 0]
'hb_font_t::get_glyph_advance_for_direction' [ 0 11]
'hb_font_get_empty' [ 0]
'hb_buffer_t::reverse_clusters' [ 0 13]
'murmur_hash_3_128' [ 0]
'hb_font_get_glyph_extents_func_t' [ 0]
'OT::Sanitizer<OT::GDEF>::lock_instance' [ 0 4 25]
'OT::FixedVersion<OT::IntType<unsigned short, 2> >' [ 0 4]
'trampoline_create<int (*)(hb_font_t *, void *, unsigned int, unsigned int, unsigned int *, void *)>' [ 0]
'OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 74]
'FT_BSB_Adjust_Func' [ 0]
'OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Sanitizer<OT::post>::Sanitizer' [ 0 4 25]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hb_font_get_glyph_v_origin_func_t' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 27]
'Round_To_Half_Grid' [ 0]
'ft_stroke_border_moveto' [ 0]
'black_TWorker_' [ 0]
'png_const_colorp' [ 0]
'cr_png_do_expand' [ 0]
'hb_ot_substitute' [ 0]
'OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 69]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::Null<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> > >' [ 0 4]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::PairPosFormat2>' [ 0 4 227]
'OT::LONGDATETIME' [ 0 4]
'load_format_20' [ 0]
'indic_features' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_version' [ 0]
'hb_set_t::page_t::is_equal' [ 0 10 18]
'cr_png_malloc_base' [ 0]
'OT::Record<OT::Feature>::sanitize' [ 0 4 25]
'OT::OffsetTable::get_table_tags' [ 0 4 17]
'hb_ot_old_tag_from_script' [ 0]
'cr_png_reciprocal2' [ 0]
'Ins_DIV' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::push' [ 0 69]
'hb_buffer_set_direction' [ 0]
'hb_ot_layout_has_positioning' [ 0]
'OT::SinglePosFormat2::sanitize' [ 0 4 22]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>::push' [ 0 61]
'af_copt_uniranges' [ 0]
'OT::AxisValueMap' [ 0 4]
'OT::IndexSubtableHeader::sanitize' [ 0 4 25]
'OT::StructAfter<OT::KernOT::SubTableWrapper, OT::KernOT::SubTableWrapper>' [ 0 4]
'af_latn_c2cp_style_class' [ 0]
'OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'ft_trig_prenorm' [ 0]
't1_load_keyword' [ 0]
'af_autofitter_done' [ 0]
'OT::Sanitizer<OT::HVARVVAR>' [ 0 4]
'OT::Supplier<unsigned int>::operator[]' [ 0 4 28]
'OT::maxp::sanitize' [ 0 4 10]
'png_colorspace' [ 0]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>::get_glyph' [ 0 4 57]
'cf2_arrstack_init' [ 0]
'FT_Vector' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::set_ignore_zwj' [ 0 4 27 38]
'AF_Loader' [ 0]
'offset_table_fields' [ 0]
'OT::StructAtOffset<OT::MathTopAccentAttachment>' [ 0 4]
'OT::hb_ot_apply_context_t::dispatch<OT::ContextFormat1>' [ 0 4 27]
'hb_font_funcs_set_glyph_v_kerning_func' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 83]
'hb_buffer_reverse_range' [ 0]
'OT::Sanitizer<OT::CBLC>::sanitize' [ 0 4 25]
'OT::Null<OT::LOffsetTo<OT::OffsetTable> >' [ 0 4]
'get_apple_string' [ 0]
'cf2_outline_reset' [ 0]
'OT::ClassDefFormat2::add_coverage<hb_set_t>' [ 0 4 21]
'OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'cr_png_read_png' [ 0]
'png_warning_parameters' [ 0]
'png_row_info_struct' [ 0]
'char_type_func' [ 0]
'PS_Table_FuncsRec' [ 0]
'cff_service_glyph_dict' [ 0]
'TT_Run_Context' [ 0]
'OT::operator+<const OT::ContextFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'ft_stroke_border_conicto' [ 0]
'OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >' [ 0 4]
'ARRAY_LENGTH<char [4], 4>' [ 0]
'ps_property_set' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 4 27]
'OT::MarkLigPosFormat1::sanitize' [ 0 4 23]
'tt_size_request' [ 0]
'FT_SfntLangTag_' [ 0]
'OT::os2::sanitize' [ 0 4 9]
'OT::operator+<const OT::MathTopAccentAttachment *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'TT_Size_Metrics_' [ 0]
'intptr_t' [ 0]
'FT_Hash' [ 0]
'T1_ParserRec' [ 0]
'OT::Sanitizer<OT::hmtxvmtx<OT::hmtx, OT::hhea> >::lock_instance' [ 0 4 50]
'Ins_RTDG' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::ContextFormat2>' [ 0 4 27]
'max_align_t' [ 0]
'FT_Offset' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'OT::ClassDefFormat1::get_class' [ 0 4 21]
'T1_Face_Init' [ 0]
'af_nkoo_script_class' [ 0]
'OT::Null<OT::RecordListOf<OT::Feature> >' [ 0 4]
'OT::hb_serialize_context_t::allocate_size<OT::SingleSubstFormat1>' [ 0 4 28]
'cplens' [ 0]
'MAX<float>' [ 0]
'OT::VariationSelectorRecord' [ 0 4]
'__jmp_buf' [ 0]
'OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'size_t' [ 0]
'tt_cmap13_validate' [ 0]
'apply_string<GPOSProxy>' [ 0]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 29]
'hb_get_subtables_context_t::dispatch<OT::SinglePosFormat2>' [ 0 28]
'cf2_buf_isEnd' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CBLC>' [ 0 4 27]
'OT::hb_closure_context_t::dispatch<OT::ContextFormat1>' [ 0 4 26]
'FT_Size_Request_Type' [ 0]
'ps_get_standard_strings' [ 0]
'cr_png_chunk_benign_error' [ 0]
'OT::SortedArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Sanitizer<OT::OpenTypeFontFile>' [ 0 4]
'PSAux_Service' [ 0]
'OT::context_apply_lookup' [ 0 4]
'deflate_stored' [ 0]
'OT::CastP<OT::vhea, char>' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'cr_png_safe_execute' [ 0]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::remove<hb_user_data_key_t *>' [ 0 74]
'OT::operator+<const OT::MarkBasePosFormat1 *, OT::IntType<unsigned short, 2>, OT::MarkArray>' [ 0 4]
'gz_state' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::ContextFormat3>' [ 0 4 27]
'gz_reset' [ 0]
'TT_LoaderRec_' [ 0]
'OT::SingleSubstFormat2' [ 0 4]
'cr_png_set_compression_buffer_size' [ 0]
'cr_png_access_version_number' [ 0]
'OT::ArrayOf<OT::EntryExitRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 67]
'FT_Select_Size' [ 0]
'af_latp_uniranges' [ 0]
'hb_ot_layout_language_get_required_feature' [ 0]
'hb_ot_map_builder_t::add_feature' [ 0 21]
'OT::Sanitizer<OT::loca>::Sanitizer' [ 0 4 25]
'TT_Size' [ 0]
'hb_object_set_user_data<hb_buffer_t>' [ 0]
'tt_face_load_sbix_image' [ 0]
'OT::IntType<short, 2>::sanitize' [ 0 4 23]
'OT::post' [ 0 4]
'OT::MultipleSubstFormat1::get_coverage' [ 0 4 26]
'FT_GlyphLoader_Done' [ 0]
'FT_Service_MultiMasters' [ 0]
'OT::CastP<OT::RuleSet, const void *>' [ 0 4]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 42]
'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 72]
'OT::LOffsetTo<OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::VarData::get_delta' [ 0 4 13]
'hb_object_init<hb_font_t>' [ 0]
'cff_service_multi_masters' [ 0]
'FT_Done_Glyph' [ 0]
'OT::CheckSum' [ 0 4]
'hb_ft_font_get_face' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> >::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 121]
'af_glyph_hints_rescale' [ 0]
'T1_Get_Var_Design' [ 0]
'TCell_' [ 0]
'tt_face_load_bhed' [ 0]
'cr_png_set_packswap' [ 0]
'hb_set_t::get_max' [ 0 10]
'_use_syllable_machine_trans_targs' [ 0]
'OT::operator+<const OT::ChainContextFormat2 *, OT::IntType<unsigned short, 2>, OT::ChainRuleSet>' [ 0 4]
'PSH_Globals_SetScaleFunc' [ 0]
'FT_Module' [ 0]
'inflate_block_mode' [ 0]
'FT_Stream_GetULongLE' [ 0]
'OT::Null<OT::TableRecord>' [ 0 4]
'OT::IntType<unsigned short, 2>::operator unsigned short' [ 0 4 32]
'tt_cmap12_char_index' [ 0]
'CF2_GlyphPathRec_' [ 0]
'OT::Null<OT::RecordListOf<OT::Script> >' [ 0 4]
'FT_GlyphLoader_CheckSubGlyphs' [ 0]
'OT::Record<OT::Script>::cmp' [ 0 4 24]
'OT::IntType<signed char, 1>' [ 0 4]
'Split_Conic' [ 0]
'OT::CastP<OT::avar, char>' [ 0 4]
'OT::CastP<OT::BitmapSizeTable, const void *>' [ 0 4]
'OT::Sanitizer<OT::cmap>::sanitize' [ 0 4 25]
'OT::Null<OT::VarData>' [ 0 4]
'hb_font_funcs_set_font_h_extents_func' [ 0]
'_hb_ot_complex_shaper_indic' [ 0]
'FT_Stream_ExitFrame' [ 0]
'ft_lookup_glyph_renderer' [ 0]
'OT::GSUBGPOS' [ 0 4]
'af_gujr_uniranges' [ 0]
'data_destroy_indic' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat4>' [ 0 4 27]
'OT::hb_closure_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 4 26]
'ps_dimension_reset_mask' [ 0]
'FT_TrueTypeEngineType_' [ 0]
'FT_Stroker_ParseOutline' [ 0]
'T1_Hints_SetStemFunc' [ 0]
'PS_GetFontExtraFunc' [ 0]
'ft_mem_qrealloc' [ 0]
'T1_Done_Blend' [ 0]
'OT::MathKernInfo::sanitize' [ 0 4 18]
'hb_font_set_ptem' [ 0]
'OT::OffsetTo<OT::FeatureParams, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 66]
'OT::operator+<const void *, OT::IntType<unsigned short, 2>, OT::MathKern>' [ 0 4]
'OT::attach_type_t' [ 0 4]
't1_cmap_unicode_class_rec' [ 0]
'cr_png_write_image' [ 0]
'ps_hints_t1reset' [ 0]
'OT::ValueFormat::has_device' [ 0 4 17]
'hb_set_t::del_range' [ 0 10]
'OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_LangTagRec' [ 0]
'hb_buffer_t::has_separate_output' [ 0 13]
'png_progressive_row_ptr' [ 0]
'hb_object_create<hb_set_t>' [ 0]
'FT_GlyphLoad' [ 0]
'Ins_RTHG' [ 0]
'OT::BEInt<signed char, 1>' [ 0 4]
'OT::OffsetTo<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 111]
'_hb_glyph_info_is_zwnj' [ 0]
'FT_Service_Kerning' [ 0]
'CF2_HintMaskRec_' [ 0]
'tt_cmap0_char_index' [ 0]
'_deserialize_text_trans_actions' [ 0]
'OT::OffsetArrayOf<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::OffsetTo<OT::Anchor, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 59]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'ARRAY_LENGTH<hb_set_t::page_t, 1>' [ 0]
'__v8hi' [ 0]
'CF2_BlueRec' [ 0]
'OT::Sanitizer<OT::GSUB>' [ 0 4]
'IUP_WorkerRec' [ 0]
'horizontal_features' [ 0]
'png_xy' [ 0]
'OT::hb_serialize_context_t::copy<OT::SubstLookup>' [ 0 4 28]
'OT::PairSet::sanitize' [ 0 4 13]
'destroy_face' [ 0]
'__mm_loadl_epi64_struct' [ 0]
'khmer_syllable_machine_start' [ 0]
'FT_GZipFile' [ 0]
'OT::LigatureSet::apply' [ 0 4 17]
'afm_key_table' [ 0]
'OT::ArrayOf<OT::MarkRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 62]
'OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 59]
'OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 70]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 110]
'Ins_MSIRP' [ 0]
'cr_png_push_have_info' [ 0]
'hb_mutex_t::finish' [ 0 12]
'FT_Properties_GetFunc' [ 0]
'OT::ChainContext::dispatch<hb_get_subtables_context_t>' [ 0 4 18]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::add' [ 0 47]
'ft_conic_split' [ 0]
'ft_black_set_mode' [ 0]
'OT::ArrayOf<OT::EntryExitRecord, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 67]
'png_check_chunk_length' [ 0]
'hb_object_get_user_data<hb_shape_plan_t>' [ 0]
'OT::ExtensionFormat1<OT::ExtensionPos>::sanitize' [ 0 4 40]
'parse_char' [ 0]
'hb_get_subtables_context_t::apply_to<OT::SinglePosFormat2>' [ 0 28]
'FT_GlyphLoader_Adjust_Subglyphs' [ 0]
'cff_glyph_load' [ 0]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>::sanitize' [ 0 4 57]
'OT::ArrayOf<OT::OffsetTo<OT::SubstLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 110]
'FT_Raster_RenderFunc' [ 0]
'Ins_SPVFS' [ 0]
'af_beng_script_class' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::SinglePosFormat2>' [ 0 4 27]
'hb_set_t::process<HbOpXor>' [ 0 10]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_would_apply_context_t>' [ 0 4 35]
'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 77]
'Long' [ 0]
'Write_CVT_Stretched' [ 0]
'af_geor_script_class' [ 0]
'cr_png_set_filter_heuristics' [ 0]
'cff_expertsubset_charset' [ 0]
'AFM_ValueType_' [ 0]
'FT_StrokerBorder_' [ 0]
'af_dummy_hints_apply' [ 0]
'af_avst_dflt_style_class' [ 0]
'hb_object_set_user_data<hb_set_t>' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::CursivePos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'__v4su' [ 0]
'AF_CJKBlueRec_' [ 0]
'hb_blob_get_data_writable' [ 0]
'af_tibt_nonbase_uniranges' [ 0]
'png_infop' [ 0]
'__uid_t' [ 0]
'Cr_z_inflateSync' [ 0]
'Cr_z_gzseek' [ 0]
'initial_reordering_standalone_cluster' [ 0]
'OT::operator+<const OT::ReverseChainSingleSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::OffsetArrayOf<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'png_product2' [ 0]
'Ins_IDEF' [ 0]
'use_syllable_machine_start' [ 0]
'fold_2' [ 0]
'fold_3' [ 0]
'fold_4' [ 0]
'OT::ContextApplyLookupContext' [ 0 4]
'OT::Null<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> > >' [ 0 4]
'psh_globals_set_scale' [ 0]
'OT::StructAtOffset<char>' [ 0 4]
'ps_tofixedarray' [ 0]
'OT::operator+<const OT::ContextFormat2 *, OT::IntType<unsigned short, 2>, OT::RuleSet>' [ 0 4]
'TT_New_Context' [ 0]
'af_buhd_uniranges' [ 0]
'OT::StructAtOffset<OT::IntType<short, 2> >' [ 0 4]
'cr_png_set_chunk_cache_max' [ 0]
'OT::operator+<const OT::ChainContextFormat3 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'config_s' [ 0]
'OT::GSUBGPOS::get_script_tags' [ 0 4 14]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'FT_Face_GetCharsOfVariant' [ 0]
'parse_float' [ 0]
'FT_Outline_LineToFunc' [ 0]
'hb_font_funcs_set_font_v_extents_func' [ 0]
'_hb_unsigned_int_mul_overflows' [ 0]
'tt_face_lookup_table' [ 0]
'af_latp_dflt_style_class' [ 0]
'ft_standard_raster' [ 0]
'hb_font_get_variation_glyph' [ 0]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 58]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::MarkMarkPosFormat1>' [ 0 4 227]
'cr_png_set_alpha_mode' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Record<OT::Script>::sanitize' [ 0 4 24]
'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 62]
'zero_mark_widths_by_gdef' [ 0]
't1_get_name_index' [ 0]
'hb_glib_unicode_decompose' [ 0]
'png_bytepp' [ 0]
'would_substitute_feature_t::would_substitute' [ 0 28]
'__gnuc_va_list' [ 0]
'cr_png_chunk_warning' [ 0]
'read64le' [ 0]
'OT::StructAtOffset<OT::IndexSubtable>' [ 0 4]
'Cpal' [ 0]
'CFF_CMapStd' [ 0]
'cf2_hintmap_dump' [ 0]
'joining_form_t' [ 0]
'OT::operator+<const OT::IndexSubtableRecord *, OT::IntType<unsigned int, 4>, OT::IndexSubtable>' [ 0 4]
'hb_font_get_variation_glyph_func_t' [ 0]
'CFF_VStoreRec' [ 0]
'OT::hmtxvmtx<OT::vmtx, OT::vhea>::accelerator_t::init' [ 0 4 34 49]
'OT::SingleSubstFormat1::closure' [ 0 4 24]
'OT::HBINT16' [ 0 4]
'OT::Null<OT::post>' [ 0 4]
'OT::OffsetListOf<OT::SubstLookup>' [ 0 4]
'PS_UniMap' [ 0]
'T1_BuilderRec' [ 0]
'OT::StructAtOffset<OT::KernClassTable>' [ 0 4]
'Init_Linked' [ 0]
'slide_hash' [ 0]
'cr_png_get_iCCP' [ 0]
'hb_font_funcs_set_glyph_contour_point_func' [ 0]
'hb_options' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ContextFormat1>' [ 0 28]
'hb_ot_font_t' [ 0]
'tt_cmap13_char_map_binary' [ 0]
'OT::AnchorFormat3::sanitize' [ 0 4 19]
'OT::CastP<OT::MarkArray, const void *>' [ 0 4]
'cff_ps_get_font_info' [ 0]
'OT::Anchor::sanitize' [ 0 4 12]
'tt_cmap12_char_next' [ 0]
'OT::KernOT' [ 0 4]
'tt_driver_done' [ 0]
'hb_language_item_t' [ 0]
'hb_font_get_glyph_v_kerning_parent' [ 0]
'PSAux_ServiceRec_' [ 0]
'cr_png_reciprocal' [ 0]
'CFF_FontRecDictRec_' [ 0]
'OT::MarkMarkPosFormat1::sanitize' [ 0 4 24]
'OT::MathItalicsCorrectionInfo::get_value' [ 0 4 31]
'hb_unicode_funcs_set_mirroring_func' [ 0]
'hb_font_make_immutable' [ 0]
'OT::ReverseChainSingleSubstFormat1' [ 0 4]
'cr_png_write_flush' [ 0]
'cr_png_read_finish_row' [ 0]
'FT_ServiceDescRec' [ 0]
'FT_Get_Advance' [ 0]
'OT::CBDT' [ 0 4]
'OT::AlternateSubst::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 20]
'ps_dimension_set_mask_bits' [ 0]
'OT::ArrayOf<OT::MathGlyphPartRecord, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 71]
'FT_Incremental_InterfaceRec_' [ 0]
'OT::ClassDef::add_class<hb_set_t>' [ 0 4 14]
'OT::Sanitizer<OT::cmap>::lock_instance' [ 0 4 25]
'hb_set_next' [ 0]
'OT::ArrayOf<OT::MarkRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 62]
'CF2_Frac' [ 0]
'hb_icu_script_to_script' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>::resize' [ 0 52]
'AF_LatinAxis' [ 0]
'hb_script_get_horizontal_direction' [ 0]
'OT::MathKern' [ 0 4]
'hb_object_is_valid<hb_font_t>' [ 0]
'CF2_BufferRec_' [ 0]
'AF_Script' [ 0]
'hb_ot_shape_internal' [ 0]
'OT::Coverage::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 14]
'OT::CastP<OT::ChainRuleSet, const void *>' [ 0 4]
'OT::Null<OT::MATH>' [ 0 4]
'hb_atomic_int_t::get_unsafe' [ 0 17]
'hb_ot_layout_get_ligature_carets' [ 0]
'crc32_combine_' [ 0]
'OT::CastP<OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'cf2_hint_isPair' [ 0]
'initial_reordering_consonant_syllable' [ 0]
'hb_buffer_set_length' [ 0]
'cid_load_glyph' [ 0]
'find_unicode_charmap' [ 0]
'hb_buffer_t::add' [ 0 13]
'hb_ot_tags_from_script' [ 0]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 86]
'hb_set_t::next' [ 0 10]
'configuration_table' [ 0]
'Cr_z_adler32' [ 0]
'OT::StructAtOffset<OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> > >' [ 0 4]
'af_glag_dflt_style_class' [ 0]
'OT::operator+<const OT::OffsetListOf<OT::Lookup> *, OT::IntType<unsigned short, 2>, OT::Lookup>' [ 0 4]
'Ins_DUP' [ 0]
'TT_Access_Glyph_Frame' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ContextFormat3>' [ 0 28]
'tt_cmap_unicode_init' [ 0]
'T1_CMapCustom' [ 0]
'OT::CursivePos::dispatch<hb_get_subtables_context_t>' [ 0 4 16]
'config' [ 0]
'png_image_write_control' [ 0]
'af_bamu_dflt_style_class' [ 0]
'cplext' [ 0]
'hb_ot_font_set_funcs' [ 0]
'setup_masks_myanmar' [ 0]
'af_osma_dflt_style_class' [ 0]
'Cr_z__tr_tally' [ 0]
'OT::SubstLookup::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 17]
'af_vaii_dflt_style_class' [ 0]
'ps_parser_to_token' [ 0]
'FT_Bitmap_Init' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::finish' [ 0 54]
'find_variant_selector_charmap' [ 0]
'FT_GlyphLoader_Prepare' [ 0]
'FT_Library_SetLcdFilterWeights' [ 0]
'hb_shape_plan_create2' [ 0]
'OT::PairSet' [ 0 4]
'FT_FD_Select_Get_Func' [ 0]
'png_init_palette_transformations' [ 0]
'OT::Sanitizer<OT::kern>::Sanitizer' [ 0 4 25]
'Ins_ALIGNPTS' [ 0]
'hb_buffer_add_utf<hb_utf32_t<true> >' [ 0]
'OT::Null<OT::OpenTypeFontFile>' [ 0 4]
'FT_Raster_BitSet_Func' [ 0]
'hb_no_trace_t<const _hb_void_t *>::ret' [ 0 35]
'extra_lbits' [ 0]
'hb_face_create_for_tables' [ 0]
'OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::operator+<const void *, OT::IntType<unsigned int, 4>, OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> > >' [ 0 4]
'hb_sort_r' [ 0]
'cff_parse_num' [ 0]
'OT::Null<OT::IntType<unsigned short, 2> >' [ 0 4]
'cr_png_write_zTXt' [ 0]
'hb_coords_present' [ 0]
'OT::ArrayOf<OT::TableRecord, OT::BinSearchHeader>::sanitize' [ 0 4 51]
'OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 59]
'ARRAY_LENGTH<indic_config_t, 11>' [ 0]
'Cr_z_deflateInit_' [ 0]
'OT::Null<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> > >' [ 0 4]
'ps_builder_start_point' [ 0]
'hb_ot_layout_language_get_feature_tags' [ 0]
'af_nkoo_nonbase_uniranges' [ 0]
'_try_writable_inplace' [ 0]
'FT_SubGlyphRec_' [ 0]
'OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 76]
'decltype(nullptr)' [ 0]
'Ins_SZP0' [ 0]
'Ins_SZP1' [ 0]
'Ins_SZP2' [ 0]
'hb_font_funcs_make_immutable' [ 0]
'FT_Module_Interface' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::AnchorFormat2>' [ 0 4 27]
'OT::Coverage::Iter::get_glyph' [ 0 4 14 20]
'hb_buffer_t::allocate_var' [ 0 13]
'FT_CMap_CharVariantListFunc' [ 0]
'hb_set_t::add_range' [ 0 10]
'OT::CastR<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> >, OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'af_khmr_uniranges' [ 0]
'hb_unicode_funcs_t::decompose' [ 0 20]
'extra_dbits' [ 0]
'CF2_StemHint' [ 0]
't1_cmap_standard_init' [ 0]
't1_service_ps_info' [ 0]
'abs_i16' [ 0]
'AFM_TrackKern' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::shrink' [ 0 54]
'cf2_glyphpath_closeOpenPath' [ 0]
'hb_get_subtables_context_t::apply_to<OT::MarkBasePosFormat1>' [ 0 28]
'cr_png_icc_set_sRGB' [ 0]
'hb_set_t::clear' [ 0 10]
'PS_Builder' [ 0]
'png_image_read_and_map' [ 0]
'tt_cmap6_char_next' [ 0]
'HbOpAnd::process<unsigned long long>' [ 0 9]
'OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 104]
'hb_language_item_t::operator=' [ 0 20]
'FT_Set_MM_Design_Func' [ 0]
'hb_buffer_t::remove_output' [ 0 13]
'_hb_options' [ 0]
'Ins_JMPR' [ 0]
'hb_buffer_t::skip_glyph' [ 0 13]
'OT::glyf::accelerator_t::fini' [ 0 4 10 25]
'OT::SortedArrayOf<OT::KernPair, OT::BinSearchHeader>::bsearch<OT::hb_glyph_pair_t>' [ 0 4 54]
'OT::AnchorFormat2::sanitize' [ 0 4 19]
'FT_GlyphLoader_CopyPoints' [ 0]
'Ins_SZPS' [ 0]
'OT::kern::get_h_kerning' [ 0 4 10]
'OT::hb_serialize_context_t::extend_min<OT::Ligature>' [ 0 4 28]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'__uint8_t' [ 0]
'cr_png_write_png' [ 0]
'hangul_shape_plan_t' [ 0]
'Current_Ppem_Stretched' [ 0]
'af_deva_nonbase_uniranges' [ 0]
'hb_icu_unicode_script' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::may_have' [ 0 47]
'OT::CmapSubtableFormat4::accelerator_t::get_glyph_func' [ 0 4 25 40]
'hb_ot_layout_substitute_lookup' [ 0]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::operator[]' [ 0 48]
'af_arab_script_class' [ 0]
'TStates_' [ 0]
'hb_ot_position_complex' [ 0]
'hb_shape_list_shapers' [ 0]
'cff_get_glyph_name' [ 0]
'cf2_hintmask_setNew' [ 0]
'cr_png_push_read_chunk' [ 0]
'cf2_getBlueValues' [ 0]
'TT_Loader' [ 0]
'hb_buffer_get_content_type' [ 0]
'sfnt_is_alphanumeric' [ 0]
'cf2_outline_init' [ 0]
'OT::propagate_attachment_offsets' [ 0 4]
'parse_blend_design_map' [ 0]
'ColrCpal' [ 0]
'OT::SubstLookupSubTable::dispatch<OT::hb_closure_context_t>' [ 0 4 25]
'hb_get_subtables_context_t::dispatch<OT::ChainContextFormat1>' [ 0 28]
'insert_string_sse' [ 0]
'FT_Set_MM_Blend_Func' [ 0]
'af_none_uniranges' [ 0]
'ft_gzip_file_init' [ 0]
'_hb_glyph_info_set_unicode_space_fallback_type' [ 0]
'OT::ChainRule' [ 0 4]
'OT::RecordArrayOf<OT::Script>::get_tags' [ 0 4 31]
'hb_font_get_glyph_from_name_func_t' [ 0]
'hb_set_t::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 10]
'FT_CharMap' [ 0]
'hb_buffer_t::guess_segment_properties' [ 0 13]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 110]
'TT_CallStack' [ 0]
'ARRAY_LENGTH<OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> >, 4>' [ 0]
'_hb_ot_shape_fallback_spaces' [ 0]
'OT::HintingDevice::get_size' [ 0 4 19]
'get_ft_library' [ 0]
't1_get_index' [ 0]
'bi_flush' [ 0]
'OT::CastP<OT::maxp, char>' [ 0 4]
'FT_Stroker_LineJoin' [ 0]
'OT::CmapSubtableFormat4::sanitize' [ 0 4 25]
'hb_set_t::page_t::mask' [ 0 10 18]
'multiply_alpha' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 4 27]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::no_dispatch_return_value' [ 0 4 66]
'hb_set_digest_t' [ 0]
'hb_ot_layout_collect_lookups' [ 0]
'OT::Lookup::get_subtables<OT::SubstLookupSubTable>' [ 0 4 12]
'FT_Done_FreeType' [ 0]
'hb_font_get_glyph_v_advance' [ 0]
'ft_gzip_get_uncompressed_size' [ 0]
'cff_cmap_unicode_done' [ 0]
'FT_Face_GetVariantSelectors' [ 0]
'cf2_getWindingMomentum' [ 0]
'TT_Get_Var_Design' [ 0]
'FT_Char' [ 0]
'cr_png_push_fill_buffer' [ 0]
'FT_Data' [ 0]
'png_write_complete_chunk' [ 0]
'OT::RuleSet::sanitize' [ 0 4 13]
'inflate_trees_bits' [ 0]
'OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 78]
'OT::apply_lookup' [ 0 4]
'hb_buffer_flags_t' [ 0]
'hb_buffer_t::merge_out_clusters' [ 0 13]
'OT::cmap::accelerator_t::init' [ 0 4 10 25]
'off64_t' [ 0]
'cr_png_do_read_swap_alpha' [ 0]
'cr_png_read_filter_row_sub4_sse2' [ 0]
'FT_Face_GetCharVariantIsDefault' [ 0]
'hb_buffer_t::lookahead_len' [ 0 13]
'ft_glyphslot_alloc_bitmap' [ 0]
'OT::collect_coverage' [ 0 4]
'af_tibt_uniranges' [ 0]
'hb_object_destroy<hb_blob_t>' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::add' [ 0 47]
'tt_cmap12_class_rec' [ 0]
'cr_png_destroy_gamma_table' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::alloc' [ 0 69]
'OT::Sanitizer<OT::hhea>::Sanitizer' [ 0 4 25]
'hb_object_reference<hb_unicode_funcs_t>' [ 0]
'OT::operator+<const OT::PairPosFormat1 *, OT::IntType<unsigned short, 2>, OT::PairSet>' [ 0 4]
'OT::StructAfter<OT::KernAAT::SubTableWrapper, OT::KernAAT::SubTableWrapper>' [ 0 4]
'OT::hb_ot_apply_context_t::matcher_t::matcher_t' [ 0 4 27 38]
'FT_Service_BDF' [ 0]
't1_keywords' [ 0]
'AF_SegmentRec_' [ 0]
'cr_png_push_restore_buffer' [ 0]
'Round_Super' [ 0]
'ps_hinter_done' [ 0]
'FT_F26Dot6' [ 0]
'OT::MarkGlyphSets::sanitize' [ 0 4 19]
'OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 60]
'OT::SingleSubstFormat2::collect_glyphs' [ 0 4 24]
'OT::StructAtOffset<OT::Anchor>' [ 0 4]
'OT::MultipleSubstFormat1::closure' [ 0 4 26]
'hb_font_t::em_fscale_y' [ 0 11]
'cid_face_open' [ 0]
'would_substitute_feature_t::init' [ 0 28]
'png_text_compress_init' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::hb_collect_glyphs_context_t::dispatch<OT::ContextFormat2>' [ 0 4 33]
'hash_rehash' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 27]
'OT::StructAtOffset<OT::CaretValue>' [ 0 4]
'OT::CastP<OT::cmap, char>' [ 0 4]
'OT::post::accelerator_t::cmp_gids' [ 0 4 10 25]
'OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 65]
'psh_globals_new' [ 0]
'cr_png_do_write_swap_alpha' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::no_dispatch_return_value' [ 0 4 76]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::Sanitizer<OT::post>' [ 0 4]
'hb_font_t::get_glyph_extents' [ 0 11]
'OT::hb_ot_apply_context_t::matcher_t::may_skip' [ 0 4 27 38]
'skip_literal_string' [ 0]
'OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 62]
'cr_png_get_PLTE' [ 0]
'cr_png_write_find_filter' [ 0]
'hb_options_t' [ 0]
'small_capitals_from_capitals_feature' [ 0]
'OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 67]
'af_glyph_hints_align_strong_points' [ 0]
'OT::Sanitizer<OT::CBDT>::Sanitizer' [ 0 4 25]
'Finalize_Profile_Table' [ 0]
'Ins_NROUND' [ 0]
'CFF_Size' [ 0]
'OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_Header_' [ 0]
'operator&=' [ 0]
'OT::AnchorFormat1::sanitize' [ 0 4 19]
'OT::hb_lazy_table_loader_t<AAT::kerx>' [ 0 4]
'hb_buffer_t::output_glyph' [ 0 13]
'afm_stream_read_one' [ 0]
'hb_ot_get_font_v_extents' [ 0]
'OT::Supplier<unsigned int>' [ 0 4]
'tt_prepare_zone' [ 0]
'hb_buffer_serialize_format_to_string' [ 0]
'ft_bitmap_glyph_init' [ 0]
'chunks_to_ignore' [ 0]
'AF_Style_' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::MarkLigPos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'thai_action_t' [ 0]
'T1_Set_MM_Blend' [ 0]
'OT::Null<OT::kern>' [ 0 4]
'tt_face_free_hdmx' [ 0]
'hb_get_subtables_context_t::apply_to<OT::AlternateSubstFormat1>' [ 0 28]
'OT::MarkArray::apply' [ 0 4 15]
'FT_HashRec_' [ 0]
'cff_service_ps_name' [ 0]
'cr_png_read_chunk_header' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::operator+<const OT::GDEF *, OT::IntType<unsigned short, 2>, OT::AttachList>' [ 0 4]
'cid_field_records' [ 0]
'FT_CMap_ClassRec' [ 0]
'cf2_stack_pushInt' [ 0]
'FT_DriverRec' [ 0]
't1_cmap_unicode_done' [ 0]
'OT::CastP<OT::AttachList, const void *>' [ 0 4]
'gz_decomp' [ 0]
'cr_png_do_pack' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'null_bitmap' [ 0]
'CFF_Decoder' [ 0]
'hb_glyph_info_t' [ 0]
'_hb_glyph_info_clear_substituted' [ 0]
'af_cher_uniranges' [ 0]
'OT::operator+<const OT::MarkBasePosFormat1 *, OT::IntType<unsigned short, 2>, OT::AnchorMatrix>' [ 0 4]
'icc_check_length' [ 0]
'_hb_ot_shape' [ 0]
'OT::OffsetArrayOf<OT::SubstLookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'WOFF_HeaderRec_' [ 0]
'OT::Sanitizer<OT::GDEF>::Sanitizer' [ 0 4 25]
'FT_Get_MM_Var_Func' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::IndexSubtableRecord>' [ 0 4 27]
'hb_blob_is_immutable' [ 0]
'OT::OffsetTo<OT::Axis, OT::IntType<unsigned short, 2> >' [ 0 4]
'ft_hash_str_init' [ 0]
'is_ICC_signature_char' [ 0]
'OT::OffsetArrayOf<OT::Condition, OT::IntType<unsigned int, 4> >' [ 0 4]
'cr_png_build_gamma_table' [ 0]
'FT_Glyph_PrepareFunc' [ 0]
'OT::Axis' [ 0 4]
'OT::OffsetArrayOf<OT::RuleSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_get_subtables_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 28]
'hb_set_t::page_t::get_max' [ 0 10 18]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>' [ 0]
'OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >::sanitize<const OT::Record<OT::LangSys>::sanitize_closure_t *>' [ 0 4 60]
'af_geok_nonbase_uniranges' [ 0]
'cf2_getUnitsPerEm' [ 0]
'af_ethi_uniranges' [ 0]
'png_read_destroy' [ 0]
'__v8hu' [ 0]
'cr_png_set_flush' [ 0]
'FT_Get_Glyph' [ 0]
'FT_Get_PS_Font_Value' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 171]
'png_colorspace_endpoints_match' [ 0]
'OT::Rule::would_apply' [ 0 4 10]
'TT_Free_Table_Func' [ 0]
'Ins_GTEQ' [ 0]
'OT::Ligature::apply' [ 0 4 14]
'OT::CastP<OT::RangeRecord, char>' [ 0 4]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 78]
'TT_Face' [ 0]
'cr_png_set_bgr' [ 0]
'_hb_shapers_get' [ 0]
'af_glyph_hints_reload' [ 0]
'OT::MathValueRecord::get_y_value' [ 0 4 21]
'tt_cmap6_class_rec' [ 0]
'basic_features' [ 0]
'OT::OffsetListOf<OT::SubstLookup>::sanitize' [ 0 4 35]
'hb_set_unicode_props' [ 0]
'hb_unicode_funcs_t::eastasian_width' [ 0 20]
'OT::hb_collect_glyphs_context_t::dispatch<OT::MarkLigPosFormat1>' [ 0 4 33]
'OT::CastP<OT::Coverage, const void *>' [ 0 4]
'af_thai_script_class' [ 0]
'cr_png_handle_PLTE' [ 0]
'is_coeng' [ 0]
'cf2_getDefaultWidthX' [ 0]
'OT::VariationStore::get_delta' [ 0 4 20]
'Ins_SPVTL' [ 0]
'superscript_coverage' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionPos>, OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 78]
'png_pass_ystart' [ 0]
'Ins_SDB' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::DeltaSetIndexMap, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::ChainContextFormat2::sanitize' [ 0 4 25]
'CFF_BlendRec_' [ 0]
'hb_prealloced_array_t<unsigned int, 1>::finish' [ 0 40]
'OT::hb_collect_glyphs_context_t' [ 0 4]
'hb_options_union_t' [ 0]
'Ins_SDS' [ 0]
'af_mymr_uniranges' [ 0]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 60]
'hb_script_to_iso15924_tag' [ 0]
'gray_raster_new' [ 0]
'cff_parser_run' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'cid_done_loader' [ 0]
'sfnt_stream_close' [ 0]
'tt_get_advances' [ 0]
'OT::ChainRule::sanitize' [ 0 4 15]
'cr_png_muldiv_warn' [ 0]
'read_pfb_tag' [ 0]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>::init' [ 0 74]
'hb_use_get_category' [ 0]
'ft_gzip_file_reset' [ 0]
'png_pass_inc' [ 0]
'hb_destroy_func_t' [ 0]
'cff_get_mm_var' [ 0]
'T1_FieldLocation' [ 0]
'OT::Sanitizer<OT::head>' [ 0 4]
'png_color' [ 0]
'hb_font_set_funcs' [ 0]
'FT_GlyphDict_GetNameFunc' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::PairPos, OT::IntType<unsigned short, 2> >' [ 0 4 279]
'hb_font_t::get_glyph_origin_for_direction' [ 0 11]
'_hb_ot_layout_create' [ 0]
'nuke_joiners' [ 0]
'af_knda_uniranges' [ 0]
'FT_Load_Char' [ 0]
'hb_face_get_glyph_count' [ 0]
'T1_Loader_' [ 0]
'PS_Hinter_Module' [ 0]
'ft_black_init' [ 0]
'hb_user_data_array_t::hb_user_data_item_t::operator==' [ 0 22 43]
'OT::CastP<OT::hhea, char>' [ 0 4]
'hb_font_add_glyph_origin_for_direction' [ 0]
'OT::ChainContextSubst' [ 0 4]
'ps_dimension_add_t1stem' [ 0]
'cr_png_safe_error' [ 0]
'OT::hb_lazy_table_loader_t<OT::BASE>' [ 0 4]
'OT::operator+<const OT::MathGlyphConstruction *, OT::IntType<unsigned short, 2>, OT::MathGlyphAssembly>' [ 0 4]
'OT::hb_sanitize_context_t::may_dispatch<OT::MarkMarkPos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::Sanitizer<OT::os2>' [ 0 4]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::alloc' [ 0 54]
'cr_png_app_error' [ 0]
'display_mask' [ 0]
'cff_index_init' [ 0]
'CFF_InternalRec_' [ 0]
'cff_service_properties' [ 0]
'OT::hb_closure_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 4 26]
'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> >::sanitize<unsigned int>' [ 0 4 83]
'hb_unicode_combining_class_nil' [ 0]
'ft_trig_downscale' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>' [ 0]
'hb_buffer_t::get_scratch_buffer' [ 0 13]
'OT::CastP<OT::FeatureVariations, const void *>' [ 0 4]
'FT_Stroker_Done' [ 0]
'static_tree_desc' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::MarkBasePosFormat1>' [ 0 4 27]
'OT::ArrayOf<OT::MathGlyphPartRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 71]
'OT::MathItalicsCorrectionInfo::sanitize' [ 0 4 31]
'cr_png_write_chunk_end' [ 0]
'FT_Vector_From_Polar' [ 0]
'hb_font_get_empty::_hb_font_nil' [ 0 19]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned short, 2> >::get_glyph' [ 0 4 58]
'af_grek_pcap_style_class' [ 0]
'OT::ClassDefFormat2::intersects_class' [ 0 4 21]
'hb_ot_layout_feature_get_lookups' [ 0]
'TBBox_Rec' [ 0]
'OT::PosLookupSubTable::dispatch<OT::hb_sanitize_context_t>' [ 0 4 23]
'cr_png_warning_parameter' [ 0]
'OT::operator+<const OT::CursivePosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'hb_object_trace<hb_blob_t>' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'af_dsrt_nonbase_uniranges' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 107]
'OT::ClassDef' [ 0 4]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::finish' [ 0 69]
'PSH_PointRec_' [ 0]
'OT::IntType<short, 2>' [ 0 4]
'OT::MathKernInfoRecord::get_kerning' [ 0 4 24]
'af_latb_script_class' [ 0]
'OT::SubstLookupSubTable::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 25]
'OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 72]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathGlyphInfo, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'_hb_ot_font_create' [ 0]
'Cr_z_gzvprintf' [ 0]
'FT_VOrg_Adjust_Func' [ 0]
'OT::operator+<const OT::LigGlyph *, OT::IntType<unsigned short, 2>, OT::CaretValue>' [ 0 4]
'hb_prealloced_array_t<hb_ot_map_builder_t::stage_info_t, 8>::alloc' [ 0 61]
'OT::ChainContext::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 18]
'FT_StrokerRec_' [ 0]
'OT::GSUBGPOS::sanitize' [ 0 4 14]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'OT::hb_lazy_loader_t<OT::glyf::accelerator_t>::get' [ 0 4 47]
'OT::SinglePos::dispatch<hb_get_subtables_context_t>' [ 0 4 15]
'cff_parse_maxstack' [ 0]
'sort_r_simple' [ 0]
'sfnt_service_glyph_dict' [ 0]
'OT::StructAtOffset<OT::GlyphBitmapDataFormat17>' [ 0 4]
'hb_get_subtables_context_t::apply_to<OT::ChainContextFormat1>' [ 0 28]
'CF2_Buffer' [ 0]
'FT_Renderer_TransformFunc' [ 0]
'cf2_glyphpath_finalize' [ 0]
'FT_Incremental_FreeGlyphDataFunc' [ 0]
'cf2_hintmap_insertHint' [ 0]
'Cr_z_deflateInit2_' [ 0]
'OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 33]
'OT::Null<OT::KernClassTable>' [ 0 4]
'png_deflate_claim' [ 0]
'TT_Project_Func' [ 0]
'OT::LigatureSet::would_apply' [ 0 4 17]
'FT_Stream_ReadUShortLE' [ 0]
'OT::SubstLookupSubTable::dispatch<OT::hb_sanitize_context_t>' [ 0 4 25]
'af_shaper_buf_destroy' [ 0]
'OT::fvar' [ 0 4]
'_hb_buffer_deallocate_unicode_vars' [ 0]
'tt_cmap14_char_map_nondef_binary' [ 0]
'OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 71]
'short' [ 0]
'chunkcopy_lapped_safe' [ 0]
'hb_get_subtables_context_t::apply_to<OT::LigatureSubstFormat1>' [ 0 28]
'OT::OffsetTo<OT::LangSys, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 60]
'PLong' [ 0]
'Ins_SHC' [ 0]
'Bytef' [ 0]
'gz_comp' [ 0]
'tt_face_load_maxp' [ 0]
'Round_Super_45' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'hb_get_subtables_context_t::apply_to<OT::ChainContextFormat2>' [ 0 28]
'OT::IntType<int, 4>::operator int' [ 0 4 21]
'hb_font_get_font_v_extents_func_t' [ 0]
'Ins_SHP' [ 0]
'OT::StructAtOffset<OT::LigCaretList>' [ 0 4]
'OT::ContextFormat2::closure' [ 0 4 20]
'T1_FieldType' [ 0]
'OT::CastP<OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'compare_myanmar_order' [ 0]
'OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 91]
'static_bl_desc' [ 0]
't1_decoder_init' [ 0]
'tt_cmap14_ensure' [ 0]
'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >' [ 0 4]
'CFF_IndexRec_' [ 0]
'cr_png_read_IDAT_data' [ 0]
'Horizontal_Sweep_Step' [ 0]
'hb_object_init<hb_face_t>' [ 0]
'tt_vadvance_adjust' [ 0]
'af_property_set' [ 0]
'OT::operator+<const OT::HVARVVAR *, OT::IntType<unsigned int, 4>, OT::DeltaSetIndexMap>' [ 0 4]
'OT::PairPosFormat1::collect_glyphs' [ 0 4 20]
'OT::CastP<OT::Device, const void *>' [ 0 4]
'OT::OffsetTable::sanitize' [ 0 4 17]
'chunkcopy_core' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::BaseCoord, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 65]
'_deserialize_text_trans_keys' [ 0]
'FT_Data_' [ 0]
'cr_png_save_uint_32' [ 0]
'cf2_arrstack_finalize' [ 0]
'hb_get_subtables_context_t::apply_to<OT::ChainContextFormat3>' [ 0 28]
'MIN<int>' [ 0]
'hb_shape_plan_execute' [ 0]
'FT_SizeRec_' [ 0]
'OT::CastP<OT::MarkRecord, const void *>' [ 0 4]
'ps_parser_done' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat1>' [ 0 4 30]
'af_thai_uniranges' [ 0]
'AF_WritingSystemClassRec' [ 0]
'T1_TokenType_' [ 0]
'override_features_khmer' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::ArrayOf<OT::Record<OT::LangSys>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 71]
'OT::hb_sanitize_context_t::dispatch<OT::PairPosFormat1>' [ 0 4 27]
'Ins_SRP1' [ 0]
'T1_Token' [ 0]
'ps_hints_t2counter' [ 0]
'ft_black_reset' [ 0]
'Cubic_To' [ 0]
'cr_png_get_user_chunk_ptr' [ 0]
'OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t::get_advance' [ 0 4 34 49]
'OT::fvar::get_axes' [ 0 4 10]
'Bezier_Up' [ 0]
'hb_set_t::get_min' [ 0 10]
'indic_matra_category_t' [ 0]
'OT::operator+<const OT::GDEF *, OT::IntType<unsigned short, 2>, OT::MarkGlyphSets>' [ 0 4]
'cr_png_write_sig' [ 0]
'gray_line_to' [ 0]
'OT::maxp::get_size' [ 0 4 10]
'jmp_buf' [ 0]
'Cr_z_crc_finalize' [ 0]
'hb_ot_map_builder_t::finish' [ 0 21]
'OT::operator+<const OT::ChainContextFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'psh_globals_destroy' [ 0]
'OT::AlternateSubstFormat1::collect_glyphs' [ 0 4 27]
'ARRAY_LENGTH<char, 32>' [ 0]
'OT::Null<OT::LangSys>' [ 0 4]
'cr_png_reset_crc' [ 0]
'cf2_initGlobalRegionBuffer' [ 0]
'ft_smooth_renderer_class' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat2>' [ 0 4 30]
'ft_raster1_set_mode' [ 0]
'OT::MathGlyphPartRecord::extract' [ 0 4 25]
'Ins_IUP' [ 0]
'af_taml_dflt_style_class' [ 0]
'distfix' [ 0]
'GX_MVarTableRec_' [ 0]
'OT::hb_sanitize_context_t::dispatch<OT::PairPosFormat2>' [ 0 4 27]
'af_cjk_hints_link_segments' [ 0]
'TT_NameTableRec' [ 0]
'__libcpp_strstr' [ 0]
'OT::fvar::normalize_axis_value' [ 0 4 10]
'OT::ArrayOf<OT::MathValueRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 67]
'OT::SortedArrayOf<OT::VariationSelectorRecord, OT::IntType<unsigned int, 4> >::bsearch<unsigned int>' [ 0 4 79]
'cr_png_do_bgr' [ 0]
'hb_ot_old_tag_to_script' [ 0]
'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 65]
'hb_get_subtables_context_t::dispatch<OT::MarkMarkPosFormat1>' [ 0 28]
'FT_Pointer' [ 0]
'af_saur_uniranges' [ 0]
'af_bamu_script_class' [ 0]
'tt_size_reset' [ 0]
'Cr_z_gztell' [ 0]
'af_limb_nonbase_uniranges' [ 0]
'OT::Null<OT::UVSMapping>' [ 0 4]
'OT::CmapSubtableTrimmed<OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::ChainRule::collect_glyphs' [ 0 4 15]
't1_cmap_unicode_char_index' [ 0]
'ft_glyphslot_free_bitmap' [ 0]
'OT::PosLookup::collect_glyphs' [ 0 4 15]
'OT::Anchor::get_anchor' [ 0 4 12]
'use_category_t' [ 0]
'TT_Load_Table_Func' [ 0]
'_hb_glyph_info_set_lig_props_for_ligature' [ 0]
'__nlink_t' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::ChainContextFormat3>' [ 0 4 30]
'af_latin_hints_compute_edges' [ 0]
'WOFF_HeaderRec' [ 0]
'OT::hb_closure_context_t::set_recurse_func' [ 0 4 26]
'OT::CoverageFormat1::Iter::next' [ 0 4 21 27]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::default_return_value' [ 0 4 227]
'OT::hb_lazy_loader_t<OT::CBDT::accelerator_t>::init' [ 0 4 47]
'af_olck_nonbase_uniranges' [ 0]
'af_loader_embolden_glyph_in_slot' [ 0]
'_hb_glyph_info_set_glyph_props' [ 0]
'TT_OS2_' [ 0]
'afm_parser_parse' [ 0]
'png_image_read_colormap' [ 0]
'ot_languages_zh' [ 0]
'internal_state' [ 0]
'OT::VariationSelectorRecord::get_glyph' [ 0 4 29]
't1_service_ps_name' [ 0]
'af_shaw_dflt_style_class' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::PairPos, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'hb_reference_count_t' [ 0]
'hb_face_t::get_upem' [ 0 11]
'CF2_ArrStackRec_' [ 0]
'TT_Load_Colr_Layer_Func' [ 0]
'OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 57]
'OT::IntType<unsigned int, 4>::sanitize' [ 0 4 30]
'OT::operator+<const OT::SinglePosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'hb_buffer_set_user_data' [ 0]
'ft_glyphslot_clear' [ 0]
'OT::hb_lazy_loader_t<OT::CBDT::accelerator_t>::fini' [ 0 4 47]
'af_goth_script_class' [ 0]
'cr_png_colorspace_set_chromaticities' [ 0]
'hb_font_get_ppem' [ 0]
'OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 65]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::push' [ 0 64]
'OT::hb_collect_glyphs_context_t::dispatch<OT::CursivePosFormat1>' [ 0 4 33]
'ft_alloc' [ 0]
'hb_set_is_empty' [ 0]
'hb_set_t::page_t::has' [ 0 10 18]
'OT::hb_sanitize_context_t::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 27]
'OT::Null<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> > >' [ 0 4]
'record_pref' [ 0]
'OT::head::get_upem' [ 0 4 10]
'_hb_set_nil' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::stage_map_t, 4>' [ 0]
'uint16_t' [ 0]
'FT_BBox' [ 0]
'cr_png_get_tRNS' [ 0]
'_hb_g_bytes_unref' [ 0]
'OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 57]
'hb_propagate_flags' [ 0]
'OT::post::accelerator_t::find_glyph_name' [ 0 4 10 25]
'OT::CastP<OT::kern::accelerator_t, const void *>' [ 0 4]
'af_taml_nonbase_uniranges' [ 0]
'OT::PosLookup::sanitize' [ 0 4 15]
'OT::MarkArray::sanitize' [ 0 4 15]
'_hb_buffer_serialize_glyphs_text' [ 0]
'cr_png_get_user_transform_ptr' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Device, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'load_truetype_glyph' [ 0]
'cf2_getVStore' [ 0]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::get_kerning' [ 0 4 55]
'Ins_SMD' [ 0]
'hb_direction_from_string' [ 0]
'ps_hints_open' [ 0]
'OT::HVARVVAR' [ 0 4]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::finish' [ 0 64]
'OT::CastP<OT::glyf::accelerator_t, const void *>' [ 0 4]
'OT::MarkMarkPos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 17]
'tt_face_set_sbit_strike' [ 0]
'OT::Sanitizer<OT::maxp>::Sanitizer' [ 0 4 25]
'OT::_NullTag' [ 0 4]
'PS_Builder_FuncsRec_' [ 0]
'OT::Script::sanitize' [ 0 4 12]
'Cr_z_deflate_read_buf' [ 0]
'OT::LangSys::has_required_feature' [ 0 4 13]
'OT::maxp' [ 0 4]
'ARRAY_LENGTH<LangTagLong, 9>' [ 0]
'hb_ot_layout_script_find_language' [ 0]
'opcode_length' [ 0]
'cr_png_get_progressive_ptr' [ 0]
'cr_png_set_unknown_chunk_location' [ 0]
'OT::ContextFormat3::apply' [ 0 4 20]
'_hb_buffer_deserialize_glyphs_text' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'Cr_z_inflate_copyright' [ 0]
'would_substitute_feature_t' [ 0]
'OT::BEInt<short, 2>::set' [ 0 4 21]
'OT::SubstLookup::dispatch<OT::hb_sanitize_context_t>' [ 0 4 17]
'FT_Stroker_ExportBorder' [ 0]
'Cr_z_inflateResetKeep' [ 0]
'OT::ChainContextFormat2::closure' [ 0 4 25]
'tt_size_run_fpgm' [ 0]
'_myanmar_syllable_machine_trans_targs' [ 0]
'OT::MathKernInfo::get_kerning' [ 0 4 18]
'hb_ot_layout_glyph_class_t' [ 0]
'af_shaper_get_elem' [ 0]
'OT::SinglePosFormat2::apply' [ 0 4 22]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'ct_data' [ 0]
'OT::SinglePosFormat1::collect_glyphs' [ 0 4 22]
'OT::BEInt<unsigned char, 1>::operator unsigned char' [ 0 4 29]
'OT::ArrayOf<OT::OffsetTo<OT::AnchorMatrix, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 111]
'TT_SBit_LineMetricsRec' [ 0]
'OT::operator+<const OT::GDEF *, OT::IntType<unsigned int, 4>, OT::VariationStore>' [ 0 4]
'OT::VariationSelectorRecord::cmp' [ 0 4 29]
'Cr_z_uInt' [ 0]
'cf2_hintmask_isNew' [ 0]
'AF_Script_' [ 0]
'PS_Dict_Keys' [ 0]
'hb_ot_math_get_glyph_kerning' [ 0]
'hb_ot_var_axis_t' [ 0]
'OT::Sanitizer<OT::GSUB>::Sanitizer' [ 0 4 25]
'OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 109]
'OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> >' [ 0 4]
'_hb_ot_complex_shaper_myanmar' [ 0]
'png_uint_32p' [ 0]
'cff_cmap_encoding_done' [ 0]
'TT_CMapInfo' [ 0]
'OT::operator+<const OT::Lookup *, OT::IntType<unsigned short, 2>, OT::PosLookupSubTable>' [ 0 4]
'hb_font_get_glyph_kerning_for_direction' [ 0]
'cf2_getOtherBlues' [ 0]
'OT::FeatureParamsCharacterVariants' [ 0 4]
'FT_Get_Var_Blend_Func' [ 0]
'cff_compute_bias' [ 0]
'OT::CmapSubtable' [ 0 4]
'sfnt_find_encoding' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::ChainContextFormat1>' [ 0 4 27]
'cf2_glyphpath_pushMove' [ 0]
'GX_ItemVarStoreRec_' [ 0]
'OT::LigatureSubstFormat1::would_apply' [ 0 4 26]
'CF2_HintMapRec_' [ 0]
'OT::ArrayOf<OT::MathGlyphVariantRecord, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 74]
'hb_atomic_int_t::dec' [ 0 17]
't1_done_loader' [ 0]
'png_read_filter_row_up' [ 0]
'__jmp_buf_tag' [ 0]
'OT::ClassDefFormat1::add_coverage<hb_set_t>' [ 0 4 21]
'cff_charset_load' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::push' [ 0 54]
'png_unknown_chunk_t' [ 0]
'OT::IntType<short, 2>::operator==' [ 0 4 23]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned short, 2> >' [ 0 4]
'Cr_z_inflateInit_' [ 0]
'BBox_Conic_To' [ 0]
'cr_png_handle_tRNS' [ 0]
'OT::hb_lazy_table_loader_t<AAT::trak>::init' [ 0 4 39]
'OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >' [ 0 4]
'AF_LoaderRec_' [ 0]
'Cr_z_zlibVersion' [ 0]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned short, 2> >::get_image_data' [ 0 4 62]
'OT::operator+<const OT::AttachList *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'hb_font_get_glyph_h_origin_nil' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ChainContextFormat2>' [ 0 28]
'OT::hb_sanitize_context_t::check_struct<OT::ClassDefFormat1>' [ 0 4 27]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::alloc' [ 0 72]
'cr_png_warning' [ 0]
'cr_png_image_begin_read_from_memory' [ 0]
'Cr_z_zcfree' [ 0]
'OT::CastP<OT::MathKern, const void *>' [ 0 4]
'GBytes' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::ChainContextFormat2>' [ 0 4 27]
'OT::Record<OT::Script>' [ 0 4]
'PS_UnicodesRec_' [ 0]
'OT::MathGlyphInfo::sanitize' [ 0 4 19]
'OT::RangeRecord::cmp' [ 0 4 17]
'OT::hb_lazy_table_loader_t<AAT::ankr>' [ 0 4]
'OT::ChainContextFormat2::collect_glyphs' [ 0 4 25]
'hb_object_is_valid<hb_face_t>' [ 0]
'OT::Record<OT::LangSys>::cmp' [ 0 4 25]
'cf2_builder_cubeTo' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 77]
'cf2_blues_init' [ 0]
'tt_sfnt_id_rec' [ 0]
'OT::OpenTypeFontFile' [ 0 4]
'OT::Null<OT::IndexSubtable>' [ 0 4]
'af_sort_and_quantize_widths' [ 0]
'tt_cmap4_char_map_linear' [ 0]
'FT_Driver_ClassRec' [ 0]
'subscript_coverage' [ 0]
'hb_object_get_user_data<hb_set_t>' [ 0]
'OT::NameID' [ 0 4]
'T1_Get_MM_Var' [ 0]
'CFF_Builder' [ 0]
'ps_unicodes_init' [ 0]
'hb_set_t::process<HbOpOr>' [ 0 10]
'OT::StructAtOffset<OT::VarData>' [ 0 4]
'hb_object_is_inert<hb_blob_t>' [ 0]
'PS_HintsRec' [ 0]
'OT::LigatureArray' [ 0 4]
'OT::GlyphBitmapDataFormat17' [ 0 4]
'OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 74]
'cf2_freeSeacComponent' [ 0]
'ft_lcd_padding' [ 0]
'FT_Stream_GetUShortLE' [ 0]
'gray_raster_render' [ 0]
'OT::Sanitizer<OT::OpenTypeFontFile>::lock_instance' [ 0 4 37]
'FT_AutoHinter_GlobalResetFunc' [ 0]
'OT::Null<OT::MathGlyphInfo>' [ 0 4]
'OT::hb_ot_apply_context_t::dispatch<OT::ChainContextFormat3>' [ 0 4 27]
'T1_FieldType_' [ 0]
'cf2_stack_roll' [ 0]
'cr_png_get_current_pass_number' [ 0]
'CID_FaceInfoRec' [ 0]
'tt_face_goto_table' [ 0]
'FT_Size_RequestRec' [ 0]
'tt_interpolate_deltas' [ 0]
'format1_names_msgstr' [ 0]
'TT_Post_20Rec_' [ 0]
'afm_parse_kern_data' [ 0]
'OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Null<OT::GSUB>' [ 0 4]
'PCell' [ 0]
'OT::SortedArrayOf<OT::TableRecord, OT::BinSearchHeader>::bsearch<OT::Tag>' [ 0 4 57]
't1_cmap_expert_class_rec' [ 0]
'hb_bool_t' [ 0]
'OT::hb_lazy_loader_t<OT::kern::accelerator_t>::get' [ 0 4 47]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'CFF_Decoder_FuncsRec' [ 0]
'OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Null<OT::kern::accelerator_t>' [ 0 4]
'psnames_get_service' [ 0]
'OT::SingleSubst' [ 0 4]
'PSH_Widths' [ 0]
'OT::Sanitizer<OT::hhea>::lock_instance' [ 0 4 25]
'collect_features_arabic' [ 0]
'_ft_lcd_filter_legacy' [ 0]
'Cr_z_gzflush' [ 0]
'PS_ParserRec_' [ 0]
'hb_ot_math_get_constant' [ 0]
'png_const_voidp' [ 0]
't2_hints_stems' [ 0]
'OT::operator+<const OT::MarkLigPosFormat1 *, OT::IntType<unsigned short, 2>, OT::OffsetListOf<OT::AnchorMatrix> >' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'Project_y' [ 0]
'cr_png_set_expand_gray_1_2_4_to_8' [ 0]
'OT::Context::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 13]
'cf2_glyphpath_pushPrevElem' [ 0]
'OT::IndexSubtableArray::sanitize' [ 0 4 24]
'OT::ArrayOf<OT::OffsetTo<OT::PosLookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'cff_builder_done' [ 0]
'FT_Stream_Close' [ 0]
'hb_font_t::glyph_from_string' [ 0 11]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::MarkLigPosFormat1>' [ 0 4 227]
'hb_buffer_t::merge_clusters' [ 0 13]
'__v4si' [ 0]
'FT_Done_Blend_Func' [ 0]
'hb_object_is_inert<hb_set_t>' [ 0]
'OT::MathGlyphAssembly::sanitize' [ 0 4 23]
'indic_table' [ 0]
'storechunk' [ 0]
'OT::CastP<OT::head, char>' [ 0 4]
'OT::BEInt<int, 4>' [ 0 4]
'OT::CastP<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'OT::hb_lazy_table_loader_t<AAT::ankr>::init' [ 0 4 39]
'FT_Stream_Open' [ 0]
'FT_Prop_GlyphToScriptMap_' [ 0]
'af_cans_script_class' [ 0]
'ARRAY_LENGTH<unsigned int, 32>' [ 0]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 86]
'FT_MM_Axis_' [ 0]
'FT_ServiceCacheRec' [ 0]
'pqdownheap' [ 0]
'af_cari_nonbase_uniranges' [ 0]
'FT_Stream_ReleaseFrame' [ 0]
'TT_CMap14Rec_' [ 0]
'cid_get_interface' [ 0]
'cr_png_set_sRGB_gAMA_and_cHRM' [ 0]
'CF2_BufferRec' [ 0]
'cr_png_set_background' [ 0]
'Ins_ABS' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'af_latn_ordn_style_class' [ 0]
'cr_png_free' [ 0]
'OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 64]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathKern, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::IndexSubtableArray' [ 0 4]
'OT::OffsetTo<OT::ClassDef, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'cr_png_image_begin_read_from_file' [ 0]
'OT::CastP<OT::Record<OT::Feature>, const void *>' [ 0 4]
'OT::SortedArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >' [ 0 4]
'tt_size_init' [ 0]
'Ins_SSW' [ 0]
'png_const_unknown_chunkp' [ 0]
'OT::CastP<OT::CmapSubtableFormat14, const void *>' [ 0 4]
'hb_language_item_t::finish' [ 0 20]
'OT::MathConstants::sanitize_math_value_records' [ 0 4 19]
'hb_ot_shape_planner_t::~hb_ot_shape_planner_t' [ 0 23]
'hb_get_subtables_context_t::hb_applicable_t::init' [ 0 28 45]
'cr_png_realloc_array' [ 0]
'PS_Hint_Type' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>' [ 0]
'OT::recurse_lookups<OT::hb_closure_context_t>' [ 0 4]
'_hb_face_nil' [ 0]
'hb_ft_get_glyph_from_name' [ 0]
'tt_service_truetype_engine' [ 0]
'OT::CaretValueFormat1' [ 0 4]
'OT::CaretValueFormat2' [ 0 4]
'Ins_WCVTP' [ 0]
'FT_SfntName_' [ 0]
'ft_cmap_done_internal' [ 0]
'Ins_GFV' [ 0]
'AFM_Token' [ 0]
'hb_set_reference' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'_hb_var_int_t' [ 0]
'TT_Move_Func' [ 0]
'hb_font_t' [ 0]
'psh_hint_table_init' [ 0]
'apply_stch' [ 0]
'sRGB_XYZ' [ 0]
'tt_glyphzone_done' [ 0]
'AF_ScalerRec_' [ 0]
'ft_conic_is_small_enough' [ 0]
'OT::ChainContextFormat3::sanitize' [ 0 4 25]
'OT::Null<OT::maxp>' [ 0 4]
'HbOpOr::process<hb_vector_size_t<unsigned long long, 128> >' [ 0 8]
'AF_Dimension' [ 0]
'indic_syllabic_category_t' [ 0]
'clear_substitution_flags' [ 0]
'cf2_blues_capture' [ 0]
'OT::IntType<unsigned short, 2>::cmp' [ 0 4 32]
'OT::operator+<const OT::GSUBGPOS *, OT::IntType<unsigned short, 2>, OT::RecordListOf<OT::Feature> >' [ 0 4]
'GX_ValueRec_' [ 0]
'T1_Open_Face' [ 0]
'TT_Set_Var_Design' [ 0]
'OT::hb_lazy_table_loader_t<OT::COLR>' [ 0 4]
'Cr_z_gzfwrite' [ 0]
'cr_png_get_filter_type' [ 0]
'OT::LigCaretList' [ 0 4]
'OT::TTCHeaderVersion1::sanitize' [ 0 4 23]
'hb_utf8_t' [ 0]
'OT::HintingDevice::get_delta_pixels' [ 0 4 19]
'OT::CastP<OT::CmapSubtable, const void *>' [ 0 4]
'Ins_ADD' [ 0]
'hb_get_subtables_context_t::apply_to<OT::SingleSubstFormat1>' [ 0 28]
'hb_font_t::get_h_extents_with_fallback' [ 0 11]
'hb_vector_size_t<unsigned long long, 128>::process<HbOpXor>' [ 0 43]
'OT::StructAtOffset<OT::SubstLookup>' [ 0 4]
'OT::DeltaSetIndexMap' [ 0 4]
'OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'Ins_SUB' [ 0]
'CF2_HintMap' [ 0]
'apply_forward' [ 0]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 86]
'FT_Face_Internal' [ 0]
'cr_png_process_data' [ 0]
'PS_Unicodes_InitFunc' [ 0]
'OT::match_glyph' [ 0 4]
'FT_Stream_TryRead' [ 0]
'destroy_charmaps' [ 0]
'af_lao_script_class' [ 0]
'OT::Null<OT::FeatureTableSubstitution>' [ 0 4]
'af_shaw_uniranges' [ 0]
'FT_Stroker_Set' [ 0]
'PS_Conv_ToFixed' [ 0]
'AF_Blue_StringRec' [ 0]
'cr_png_get_y_offset_microns' [ 0]
'hb_font_funcs_set_glyph_h_origin_func' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'FT_Render_Mode' [ 0]
'OT::_NullRangeRecord' [ 0 4]
'FT_CeilFix' [ 0]
'cr_png_create_info_struct' [ 0]
'hb_get_subtables_context_t::apply_to<OT::SingleSubstFormat2>' [ 0 28]
'Cr_z_inflateSyncPoint' [ 0]
'OT::ClassDef::get_class' [ 0 4 14]
'_hb_ot_complex_shaper_khmer' [ 0]
'thai_consonant_type_t' [ 0]
'OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 67]
'OT::CastP<OT::CBLC, char>' [ 0 4]
'OT::GDEF::get_lig_carets' [ 0 4 10]
'FT_CID_GetCIDFromGlyphIndexFunc' [ 0]
'cf2_getPpemY' [ 0]
'static_ltree' [ 0]
'OT::IndexSubtableHeader' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'OT::StructAtOffset<OT::PosLookupSubTable>' [ 0 4]
'OT::Device::get_x_delta' [ 0 4 12]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 61]
'ps_unicode_value' [ 0]
'ps_dimension_init' [ 0]
'OT::LOffsetTo<OT::UnsizedArrayOf<OT::LayerRecord> >' [ 0 4]
'FT_GlyphSlot_Oblique' [ 0]
'OT::GPOS' [ 0 4]
'OT::Script::get_lang_sys_tags' [ 0 4 12]
'OT::ExtensionFormat1<OT::ExtensionSubst>' [ 0 4]
'AF_LatinBlue' [ 0]
'hb_ot_get_variation_glyph' [ 0]
'TT_SBitDecoderRec_' [ 0]
'ft_hash_num_lookup' [ 0]
'OT::Device' [ 0 4]
'cr_png_set_invalid' [ 0]
'Ins_ISECT' [ 0]
'T1_TokenType' [ 0]
'tt_cmap13_next' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::SortedArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'png_malloc_ptr' [ 0]
'OT::loca::sanitize' [ 0 4 10]
'OT::FeatureVariations::find_substitute' [ 0 4 23]
'OT::Sanitizer<OT::OpenTypeFontFile>::Sanitizer' [ 0 4 37]
'OT::IntType<int, 4>' [ 0 4]
'OT::hb_sanitize_context_t::dispatch<OT::MarkMarkPosFormat1>' [ 0 4 27]
'hb_shaper_pair_t' [ 0]
'ft_stroke_border_reset' [ 0]
'hb_unicode_funcs_destroy' [ 0]
'cr_png_set_option' [ 0]
'cr_png_set_longjmp_fn' [ 0]
'cff_driver_class' [ 0]
'af_hint_normal_stem' [ 0]
'PS_Macintosh_NameFunc' [ 0]
'FT_Outline_Get_Bitmap' [ 0]
'png_inflate_claim' [ 0]
'OT::operator+<const OT::OffsetListOf<OT::AnchorMatrix> *, OT::IntType<unsigned short, 2>, OT::AnchorMatrix>' [ 0 4]
'OT::GDEF::get_mark_attachment_type' [ 0 4 10]
'cr_png_get_io_ptr' [ 0]
'PS_ParserRec' [ 0]
'OT::CastP<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'TPos' [ 0]
'cr_png_set_sBIT' [ 0]
'OT::MarkMarkPosFormat1::get_coverage' [ 0 4 24]
'OT::hb_serialize_context_t::extend_min<OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::hb_sanitize_context_t::dispatch<OT::MarkBasePosFormat1>' [ 0 4 27]
'OT::ExtensionFormat1<OT::ExtensionSubst>::dispatch<hb_get_subtables_context_t>' [ 0 4 42]
'OT::FeatureTableSubstitutionRecord::sanitize' [ 0 4 36]
'OT::hb_dispatch_context_t<OT::hb_would_apply_context_t, bool, 0>::may_dispatch<OT::SingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 66]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'OT::OffsetTo<OT::Feature, OT::IntType<unsigned int, 4> >' [ 0 4]
'Line_To' [ 0]
'OT::RuleSet::closure' [ 0 4 13]
'pscmaps_interface' [ 0]
'_hb_ot_get_font_funcs' [ 0]
'cr_png_write_row' [ 0]
'cr_png_colorspace_set_endpoints' [ 0]
'OT::OffsetTo<OT::FeatureVariations, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::Null<OT::LigatureSet>' [ 0 4]
'OT::ContextFormat1' [ 0 4]
'inflate_codes' [ 0]
'cf2_glyphpath_init' [ 0]
'OT::Extension<OT::ExtensionSubst>::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 35]
'af_hebr_nonbase_uniranges' [ 0]
'OT::Extension<OT::ExtensionSubst>' [ 0 4]
'ft_bitmap_assure_buffer' [ 0]
'hb_prealloced_array_t<hb_ot_map_builder_t::feature_info_t, 32>::shrink' [ 0 64]
'ft_black_new' [ 0]
'OT::Null<OT::Index>' [ 0 4]
'hb_object_create<hb_buffer_t>' [ 0]
'af_arab_uniranges' [ 0]
'png_uint_16' [ 0]
'cr_png_do_swap' [ 0]
'OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 65]
'cr_png_do_read_interlace' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableTrimmed<OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::LigCaretList::get_lig_carets' [ 0 4 18]
'hb_ot_map_builder_t' [ 0]
'hb_get_subtables_context_t' [ 0]
'OT::AlternateSet' [ 0 4]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::operator[]' [ 0 72]
'OT::StructAtOffset<OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::ExtensionSubst' [ 0 4]
'ARRAY_LENGTH<LangTag, 646>' [ 0]
'cff_blend_doBlend' [ 0]
'inflate_mask' [ 0]
'light_weights' [ 0]
'UBool' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::AnchorMatrix>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 83]
'OT::CastP<OT::FeatureTableSubstitution, const void *>' [ 0 4]
'Line_Up' [ 0]
'FT_Renderer' [ 0]
'PProfile' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 106]
'clear_syllables' [ 0]
'af_cjk_hints_apply' [ 0]
'FT_Raccess_Get_DataOffsets' [ 0]
'T2_Hints_FuncsRec' [ 0]
'cr_png_set_gamma_fixed' [ 0]
'joining_type' [ 0]
'CFF_Decoder_Zone' [ 0]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'TT_CMapRec_' [ 0]
'hb_ot_shape_plan_t::hb_ot_shape_plan_t' [ 0 20]
'cf2_builder_lineTo' [ 0]
'hb_font_get_glyph_name_nil' [ 0]
'hb_buffer_t::unsafe_to_break_from_outbuffer' [ 0 13]
'_hb_glyph_info_is_default_ignorable' [ 0]
'ft_mem_strcpyn' [ 0]
'OT::ContextCollectGlyphsLookupContext' [ 0 4]
'cff_slot_load' [ 0]
'CFF_Builder_Start_Point_Func' [ 0]
'TT_Hint_Glyph' [ 0]
'OT::Context::dispatch<OT::hb_would_apply_context_t>' [ 0 4 13]
'PS_DimensionRec' [ 0]
'do_thai_pua_shaping' [ 0]
'hb_tag_from_string' [ 0]
'OT::ReverseChainSingleSubstFormat1::get_coverage' [ 0 4 36]
'OT::StructAtOffset<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> > >' [ 0 4]
'HbOpMinus' [ 0]
'OT::MarkMarkPos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 17]
'Ins_SWAP' [ 0]
'AF_Blue_Stringset_' [ 0]
'load4' [ 0]
'OT::Null<OT::OffsetListOf<OT::Lookup> >' [ 0 4]
'OT::Supplier<OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 47]
'T1_CMapCustomRec_' [ 0]
'cf2_getFamilyBlues' [ 0]
'af_blue_stringsets' [ 0]
'__ssize_t' [ 0]
'OT::BASE' [ 0 4]
'hb_buffer_set_language' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 80]
'OT::CoverageFormat2::Iter::more' [ 0 4 21 27]
'OT::Null<OT::FeatureParams>' [ 0 4]
'OT::ArrayOf<OT::CmapSubtableLongGroup, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 71]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ConditionSet, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'__off64_t' [ 0]
'FT_Raster_NewFunc' [ 0]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'_myanmar_syllable_machine_indicies' [ 0]
'tt_cmap_unicode_char_index' [ 0]
'FT_Get_Sfnt_Name' [ 0]
'__v2di' [ 0]
'FT_Outline_Copy' [ 0]
'FT_Raster_Params_' [ 0]
'OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> >::sanitize<const OT::Record<OT::Script>::sanitize_closure_t *>' [ 0 4 59]
'OT::OffsetTo<OT::RecordListOf<OT::Script>, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 77]
'ARRAY_LENGTH<unsigned int, 4>' [ 0]
'FT_Sin' [ 0]
'hb_auto_array_t<hb_get_subtables_context_t::hb_applicable_t>' [ 0]
'OT::CastP<OT::GSUBGPOS, const void *>' [ 0 4]
'hb_buffer_t::messaging' [ 0 13]
'OT::vhea' [ 0 4]
'OT::CmapSubtableFormat0::sanitize' [ 0 4 25]
'OT::hhea' [ 0 4]
'FT_GlyphLoadRec_' [ 0]
'decompose_current_character' [ 0]
'OT::OffsetTo<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 70]
'reorder_syllable' [ 0]
'hb_ot_math_glyph_part_flags_t' [ 0]
'decompose_indic' [ 0]
'ft_mac_names' [ 0]
'FT_Stroker_Export' [ 0]
'hb_ot_get_glyph_v_advance' [ 0]
'OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 61]
'af_goth_nonbase_uniranges' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::CursivePosFormat1>' [ 0 4 227]
'hb_ot_position' [ 0]
'hb_set_set' [ 0]
'data_destroy_khmer' [ 0]
'inflateStateCheck' [ 0]
'chunkcopy_safe' [ 0]
'AFM_KernPair' [ 0]
'collect_features_khmer' [ 0]
'FT_Sfnt_Tag_' [ 0]
'OT::Supplier<OT::IntType<unsigned short, 2> >::operator+=' [ 0 4 47]
'OT::_hea<OT::hhea>::sanitize' [ 0 4 20]
'gray_TWorker' [ 0]
'OT::RecordListOf<OT::Script>::sanitize' [ 0 4 30]
'psh_hint_table_align_hints' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 107]
'position_cluster' [ 0]
'cid_parser_done' [ 0]
'FT_Get_Advances' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 106]
'T1_Get_Multi_Master' [ 0]
'hb_object_set_user_data<hb_shape_plan_t>' [ 0]
'hb_shape' [ 0]
'OT::SubstLookup::closure' [ 0 4 17]
'Set_High_Precision' [ 0]
'cr_png_set_text_compression_level' [ 0]
'FT_Outline_Translate' [ 0]
'fold_1' [ 0]
'FT_ModuleRec' [ 0]
'OT::hb_serialize_context_t::start_embed<OT::SubstLookup>' [ 0 4 28]
'OT::ArrayOf<OT::MathGlyphVariantRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'CF2_PathOp_' [ 0]
'hb_buffer_reverse_clusters' [ 0]
'OT::intersects_coverage' [ 0 4]
'cid_parse_dict' [ 0]
't1_builder_add_point' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hb_segment_properties_t' [ 0]
'_get_gsub' [ 0]
'hb_font_get_scale' [ 0]
'_hb_glyph_info_clear_ligated_and_multiplied' [ 0]
'hb_in_range<unsigned char>' [ 0]
'hb_reference_table_func_t' [ 0]
'T1_CMap_ClassesRec_' [ 0]
'hb_font_set_scale' [ 0]
'Cr_z_inflate_fast' [ 0]
'hb_tag_t' [ 0]
'cf2_hint_initZero' [ 0]
'FT_GlyphLoader_Adjust_Points' [ 0]
'OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 75]
'hb_font_get_glyph_h_origin' [ 0]
'OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 65]
'T1_DecoderRec' [ 0]
'T1_EncodingRec' [ 0]
'hb_ft_get_glyph_h_kerning' [ 0]
'ft_mem_qalloc' [ 0]
'FT_Stream_Read' [ 0]
'cff_driver_done' [ 0]
'OT::ContextApplyFuncs' [ 0 4]
'FT_Alloc_Func' [ 0]
'hb_ot_shape_planner_t' [ 0]
'OT::StructAfter<OT::ArrayOf<OT::LookupRecord, OT::IntType<unsigned short, 2> >, OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::CastP<OT::MathTopAccentAttachment, const void *>' [ 0 4]
'ARRAY_LENGTH<unsigned short, 2>' [ 0]
'T1_Hints_ResetFunc' [ 0]
'hb_unicode_decompose_nil' [ 0]
'OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 60]
'OT::Null<OT::IndexSubtableArray>' [ 0 4]
'hb_font_extents_t' [ 0]
'T1_ParseState' [ 0]
'OT::StructAtOffset<OT::FeatureTableSubstitution>' [ 0 4]
'OT::MATH::get_math_variants' [ 0 4 10]
'OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 76]
'OT::hb_lazy_loader_t<OT::post::accelerator_t>::fini' [ 0 4 47]
'skip_string' [ 0]
'cr_png_do_rgb_to_gray' [ 0]
'OT::OffsetTo<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4]
'CFF_VStore' [ 0]
'AF_CJKMetrics' [ 0]
'v_load16_dup' [ 0]
't1_args_count' [ 0]
'OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 64]
'OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 125]
'hb_font_reference' [ 0]
'_use_syllable_machine_trans_keys' [ 0]
'arabic_fallback_synthesize_lookup' [ 0]
'hb_ot_map_builder_t::add_pause' [ 0 21]
'T1_Compute_Max_Advance' [ 0]
'ft_library' [ 0]
'T1_Driver_Init' [ 0]
'ft_open_face_internal' [ 0]
'thai_above_state_machine_edge_t' [ 0]
'hb_ft_get_font_h_extents' [ 0]
'OT::operator+<const OT::MarkMarkPosFormat1 *, OT::IntType<unsigned short, 2>, OT::MarkArray>' [ 0 4]
'OT::CastP<OT::MathConstants, const void *>' [ 0 4]
'OT::SinglePosFormat2::collect_glyphs' [ 0 4 22]
't1_builder_add_contour' [ 0]
'cr_png_longjmp' [ 0]
'OT::CastP<OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >, const void *>' [ 0 4]
'cpdext' [ 0]
'OT::Ligature::serialize' [ 0 4 14]
'png_const_color_16p' [ 0]
'T1_FieldLocation_' [ 0]
'FT_Matrix_Invert' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'png_setup_up_row' [ 0]
'OT::operator+<const OT::MathGlyphInfo *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'FT_Int32' [ 0]
'OT::post::accelerator_t::init' [ 0 4 10 25]
'OT::Offset<OT::IntType<unsigned short, 2> >' [ 0 4]
'matra_position_indic' [ 0]
'compare_info_codepoint' [ 0]
'OT::Ligature::closure' [ 0 4 14]
'cr_png_fixed_error' [ 0]
'FT_Get_BDF_Property' [ 0]
'decompose_unicode' [ 0]
'HbOpXor::process<unsigned long long>' [ 0 9]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::dispatch<OT::MultipleSubstFormat1>' [ 0 4 227]
'cid_service_ps_name' [ 0]
'af_cjk_compute_stem_width' [ 0]
'hb_ot_shape_planner_t::hb_ot_shape_planner_t' [ 0 23]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'TT_TableRec' [ 0]
'hb_font_funcs_set_glyph_extents_func' [ 0]
'TT_Process_Composite_Component' [ 0]
'TT_Cur_Ppem_Func' [ 0]
'ARRAY_LENGTH<unsigned short, 4>' [ 0]
'Ins_MIAP' [ 0]
'FT_AutoHinter_InterfaceRec_' [ 0]
'png_const_bytep' [ 0]
'TT_ExecContextRec_' [ 0]
'Ins_AND' [ 0]
'OT::LigatureSet::sanitize' [ 0 4 17]
'OT::BEInt<unsigned char, 1>' [ 0 4]
'initial_reordering' [ 0]
'OT::MarkLigPosFormat1::get_coverage' [ 0 4 23]
'png_text_compress' [ 0]
'OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >' [ 0 4]
'AF_WritingSystem_GetStdWidthsFunc' [ 0]
'OT::MarkLigPosFormat1' [ 0 4]
'Ins_FLIPRGOFF' [ 0]
't1_get_glyph_name' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::CaretValue, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 109]
'SFNT_Service' [ 0]
'hb_buffer_add_utf<hb_utf16_t>' [ 0]
'OT::Lookup::get_subtable_count' [ 0 4 12]
'FT_Multi_Master_' [ 0]
'ft_smooth_render_generic' [ 0]
'OT::Coverage::Iter::init' [ 0 4 14 20]
'inflate_huft_s' [ 0]
'OT::operator+<const OT::KernSubTableFormat2 *, OT::IntType<unsigned short, 2>, OT::IntType<short, 2> >' [ 0 4]
'Update_Max' [ 0]
'tt_cmap2_class_rec' [ 0]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::is_override' [ 0 4 54]
'readFromStack' [ 0]
'OT::ArrayOf<OT::IntType<unsigned char, 1>, OT::IntType<unsigned int, 4> >' [ 0 4]
'indic_category_t' [ 0]
'hb_font_get_glyph_name' [ 0]
'cr_png_do_expand_16' [ 0]
'_hb_ft_font_destroy' [ 0]
'cr_png_set_cHRM_fixed' [ 0]
'_hb_bit_storage<unsigned int>' [ 0]
'cr_png_set_cHRM_XYZ' [ 0]
'cid_service_properties' [ 0]
'deflate_slow' [ 0]
'Cr_z_compress2' [ 0]
'af_kali_dflt_style_class' [ 0]
'FT_Set_Renderer' [ 0]
'OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'cf2_getFamilyOtherBlues' [ 0]
'OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::GPOS::position_finish_advances' [ 0 4 10]
'hb_ft_font_set_funcs' [ 0]
'OT::Coverage::intersects' [ 0 4 14]
'CFF_CMapStdRec_' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::AlternateSubst, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'ft_smooth_init' [ 0]
'Ins_Goto_CodeRange' [ 0]
'int8_t' [ 0]
'OT::AxisRecord' [ 0 4]
'OT::ContextFormat1::closure' [ 0 4 20]
'hb_buffer_t::sort' [ 0 13]
'OT::Sanitizer<OT::avar>::Sanitizer' [ 0 4 25]
'OT::PairPosFormat2::get_coverage' [ 0 4 20]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::mask_for' [ 0 47]
'OT::hb_serialize_context_t::extend<OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'ARRAY_LENGTH<unsigned int, 5>' [ 0]
'af_cakm_script_class' [ 0]
'OT::RangeRecord::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 17]
'FT_Service_PsInfoRec' [ 0]
'inflate_codes_free' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 103]
'cr_png_set_progressive_read_fn' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 110]
'OT::hmtxvmtx<OT::hmtx, OT::hhea>::accelerator_t::init' [ 0 4 34 49]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>' [ 0 4]
'hb_blob_get_empty::_hb_blob_nil' [ 0 19]
'hb_font_get_glyph_from_name' [ 0]
'OT::ArrayOf<OT::Record<OT::Feature>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 71]
'png_colorp' [ 0]
'af_cjk_writing_system_class' [ 0]
'hb_font_set_variations' [ 0]
'deflate_huff' [ 0]
'PS_TableRec_' [ 0]
'psh_hint_table_deactivate' [ 0]
'OT::VarData::sanitize' [ 0 4 13]
'OT::CastP<OT::Rule, const void *>' [ 0 4]
'extra_blbits' [ 0]
'_hb_ot_complex_shaper_tibetan' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'FT_Int64' [ 0]
'TT_SizeRec_' [ 0]
'get_sfnt_table' [ 0]
'OT::ClassDefFormat2::get_class' [ 0 4 21]
'OT::StructAfter<OT::SegmentMaps, OT::SegmentMaps>' [ 0 4]
'OT::Sanitizer<OT::GDEF>::sanitize' [ 0 4 25]
'Cr_z_alloc_func' [ 0]
'sort_r_cmpswap' [ 0]
'OT::AlternateSubst::dispatch<hb_get_subtables_context_t>' [ 0 4 20]
'Decompose_Curve' [ 0]
't1_decoder_funcs' [ 0]
'ARRAY_LENGTH<unsigned int, 6>' [ 0]
'OT::kern::accelerator_t::init' [ 0 4 10 25]
'png_setup_paeth_row_only' [ 0]
'png_uint_32' [ 0]
'hb_language_impl_t' [ 0]
'OT::BitmapSizeTable::find_table' [ 0 4 21]
'OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 64]
'OT::Null<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> > >' [ 0 4]
'tt_face_free_ps_names' [ 0]
'hb_get_subtables_context_t::dispatch<OT::ChainContextFormat3>' [ 0 28]
'T1_Done_Metrics' [ 0]
'hb_unicode_funcs_is_immutable' [ 0]
'OT::FeatureParams::get_size_params' [ 0 4 19]
'OT::BaseScript' [ 0 4]
'OT::GSUBGPOS::find_script_index' [ 0 4 14]
'OT::CursivePos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 16]
'OT::ChainContext::dispatch<OT::hb_would_apply_context_t>' [ 0 4 18]
'FT_TSB_Adjust_Func' [ 0]
'header_fields' [ 0]
'AF_FaceGlobals' [ 0]
'FT_Bitmap_Copy' [ 0]
'reph_mode_t' [ 0]
'af_cjk_metrics_scale' [ 0]
'FT_Short' [ 0]
'OT::hb_sanitize_context_t::default_return_value' [ 0 4 27]
'set_khmer_properties' [ 0]
'FT_List_Up' [ 0]
'OT::ArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 63]
'Cr_z_compress' [ 0]
'FT_Var_Named_Style' [ 0]
'tt_cmap4_char_map_binary' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::may_have' [ 0 47]
'ARRAY_LENGTH<unsigned int, 7>' [ 0]
'PS_HintRec_' [ 0]
'longest_match' [ 0]
'ft_corner_orientation' [ 0]
'ft_hash_str_free' [ 0]
'hb_unicode_funcs_t::modified_combining_class' [ 0 20]
'TT_DefRecord_' [ 0]
'override_features_indic' [ 0]
'PS_DesignMap' [ 0]
'AF_WritingSystem' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::_hea<OT::vhea> >' [ 0 4 27]
'OT::operator+<const OT::MathGlyphInfo *, OT::IntType<unsigned short, 2>, OT::MathTopAccentAttachment>' [ 0 4]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkMarkPos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'Render_Single_Pass' [ 0]
'hb_object_create<hb_unicode_funcs_t>' [ 0]
'OT::OffsetArrayOf<OT::LigatureSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Renderer_Class_' [ 0]
'OT::StructAtOffset<OT::VariationStore>' [ 0 4]
'OT::PosLookupSubTable::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 23]
'OT::MarkBasePosFormat1::apply' [ 0 4 24]
'woff_header_fields' [ 0]
'cr_png_do_gray_to_rgb' [ 0]
'OT::LigatureSubst::serialize' [ 0 4 19]
'OT::SubstLookup::collect_glyphs' [ 0 4 17]
'OT::Condition::sanitize' [ 0 4 15]
'FT_Span_' [ 0]
'OT::BaseScriptList' [ 0 4]
'OT::hb_collect_glyphs_context_t::dispatch<OT::AlternateSubstFormat1>' [ 0 4 33]
'OT::SingleSubst::dispatch<hb_get_subtables_context_t>' [ 0 4 17]
'OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 64]
'cr_png_colorspace_set_ICC' [ 0]
'OT::CastR<OT::OffsetArrayOf<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >, OT::ArrayOf<OT::Offset<OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4]
'OT::StructAtOffset<OT::ChainRule>' [ 0 4]
'store3' [ 0]
'OT::StructAtOffset<OT::DeltaSetIndexMap>' [ 0 4]
'cff_get_cmap_info' [ 0]
'png_ptruint' [ 0]
'Cr_z_deflateSetDictionary' [ 0]
'hb_face_reference_blob' [ 0]
'FT_Stroker' [ 0]
'ft_glyphslot_init' [ 0]
'OT::hb_closure_context_t::dispatch<OT::ReverseChainSingleSubstFormat1>' [ 0 4 26]
'PSH_Blue_TableRec' [ 0]
'OT::MarkMarkPos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 17]
'hb_language_from_string' [ 0]
'OT::CastP<OT::UVSMapping, const void *>' [ 0 4]
't1_cmap_custom_done' [ 0]
'hb_font_get_ptem' [ 0]
'hb_latin1_t::next' [ 0 13]
'_hb_ot_shaper_shape_plan_data_destroy' [ 0]
'AFM_FontInfo' [ 0]
'__builtin_va_list' [ 0]
'OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::CastP<OT::cmap, const void *>' [ 0 4]
'PS_GetGlyphNameFunc' [ 0]
'cr_png_set_chunk_malloc_max' [ 0]
'BDF_PropertyType' [ 0]
'tt_face_load_font_dir' [ 0]
'FT_CMapRec' [ 0]
'cr_png_set_IHDR' [ 0]
'cr_png_create_png_struct' [ 0]
'k3k4' [ 0]
'af_adlm_uniranges' [ 0]
'OT::StructAtOffset<OT::KernAAT::SubTableWrapper>' [ 0 4]
'cff_make_private_dict' [ 0]
'Function_Sweep_Span' [ 0]
'Cr_z_uncompress' [ 0]
'FT_MulFix_x86_64' [ 0]
'af_armn_nonbase_uniranges' [ 0]
'hb_ot_map_t::finish' [ 0 13]
'cff_get_standard_encoding' [ 0]
'__uint16_t' [ 0]
'FT_Size_Metrics_' [ 0]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4]
'FT_Kerning_Mode_' [ 0]
'Ins_PUSHB' [ 0]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >' [ 0 4]
'CFF_Field_Handler' [ 0]
'OT::CastP<OT::CmapSubtableLongGroup, const void *>' [ 0 4]
'arabic_fallback_plan_nil' [ 0]
'Ins_UTP' [ 0]
'PS_Hint_Type_' [ 0]
'T1_Load_Glyph' [ 0]
'ft_raster1_renderer_class' [ 0]
'T1_Builder_Add_Contour_Func' [ 0]
'ft_raster1_get_cbox' [ 0]
'OT::Sanitizer<OT::vhea>' [ 0 4]
'Ins_PUSHW' [ 0]
'OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Stream_Skip' [ 0]
'FT_CID_GetIsInternallyCIDKeyedFunc' [ 0]
'OT::RuleSet::collect_glyphs' [ 0 4 13]
'Ins_SCANCTRL' [ 0]
'cr_png_do_read_transformations' [ 0]
'TT_TableRec_' [ 0]
'af_latn_dflt_style_class' [ 0]
'v_load8_dup' [ 0]
'ps_mask_table_done' [ 0]
'hb_ft_font_set_load_flags' [ 0]
'cid_services' [ 0]
'CFF_FontRecDictRec' [ 0]
'cr_png_set_add_alpha' [ 0]
'gray_PWorker' [ 0]
'OT::Ligature::sanitize' [ 0 4 14]
'af_ethi_dflt_style_class' [ 0]
'PProfileList' [ 0]
'OT::hb_ot_apply_context_t::matcher_t::set_ignore_zwnj' [ 0 4 27 38]
'OT::ArrayOf<OT::KernPair, OT::BinSearchHeader>::sanitize' [ 0 4 48]
'GX_AVarSegmentRec_' [ 0]
'hb_get_subtables_context_t::apply_to<OT::MarkMarkPosFormat1>' [ 0 28]
'Cr_z_deflate_copyright' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>' [ 0]
'FT_Get_MM_Func' [ 0]
'OT::ValueFormat::get_size' [ 0 4 17]
'GX_BlendRec_' [ 0]
'lm_init' [ 0]
'cr_png_write_IEND' [ 0]
'OT::MarkMarkPos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 17]
'hb_ot_layout_lookup_would_substitute' [ 0]
'OT::ArrayOf<OT::KernPair, OT::BinSearchHeader>::operator[]' [ 0 4 48]
'png_text_struct' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::IndexSubtableFormat1Or3<OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'ft_standard_glyph_names' [ 0]
'cr_png_fixed' [ 0]
'OT::OffsetArrayOf<OT::VarData, OT::IntType<unsigned int, 4> >' [ 0 4]
'hb_buffer_create' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Lookup::get_props' [ 0 4 12]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'Cr_z_deflateCopy' [ 0]
'TPoint_' [ 0]
'OT::SortedArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >::bsearch<unsigned int>' [ 0 4 66]
'T1_Field_ParseFunc' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 104]
'ft_stroke_border_init' [ 0]
'tt_glyph_load' [ 0]
'cf2_hint_init' [ 0]
'hb_utf32_t<false>' [ 0]
'hb_set_t::page_t::previous' [ 0 10 18]
'OT::Null<OT::FeatureVariations>' [ 0 4]
'TT_CodeRange_' [ 0]
'hb_ot_layout_get_attach_points' [ 0]
'af_cjk_hint_edges' [ 0]
'OT::CmapSubtableFormat0' [ 0 4]
'CF2_OutlineRec' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::VariationSelectorRecord>' [ 0 4 27]
'tt_face_get_location' [ 0]
'OT::CmapSubtableFormat6' [ 0 4]
'hb_font_get_glyph_origin_for_direction' [ 0]
'TT_Glyf_GetLocationFunc' [ 0]
'OT::AnchorFormat3::get_anchor' [ 0 4 19]
'T1_Private' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::CoverageFormat2>' [ 0 4 28]
'ps_builder_init' [ 0]
'HbOpXor::process<hb_vector_size_t<unsigned long long, 128> >' [ 0 9]
'OT::hb_sanitize_context_t::check_struct<OT::IndexSubtableHeader>' [ 0 4 27]
'OT::RecordArrayOf<OT::LangSys>::find_index' [ 0 4 32]
'ISALNUM' [ 0]
'OT::OffsetArrayOf<OT::PosLookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'ps_hint_table_done' [ 0]
'OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >::serialize' [ 0 4 61]
'FT_Blend_Check_Vector_Func' [ 0]
'FT_New_Library' [ 0]
'OT::CastP<OT::FeatureParams, const void *>' [ 0 4]
'OT::MathVariants::get_glyph_variants' [ 0 4 18]
'read_data_from_FT_Stream' [ 0]
'TT_CMap_Info_GetFunc' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::LigatureSubstFormat1::sanitize' [ 0 4 26]
'OT::StructAtOffset<OT::LangSys>' [ 0 4]
'OT::MathVariants::sanitize' [ 0 4 18]
'OT::Null<OT::LigCaretList>' [ 0 4]
'OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> >::neuter' [ 0 4 63]
'cr_png_do_unpack' [ 0]
'CF2_StackRec_' [ 0]
'PS_Hint' [ 0]
'TPixmap_' [ 0]
'chunkcopy_core_safe' [ 0]
'AF_Script_UniRangeRec' [ 0]
'Ins_ELSE' [ 0]
'TT_DotFix14_long_long' [ 0]
'hb_buffer_t::reset_masks' [ 0 13]
'OT::CursivePos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 16]
'CF2_ArrStack' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>::finish' [ 0 44]
'OT::hb_sanitize_context_t::check_struct<OT::Record<OT::LangSys> >' [ 0 4 27]
'ft_smooth_render_lcd_v' [ 0]
'OT::BinSearchHeader::operator unsigned int' [ 0 4 21]
'OT::hb_sanitize_context_t::check_struct<OT::ConditionFormat1>' [ 0 4 27]
'cr_png_malloc_array' [ 0]
'hb_font_glyph_from_string' [ 0]
'hb_unicode_general_category_func_t' [ 0]
'OT::CastP<OT::KernPair, const void *>' [ 0 4]
'Ins_FLIPPT' [ 0]
'FILE' [ 0]
'png_image_skip_unused_chunks' [ 0]
'OT::OffsetArrayOf<OT::Coverage, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_font_set_face' [ 0]
'OT::OffsetTo<OT::VariationStore, OT::IntType<unsigned int, 4> >' [ 0 4]
'ft_bitmap_glyph_copy' [ 0]
'cff_sid_to_glyph_name' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::may_skip' [ 0 4 27 48]
'hb_ot_math_is_glyph_extended_shape' [ 0]
'OT::MathGlyphPartRecord' [ 0 4]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MultipleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'hb_language_to_string' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::VarData>' [ 0 4 27]
'hb_face_reference_table' [ 0]
'hb_form_clusters' [ 0]
'OT::Null<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4]
'png_read_status_ptr' [ 0]
'power_tens' [ 0]
'AF_CJKBlueRec' [ 0]
'cr_png_write_iCCP' [ 0]
'af_iup_shift' [ 0]
'OT::MathGlyphConstruction' [ 0 4]
'Int' [ 0]
'TT_Set_MM_Blend' [ 0]
'OT::hb_ot_apply_context_t::dispatch<OT::LigatureSubstFormat1>' [ 0 4 27]
'OT::Null<OT::IntType<short, 2> >' [ 0 4]
'hb_get_subtables_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 28]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::get_h_kerning' [ 0 4 55]
'FT_Outline_Transform' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13> >' [ 0 4 27]
'OT::OffsetArrayOf<OT::Lookup, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::BaseCoord' [ 0 4]
'T1_Hints_CloseFunc' [ 0]
'OT::Null<OT::CBDT::accelerator_t>' [ 0 4]
'TT_CMap_ClassRec' [ 0]
'tt_driver_init' [ 0]
'cr_png_malloc' [ 0]
'hb_font_create' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkBasePos, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'Ins_SDPVTL' [ 0]
'OT::operator+<const OT::MathGlyphInfo *, OT::IntType<unsigned short, 2>, OT::MathKernInfo>' [ 0 4]
'OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 4 26]
'OT::ArrayOf<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 103]
'lang_matches' [ 0]
'af_mlym_uniranges' [ 0]
'Cr_z_gz_error' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 4>' [ 0]
'OT::OffsetTo<OT::LigCaretList, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 65]
'OT::Lookup::dispatch<OT::PosLookupSubTable, OT::hb_ot_apply_context_t>' [ 0 4 12]
'hb_variation_from_string' [ 0]
'af_hebr_uniranges' [ 0]
'deserialize_json_start' [ 0]
'load_sbit_image' [ 0]
'hb_ft_get_nominal_glyph' [ 0]
'decompose' [ 0]
'GX_AxisCoordsRec_' [ 0]
'OT::Sanitizer<OT::maxp>' [ 0 4]
'OT::operator+<const OT::MATH *, OT::IntType<unsigned short, 2>, OT::MathVariants>' [ 0 4]
'OT::Sanitizer<OT::post>::lock_instance' [ 0 4 25]
'tt_get_sfnt_checksum' [ 0]
'OT::post::sanitize' [ 0 4 10]
'Cr_z_gzungetc' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > >::add_range' [ 0 195]
'cff_set_mm_blend' [ 0]
'ft_extra_glyph_unicodes' [ 0]
'hb_get_subtables_context_t::dispatch<OT::SingleSubstFormat2>' [ 0 28]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathGlyphAssembly, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 59]
'af_cyrl_sups_style_class' [ 0]
'af_orkh_script_class' [ 0]
'FT_Set_MM_Blend_Coordinates' [ 0]
'hb_font_set_var_coords_design' [ 0]
'hb_ot_map_t::get_feature_stage' [ 0 13]
'af_hebr_script_class' [ 0]
'af_latin_hints_link_segments' [ 0]
'GUnicodeScript' [ 0]
'af_osge_nonbase_uniranges' [ 0]
'Cr_z_zcalloc' [ 0]
'tree_desc' [ 0]
'send_tree' [ 0]
'CF2_OutlineCallbacksRec' [ 0]
'af_taml_uniranges' [ 0]
'FT_Prop_IncreaseXHeight_' [ 0]
'TT_Get_HMetrics' [ 0]
'hb_font_t::get_glyph_name' [ 0 11]
'OT::hb_serialize_context_t::extend_min<OT::LigatureSubstFormat1>' [ 0 4 28]
'hb_ot_map_t::get_stage_lookups' [ 0 13]
'FT_Face_Properties' [ 0]
'af_grek_uniranges' [ 0]
'af_adlm_script_class' [ 0]
'deflate_rle' [ 0]
'New_Profile' [ 0]
'OT::operator+<const OT::Lookup *, OT::IntType<unsigned short, 2>, OT::SubstLookupSubTable>' [ 0 4]
'hb_font_t::em_scalef' [ 0 11]
'int64_t' [ 0]
'af_grek_c2cp_style_class' [ 0]
'_iup_worker_shift' [ 0]
'hb_blob_set_user_data' [ 0]
'TT_CMap4' [ 0]
'OT::hb_lazy_loader_t<OT::post::accelerator_t>' [ 0 4]
'OT::Sanitizer<OT::hhea>' [ 0 4]
'af_beng_nonbase_uniranges' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::add_range' [ 0 47]
'OT::operator+<const OT::MarkMarkPosFormat1 *, OT::IntType<unsigned short, 2>, OT::AnchorMatrix>' [ 0 4]
'OT::hb_would_apply_context_t::stop_sublookup_iteration' [ 0 4 30]
'OT::hb_serialize_context_t::extend_min<OT::IntType<unsigned short, 2> >' [ 0 4 28]
'OT::hb_sanitize_context_t::check_struct<OT::IntType<unsigned int, 4> >' [ 0 4 27]
'FT_Glyph_Copy' [ 0]
'cr_png_set_user_limits' [ 0]
'png_setup_paeth_row' [ 0]
'cff_slot_done' [ 0]
'petite_capitals_from_capitals_coverage' [ 0]
'TT_Load_Simple_Glyph' [ 0]
'OT::operator+<const OT::VariationStore *, OT::IntType<unsigned int, 4>, OT::VarRegionList>' [ 0 4]
'CF2_StemHintRec_' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 47]
'Move_CVT' [ 0]
'OT::HintingDevice' [ 0 4]
'FT_Glyph' [ 0]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 60]
'PSH_Glyph' [ 0]
'FT_HashnodeRec_' [ 0]
'black_TBand' [ 0]
'tt_get_glyph_name' [ 0]
'OT::IntType<unsigned short, 2>::sanitize' [ 0 4 32]
'FT_Service_CIDRec' [ 0]
'OT::CmapSubtableFormat0::get_glyph' [ 0 4 25]
'cr_png_handle_IHDR' [ 0]
'hb_set_t' [ 0]
'OT::ArrayOf<OT::LOffsetTo<OT::Coverage>, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 75]
'TT_Init_Face_Func' [ 0]
'OT::operator+<const OT::MATH *, OT::IntType<unsigned short, 2>, OT::MathConstants>' [ 0 4]
'af_latin_hint_edges' [ 0]
'v_store_128' [ 0]
'OT::CmapSubtableFormat4' [ 0 4]
'TT_CallRec_' [ 0]
'sRGB_xy' [ 0]
'OT::hb_ot_apply_context_t::match_properties_mark' [ 0 4 27]
'ft_cubic_is_small_enough' [ 0]
'FT_Long' [ 0]
'OT::ChainContextFormat1::collect_glyphs' [ 0 4 25]
'tt_sbit_decoder_load_bitmap' [ 0]
'Cr_z_gztell64' [ 0]
'FT_Matrix_Multiply' [ 0]
'OT::CastP<OT::OffsetTable, const void *>' [ 0 4]
'png_text' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'AFM_Parser' [ 0]
'fill_window_c' [ 0]
'af_latin_hints_detect_features' [ 0]
'Ins_GETVARIATION' [ 0]
'OT::Lookup::dispatch<OT::PosLookupSubTable, hb_get_subtables_context_t>' [ 0 4 12]
'pshinter_interface' [ 0]
'af_sinh_uniranges' [ 0]
'hb_font_get_glyph_v_kerning' [ 0]
'hb_utf32_t<false>::next' [ 0 19]
'OT::MathTopAccentAttachment::get_value' [ 0 4 29]
'af_latin_hints_compute_blue_edges' [ 0]
'hb_set_t::is_equal' [ 0 10]
'_indic_syllable_machine_key_spans' [ 0]
'OT::ArrayOf<OT::Index, OT::IntType<unsigned short, 2> >::sub_array' [ 0 4 57]
'cr_png_get_text' [ 0]
'cff_blend_build_vector' [ 0]
'hb_set_t::page_t::elt' [ 0 10 18]
'Compute_Round' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>' [ 0]
'_hb_glyph_info_ligated_and_didnt_multiply' [ 0]
'PS_Mask_TableRec_' [ 0]
'write_unknown_chunks' [ 0]
'hb_stable_sort<hb_glyph_info_t, hb_glyph_position_t>' [ 0]
'OT::operator+<const OT::FeatureVariations *, OT::IntType<unsigned int, 4>, OT::ConditionSet>' [ 0 4]
'AFM_StreamRec_' [ 0]
'hb_font_get_glyph_h_kerning_parent' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 110]
'png_gamma_not_sRGB' [ 0]
'af_script_classes' [ 0]
'FT_Renderer_Class' [ 0]
'_hb_glyph_info_is_mark' [ 0]
'CFF_Parser' [ 0]
'OT::SortedArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_ot_map_t::position' [ 0 13]
'FT_Stroker_ConicTo' [ 0]
'titling_coverage' [ 0]
'af_armn_script_class' [ 0]
'OT::VarRegionList::evaluate' [ 0 4 19]
'hb_font_t::dir_scale' [ 0 11]
'af_grek_subs_style_class' [ 0]
'tt_get_interface' [ 0]
'is_joiner' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::Lookup>' [ 0 4 28]
'OT::hb_ot_apply_context_t::skipping_iterator_t::init' [ 0 4 27 48]
'OT::PosLookup::add_coverage<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >' [ 0 4 15]
'Ins_JROT' [ 0]
'OT::PairPosFormat2::sanitize' [ 0 4 20]
'hb_object_set_user_data<hb_face_t>' [ 0]
'hb_font_t::subtract_glyph_origin_for_direction' [ 0 11]
'hb_ot_layout_table_get_lookup_count' [ 0]
'hb_ot_map_t::feature_map_t::cmp' [ 0 13 28]
'OT::SingleSubst::dispatch<OT::hb_closure_context_t>' [ 0 4 17]
'OT::OffsetTo<OT::BaseScriptList, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::CastP<OT::VariationSelectorRecord, const void *>' [ 0 4]
'png_uint_16pp' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::LigatureSubst, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'Cr_z_inflateGetDictionary' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::qsort' [ 0 54]
'OT::StructAtOffset<OT::Condition>' [ 0 4]
'OT::hb_sanitize_context_t::may_edit' [ 0 4 27]
'OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'png_infopp' [ 0]
'cr_png_process_data_pause' [ 0]
'OT::RuleSet' [ 0 4]
'png_get_fixed_point' [ 0]
'_get_avar' [ 0]
'OT::Null<OT::FeatureVariationRecord>' [ 0 4]
'CF2_GlyphPath' [ 0]
'tt_cmap14_validate' [ 0]
'png_icc_tag_char' [ 0]
'hb_font_t::get_variation_glyph' [ 0 11]
'CID_Loader' [ 0]
'__m128i' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>' [ 0]
'hb_ot_layout_get_size_params' [ 0]
'hb_object_is_inert<hb_shape_plan_t>' [ 0]
'hb_ot_layout_glyph_props_flags_t' [ 0]
'AF_LatinMetricsRec' [ 0]
'hb_font_destroy' [ 0]
'OT::Extension<OT::ExtensionPos>::dispatch<OT::hb_sanitize_context_t>' [ 0 4 33]
'OT::hb_sanitize_context_t::check_struct<OT::maxp>' [ 0 4 27]
'tt_cmap2_get_info' [ 0]
'hb_blob_get_empty' [ 0]
'cr_png_get_chunk_cache_max' [ 0]
'_hb_bit_storage<unsigned long long>' [ 0]
'OT::ArrayOf<OT::Record<OT::Script>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 70]
'cid_load_keyword' [ 0]
'ft_var_load_avar' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::bfind<unsigned int>' [ 0 54]
'OT::LOffsetTo<OT::Feature>' [ 0 4]
'petite_capitals_feature' [ 0]
'FT_Vector_' [ 0]
'OT::SortedArrayOf<OT::KernPair, OT::BinSearchHeader>' [ 0 4]
'PS_Conv_Strtol' [ 0]
'hb_font_get_glyph_origin_func_t' [ 0]
'ps_table_done' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat1>' [ 0 4 28]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_closure_context_t>' [ 0 4 29]
'OT::hb_sanitize_context_t::check_struct<OT::FeatureParamsStylisticSet>' [ 0 4 27]
'OT::CoverageFormat1::intersects_coverage' [ 0 4 21]
'cr_png_safe_warning' [ 0]
'cr_png_do_shift' [ 0]
'hb_font_get_parent' [ 0]
'tt_cmap10_char_index' [ 0]
'hb_object_trace<hb_font_funcs_t>' [ 0]
'hb_face_reference' [ 0]
'af_limb_uniranges' [ 0]
'OT::hb_ot_apply_context_t::skipping_iterator_t::skipping_iterator_t' [ 0 4 27 48]
'OT::OffsetArrayOf<OT::LigGlyph, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_ot_shape_plan_t::substitute' [ 0 20]
'CFF_FontRecDict' [ 0]
'OT::KernTable<OT::KernOT>::get_h_kerning' [ 0 4 27]
'OT::Sanitizer<OT::fvar>::lock_instance' [ 0 4 25]
'af_deva_uniranges' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::ChainContextFormat1::closure' [ 0 4 25]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'FT_Bitmap_' [ 0]
'OT::BaseScriptRecord' [ 0 4]
'FT_Get_Var_Design_Coordinates' [ 0]
'ft_cubic_split' [ 0]
'OT::operator+<const OT::HVARVVAR *, OT::IntType<unsigned int, 4>, OT::VariationStore>' [ 0 4]
'gray_sweep' [ 0]
'OT::hb_ot_apply_context_t::_set_glyph_props' [ 0 4 27]
'FT_Select_Charmap' [ 0]
'png_bytep' [ 0]
'Cr_z__tr_stored_block' [ 0]
'hb_font_t::em_scale_x' [ 0 11]
'hb_font_t::em_scale_y' [ 0 11]
'OT::hb_serialize_context_t::allocate_size<OT::CoverageFormat2>' [ 0 4 28]
'cf2_decoder_parse_charstrings' [ 0]
'hb_shape_plan_get_shaper' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'AF_Style' [ 0]
'OT::MathValueRecord::get_x_value' [ 0 4 21]
'FT_Encoding_' [ 0]
'OT::Lookup::dispatch<OT::SubstLookupSubTable, OT::hb_sanitize_context_t>' [ 0 4 12]
'OT::Sanitizer<OT::avar>::lock_instance' [ 0 4 25]
'strstr' [ 0]
'OT::RuleSet::apply' [ 0 4 13]
'hb_buffer_t::message' [ 0 13]
'hb_get_subtables_context_t::hb_get_subtables_context_t' [ 0 28]
'cr_png_chunk_report' [ 0]
'arabic_fallback_plan_init_win1256' [ 0]
'PSH_Width' [ 0]
'BBox_Line_To' [ 0]
'__blksize_t' [ 0]
'Ins_FLIPON' [ 0]
'TT_SBitDecoderRec' [ 0]
'hb_buffer_get_segment_properties' [ 0]
'OT::PairPos' [ 0 4]
'order' [ 0]
'hb_ot_shaper_face_data_ensure' [ 0]
'OT::SinglePosFormat2::get_coverage' [ 0 4 22]
'OT::AlternateSubst' [ 0 4]
'PSH_Point' [ 0]
'OT::operator+<const OT::LigCaretList *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::hb_lazy_loader_t<OT::kern::accelerator_t>::fini' [ 0 4 47]
'OT::SortedArrayOf<OT::Tag, OT::IntType<unsigned short, 2> >' [ 0 4]
'Cr_z_adler32_z' [ 0]
'_hb_bit_storage<unsigned long long>::b' [ 0 37]
'long long unsigned int' [ 0]
'ft_property_do' [ 0]
'hb_font_get_glyph_h_kerning' [ 0]
'hb_prealloced_array_t<hb_user_data_array_t::hb_user_data_item_t, 1>::find<hb_user_data_key_t *>' [ 0 69]
'FT_CMap_CharVarIsDefaultFunc' [ 0]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat12>' [ 0 4]
'FT_List_Destructor' [ 0]
'af_mlym_dflt_style_class' [ 0]
'OT::hb_lazy_loader_t<OT::kern::accelerator_t>::operator->' [ 0 4 47]
'OT::hb_lazy_loader_t<OT::glyf::accelerator_t>::fini' [ 0 4 47]
'hb_ot_shape_glyphs_closure' [ 0]
'tt_loader_done' [ 0]
'cf2_arrstack_size' [ 0]
'PSAux_Interface' [ 0]
'cf2_hint_isTop' [ 0]
'OT::ContextFormat1::sanitize' [ 0 4 20]
'cr_png_write_PLTE' [ 0]
'Ins_EIF' [ 0]
'OT::SinglePos' [ 0 4]
'OT::IndexSubtable::sanitize' [ 0 4 19]
'hb_shaper_data_t' [ 0]
'_khmer_syllable_machine_trans_keys' [ 0]
'hb_set_get_population' [ 0]
't1_get_ps_name' [ 0]
'OT::Sanitizer<OT::CBDT>' [ 0 4]
'inflate_codes_statef' [ 0]
'OT::ArrayOf<OT::KernPair, OT::BinSearchHeader>::sanitize_shallow' [ 0 4 48]
'final_reordering' [ 0]
'png_image_free_function' [ 0]
'Cr_z_deflateResetKeep' [ 0]
'OT::Null<OT::ChainRuleSet>' [ 0 4]
'hb_set_t::subtract' [ 0 10]
'OT::Context::dispatch<OT::hb_sanitize_context_t>' [ 0 4 13]
'hb_in_range<unsigned int>' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CaretValueFormat1>' [ 0 4 27]
'OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 67]
'OT::Null<OT::MathItalicsCorrectionInfo>' [ 0 4]
'AF_ScriptClassRec' [ 0]
'OT::cmap::accelerator_t::get_variation_glyph' [ 0 4 10 25]
'tree_desc_s' [ 0]
'OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::LangSys::get_required_feature_index' [ 0 4 13]
'operator|=' [ 0]
'AF_WidthRec_' [ 0]
'hb_buffer_t::replace_glyphs' [ 0 13]
'OT::CmapSubtableLongSegmented<OT::CmapSubtableFormat13>' [ 0 4]
'T1_Reset_MM_Blend' [ 0]
'af_get_interface' [ 0]
'is_ICC_signature' [ 0]
'_indic_syllable_machine_trans_targs' [ 0]
'check_table_dir' [ 0]
'gray_hline' [ 0]
'putShortMSB' [ 0]
'OT::operator+<const OT::ChainRuleSet *, OT::IntType<unsigned short, 2>, OT::ChainRule>' [ 0 4]
'OT::CastP<OT::ChainRule, const void *>' [ 0 4]
'hb_font_funcs_set_glyph_h_advance_func' [ 0]
'FT_Colr_Internal' [ 0]
'CF2_Font' [ 0]
'af_loader_reset' [ 0]
'OT::ClassDefFormat2::add_class<hb_set_t>' [ 0 4 21]
'OT::Null<OT::ConditionSet>' [ 0 4]
'FT_Get_Module_Interface' [ 0]
'OT::HintingDevice::get_y_delta' [ 0 4 19]
'format1_names' [ 0]
'FT_Library' [ 0]
'FT_Var_Named_Style_' [ 0]
'OT::ArrayOf<OT::UVSMapping, OT::IntType<unsigned int, 4> >::operator[]' [ 0 4 60]
'OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> >' [ 0 4]
'cf2_hint_isBottom' [ 0]
'hb_language_t' [ 0]
'_hb_glyph_info_is_default_ignorable_and_not_hidden' [ 0]
'hb_ft_font_changed' [ 0]
'hb_get_subtables_context_t::dispatch<OT::MarkLigPosFormat1>' [ 0 28]
'FT_Generic_' [ 0]
'OT::SubstLookup::would_apply' [ 0 4 17]
'af_goth_dflt_style_class' [ 0]
'OT::SinglePosFormat1::sanitize' [ 0 4 22]
'hb_set_t::page_t::is_empty' [ 0 10 18]
'hb_ot_layout_table_get_script_tags' [ 0]
'cr_png_chunk_unknown_handling' [ 0]
'OT::PosLookupSubTable::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 23]
'OT::PosLookup::dispatch<hb_get_subtables_context_t>' [ 0 4 15]
'cr_png_set_compression_window_bits' [ 0]
'OT::ContextSubst' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::MathVariants>' [ 0 4 27]
'cr_png_check_chunk_name' [ 0]
'af_iup_interp' [ 0]
'FT_Service_PsFontNameRec_' [ 0]
'OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 62]
'TT_CMapRec' [ 0]
't1_cmap_classes' [ 0]
'CFF_Decoder_Funcs' [ 0]
'png_control' [ 0]
'OT::ReverseChainSingleSubst::dispatch<hb_get_subtables_context_t>' [ 0 4 29]
'OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >::bsearch<unsigned int>' [ 0 4 73]
'Move_CVT_Stretched' [ 0]
'OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::KernClassTable' [ 0 4]
'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 118]
'collect_features_use' [ 0]
'OT::LigatureSubst::dispatch<OT::hb_would_apply_context_t>' [ 0 4 19]
'OT::Null<OT::MathKernInfoRecord>' [ 0 4]
'hb_prealloced_array_t<hb_set_t::page_map_t, 8>::resize' [ 0 48]
'tt_cmap0_validate' [ 0]
'png_color_16' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::KernOT>' [ 0 4 27]
'FT_Matrix_Multiply_Scaled' [ 0]
'OT::LangSys::sanitize' [ 0 4 13]
'Ins_CLEAR' [ 0]
'CID_FaceDict' [ 0]
'hb_script_from_string' [ 0]
'hb_ot_new_tag_from_script' [ 0]
'FT_Renderer_SetModeFunc' [ 0]
'FT_LcdFilter_' [ 0]
'hash_num_compare' [ 0]
'OT::AnchorMatrix::sanitize' [ 0 4 18]
'FT_UInt16' [ 0]
'OT::GSUB::sanitize' [ 0 4 10]
'hb_trampoline_t<int (*)(hb_font_t *, void *, unsigned int, unsigned int, unsigned int *, void *)>' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>' [ 0 4]
'tt_property_set' [ 0]
'inflate_blocks_new' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::CmapSubtableFormat14>' [ 0 4 27]
'hb_ot_shape_initialize_masks' [ 0]
'OT::Null<OT::glyf::accelerator_t>' [ 0 4]
'OT::ChainRuleSet::collect_glyphs' [ 0 4 18]
'Project' [ 0]
'hb_ot_math_has_data' [ 0]
'FT_Slot_LoadFunc' [ 0]
'OT::hb_lazy_table_loader_t<OT::CPAL>::fini' [ 0 4 38]
'OT::StructAtOffset<OT::LigatureSet>' [ 0 4]
'hb_set_t::set' [ 0 10]
'chunkset_core' [ 0]
'png_image_read_composite' [ 0]
'OT::OpenTypeFontFile::sanitize' [ 0 4 22]
'af_indic_hints_apply' [ 0]
'tt_get_var_blend' [ 0]
'OT::StructAtOffset<OT::ChainRuleSet>' [ 0 4]
'TT_CMap12' [ 0]
'hb_font_t::get_v_extents_with_fallback' [ 0 11]
'OT::SinglePos::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 15]
'cr_png_save_uint_16' [ 0]
'hb_set_t::page_t::next' [ 0 10 18]
'png_struct_def' [ 0]
'FT_Module_Requester' [ 0]
'PSH_GlyphRec_' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 0>::mask_for' [ 0 47]
'Ins_SxyTCA' [ 0]
'OT::SingleSubstFormat1::sanitize' [ 0 4 24]
'OT::Null<OT::RuleSet>' [ 0 4]
'OT::ValueFormat::apply_value' [ 0 4 17]
'setup_masks_use' [ 0]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_Load_Context' [ 0]
'_deserialize_text_trans_targs' [ 0]
'hb_set_destroy' [ 0]
'af_osge_dflt_style_class' [ 0]
'tt_get_metrics' [ 0]
'OT::hb_sanitize_context_t' [ 0 4]
'hb_buffer_get_language' [ 0]
'T2_Hints_CloseFunc' [ 0]
'gz_skip' [ 0]
'af_cprt_nonbase_uniranges' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'FT_Service_GlyphDictRec' [ 0]
'OT::StructAtOffset<OT::ConditionSet>' [ 0 4]
'af_cher_nonbase_uniranges' [ 0]
'OT::MathValueRecord' [ 0 4]
'OT::OffsetTo<OT::Condition, OT::IntType<unsigned int, 4> >' [ 0 4]
'FT_StreamRec_' [ 0]
'cr_png_get_pixel_aspect_ratio_fixed' [ 0]
'hb_reference_count_t::dec' [ 0 22]
'psaux_get_glyph_name' [ 0]
'hb_unicode_funcs_t' [ 0]
'OT::HVARVVAR::sanitize' [ 0 4 14]
'Cr_z_internal_state' [ 0]
'tt_size_run_prep' [ 0]
'FT_UInt32' [ 0]
'OT::ValueFormat::sanitize_value' [ 0 4 17]
'TT_SBit_MetricsRec' [ 0]
'ft_property_string_set' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::avar>' [ 0 4 27]
'hb_buffer_set_script' [ 0]
'af_indic_metrics_scale' [ 0]
'hb_variation_to_string' [ 0]
'T1_Operator_' [ 0]
'hb_buffer_serialize_glyphs' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::get_size' [ 0 4 107]
'OT::OffsetTo<OT::ChainRule, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 62]
'CFF_VarRegion_' [ 0]
'OT::IndexSubtableRecord::get_extents' [ 0 4 25]
'TT_CMap' [ 0]
'FT_Fast' [ 0]
'hb_ot_map_t::collect_lookups' [ 0 13]
'af_copt_nonbase_uniranges' [ 0]
'ft_var_load_item_variation_store' [ 0]
'OT::IntType<unsigned int, 4>::set' [ 0 4 30]
'af_armn_dflt_style_class' [ 0]
'TT_CMap12Rec_' [ 0]
'CFF_Builder_Check_Points_Func' [ 0]
'signed char' [ 0]
'hb_unicode_funcs_set_decompose_compatibility_func' [ 0]
'_hb_glyph_info_is_joiner' [ 0]
'hb_prealloced_array_t<hb_get_subtables_context_t::hb_applicable_t, 16>::finish' [ 0 72]
'TT_GlyphSlot' [ 0]
'_deserialize_text_index_offsets' [ 0]
'TT_Save_Context' [ 0]
'OT::Null<OT::Record<OT::LangSys> >' [ 0 4]
'_hb_glyph_info_substituted' [ 0]
'Cr_z_inflateCodesUsed' [ 0]
'OT::StructAtOffset<OT::Device>' [ 0 4]
'png_setup_sub_row_only' [ 0]
'hash_insert' [ 0]
'hb_set_t::add_array<OT::IntType<unsigned short, 2> >' [ 0 10]
'OT::PairValueRecord' [ 0 4]
'_hb_glyph_info_is_unicode_format' [ 0]
'scientific_inferiors_feature' [ 0]
'OT::hb_lazy_table_loader_t<AAT::kerx>::fini' [ 0 4 39]
'hb_object_is_valid<hb_font_funcs_t>' [ 0]
'OT::CastP<OT::OpenTypeFontFile, char>' [ 0 4]
'OT::hb_collect_glyphs_context_t::~hb_collect_glyphs_context_t' [ 0 4 33]
'OT::CastP<OT::PairSet, const void *>' [ 0 4]
'PSH_Globals_FuncsRec_' [ 0]
'cff_get_kerning' [ 0]
'OT::OffsetTo<OT::MathVariants, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 65]
'OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >::stop_sublookup_iteration' [ 0 4 227]
'FT_Get_First_Char' [ 0]
'AF_StyleClassRec_' [ 0]
'unsigned int' [ 0]
'ps_mask_table_test_intersect' [ 0]
'ps_hint_table_alloc' [ 0]
'GX_AVarCorrespondenceRec_' [ 0]
'FT_StrokerBorder' [ 0]
'hb_object_trace<hb_unicode_funcs_t>' [ 0]
'OT::OffsetTo<OT::VarRegionList, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::MarkGlyphSetsFormat1::sanitize' [ 0 4 26]
'OT::Context::dispatch<hb_get_subtables_context_t>' [ 0 4 13]
'OT::OffsetTo<OT::MarkArray, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 62]
'ft_smooth_transform' [ 0]
'af_latin_hints_init' [ 0]
'hb_buffer_t::shift_forward' [ 0 13]
'OT::LOffsetTo<OT::OffsetTable>' [ 0 4]
'cff_index_read_offset' [ 0]
'OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'OT::hb_lazy_table_loader_t<AAT::morx>::init' [ 0 4 39]
'hb_buffer_t::merge_clusters_impl' [ 0 13]
'OT::OffsetTo<OT::MathGlyphConstruction, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 74]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::alloc' [ 0 54]
'OT::ReverseChainSingleSubstFormat1::apply' [ 0 4 36]
'FT_OutlineGlyphRec_' [ 0]
'Compute_Point_Displacement' [ 0]
'OT::OffsetTo<OT::VarData, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 58]
'PS_Conv_EexecDecode' [ 0]
'hb_unicode_compose' [ 0]
'OT::FeatureParams' [ 0 4]
'FT_Get_Postscript_Name' [ 0]
'Pos' [ 0]
'hb_font_t::get_font_h_extents' [ 0 11]
'hb_font_t::get_glyph_h_advance' [ 0 11]
'ARRAY_LENGTH<hb_set_t::page_map_t, 8>' [ 0]
'OT::VarRegionAxis::evaluate' [ 0 4 19]
'record_rphf' [ 0]
'FT_Encoding' [ 0]
'FT_Stream_ReadULong' [ 0]
'png_write_compressed_data_out' [ 0]
'hb_feature_t' [ 0]
'OT::SinglePosFormat1::get_coverage' [ 0 4 22]
'af_latn_pcap_style_class' [ 0]
'other_features' [ 0]
'cr_png_zstream_error' [ 0]
'compose_hebrew' [ 0]
'ft_smooth_set_mode' [ 0]
'use_table' [ 0]
'OT::MarkBasePos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 17]
'khmer_features' [ 0]
'OT::hb_collect_glyphs_context_t::dispatch<OT::PairPosFormat2>' [ 0 4 33]
'png_format_buffer' [ 0]
'hb_ot_layout_has_glyph_classes' [ 0]
'OT::PairPos::dispatch<hb_get_subtables_context_t>' [ 0 4 13]
'cr_png_set_strip_alpha' [ 0]
'reallocate_t1_table' [ 0]
'OT::SubstLookup::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 17]
'OT::hb_sanitize_context_t::check_struct<OT::AnchorMatrix>' [ 0 4 27]
'hb_object_reference<hb_font_funcs_t>' [ 0]
'FT_UInt64' [ 0]
'OT::CoverageFormat2::serialize' [ 0 4 21]
'CF2_NumberType_' [ 0]
'af_cjk_hints_detect_features' [ 0]
'hb_font_t::em_fscale_x' [ 0 11]
'PS_PrivateRec' [ 0]
'maxp_fields' [ 0]
'OT::SubstLookupSubTable' [ 0 4]
'PS_Decoder_' [ 0]
'cr_png_get_gAMA' [ 0]
'cr_png_warning_parameter_signed' [ 0]
'_myanmar_syllable_machine_trans_keys' [ 0]
'cff_get_is_cid' [ 0]
'cff_parse_fixed' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathItalicsCorrectionInfo, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::ArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'TT_Loader_StartGlyphFunc' [ 0]
'OT::KernSubTableWrapper<OT::KernOT::SubTableWrapper>::thiz' [ 0 4 54]
'table_tags' [ 0]
'hb_set_t::union_' [ 0 10]
'dbase' [ 0]
'Cr_z_crc32' [ 0]
'CFF_Builder_Add_Point1_Func' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 106]
'CFF_AxisCoords_' [ 0]
'T1_Hints_Funcs' [ 0]
'OT::PairPos::dispatch<OT::hb_sanitize_context_t>' [ 0 4 13]
'PSHinter_Service' [ 0]
'OT::Record<OT::LangSys>' [ 0 4]
'afm_parser_funcs' [ 0]
'AF_ScriptClass' [ 0]
'cff_free_glyph_data' [ 0]
'override_features_hangul' [ 0]
'cf2_font_setup' [ 0]
'hb_set_t::page_t::get_population' [ 0 10 18]
'TT_CMap_ClassRec_' [ 0]
'OT::MathTopAccentAttachment::sanitize' [ 0 4 29]
't1_service_kerning' [ 0]
'OT::OffsetTo<OT::PairSet, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 60]
'af_cjk_metrics_check_digits' [ 0]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::MarkBasePos, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'ps_dimension_end_mask' [ 0]
'af_latin_hints_compute_segments' [ 0]
'png_pass_yinc' [ 0]
'row_mask' [ 0]
'FT_CMap_CharNextFunc' [ 0]
'FT_UShort' [ 0]
'hb_face_t::load_upem' [ 0 11]
'hb_mutex_t::unlock' [ 0 12]
'FT_Service_MetricsVariations' [ 0]
'chunks_to_process' [ 0]
'OT::LOffsetTo<OT::UnsizedArrayOf<OT::BaseGlyphRecord> >' [ 0 4]
'Cr_z_in_func' [ 0]
'small_capitals_coverage' [ 0]
'FT_AutoHinter_GlobalDoneFunc' [ 0]
'af_loader_load_glyph' [ 0]
'OT::PosLookup::dispatch<OT::hb_sanitize_context_t>' [ 0 4 15]
'OT::ContextFormat2::apply' [ 0 4 20]
'Ins_WCVTF' [ 0]
'deflate_state' [ 0]
'cr_png_save_int_32' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::IndexSubtableArray, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'png_imagep' [ 0]
'OT::Device::sanitize' [ 0 4 12]
'ft_raster1_init' [ 0]
'OT::operator+<const OT::LigatureSet *, OT::IntType<unsigned short, 2>, OT::Ligature>' [ 0 4]
'OT::operator+<const OT::MarkBasePosFormat1 *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::CastP<OT::MATH, const void *>' [ 0 4]
'Ins_POP' [ 0]
'OT::hb_dispatch_context_t<hb_get_subtables_context_t, const _hb_void_t *, 0>::may_dispatch<OT::ReverseChainSingleSubst, OT::IntType<unsigned short, 2> >' [ 0 4 78]
'OT::SinglePosFormat1::apply' [ 0 4 22]
'af_sinh_nonbase_uniranges' [ 0]
'hb_direction_to_string' [ 0]
'black_TWorker' [ 0]
'operator&' [ 0]
'OT::VariationSelectorRecord::sanitize' [ 0 4 29]
'af_style_classes' [ 0]
'OT::OffsetTo<OT::IntType<unsigned int, 4>, OT::IntType<unsigned int, 4> >' [ 0 4]
'std::__1' [ 0 5]
'OT::Sanitizer<OT::CBLC>::lock_instance' [ 0 4 25]
'psh_glyph_interpolate_strong_points' [ 0]
'_myanmar_syllable_machine_to_state_actions' [ 0]
'Compute_Funcs' [ 0]
'hb_unicode_general_category_t' [ 0]
'hb_glib_unicode_script' [ 0]
'ft_bitmap_glyph_bbox' [ 0]
'CFF_Font' [ 0]
'FT_MulFix' [ 0]
'OT::SortedArrayOf<OT::RangeRecord, OT::IntType<unsigned short, 2> >::bsearch<unsigned int>' [ 0 4 69]
'OT::MarkLigPos::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 16]
'FT_Glyph_TransformFunc' [ 0]
'png_color_8p' [ 0]
'FT_Get_Renderer' [ 0]
'OT::OffsetArrayOf<OT::Sequence, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Extension<OT::ExtensionSubst>::dispatch<hb_get_subtables_context_t>' [ 0 4 35]
'_hb_glyph_info_set_general_category' [ 0]
'_hb_ot_shape_fallback_position' [ 0]
'AFM_Token_' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 4>::add_sorted_array<OT::IntType<unsigned short, 2> >' [ 0 47]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> >' [ 0 4]
'png_compression_bufferp' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::lookup_map_t, 32>::finish' [ 0 54]
'OT::OffsetTo<OT::OffsetListOf<OT::SubstLookup>, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::MathGlyphAssembly>' [ 0 4 27]
't1_ps_get_font_info' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>::alloc' [ 0 44]
'OT::FeatureVariations::find_index' [ 0 4 23]
'psaux_interface' [ 0]
'OT::Sanitizer<OT::MATH>::Sanitizer' [ 0 4 25]
'OT::hb_lazy_table_loader_t<OT::BASE>::fini' [ 0 4 38]
'hb_variation_t' [ 0]
'ushf' [ 0]
'OT::hb_dispatch_context_t<OT::hb_ot_apply_context_t, bool, 0>::may_dispatch<OT::ChainContext, OT::IntType<unsigned short, 2> >' [ 0 4 63]
'Ins_UNKNOWN' [ 0]
'OT::StructAtOffset<OT::postV2Tail>' [ 0 4]
'cr_png_process_data_skip' [ 0]
'af_latin_compute_stem_width' [ 0]
'__storeu_si128' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'tt_size_done' [ 0]
'HbOpOr' [ 0]
'cff_load_private_dict' [ 0]
'Cr_z_x86_cpu_enable_ssse3' [ 0]
'hb_font_get_font_h_extents_func_t' [ 0]
'OT::StructAtOffset<OT::Feature>' [ 0 4]
'T1_Builder_Start_Point_Func' [ 0]
'cf2_hint_isSynthetic' [ 0]
'OT::CastP<OT::MathValueRecord, const void *>' [ 0 4]
'tt_face_load_hdmx' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 107]
'syncsearch' [ 0]
'png_icc_tag_name' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'hash_init' [ 0]
'tt_face_load_head' [ 0]
'tt_face_load_colr' [ 0]
'pclt_fields' [ 0]
'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> >' [ 0 4]
'TT_Driver' [ 0]
'OT::RecordArrayOf<OT::Feature>' [ 0 4]
'hb_face_set_upem' [ 0]
'OT::AnchorFormat1' [ 0 4]
'Colr_' [ 0]
'OT::AnchorFormat3' [ 0 4]
'OT::operator+<const OT::RecordListOf<OT::Script> *, OT::IntType<unsigned short, 2>, OT::Script>' [ 0 4]
'cf2_hintmask_read' [ 0]
'tt_sbit_decoder_done' [ 0]
'cr_png_write_tRNS' [ 0]
'OT::CaretValueFormat3' [ 0 4]
'indic_config_t' [ 0]
'OT::hb_dispatch_context_t<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > >, const OT::Coverage &, 0>::may_dispatch<OT::ExtensionFormat1<OT::ExtensionPos>, OT::ExtensionFormat1<OT::ExtensionPos> >' [ 0 4 279]
'OT::hb_sanitize_context_t::dispatch<OT::ChainContextFormat1>' [ 0 4 27]
'tt_get_kerning' [ 0]
'OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 76]
'_deserialize_text_eof_actions' [ 0]
'CFF_Charset' [ 0]
'CID_Parser_' [ 0]
'hb_icu_get_unicode_funcs' [ 0]
'OT::RangeRecord::intersects' [ 0 4 17]
'OT::FixedVersion<OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 51]
'OT::CaretValueFormat3::get_caret_value' [ 0 4 23]
'FT_Get_FSType_Flags' [ 0]
'OT::Anchor' [ 0 4]
'OT::SingleSubstFormat1::would_apply' [ 0 4 24]
'hb_ot_new_tag_to_script' [ 0]
'FT_Matrix_' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 171]
'OT::MarkGlyphSets::covers' [ 0 4 19]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 76]
'FT_StrokeBorder' [ 0]
'_deserialize_json_trans_actions' [ 0]
'OT::MathGlyphVariantRecord' [ 0 4]
'af_kali_uniranges' [ 0]
'collect_features_myanmar' [ 0]
'code' [ 0]
'Cr_z_uncompress2' [ 0]
'CID_Face' [ 0]
'tt_slot_init' [ 0]
'ft_stroke_border_export' [ 0]
'af_buhd_nonbase_uniranges' [ 0]
'hb_ot_shape_plan_t::finish' [ 0 20]
'OT::ChainRuleSet::closure' [ 0 4 18]
'OT::CastP<OT::CBLC, const void *>' [ 0 4]
'is_one_of' [ 0]
'gz_look' [ 0]
'hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > >' [ 0]
'hb_font_set_user_data' [ 0]
'_khmer_syllable_machine_trans_targs' [ 0]
'AF_Width' [ 0]
'af_cjk_hints_init' [ 0]
'OT::LayerRecord' [ 0 4]
'hb_prealloced_array_t<OT::CmapSubtableLongGroup, 16>' [ 0]
'OT::hb_sanitize_context_t::may_dispatch<OT::ExtensionFormat1<OT::ExtensionSubst>, OT::ExtensionFormat1<OT::ExtensionSubst> >' [ 0 4 27]
'OT::TableRecord::cmp' [ 0 4 17]
'hb_set_t::major_start' [ 0 10]
'OT::ExtensionFormat1<OT::ExtensionPos>::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 40]
'FT_PtrDist' [ 0]
'GX_FVar_Axis' [ 0]
'AF_Point' [ 0]
'OT::CastP<OT::IntType<short, 2>, OT::IntType<unsigned short, 2> >' [ 0 4]
'png_colorspace_check_xy' [ 0]
'FT_GlyphSlot_Embolden' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 77]
'hb_ot_tag_to_language' [ 0]
'hb_object_init<hb_blob_t>' [ 0]
'OT::Lookup' [ 0 4]
'OT::kern::sanitize' [ 0 4 10]
'__v16qi' [ 0]
'_hb_glyph_info_get_modified_combining_class' [ 0]
'OT::hb_would_apply_context_t::dispatch<OT::MultipleSubstFormat1>' [ 0 4 30]
'ps_table_add' [ 0]
'_hb_glyph_info_set_lig_props_for_mark' [ 0]
'trampoline_destroy' [ 0]
'AF_EdgeRec' [ 0]
'OT::Sanitizer<OT::head>::Sanitizer' [ 0 4 25]
'OT::hb_sanitize_context_t::dispatch<OT::ChainContextFormat3>' [ 0 4 27]
'OT::RecordListOf<OT::Feature>::operator[]' [ 0 4 31]
'af_glyph_hints_done' [ 0]
'OT::operator+<const void *, OT::IntType<unsigned short, 2>, OT::Coverage>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'Ins_SANGW' [ 0]
'Cr_z_inflateMark' [ 0]
'hb_font_get_glyph_advance_for_direction' [ 0]
'FT_Service_TTCMapsRec' [ 0]
'gray_TWorker_' [ 0]
'parse_one_variation' [ 0]
'OT::ArrayOf<OT::MathKernInfoRecord, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 70]
'AF_StyleClassRec' [ 0]
'UErrorCode' [ 0]
'OT::EntryExitRecord' [ 0 4]
'OT::FeatureVariationRecord::sanitize' [ 0 4 28]
'hb_ot_get_glyph_from_name' [ 0]
'PSH_Hint_TableRec' [ 0]
'GX_GVar_Head' [ 0]
'CFF_EncodingRec_' [ 0]
'tt_face_init' [ 0]
'hb_shape_plan_set_user_data' [ 0]
'PSH_ZoneRec_' [ 0]
'hb_unicode_script' [ 0]
'OT::ReverseChainSingleSubst::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 29]
'OT::ArrayOf<OT::OffsetTo<OT::LigatureSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 110]
'OT::hb_closure_context_t::dispatch<OT::SingleSubstFormat1>' [ 0 4 26]
'OT::hb_dispatch_context_t<OT::hb_collect_glyphs_context_t, const _hb_void_t *, 0>::may_dispatch<OT::SubstLookupSubTable, OT::IntType<unsigned short, 2> >' [ 0 4 83]
'hb_ft_get_glyph_contour_point' [ 0]
'setup_masks_indic' [ 0]
'hb_icu_unicode_mirroring' [ 0]
'hb_lockable_set_t<hb_user_data_array_t::hb_user_data_item_t, hb_mutex_t>' [ 0]
'Conic_To' [ 0]
'OT::StructAtOffset<OT::MathGlyphInfo>' [ 0 4]
'AF_AxisHintsRec' [ 0]
'OT::match_func_t' [ 0 4]
'ct_data_s' [ 0]
'hb_glyph_position_t' [ 0]
'_hb_glyph_info_get_unicode_space_fallback_type' [ 0]
'GX_TupleCountFlags_' [ 0]
'OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 118]
'OT::ClassDefFormat1::sanitize' [ 0 4 21]
'FT_BBox_' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::MathVariants::get_glyph_construction' [ 0 4 18]
'png_rw_ptr' [ 0]
'hb_buffer_t::cur_pos' [ 0 13]
'af_nkoo_dflt_style_class' [ 0]
'OT::HBUINT16' [ 0 4]
'__syscall_slong_t' [ 0]
'OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> >' [ 0 4]
'cr_png_compress_IDAT' [ 0]
'cff_index_get_pointers' [ 0]
'OT::hb_lazy_table_loader_t<OT::avar>::init' [ 0 4 38]
'format1_names_msgidx' [ 0]
'OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 76]
'OT::StructAtOffset<OT::LookupRecord>' [ 0 4]
'cr_png_write_info' [ 0]
'hb_ot_math_get_glyph_italics_correction' [ 0]
'Cr_z_gz_header' [ 0]
'hb_set_get_empty' [ 0]
'CFF_Builder_Add_Point_Func' [ 0]
'cid_size_init' [ 0]
'psh_glyph_compute_extrema' [ 0]
'OT::CmapSubtableLongGroup::cmp' [ 0 4 27]
'OT::BEInt<short, 2>' [ 0 4]
'hb_unicode_combining_class_t' [ 0]
'MIN<indic_position_t>' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::IntType<unsigned short, 2> >' [ 0 4 28]
'hb_font_t::get_glyph_from_name' [ 0 11]
'psh_hint_table_activate_mask' [ 0]
'PSH_Hint_Table' [ 0]
'png_structpp' [ 0]
'cff_expert_charset' [ 0]
'OT::StructAtOffset<OT::SubstLookupSubTable>' [ 0 4]
'tt_face_load_generic_header' [ 0]
'OT::ArrayOf<OT::FeatureTableSubstitutionRecord, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 82]
'Current_Ppem' [ 0]
'OT::IndexSubtableRecord::get_image_data' [ 0 4 25]
'tt_cmap8_validate' [ 0]
'cr_png_handle_cHRM' [ 0]
'OT::hb_serialize_context_t::allocate_size<OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> > >' [ 0 4 28]
'OT::postV2Tail::sanitize' [ 0 4 16]
'Cr_z_gzclose' [ 0]
'AF_StyleClass' [ 0]
'FT_Service_SFNT_TableRec_' [ 0]
'cr_png_set_read_user_chunk_fn' [ 0]
'OT::PairPosFormat1' [ 0 4]
'hb_ot_math_glyph_part_t' [ 0]
'Cr_z_inflateBack' [ 0]
'hb_prealloced_array_t<hb_ot_map_t::feature_map_t, 8>::resize' [ 0 54]
'OT::hb_lazy_loader_t<OT::kern::accelerator_t>' [ 0 4]
'af_autofitter_load_glyph' [ 0]
'OT::UnicodeValueRange' [ 0 4]
'ft_gzip_file_io' [ 0]
'OT::KernPair' [ 0 4]
'tt_sfnt_id_rec_' [ 0]
'hb_font_t::parent_scale_y_distance' [ 0 11]
'OT::head' [ 0 4]
'decompose_khmer' [ 0]
'OT::COLR' [ 0 4]
'FT_TrueTypeEngineType' [ 0]
'OT::Null<OT::EntryExitRecord>' [ 0 4]
'cr_png_image_free' [ 0]
'hb_ot_layout_lookup_substitute_closure' [ 0]
'Ins_FDEF' [ 0]
'loadchunk' [ 0]
'cr_png_flush' [ 0]
'hb_ft_font_t' [ 0]
'hb_font_t::get_glyph_v_origin_with_fallback' [ 0 11]
'OT::hb_sanitize_context_t::check_struct<OT::MathKern>' [ 0 4 27]
'AF_WritingSystem_ScaleMetricsFunc' [ 0]
'OT::KernTable<OT::KernOT>' [ 0 4]
'OT::VarRegionAxis' [ 0 4]
'PS_FontInfoRec_' [ 0]
'hb_set_t::page_t::del' [ 0 10 18]
'OT::OffsetTo<OT::OffsetTable, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 62]
'af_orya_dflt_style_class' [ 0]
'OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> >::operator()' [ 0 4 63]
'OT::HBUINT32' [ 0 4]
'OT::CastP<OT::CBDT, char>' [ 0 4]
'OT::CastP<OT::MarkGlyphSets, const void *>' [ 0 4]
'FT_Memory' [ 0]
'FT_Outline_Get_CBox' [ 0]
'TT_MaxProfile_' [ 0]
'OT::SubstLookup::serialize_subtable' [ 0 4 17]
'tt_cmap12_validate' [ 0]
'OT::Null<OT::CmapSubtableFormat14>' [ 0 4]
'AFM_Value' [ 0]
'af_latb_dflt_style_class' [ 0]
'hb_font_t::get_glyph_kerning_for_direction' [ 0 11]
'cff_size_init' [ 0]
'ps_mask_table_ensure' [ 0]
'PSH_Hint_TableRec_' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::RecordListOf<OT::Feature>, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'OT::Null<OT::RangeRecord>' [ 0 4]
'TT_ValidatorRec_' [ 0]
'cf2_stack_setReal' [ 0]
'CFF_FDSelectRec_' [ 0]
'OT::PairPos::dispatch<OT::hb_collect_glyphs_context_t>' [ 0 4 13]
'hb_ot_shape_normalization_mode_t' [ 0]
'FT_Stroker_GetCounts' [ 0]
'PSH_ZoneRec' [ 0]
'OT::Null<OT::Rule>' [ 0 4]
'_hb_bit_storage<unsigned long long>::S' [ 0 37]
'hb_object_get_user_data<hb_buffer_t>' [ 0]
'af_face_globals_is_digit' [ 0]
'CF2_Hint' [ 0]
'hb_language_get_default' [ 0]
'CF2_CallbackParams' [ 0]
'OT::Lookup::sanitize' [ 0 4 12]
'hb_unicode_compose_nil' [ 0]
'tt_cmap4_char_index' [ 0]
'cr_png_create_write_struct_2' [ 0]
'OT::hb_lazy_table_loader_t<OT::avar>::fini' [ 0 4 38]
'OT::IndexSubtableFormat1Or3<OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 62]
't1_cmap_standard_class_rec' [ 0]
'inflate_trees_fixed' [ 0]
'joining_table' [ 0]
'FT_GlyphLoader_Rewind' [ 0]
'hb_buffer_get_script' [ 0]
'FT_Hypot' [ 0]
'OT::OffsetTo<OT::Coverage, OT::IntType<unsigned int, 4> >::neuter' [ 0 4 59]
'OT::MathConstants::get_value' [ 0 4 19]
'hb_font_funcs_get_user_data' [ 0]
'hb_font_get_glyph_extents_for_origin' [ 0]
'OT::_hb_NullPool' [ 0 4]
'AFM_Stream' [ 0]
'OT::OffsetTo<OT::MarkGlyphSets, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_buffer_t::replace_glyph' [ 0 13]
'FT_Open_Args' [ 0]
'FT_RendererRec_' [ 0]
'PS_Builder_' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::Sanitizer<OT::maxp>::sanitize' [ 0 4 25]
'hb_font_t::get_glyph_h_origin' [ 0 11]
't1_cmap_custom_init' [ 0]
'af_cprt_uniranges' [ 0]
'pthread_once_t' [ 0]
'FT_Var_Axis_' [ 0]
'OT::SubstLookupSubTable::dispatch<hb_get_subtables_context_t>' [ 0 4 25]
'ft_default_modules' [ 0]
'FT_ListRec' [ 0]
'OT::ExtensionFormat1<OT::ExtensionSubst>::get_type' [ 0 4 42]
'tt_service_truetype_glyf' [ 0]
'hb_object_destroy<hb_font_t>' [ 0]
'hb_face_t' [ 0]
'_hb_buffer_serialize_glyphs_json' [ 0]
'ft_var_get_item_delta' [ 0]
'png_XYZ_normalize' [ 0]
'cr_png_read_filter_row' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::ChainRuleSet, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 111]
'OT::ArrayOf<OT::AxisValueMap, OT::IntType<unsigned short, 2> >' [ 0 4]
'_hb_ot_complex_shaper_hangul' [ 0]
'OT::post::get_size' [ 0 4 10]
'OT::ArrayOf<OT::IntType<unsigned int, 3>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 76]
'FT_Add_Default_Modules' [ 0]
'_khmer_syllable_machine_key_spans' [ 0]
'pshinter_get_t1_funcs' [ 0]
'sfnt_get_var_ps_name' [ 0]
't1_builder_start_point' [ 0]
'psh_glyph_init' [ 0]
'OT::ExtensionPos' [ 0 4]
'FT_Bitmap_Size' [ 0]
'OT::hb_lazy_table_loader_t<AAT::morx>::fini' [ 0 4 39]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::ArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'OT::CastP<OT::LigCaretList, const void *>' [ 0 4]
'shaping_table' [ 0]
'GX_GVar_Head_' [ 0]
'hb_font_get_glyph_contour_point_nil' [ 0]
'ps_dimension_add_counter' [ 0]
'CFF_Builder_Add_Contour_Func' [ 0]
'OT::hb_sanitize_context_t::start_processing' [ 0 4 27]
'_hb_buffer_deserialize_glyphs_json' [ 0]
'parse_blend_design_positions' [ 0]
'hb_prealloced_array_t<hb_set_t::page_t, 1>::resize' [ 0 44]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::OffsetListOf<OT::Lookup>, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'af_geok_uniranges' [ 0]
'OT::ArrayOf<OT::BitmapSizeTable, OT::IntType<unsigned int, 4> >' [ 0 4]
'hb_font_t::parent_scale_y_position' [ 0 11]
'OT::Sanitizer<OT::avar>::sanitize' [ 0 4 25]
'cff_get_mm_blend' [ 0]
'hb_set_digest_lowest_bits_t<unsigned long, 9>::init' [ 0 47]
'af_cprt_dflt_style_class' [ 0]
'FT_AutoHinter_Interface' [ 0]
'OT::ArrayOf<OT::MarkRecord, OT::IntType<unsigned short, 2> >' [ 0 4]
'hb_get_subtables_context_t::dispatch<OT::PairPosFormat2>' [ 0 28]
'ps_mask_set_bit' [ 0]
'hb_ot_layout_get_glyph_class' [ 0]
'OT::CastP<OT::hmtxvmtx<OT::hmtx, OT::hhea>, char>' [ 0 4]
'hb_buffer_t::message_impl' [ 0 13]
'FT_BDF_GetCharsetIdFunc' [ 0]
'inflate_blocks_free' [ 0]
'_hb_blob_destroy' [ 0]
'OT::Null<OT::MarkArray>' [ 0 4]
'ARRAY_LENGTH<OT::IntType<unsigned short, 2>, 2>' [ 0]
'hb_set_t::page_at' [ 0 10]
'_get_gdef' [ 0]
'FT_New_Memory_Face' [ 0]
'is_halant' [ 0]
'crc32_little' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::Script, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'cf2_hintmap_isValid' [ 0]
'ft_remove_renderer' [ 0]
'OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4> >::sanitize_shallow' [ 0 4 72]
'PS_DesignMap_' [ 0]
'OT::BaseGlyphRecord' [ 0 4]
'cr_png_get_compression_type' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::operator[]' [ 0 4 116]
'af_latin_metrics_scale_dim' [ 0]
'Ins_LOOPCALL' [ 0]
'OT::IntType<signed char, 1>::operator signed char' [ 0 4 29]
'OT::hb_dispatch_context_t<OT::hb_closure_context_t, const _hb_void_t *, 0>::may_dispatch<OT::Context, OT::IntType<unsigned short, 2> >' [ 0 4 76]
'af_saur_dflt_style_class' [ 0]
'png_inflate' [ 0]
'OT::AnchorMatrix' [ 0 4]
'sfnt_get_name_id' [ 0]
'OT::collect_array' [ 0 4]
'OT::Sequence::closure' [ 0 4 14]
'CID_GlyphSlot' [ 0]
'OT::Null<OT::OffsetTo<OT::Rule, OT::IntType<unsigned short, 2> > >' [ 0 4]
'hb_buffer_t::_unsafe_to_break_set_mask' [ 0 13]
'OT::ArrayOf<OT::OffsetTo<OT::Lookup, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 105]
'cr_png_set_compression_level' [ 0]
'OT::cmap::accelerator_t::get_glyph_from_symbol<OT::CmapSubtable>' [ 0 4 10 25]
'png_const_uint_32p' [ 0]
'cr_png_get_sBIT' [ 0]
'inflate_blocks_statef' [ 0]
'hb_ot_layout_script_get_language_tags' [ 0]
'tt_face_free_colr' [ 0]
'ft_var_done_item_variation_store' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> >, OT::IntType<unsigned int, 4> >, int>' [ 0 4 27]
'OT::LOffsetTo<OT::Coverage>' [ 0 4]
'png_fixed_point_p' [ 0]
'Ins_SSWCI' [ 0]
'OT::MarkBasePos' [ 0 4]
'OT::Sanitizer<OT::CBLC>::Sanitizer' [ 0 4 25]
'OT::match_coverage' [ 0 4]
'OT::operator+<const OT::LigatureSubstFormat1 *, OT::IntType<unsigned short, 2>, OT::LigatureSet>' [ 0 4]
'OT::Sanitizer<OT::cmap>' [ 0 4]
'OT::MultipleSubst::dispatch<OT::hb_ot_apply_context_t>' [ 0 4 19]
'FT_Stream_GetChar' [ 0]
'OT::OffsetTo<OT::AttachList, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 63]
'hb_ot_map_builder_t::add_gpos_pause' [ 0 21]
'inflateInit2_' [ 0]
'OT::CastP<OT::vhea, const void *>' [ 0 4]
'OT::KernSubTableWrapper<OT::KernAAT::SubTableWrapper>::sanitize' [ 0 4 55]
'OT::HVARVVAR::get_advance_var' [ 0 4 14]
'OT::OffsetTo<OT::PosLookupSubTable, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 70]
'OT::StructAtOffset<OT::Script>' [ 0 4]
'OT::Sanitizer<OT::cmap>::Sanitizer' [ 0 4 25]
'hb_buffer_allocation_successful' [ 0]
'sfnt_init_face' [ 0]
'OT::OffsetTo<OT::FeatureTableSubstitution, OT::IntType<unsigned int, 4> >' [ 0 4]
'OT::hb_serialize_context_t::allocate_size<OT::Coverage>' [ 0 4 28]
'af_avst_script_class' [ 0]
'OT::SubstLookup::dispatch<OT::hb_would_apply_context_t>' [ 0 4 17]
'png_charpp' [ 0]
'OT::hb_serialize_context_t::extend_min<OT::LigatureSet>' [ 0 4 28]
'OT::hb_ot_apply_context_t::set_auto_zwnj' [ 0 4 27]
'cr_png_colorspace_set_sRGB' [ 0]
'cf2_hintmap_adjustHints' [ 0]
'hb_get_subtables_context_t::dispatch<OT::SinglePosFormat1>' [ 0 28]
'OT::LigatureSet::closure' [ 0 4 17]
'tt_size_select' [ 0]
'hb_set_t::page_t::len' [ 0 10 18]
'af_cjk_hints_compute_edges' [ 0]
'FT_GlyphSlotRec' [ 0]
'OT::operator+<const OT::RecordListOf<OT::Feature> *, OT::IntType<unsigned short, 2>, OT::Feature>' [ 0 4]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTable>' [ 0 4 27]
'ft_hash_str_insert' [ 0]
'init_block' [ 0]
'OT::ArrayOf<OT::FeatureVariationRecord, OT::IntType<unsigned int, 4> >::sanitize' [ 0 4 72]
'OT::OffsetTo<OT::BaseValues, OT::IntType<unsigned short, 2> >' [ 0 4]
'Ins_MPS' [ 0]
'OT::StructAtOffset<OT::IntType<unsigned char, 1> >' [ 0 4]
'T1_Builder_Check_Points_Func' [ 0]
't1_hints_funcs_init' [ 0]
'T1_Hints_ApplyFunc' [ 0]
'hb_ot_get_glyph_h_kerning' [ 0]
'af_cari_dflt_style_class' [ 0]
'hb_font_get_font_v_extents_nil' [ 0]
'End_Profile' [ 0]
'OT::LigatureSubst::dispatch<OT::hb_closure_context_t>' [ 0 4 19]
'is_zero_width_char' [ 0]
'filters' [ 0]
'_hb_ot_complex_shaper_arabic' [ 0]
'OT::OffsetTo<OT::OffsetListOf<OT::PosLookup>, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 80]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::CmapSubtable, OT::IntType<unsigned int, 4> > >' [ 0 4 27]
'hb_buffer_append' [ 0]
'ARRAY_LENGTH<unsigned int, 12>' [ 0]
'ft_stroker_add_reverse_left' [ 0]
'cubic_peak' [ 0]
'onebppswaptable' [ 0]
'gray_cubic_to' [ 0]
'OT::LOffsetTo<OT::SortedArrayOf<OT::UnicodeValueRange, OT::IntType<unsigned int, 4> > >' [ 0 4]
'_hb_ot_layout_collect_lookups_features' [ 0]
'OT' [ 0]
'hb_buffer_set_cluster_level' [ 0]
'ARRAY_LENGTH<hb_get_subtables_context_t::hb_applicable_t, 16>' [ 0]
'af_cher_dflt_style_class' [ 0]
'af_indic_writing_system_class' [ 0]
'FT_GlyphLoader_New' [ 0]
'OT::SubstLookupSubTable::dispatch<OT::hb_add_coverage_context_t<hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 4>, hb_set_digest_combiner_t<hb_set_digest_lowest_bits_t<unsigned long, 0>, hb_set_digest_lowest_bits_t<unsigned long, 9> > > > >' [ 0 4 25]
'FT_Glyph_Stroke' [ 0]
'FT_Driver_ClassRec_' [ 0]
'FT_Outline_Get_Orientation' [ 0]
'OT::Null<OT::GSUBGPOS>' [ 0 4]
'Destroy_Driver' [ 0]
'hb_ot_shape_plan_t::collect_lookups' [ 0 20]
'FT_Module_Constructor' [ 0]
'TT_SBitDecoder_LoadFunc' [ 0]
'OT::hb_glyph_pair_t' [ 0 4]
'_hb_ot_shaper_face_data_create' [ 0]
'OT::StructAtOffset<OT::FeatureParams>' [ 0 4]
'tt_cmap14_get_info' [ 0]
'OT::SingleSubstFormat2::would_apply' [ 0 4 24]
'compose_hebrew::sDageshForms' [ 0 16]
'OT::CastP<OT::OffsetTo<OT::RuleSet, OT::IntType<unsigned short, 2> >, const void *>' [ 0 4]
'png_const_doublep' [ 0]
'AF_WritingSystem_' [ 0]
'OT::hb_sanitize_context_t::try_set<OT::OffsetTo<OT::MathConstants, OT::IntType<unsigned short, 2> >, int>' [ 0 4 27]
'FT_Library_Version' [ 0]
'OT::ChainRuleSet::would_apply' [ 0 4 18]
'Cr_z_x86_check_features' [ 0]
'cr_png_start_read_image' [ 0]
'Ins_MIRP' [ 0]
'cr_png_image_write_to_memory' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::KernClassTable, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'z_vec128i_t' [ 0]
'OT::OffsetTo<OT::LigGlyph, OT::IntType<unsigned short, 2> >::operator()' [ 0 4 61]
'cr_png_get_compression_buffer_size' [ 0]
'OT::hb_sanitize_context_t::check_struct<OT::OffsetTo<OT::MathTopAccentAttachment, OT::IntType<unsigned short, 2> > >' [ 0 4 27]
'hb_font_get_glyph_trampoline_t' [ 0]
'OT::CastP<OT::Tag, char>' [ 0 4]
'CFF_IndexRec' [ 0]
'OT::OffsetTo<OT::Ligature, OT::IntType<unsigned short, 2> >::sanitize' [ 0 4 61]
'OT::hb_lazy_table_loader_t<OT::fvar>::get' [ 0 4 38]
'FT_Parameter' [ 0]
'OT::BEInt<unsigned int, 3>' [ 0 4]
'hb_set_get_min' [ 0]
'OT::StructAtOffset<OT::glyf::GlyphHeader>' [ 0 4]
'png_setup_sub_row' [ 0]
'OT::PairPosFormat1::apply' [ 0 4 20]
'OT::IntType<unsigned short, 2>::cmp<OT::IntType<unsigned short, 2> >' [ 0 4 32]
'OT::MarkArray' [ 0 4]
'CFF_VarData_' [ 0]
'hb_ot_shape_normalize_context_t' [ 0]
'superscript_feature' [ 0]
'Normalize' [ 0]
'OT::ArrayOf<OT::OffsetTo<OT::Sequence, OT::IntType<unsigned short, 2> >, OT::IntType<unsigned short, 2> >' [ 0 4]
'OT::HeadlessArrayOf<OT::IntType<unsigned short, 2>, OT::IntType<unsigned short, 2> >::sanitize_shallow' [ 0 4 86]
'gen_bitlen' [ 0]
'hb_object_is_valid<hb_shape_plan_t>' [ 0]
'OT::SingleSubstFormat1::get_coverage' [ 0 4 24]
'FT_Get_Name_Index' [ 0]
'cr_png_init_filter_functions_sse2' [ 0]
'hb_font_t::subtract_glyph_h_origin' [ 0 11]
'gz_fetch' [ 0]
'af_cakm_dflt_style_class' [ 0]
'OT::TTCHeaderVersion1' [ 0 4]
'T1_Field' [ 0]
'OT::Sanitizer<OT::MATH>::sanitize' [ 0 4 25]
'hb_font_funcs_create' [ 0]
'OT::Script::get_default_lang_sys' [ 0 4 12]
'OT::MathKernInfo' [ 0 4]
'OT::GSUBGPOS::get_feature_variation' [ 0 4 14]
'cff_face_done' [ 0]
'gvar_fields' [ 0]
